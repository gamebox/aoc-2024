; ModuleID = 'app'
source_filename = "builtins-host"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-macosx11.7.1-unknown"

%str.RocStr = type { ptr, i64, i64 }
%macho.mach_header_64 = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%fmt.FormatOptions = type { { i64, i8, [7 x i8] }, { i64, i8, [7 x i8] }, i2, i8, [6 x i8] }
%"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))" = type { ptr }
%"io.fixed_buffer_stream.FixedBufferStream([]u8)" = type { { ptr, i64 }, i64 }
%list.RocList = type { ptr, i64, i64 }

@0 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 -4, [1 x i8] undef }, align 4
@1 = private unnamed_addr constant { i64, i16, [6 x i8] } { i64 undef, i16 21, [6 x i8] undef }, align 8
@sort.fluxsort__anon_13352 = internal unnamed_addr constant [51 x i8] c"Out of memory while trying to allocate for sorting\00", align 1
@2 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 1, [1 x i8] undef }, align 4
@3 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 2, [1 x i8] undef }, align 4
@4 = private unnamed_addr constant { i16, i3, [1 x i8] } { i16 0, i3 3, [1 x i8] undef }, align 4
@fmt.digits2__anon_14339 = internal unnamed_addr constant [201 x i8] c"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\00", align 1
@5 = private unnamed_addr constant %str.RocStr { ptr null, i64 0, i64 -9223372036854775808 }, align 8
@_mh_execute_header = weak_odr dso_local local_unnamed_addr global %macho.mach_header_64 undef, align 4
@6 = private unnamed_addr constant %fmt.FormatOptions { { i64, i8, [7 x i8] } { i64 undef, i8 0, [7 x i8] undef }, { i64, i8, [7 x i8] } { i64 undef, i8 0, [7 x i8] undef }, i2 -2, i8 32, [6 x i8] undef }, align 8
@_str_literal_3867905241449124926 = private unnamed_addr constant [39 x i8] c"\00\00\00\00\00\00\00\00Program exited with error:\0A    ", align 8
@_str_literal_3894810976106795109 = private unnamed_addr constant [177 x i8] c"\00\00\00\00\00\00\00\00\0A\0ATip: If you do not want to exit on this error, use `Task.mapErr` to handle the error.\0ADocs for `Task.mapErr`: <https://www.roc-lang.org/packages/basic-cli/Task#mapErr>", align 8

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #0

; Function Attrs: noreturn nounwind uwtable
define private fastcc void @panic.panic_help(ptr nocapture nonnull readonly align 1 %0, i64 %1) unnamed_addr #1 {
  %3 = alloca %str.RocStr, align 8
  call fastcc void @str.RocStr.init(ptr noalias %3, ptr nonnull readonly align 1 %0, i64 %1)
  call void @roc_panic(ptr nonnull readonly align 8 %3, i32 0)
  unreachable
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i128, i1 } @llvm.smul.with.overflow.i128(i128, i128) #3

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.init(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #4 {
  %4 = alloca %str.RocStr, align 8
  %5 = icmp ugt i64 %2, 23
  br i1 %5, label %str.RocStr.allocate.exit, label %str.RocStr.allocate.exit.thread

str.RocStr.allocate.exit.thread:                  ; preds = %3
  %6 = shl nuw nsw i64 %2, 56
  %.sroa.3.23.insert.shift = or i64 %6, -9223372036854775808
  br label %str.RocStr.asU8ptrMut.exit

str.RocStr.allocate.exit:                         ; preds = %3
  %7 = tail call i64 @llvm.umax.i64(i64 %2, i64 64)
  %8 = add nuw i64 %7, 8
  %9 = tail call ptr @roc_alloc(i64 %8, i32 8), !noalias !5
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 -9223372036854775808, ptr %9, align 8, !noalias !5
  %11 = icmp slt i64 %7, 0
  %spec.select = select i1 %11, ptr %4, ptr %10
  br label %str.RocStr.asU8ptrMut.exit

str.RocStr.asU8ptrMut.exit:                       ; preds = %str.RocStr.allocate.exit, %str.RocStr.allocate.exit.thread
  %.sink7 = phi ptr [ %10, %str.RocStr.allocate.exit ], [ null, %str.RocStr.allocate.exit.thread ]
  %.sink = phi i64 [ %2, %str.RocStr.allocate.exit ], [ 0, %str.RocStr.allocate.exit.thread ]
  %.sroa.3.23.insert.shift.sink = phi i64 [ %7, %str.RocStr.allocate.exit ], [ %.sroa.3.23.insert.shift, %str.RocStr.allocate.exit.thread ]
  %common.ret.op.i = phi ptr [ %spec.select, %str.RocStr.allocate.exit ], [ %4, %str.RocStr.allocate.exit.thread ]
  store ptr %.sink7, ptr %4, align 8
  %12 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sink, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.3.23.insert.shift.sink, ptr %13, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i, ptr nonnull align 1 %1, i64 %2, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #3

; Function Attrs: nounwind uwtable
define private fastcc void @sort.fluxsort(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i1 %4, ptr nonnull readonly align 4 %5, i64 %6, i32 %7, ptr nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = alloca [96 x i8], align 16
  %11 = alloca [96 x i8], align 16
  %12 = alloca [96 x i8], align 16
  %13 = alloca [96 x i8], align 16
  %14 = alloca [96 x i8], align 16
  %15 = alloca [96 x i8], align 16
  %16 = alloca [96 x i8], align 16
  %17 = alloca [96 x i8], align 16
  %18 = alloca [96 x i8], align 16
  %19 = alloca [96 x i8], align 16
  %20 = alloca [96 x i8], align 16
  %21 = alloca [96 x i8], align 16
  %22 = alloca [96 x i8], align 16
  %23 = alloca [96 x i8], align 16
  %24 = alloca [96 x i8], align 16
  %25 = alloca [96 x i8], align 16
  %26 = alloca [96 x i8], align 16
  %27 = alloca [96 x i8], align 16
  %28 = alloca [96 x i8], align 16
  %29 = alloca [96 x i8], align 16
  %30 = alloca [96 x i8], align 16
  %31 = alloca [96 x i8], align 16
  %32 = alloca [96 x i8], align 16
  %33 = alloca [96 x i8], align 16
  %34 = alloca [96 x i8], align 16
  %35 = alloca [96 x i8], align 16
  %36 = alloca [96 x i8], align 16
  %37 = alloca [96 x i8], align 16
  %38 = alloca [96 x i8], align 16
  %39 = alloca [96 x i8], align 16
  %40 = alloca [96 x i8], align 16
  %41 = alloca [96 x i8], align 16
  %42 = alloca [96 x i8], align 16
  %43 = alloca [96 x i8], align 16
  %44 = alloca [96 x i8], align 16
  %45 = alloca [96 x i8], align 16
  %46 = alloca [96 x i8], align 16
  %47 = alloca [96 x i8], align 16
  %48 = alloca [96 x i8], align 16
  %49 = alloca [96 x i8], align 16
  %50 = alloca [96 x i8], align 16
  %51 = alloca [96 x i8], align 16
  %52 = alloca [96 x i8], align 16
  %53 = alloca [96 x i8], align 16
  %54 = alloca [96 x i8], align 16
  %55 = alloca [96 x i8], align 16
  %56 = alloca [96 x i8], align 16
  %57 = alloca [96 x i8], align 16
  %58 = icmp ult i64 %1, 132
  br i1 %58, label %59, label %81

sort.quadsort.exit:                               ; preds = %sort.flux_analyze__anon_14346.exit.i, %sort.flux_analyze__anon_14345.exit.i
  ret void

59:                                               ; preds = %9
  %60 = icmp ult i64 %6, 97
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  br i1 %4, label %70, label %71

62:                                               ; preds = %59
  %63 = shl nuw nsw i64 %1, 3
  %64 = tail call ptr @roc_alloc(i64 %63, i32 8)
  %.not.i = icmp eq ptr %64, null
  br i1 %.not.i, label %72, label %.preheader13.i

.preheader13.i:                                   ; preds = %62
  %.not18.i = icmp eq i64 %1, 0
  br i1 %.not18.i, label %._crit_edge.i, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %.preheader13.i
  %min.iters.check2409 = icmp eq i64 %1, 1
  br i1 %min.iters.check2409, label %.lr.ph.i.preheader2692, label %vector.ph2410

vector.ph2410:                                    ; preds = %.lr.ph.i.preheader
  %n.vec2412 = and i64 %1, -2
  %uglygep2716 = getelementptr i8, ptr %64, i64 8
  %65 = shl i64 %6, 1
  br label %vector.body2415

vector.body2415:                                  ; preds = %vector.body2415, %vector.ph2410
  %lsr.iv2723 = phi i64 [ %lsr.iv.next2724, %vector.body2415 ], [ %n.vec2412, %vector.ph2410 ]
  %lsr.iv2719 = phi ptr [ %uglygep2720, %vector.body2415 ], [ %0, %vector.ph2410 ]
  %lsr.iv2717 = phi ptr [ %uglygep2718, %vector.body2415 ], [ %uglygep2716, %vector.ph2410 ]
  %uglygep2722 = getelementptr i8, ptr %lsr.iv2717, i64 -8
  %uglygep2721 = getelementptr i8, ptr %lsr.iv2719, i64 %6
  store ptr %lsr.iv2719, ptr %uglygep2722, align 8
  store ptr %uglygep2721, ptr %lsr.iv2717, align 8
  %uglygep2718 = getelementptr i8, ptr %lsr.iv2717, i64 16
  %uglygep2720 = getelementptr i8, ptr %lsr.iv2719, i64 %65
  %lsr.iv.next2724 = add i64 %lsr.iv2723, -2
  %66 = icmp eq i64 %lsr.iv.next2724, 0
  br i1 %66, label %middle.block2407, label %vector.body2415, !llvm.loop !10

middle.block2407:                                 ; preds = %vector.body2415
  %cmp.n2414 = icmp eq i64 %n.vec2412, %1
  br i1 %cmp.n2414, label %._crit_edge.i, label %.lr.ph.i.preheader2692

.lr.ph.i.preheader2692:                           ; preds = %middle.block2407, %.lr.ph.i.preheader
  %.0714.i.ph = phi i64 [ %n.vec2412, %middle.block2407 ], [ 0, %.lr.ph.i.preheader ]
  %67 = sub i64 %1, %.0714.i.ph
  %68 = mul i64 %.0714.i.ph, %6
  %uglygep2710 = getelementptr i8, ptr %0, i64 %68
  %69 = shl i64 %.0714.i.ph, 3
  %uglygep2713 = getelementptr i8, ptr %64, i64 %69
  br label %.lr.ph.i

70:                                               ; preds = %61
  tail call fastcc void @sort.quadsort_direct__anon_14341(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  ret void

71:                                               ; preds = %61
  tail call fastcc void @sort.quadsort_direct__anon_14342(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 4 %8)
  ret void

72:                                               ; preds = %62
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13352, i64 50)
  unreachable

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader2692
  %lsr.iv2714 = phi ptr [ %uglygep2713, %.lr.ph.i.preheader2692 ], [ %uglygep2715, %.lr.ph.i ]
  %lsr.iv2711 = phi ptr [ %uglygep2710, %.lr.ph.i.preheader2692 ], [ %uglygep2712, %.lr.ph.i ]
  %lsr.iv2708 = phi i64 [ %67, %.lr.ph.i.preheader2692 ], [ %lsr.iv.next2709, %.lr.ph.i ]
  store ptr %lsr.iv2711, ptr %lsr.iv2714, align 8
  %lsr.iv.next2709 = add i64 %lsr.iv2708, -1
  %uglygep2712 = getelementptr i8, ptr %lsr.iv2711, i64 %6
  %uglygep2715 = getelementptr i8, ptr %lsr.iv2714, i64 8
  %exitcond.not.i = icmp eq i64 %lsr.iv.next2709, 0
  br i1 %exitcond.not.i, label %._crit_edge.i, label %.lr.ph.i, !llvm.loop !13

._crit_edge.i:                                    ; preds = %.lr.ph.i, %middle.block2407, %.preheader13.i
  br i1 %4, label %77, label %78

73:                                               ; preds = %78, %77
  %74 = mul nuw i64 %6, %1
  %75 = tail call ptr @roc_alloc(i64 %74, i32 %7)
  %.not12.i = icmp eq ptr %75, null
  br i1 %.not12.i, label %79, label %.preheader.i

.preheader.i:                                     ; preds = %73
  %76 = icmp eq i64 %1, 0
  br i1 %76, label %._crit_edge17.i, label %.lr.ph16.i.preheader

.lr.ph16.i.preheader:                             ; preds = %.preheader.i
  br label %.lr.ph16.i

77:                                               ; preds = %._crit_edge.i
  tail call fastcc void @sort.quadsort_direct__anon_14343(ptr nonnull align 1 %64, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %73

78:                                               ; preds = %._crit_edge.i
  tail call fastcc void @sort.quadsort_direct__anon_14344(ptr nonnull align 1 %64, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %73

79:                                               ; preds = %73
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13352, i64 50)
  unreachable

.lr.ph16.i:                                       ; preds = %.lr.ph16.i, %.lr.ph16.i.preheader
  %lsr.iv2706 = phi ptr [ %75, %.lr.ph16.i.preheader ], [ %uglygep2707, %.lr.ph16.i ]
  %lsr.iv2704 = phi ptr [ %64, %.lr.ph16.i.preheader ], [ %uglygep2705, %.lr.ph16.i ]
  %lsr.iv = phi i64 [ %1, %.lr.ph16.i.preheader ], [ %lsr.iv.next, %.lr.ph16.i ]
  %80 = load ptr, ptr %lsr.iv2704, align 8
  tail call void %8(ptr nonnull align 1 %lsr.iv2706, ptr align 1 %80) #15
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep2705 = getelementptr i8, ptr %lsr.iv2704, i64 8
  %uglygep2707 = getelementptr i8, ptr %lsr.iv2706, i64 %6
  %exitcond20.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond20.not.i, label %._crit_edge17.i, label %.lr.ph16.i

._crit_edge17.i:                                  ; preds = %.lr.ph16.i, %.preheader.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %75, i64 %74, i1 false)
  tail call void @roc_dealloc(ptr nonnull align 1 %75, i32 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %64, i32 8)
  ret void

81:                                               ; preds = %9
  %82 = icmp ult i64 %6, 97
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = mul nuw i64 %6, %1
  %85 = tail call ptr @roc_alloc(i64 %84, i32 %7)
  br i1 %4, label %94, label %761

86:                                               ; preds = %81
  %87 = shl nuw i64 %1, 3
  %88 = tail call ptr @roc_alloc(i64 %87, i32 8)
  %.not = icmp eq ptr %88, null
  br i1 %.not, label %1425, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %86
  %min.iters.check = icmp ult i64 %1, 2
  br i1 %min.iters.check, label %.lr.ph.preheader2703, label %vector.ph

vector.ph:                                        ; preds = %.lr.ph.preheader
  %n.vec = and i64 %1, -2
  %uglygep3614 = getelementptr i8, ptr %88, i64 8
  %89 = shl i64 %6, 1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv3621 = phi i64 [ %lsr.iv.next3622, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv3617 = phi ptr [ %uglygep3618, %vector.body ], [ %0, %vector.ph ]
  %lsr.iv3615 = phi ptr [ %uglygep3616, %vector.body ], [ %uglygep3614, %vector.ph ]
  %uglygep3620 = getelementptr i8, ptr %lsr.iv3615, i64 -8
  %uglygep3619 = getelementptr i8, ptr %lsr.iv3617, i64 %6
  store ptr %lsr.iv3617, ptr %uglygep3620, align 8
  store ptr %uglygep3619, ptr %lsr.iv3615, align 8
  %uglygep3616 = getelementptr i8, ptr %lsr.iv3615, i64 16
  %uglygep3618 = getelementptr i8, ptr %lsr.iv3617, i64 %89
  %lsr.iv.next3622 = add i64 %lsr.iv3621, -2
  %90 = icmp eq i64 %lsr.iv.next3622, 0
  br i1 %90, label %middle.block, label %vector.body, !llvm.loop !14

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %1
  br i1 %cmp.n, label %._crit_edge, label %.lr.ph.preheader2703

.lr.ph.preheader2703:                             ; preds = %middle.block, %.lr.ph.preheader
  %.07401.ph = phi i64 [ %n.vec, %middle.block ], [ 0, %.lr.ph.preheader ]
  %91 = sub i64 %1, %.07401.ph
  %92 = mul i64 %.07401.ph, %6
  %uglygep3608 = getelementptr i8, ptr %0, i64 %92
  %93 = shl i64 %.07401.ph, 3
  %uglygep3611 = getelementptr i8, ptr %88, i64 %93
  br label %.lr.ph

94:                                               ; preds = %83
  %95 = icmp eq ptr %85, null
  br i1 %95, label %760, label %96

96:                                               ; preds = %94
  %97 = lshr i64 %1, 1
  %98 = lshr i64 %1, 2
  %99 = sub nuw nsw i64 %97, %98
  %100 = sub nuw i64 %1, %97
  %101 = lshr i64 %100, 1
  %102 = sub nuw i64 %100, %101
  %103 = mul nuw i64 %98, %6
  %104 = getelementptr inbounds i8, ptr %0, i64 %103
  %105 = mul nuw i64 %97, %6
  %106 = getelementptr inbounds i8, ptr %0, i64 %105
  %107 = add nuw i64 %101, %97
  %108 = mul nuw i64 %107, %6
  %109 = getelementptr inbounds i8, ptr %0, i64 %108
  %110 = icmp ult i64 %98, %99
  br i1 %110, label %113, label %111

111:                                              ; preds = %113, %96
  %.0236.i.i = phi i64 [ %117, %113 ], [ 0, %96 ]
  %.0212.i.i = phi ptr [ %114, %113 ], [ %104, %96 ]
  %112 = icmp ult i64 %98, %101
  br i1 %112, label %120, label %118

113:                                              ; preds = %96
  %114 = getelementptr inbounds i8, ptr %104, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %115 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %104, ptr nonnull align 1 %114) #15
  %116 = icmp eq i8 %115, 1
  %117 = zext i1 %116 to i64
  br label %111

118:                                              ; preds = %120, %111
  %.0243.i.i = phi i64 [ %124, %120 ], [ 0, %111 ]
  %.0216.i.i = phi ptr [ %121, %120 ], [ %106, %111 ]
  %119 = icmp ult i64 %98, %102
  br i1 %119, label %128, label %125

120:                                              ; preds = %111
  %121 = getelementptr inbounds i8, ptr %106, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %122 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %106, ptr nonnull align 1 %121) #15
  %123 = icmp eq i8 %122, 1
  %124 = zext i1 %123 to i64
  br label %118

125:                                              ; preds = %128, %118
  %.0250.i.i = phi i64 [ %132, %128 ], [ 0, %118 ]
  %.0221.i.i = phi ptr [ %129, %128 ], [ %109, %118 ]
  %126 = icmp ugt i64 %1, 132
  br i1 %126, label %.lr.ph.i.i, label %.lr.ph507.preheader.i.i

.lr.ph.i.i:                                       ; preds = %125
  %127 = mul i64 %6, 96
  br label %133

128:                                              ; preds = %118
  %129 = getelementptr inbounds i8, ptr %109, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %130 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %109, ptr nonnull align 1 %129) #15
  %131 = icmp eq i8 %130, 1
  %132 = zext i1 %131 to i64
  br label %125

133:                                              ; preds = %.critedge.i.i, %.lr.ph.i.i
  %.0484.i.i = phi ptr [ %0, %.lr.ph.i.i ], [ %.2.i.i, %.critedge.i.i ]
  %.1213483.i.i = phi ptr [ %.0212.i.i, %.lr.ph.i.i ], [ %.3215.i.i, %.critedge.i.i ]
  %.1217482.i.i = phi ptr [ %.0216.i.i, %.lr.ph.i.i ], [ %.3219.i.i, %.critedge.i.i ]
  %.1222481.i.i = phi ptr [ %.0221.i.i, %.lr.ph.i.i ], [ %.3224.i.i, %.critedge.i.i ]
  %.0226480.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %158, %.critedge.i.i ]
  %.0227479.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %164, %.critedge.i.i ]
  %.0228478.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %170, %.critedge.i.i ]
  %.0229477.i.i = phi i32 [ 0, %.lr.ph.i.i ], [ %176, %.critedge.i.i ]
  %.0230476.i.i = phi i64 [ 0, %.lr.ph.i.i ], [ %.1231.i.i, %.critedge.i.i ]
  %.1237475.i.i = phi i64 [ %.0236.i.i, %.lr.ph.i.i ], [ %.2238.i.i, %.critedge.i.i ]
  %.1244474.i.i = phi i64 [ %.0243.i.i, %.lr.ph.i.i ], [ %.2245.i.i, %.critedge.i.i ]
  %.1251473.i.i = phi i64 [ %.0250.i.i, %.lr.ph.i.i ], [ %.2252.i.i, %.critedge.i.i ]
  %.0256472.i.i = phi i64 [ %1, %.lr.ph.i.i ], [ %178, %.critedge.i.i ]
  tail call void %5(ptr align 1 %3, i64 128) #15
  %uglygep2828 = getelementptr i8, ptr %.0484.i.i, i64 %6
  %uglygep2834 = getelementptr i8, ptr %.1213483.i.i, i64 %6
  %uglygep2840 = getelementptr i8, ptr %.1217482.i.i, i64 %6
  %uglygep2846 = getelementptr i8, ptr %.1222481.i.i, i64 %6
  br label %135

._crit_edge.i.i:                                  ; preds = %.critedge.i.i
  %134 = icmp ugt i64 %178, 7
  br i1 %134, label %.lr.ph507.preheader.i.i, label %._crit_edge508.i.i

135:                                              ; preds = %135, %133
  %lsr.iv2848 = phi i64 [ %lsr.iv.next2849, %135 ], [ 32, %133 ]
  %lsr.iv2821 = phi i64 [ %lsr.iv.next2822, %135 ], [ 0, %133 ]
  %.0259467.i.i = phi i8 [ 0, %133 ], [ %139, %135 ]
  %.0260466.i.i = phi i8 [ 0, %133 ], [ %143, %135 ]
  %.0261465.i.i = phi i8 [ 0, %133 ], [ %147, %135 ]
  %.0262464.i.i = phi i8 [ 0, %133 ], [ %151, %135 ]
  %uglygep2823 = getelementptr i8, ptr %.0484.i.i, i64 %lsr.iv2821
  %uglygep2830 = getelementptr i8, ptr %.1213483.i.i, i64 %lsr.iv2821
  %uglygep2836 = getelementptr i8, ptr %.1217482.i.i, i64 %lsr.iv2821
  %uglygep2842 = getelementptr i8, ptr %.1222481.i.i, i64 %lsr.iv2821
  %uglygep2829 = getelementptr i8, ptr %uglygep2828, i64 %lsr.iv2821
  %136 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2823, ptr align 1 %uglygep2829) #15
  %137 = icmp eq i8 %136, 1
  %138 = zext i1 %137 to i8
  %139 = add nuw i8 %.0259467.i.i, %138
  %uglygep2835 = getelementptr i8, ptr %uglygep2834, i64 %lsr.iv2821
  %140 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2830, ptr align 1 %uglygep2835) #15
  %141 = icmp eq i8 %140, 1
  %142 = zext i1 %141 to i8
  %143 = add nuw i8 %.0260466.i.i, %142
  %uglygep2841 = getelementptr i8, ptr %uglygep2840, i64 %lsr.iv2821
  %144 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2836, ptr align 1 %uglygep2841) #15
  %145 = icmp eq i8 %144, 1
  %146 = zext i1 %145 to i8
  %147 = add nuw i8 %.0261465.i.i, %146
  %uglygep2847 = getelementptr i8, ptr %uglygep2846, i64 %lsr.iv2821
  %148 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2842, ptr align 1 %uglygep2847) #15
  %149 = icmp eq i8 %148, 1
  %150 = zext i1 %149 to i8
  %151 = add nuw i8 %.0262464.i.i, %150
  %lsr.iv.next2822 = add i64 %lsr.iv2821, %6
  %lsr.iv.next2849 = add nsw i64 %lsr.iv2848, -1
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next2849, 0
  br i1 %exitcond.not.i.i, label %152, label %135

152:                                              ; preds = %135
  %153 = zext i8 %139 to i64
  %154 = add nuw i64 %.0230476.i.i, %153
  %155 = and i8 %139, -33
  %156 = icmp eq i8 %155, 0
  %157 = zext i1 %156 to i32
  %158 = add nuw i32 %.0226480.i.i, %157
  %159 = zext i8 %143 to i64
  %160 = add nuw i64 %.1237475.i.i, %159
  %161 = and i8 %143, -33
  %162 = icmp eq i8 %161, 0
  %163 = zext i1 %162 to i32
  %164 = add nuw i32 %.0227479.i.i, %163
  %165 = zext i8 %147 to i64
  %166 = add nuw i64 %.1244474.i.i, %165
  %167 = and i8 %147, -33
  %168 = icmp eq i8 %167, 0
  %169 = zext i1 %168 to i32
  %170 = add nuw i32 %.0228478.i.i, %169
  %171 = zext i8 %151 to i64
  %172 = add nuw i64 %.1251473.i.i, %171
  %173 = and i8 %151, -33
  %174 = icmp eq i8 %173, 0
  %175 = zext i1 %174 to i32
  %176 = add nuw i32 %.0229477.i.i, %175
  %177 = icmp ugt i64 %.0256472.i.i, 516
  %uglygep2824 = getelementptr i8, ptr %.0484.i.i, i64 %lsr.iv.next2822
  %uglygep2831 = getelementptr i8, ptr %.1213483.i.i, i64 %lsr.iv.next2822
  %uglygep2837 = getelementptr i8, ptr %.1217482.i.i, i64 %lsr.iv.next2822
  %uglygep2843 = getelementptr i8, ptr %.1222481.i.i, i64 %lsr.iv.next2822
  br i1 %177, label %180, label %.critedge.i.i

.critedge.i.i:                                    ; preds = %191, %180, %152
  %.1257.i.i = phi i64 [ %196, %191 ], [ %.0256472.i.i, %152 ], [ %.0256472.i.i, %180 ]
  %.2252.i.i = phi i64 [ %195, %191 ], [ %172, %152 ], [ %172, %180 ]
  %.2245.i.i = phi i64 [ %194, %191 ], [ %166, %152 ], [ %166, %180 ]
  %.2238.i.i = phi i64 [ %193, %191 ], [ %160, %152 ], [ %160, %180 ]
  %.1231.i.i = phi i64 [ %192, %191 ], [ %154, %152 ], [ %154, %180 ]
  %.3224.i.i = phi ptr [ %uglygep2845, %191 ], [ %uglygep2843, %152 ], [ %uglygep2843, %180 ]
  %.3219.i.i = phi ptr [ %uglygep2839, %191 ], [ %uglygep2837, %152 ], [ %uglygep2837, %180 ]
  %.3215.i.i = phi ptr [ %uglygep2833, %191 ], [ %uglygep2831, %152 ], [ %uglygep2831, %180 ]
  %.2.i.i = phi ptr [ %uglygep2827, %191 ], [ %uglygep2824, %152 ], [ %uglygep2824, %180 ]
  %178 = add i64 %.1257.i.i, -128
  %179 = icmp ugt i64 %178, 132
  br i1 %179, label %133, label %._crit_edge.i.i

180:                                              ; preds = %152
  %181 = icmp eq i8 %173, 0
  %182 = icmp eq i8 %167, 0
  %183 = icmp eq i8 %161, 0
  %184 = icmp eq i8 %155, 0
  %.neg.i.i = sext i1 %181 to i8
  %185 = zext i1 %182 to i8
  %186 = zext i1 %183 to i8
  %187 = zext i1 %184 to i8
  %188 = add nuw nsw i8 %186, %187
  %189 = add nuw nsw i8 %188, %185
  %190 = icmp eq i8 %189, %.neg.i.i
  br i1 %190, label %191, label %.critedge.i.i

191:                                              ; preds = %180
  %192 = add nuw i64 %154, 48
  %uglygep2826 = getelementptr i8, ptr %.0484.i.i, i64 %127
  %uglygep2827 = getelementptr i8, ptr %uglygep2826, i64 %lsr.iv.next2822
  %193 = add nuw i64 %160, 48
  %uglygep2832 = getelementptr i8, ptr %.1213483.i.i, i64 %127
  %uglygep2833 = getelementptr i8, ptr %uglygep2832, i64 %lsr.iv.next2822
  %194 = add nuw i64 %166, 48
  %uglygep2838 = getelementptr i8, ptr %.1217482.i.i, i64 %127
  %uglygep2839 = getelementptr i8, ptr %uglygep2838, i64 %lsr.iv.next2822
  %195 = add nuw i64 %172, 48
  %uglygep2844 = getelementptr i8, ptr %.1222481.i.i, i64 %127
  %uglygep2845 = getelementptr i8, ptr %uglygep2844, i64 %lsr.iv.next2822
  %196 = add i64 %.0256472.i.i, -384
  br label %.critedge.i.i

.lr.ph507.preheader.i.i:                          ; preds = %._crit_edge.i.i, %125
  %.0.lcssa.i.i306 = phi ptr [ %.2.i.i, %._crit_edge.i.i ], [ %0, %125 ]
  %.1213.lcssa.i.i305 = phi ptr [ %.3215.i.i, %._crit_edge.i.i ], [ %.0212.i.i, %125 ]
  %.1217.lcssa.i.i304 = phi ptr [ %.3219.i.i, %._crit_edge.i.i ], [ %.0216.i.i, %125 ]
  %.1222.lcssa.i.i303 = phi ptr [ %.3224.i.i, %._crit_edge.i.i ], [ %.0221.i.i, %125 ]
  %.0226.lcssa.i.i302 = phi i32 [ %158, %._crit_edge.i.i ], [ 0, %125 ]
  %.0227.lcssa.i.i300 = phi i32 [ %164, %._crit_edge.i.i ], [ 0, %125 ]
  %.0228.lcssa.i.i298 = phi i32 [ %170, %._crit_edge.i.i ], [ 0, %125 ]
  %.0229.lcssa.i.i296 = phi i32 [ %176, %._crit_edge.i.i ], [ 0, %125 ]
  %.0230.lcssa.i.i294 = phi i64 [ %.1231.i.i, %._crit_edge.i.i ], [ 0, %125 ]
  %.1237.lcssa.i.i293 = phi i64 [ %.2238.i.i, %._crit_edge.i.i ], [ %.0236.i.i, %125 ]
  %.1244.lcssa.i.i292 = phi i64 [ %.2245.i.i, %._crit_edge.i.i ], [ %.0243.i.i, %125 ]
  %.1251.lcssa.i.i291 = phi i64 [ %.2252.i.i, %._crit_edge.i.i ], [ %.0250.i.i, %125 ]
  %.0256.lcssa.i.i290 = phi i64 [ %178, %._crit_edge.i.i ], [ 132, %125 ]
  %197 = and i64 %.0256.lcssa.i.i290, 252
  %198 = add nsw i64 %197, -4
  tail call void %5(ptr align 1 %3, i64 %198) #15
  br label %.lr.ph507.i.i

.lr.ph507.i.i:                                    ; preds = %.lr.ph507.i.i, %.lr.ph507.preheader.i.i
  %.3505.i.i = phi ptr [ %199, %.lr.ph507.i.i ], [ %.0.lcssa.i.i306, %.lr.ph507.preheader.i.i ]
  %.4504.i.i = phi ptr [ %204, %.lr.ph507.i.i ], [ %.1213.lcssa.i.i305, %.lr.ph507.preheader.i.i ]
  %.4220503.i.i = phi ptr [ %209, %.lr.ph507.i.i ], [ %.1217.lcssa.i.i304, %.lr.ph507.preheader.i.i ]
  %.4225502.i.i = phi ptr [ %214, %.lr.ph507.i.i ], [ %.1222.lcssa.i.i303, %.lr.ph507.preheader.i.i ]
  %.2232501.i.i = phi i64 [ %203, %.lr.ph507.i.i ], [ %.0230.lcssa.i.i294, %.lr.ph507.preheader.i.i ]
  %.3239500.i.i = phi i64 [ %208, %.lr.ph507.i.i ], [ %.1237.lcssa.i.i293, %.lr.ph507.preheader.i.i ]
  %.3246499.i.i = phi i64 [ %213, %.lr.ph507.i.i ], [ %.1244.lcssa.i.i292, %.lr.ph507.preheader.i.i ]
  %.3253498.i.i = phi i64 [ %218, %.lr.ph507.i.i ], [ %.1251.lcssa.i.i291, %.lr.ph507.preheader.i.i ]
  %.2258497.i.i = phi i64 [ %219, %.lr.ph507.i.i ], [ %.0256.lcssa.i.i290, %.lr.ph507.preheader.i.i ]
  %199 = getelementptr inbounds i8, ptr %.3505.i.i, i64 %6
  %200 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3505.i.i, ptr align 1 %199) #15
  %201 = icmp eq i8 %200, 1
  %202 = zext i1 %201 to i64
  %203 = add nuw i64 %.2232501.i.i, %202
  %204 = getelementptr inbounds i8, ptr %.4504.i.i, i64 %6
  %205 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4504.i.i, ptr align 1 %204) #15
  %206 = icmp eq i8 %205, 1
  %207 = zext i1 %206 to i64
  %208 = add nuw i64 %.3239500.i.i, %207
  %209 = getelementptr inbounds i8, ptr %.4220503.i.i, i64 %6
  %210 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220503.i.i, ptr align 1 %209) #15
  %211 = icmp eq i8 %210, 1
  %212 = zext i1 %211 to i64
  %213 = add nuw i64 %.3246499.i.i, %212
  %214 = getelementptr inbounds i8, ptr %.4225502.i.i, i64 %6
  %215 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4225502.i.i, ptr align 1 %214) #15
  %216 = icmp eq i8 %215, 1
  %217 = zext i1 %216 to i64
  %218 = add nuw i64 %.3253498.i.i, %217
  %219 = add i64 %.2258497.i.i, -4
  %220 = icmp ugt i64 %219, 7
  br i1 %220, label %.lr.ph507.i.i, label %._crit_edge508.i.i

._crit_edge508.i.i:                               ; preds = %.lr.ph507.i.i, %._crit_edge.i.i
  %.0226.lcssa.i.i301 = phi i32 [ %158, %._crit_edge.i.i ], [ %.0226.lcssa.i.i302, %.lr.ph507.i.i ]
  %.0227.lcssa.i.i299 = phi i32 [ %164, %._crit_edge.i.i ], [ %.0227.lcssa.i.i300, %.lr.ph507.i.i ]
  %.0228.lcssa.i.i297 = phi i32 [ %170, %._crit_edge.i.i ], [ %.0228.lcssa.i.i298, %.lr.ph507.i.i ]
  %.0229.lcssa.i.i295 = phi i32 [ %176, %._crit_edge.i.i ], [ %.0229.lcssa.i.i296, %.lr.ph507.i.i ]
  %.3253.lcssa.i.i = phi i64 [ %.2252.i.i, %._crit_edge.i.i ], [ %218, %.lr.ph507.i.i ]
  %.3246.lcssa.i.i = phi i64 [ %.2245.i.i, %._crit_edge.i.i ], [ %213, %.lr.ph507.i.i ]
  %.3239.lcssa.i.i = phi i64 [ %.2238.i.i, %._crit_edge.i.i ], [ %208, %.lr.ph507.i.i ]
  %.2232.lcssa.i.i = phi i64 [ %.1231.i.i, %._crit_edge.i.i ], [ %203, %.lr.ph507.i.i ]
  %.4225.lcssa.i.i = phi ptr [ %.3224.i.i, %._crit_edge.i.i ], [ %214, %.lr.ph507.i.i ]
  %.4220.lcssa.i.i = phi ptr [ %.3219.i.i, %._crit_edge.i.i ], [ %209, %.lr.ph507.i.i ]
  %.4.lcssa.i.i = phi ptr [ %.3215.i.i, %._crit_edge.i.i ], [ %204, %.lr.ph507.i.i ]
  %.3.lcssa.i.i = phi ptr [ %.2.i.i, %._crit_edge.i.i ], [ %199, %.lr.ph507.i.i ]
  %221 = add i64 %.3239.lcssa.i.i, %.3246.lcssa.i.i
  %222 = add i64 %221, %.2232.lcssa.i.i
  %223 = sub i64 0, %.3253.lcssa.i.i
  %224 = icmp eq i64 %222, %223
  br i1 %224, label %233, label %.critedge2.i.i

.critedge2.i.i:                                   ; preds = %239, %236, %233, %._crit_edge508.i.i
  %225 = sub nuw i64 %98, %.2232.lcssa.i.i
  %226 = icmp eq i64 %225, 1
  %227 = sub nuw i64 %99, %.3239.lcssa.i.i
  %228 = icmp eq i64 %227, 1
  %229 = sub nuw i64 %101, %.3246.lcssa.i.i
  %230 = icmp eq i64 %229, 1
  %231 = sub nuw i64 %102, %.3253.lcssa.i.i
  %232 = icmp eq i64 %231, 1
  %..i.i = select i1 %226, i1 true, i1 %228
  %.5.i.i = select i1 %..i.i, i1 true, i1 %230
  %.6.i.i = select i1 %.5.i.i, i1 true, i1 %232
  br i1 %.6.i.i, label %257, label %242

233:                                              ; preds = %._crit_edge508.i.i
  %234 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %235 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %234) #15
  %.not289.i.i = icmp eq i8 %235, 1
  br i1 %.not289.i.i, label %.critedge2.i.i, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %238 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %237) #15
  %.not290.i.i = icmp eq i8 %238, 1
  br i1 %.not290.i.i, label %.critedge2.i.i, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  tail call void %5(ptr align 1 %3, i64 1) #15
  %241 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %240) #15
  %.not291.i.i = icmp eq i8 %241, 1
  br i1 %.not291.i.i, label %.critedge2.i.i, label %sort.flux_analyze__anon_14345.exit.i

242:                                              ; preds = %sort.quad_reversal.exit423.i.i, %.thread444.thread.i.i, %.thread444.thread.thread.i.i, %.critedge2.i.i
  %.4254.i.i = phi i64 [ 0, %sort.quad_reversal.exit423.i.i ], [ %.5255441450457.i.i, %.thread444.thread.i.i ], [ %.3253.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.4247.i.i = phi i64 [ %.6249.i.i, %sort.quad_reversal.exit423.i.i ], [ %.6249.i.i, %.thread444.thread.i.i ], [ %.3246.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.4240.i.i = phi i64 [ %.6242458.i.i, %sort.quad_reversal.exit423.i.i ], [ %.6242458.i.i, %.thread444.thread.i.i ], [ %.3239.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %.3233.i.i = phi i64 [ %.5235451456.i.i, %sort.quad_reversal.exit423.i.i ], [ %.5235451456.i.i, %.thread444.thread.i.i ], [ %.2232.lcssa.i.i, %.critedge2.i.i ], [ 0, %.thread444.thread.thread.i.i ]
  %const3625 = bitcast i64 1048579 to i64
  %243 = lshr i64 %1, 9
  %244 = zext i32 %.0226.lcssa.i.i301 to i64
  %245 = icmp ult i64 %243, %244
  %246 = zext i1 %245 to i4
  %247 = zext i32 %.0227.lcssa.i.i299 to i64
  %248 = icmp ult i64 %243, %247
  %249 = zext i1 %248 to i4
  %250 = zext i32 %.0228.lcssa.i.i297 to i64
  %251 = icmp ult i64 %243, %250
  %252 = zext i1 %251 to i4
  %253 = zext i32 %.0229.lcssa.i.i295 to i64
  %254 = icmp ult i64 %243, %253
  %255 = zext i1 %254 to i4
  %256 = icmp ugt i64 %1, %const3625
  br i1 %256, label %581, label %573

257:                                              ; preds = %.critedge2.i.i
  %258 = icmp eq i64 %231, 1
  %259 = icmp eq i64 %229, 1
  %260 = icmp eq i64 %227, 1
  %261 = icmp eq i64 %225, 1
  tail call void %5(ptr align 1 %3, i64 3) #15
  %.7.i.i = select i1 %261, i1 %260, i1 false
  %262 = getelementptr i8, ptr %.3.lcssa.i.i, i64 %6
  %263 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %262) #15
  %264 = icmp eq i8 %263, 1
  %265 = and i1 %.7.i.i, %264
  %266 = zext i1 %265 to i3
  %.8.i.i = select i1 %260, i1 %259, i1 false
  %267 = getelementptr i8, ptr %.4.lcssa.i.i, i64 %6
  %268 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %267) #15
  %269 = icmp eq i8 %268, 1
  %270 = and i1 %.8.i.i, %269
  %.9.i.i = select i1 %259, i1 %258, i1 false
  %271 = getelementptr i8, ptr %.4220.lcssa.i.i, i64 %6
  %272 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %271) #15
  %273 = icmp eq i8 %272, 1
  %274 = and i1 %.9.i.i, %273
  %275 = select i1 %270, i3 2, i3 0
  %276 = or i3 %275, %266
  %277 = select i1 %274, i3 -4, i3 0
  %278 = or i3 %276, %277
  %279 = zext i3 %278 to i32
  switch i32 %279, label %284 [
    i32 0, label %280
    i32 1, label %285
    i32 2, label %308
    i32 3, label %332
    i32 4, label %355
    i32 5, label %379
    i32 6, label %424
    i32 7, label %448
  ]

280:                                              ; preds = %sort.quad_reversal.exit363.i.i, %sort.quad_reversal.exit327.i.i, %sort.quad_reversal.exit303.i.i, %257
  %.5255.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ 0, %sort.quad_reversal.exit327.i.i ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit303.i.i ], [ %.3253.lcssa.i.i, %257 ]
  %.5248.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ 0, %sort.quad_reversal.exit327.i.i ], [ 0, %sort.quad_reversal.exit303.i.i ], [ %.3246.lcssa.i.i, %257 ]
  %.5241.i.i = phi i64 [ 0, %sort.quad_reversal.exit363.i.i ], [ %.3239.lcssa.i.i, %sort.quad_reversal.exit327.i.i ], [ 0, %sort.quad_reversal.exit303.i.i ], [ %.3239.lcssa.i.i, %257 ]
  %281 = icmp eq i64 %225, 1
  %282 = icmp ne i64 %.2232.lcssa.i.i, 0
  %283 = and i1 %282, %281
  br i1 %283, label %475, label %471

284:                                              ; preds = %257
  unreachable

285:                                              ; preds = %257
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %286 = ptrtoint ptr %.4.lcssa.i.i to i64
  %287 = ptrtoint ptr %0 to i64
  %288 = sub nuw i64 %286, %287
  %289 = shl nuw i64 %6, 1
  %290 = udiv i64 %288, %289
  %291 = mul nuw i64 %290, %6
  %292 = getelementptr inbounds i8, ptr %0, i64 %291
  %293 = sub i64 0, %291
  %294 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %293
  %295 = and i64 %290, 1
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %299, label %._crit_edge.i.i.i

._crit_edge.i.i.i:                                ; preds = %285
  %.pre.i.i.i = sub i64 0, %6
  br label %297

297:                                              ; preds = %299, %._crit_edge.i.i.i
  %.pre-phi.i.i.i = phi i64 [ %.pre.i.i.i, %._crit_edge.i.i.i ], [ %300, %299 ]
  %.027.i.i.i = phi ptr [ %294, %._crit_edge.i.i.i ], [ %302, %299 ]
  %.025.i.i.i = phi ptr [ %292, %._crit_edge.i.i.i ], [ %301, %299 ]
  %.0.i.i.i = phi i64 [ %290, %._crit_edge.i.i.i ], [ %303, %299 ]
  %298 = lshr i64 %.0.i.i.i, 1
  br label %304

299:                                              ; preds = %285
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %292) #15
  call void %8(ptr nonnull align 1 %292, ptr nonnull align 1 %294) #15
  %300 = sub i64 0, %6
  %301 = getelementptr inbounds i8, ptr %292, i64 %300
  call void %8(ptr nonnull align 1 %294, ptr nonnull align 1 %10) #15
  %302 = getelementptr inbounds i8, ptr %294, i64 %6
  %303 = add i64 %290, -1
  br label %297

304:                                              ; preds = %306, %297
  %lsr.iv2760 = phi i64 [ %lsr.iv.next2761, %306 ], [ 0, %297 ]
  %lsr.iv2757 = phi i64 [ %lsr.iv.next2758, %306 ], [ 0, %297 ]
  %.1.i.i.i = phi i64 [ %298, %297 ], [ %307, %306 ]
  %uglygep2759 = getelementptr i8, ptr %.4.lcssa.i.i, i64 %lsr.iv2757
  %uglygep2762 = getelementptr i8, ptr %.027.i.i.i, i64 %lsr.iv2760
  %uglygep2763 = getelementptr i8, ptr %.025.i.i.i, i64 %lsr.iv2757
  %uglygep2764 = getelementptr i8, ptr %0, i64 %lsr.iv2760
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2764) #15
  call void %8(ptr align 1 %uglygep2764, ptr align 1 %uglygep2759) #15
  call void %8(ptr align 1 %uglygep2759, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2763) #15
  call void %8(ptr align 1 %uglygep2763, ptr align 1 %uglygep2762) #15
  call void %8(ptr align 1 %uglygep2762, ptr nonnull align 1 %10) #15
  %305 = icmp eq i64 %.1.i.i.i, 0
  br i1 %305, label %sort.quad_reversal.exit.i.i, label %306

306:                                              ; preds = %304
  %307 = add nsw i64 %.1.i.i.i, -1
  %lsr.iv.next2758 = add i64 %lsr.iv2757, %.pre-phi.i.i.i
  %lsr.iv.next2761 = add i64 %lsr.iv2760, %6
  br label %304

sort.quad_reversal.exit.i.i:                      ; preds = %304
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.i.i

308:                                              ; preds = %257
  %309 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %310 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %311 = ptrtoint ptr %309 to i64
  %312 = sub nuw i64 %310, %311
  %313 = shl nuw i64 %6, 1
  %314 = udiv i64 %312, %313
  %315 = mul nuw i64 %314, %6
  %316 = getelementptr inbounds i8, ptr %309, i64 %315
  %317 = sub i64 0, %315
  %318 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %317
  %319 = and i64 %314, 1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %323, label %._crit_edge.i293.i.i

._crit_edge.i293.i.i:                             ; preds = %308
  %.pre.i292.i.i = sub i64 0, %6
  br label %321

321:                                              ; preds = %323, %._crit_edge.i293.i.i
  %.pre-phi.i294.i.i = phi i64 [ %.pre.i292.i.i, %._crit_edge.i293.i.i ], [ %324, %323 ]
  %.027.i295.i.i = phi ptr [ %318, %._crit_edge.i293.i.i ], [ %326, %323 ]
  %.025.i296.i.i = phi ptr [ %316, %._crit_edge.i293.i.i ], [ %325, %323 ]
  %.0.i297.i.i = phi i64 [ %314, %._crit_edge.i293.i.i ], [ %327, %323 ]
  %322 = lshr i64 %.0.i297.i.i, 1
  br label %328

323:                                              ; preds = %308
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %316) #15
  call void %8(ptr nonnull align 1 %316, ptr nonnull align 1 %318) #15
  %324 = sub i64 0, %6
  %325 = getelementptr inbounds i8, ptr %316, i64 %324
  call void %8(ptr nonnull align 1 %318, ptr nonnull align 1 %10) #15
  %326 = getelementptr inbounds i8, ptr %318, i64 %6
  %327 = add i64 %314, -1
  br label %321

328:                                              ; preds = %330, %321
  %lsr.iv2768 = phi i64 [ %lsr.iv.next2769, %330 ], [ 0, %321 ]
  %lsr.iv2765 = phi i64 [ %lsr.iv.next2766, %330 ], [ 0, %321 ]
  %.1.i302.i.i = phi i64 [ %322, %321 ], [ %331, %330 ]
  %uglygep2767 = getelementptr i8, ptr %.4220.lcssa.i.i, i64 %lsr.iv2765
  %uglygep2770 = getelementptr i8, ptr %.027.i295.i.i, i64 %lsr.iv2768
  %uglygep2771 = getelementptr i8, ptr %.025.i296.i.i, i64 %lsr.iv2765
  %uglygep2772 = getelementptr i8, ptr %309, i64 %lsr.iv2768
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2772) #15
  call void %8(ptr align 1 %uglygep2772, ptr align 1 %uglygep2767) #15
  call void %8(ptr align 1 %uglygep2767, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2771) #15
  call void %8(ptr align 1 %uglygep2771, ptr align 1 %uglygep2770) #15
  call void %8(ptr align 1 %uglygep2770, ptr nonnull align 1 %10) #15
  %329 = icmp eq i64 %.1.i302.i.i, 0
  br i1 %329, label %sort.quad_reversal.exit303.i.i, label %330

330:                                              ; preds = %328
  %331 = add nsw i64 %.1.i302.i.i, -1
  %lsr.iv.next2766 = add i64 %lsr.iv2765, %.pre-phi.i294.i.i
  %lsr.iv.next2769 = add i64 %lsr.iv2768, %6
  br label %328

sort.quad_reversal.exit303.i.i:                   ; preds = %328
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %280

332:                                              ; preds = %257
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %333 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %334 = ptrtoint ptr %0 to i64
  %335 = sub nuw i64 %333, %334
  %336 = shl nuw i64 %6, 1
  %337 = udiv i64 %335, %336
  %338 = mul nuw i64 %337, %6
  %339 = getelementptr inbounds i8, ptr %0, i64 %338
  %340 = sub i64 0, %338
  %341 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %340
  %342 = and i64 %337, 1
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %346, label %._crit_edge.i305.i.i

._crit_edge.i305.i.i:                             ; preds = %332
  %.pre.i304.i.i = sub i64 0, %6
  br label %344

344:                                              ; preds = %346, %._crit_edge.i305.i.i
  %.pre-phi.i306.i.i = phi i64 [ %.pre.i304.i.i, %._crit_edge.i305.i.i ], [ %347, %346 ]
  %.027.i307.i.i = phi ptr [ %341, %._crit_edge.i305.i.i ], [ %349, %346 ]
  %.025.i308.i.i = phi ptr [ %339, %._crit_edge.i305.i.i ], [ %348, %346 ]
  %.0.i309.i.i = phi i64 [ %337, %._crit_edge.i305.i.i ], [ %350, %346 ]
  %345 = lshr i64 %.0.i309.i.i, 1
  br label %351

346:                                              ; preds = %332
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %339) #15
  call void %8(ptr nonnull align 1 %339, ptr nonnull align 1 %341) #15
  %347 = sub i64 0, %6
  %348 = getelementptr inbounds i8, ptr %339, i64 %347
  call void %8(ptr nonnull align 1 %341, ptr nonnull align 1 %10) #15
  %349 = getelementptr inbounds i8, ptr %341, i64 %6
  %350 = add i64 %337, -1
  br label %344

351:                                              ; preds = %353, %344
  %lsr.iv2776 = phi i64 [ %lsr.iv.next2777, %353 ], [ 0, %344 ]
  %lsr.iv2773 = phi i64 [ %lsr.iv.next2774, %353 ], [ 0, %344 ]
  %.1.i314.i.i = phi i64 [ %345, %344 ], [ %354, %353 ]
  %uglygep2775 = getelementptr i8, ptr %.4220.lcssa.i.i, i64 %lsr.iv2773
  %uglygep2778 = getelementptr i8, ptr %.027.i307.i.i, i64 %lsr.iv2776
  %uglygep2779 = getelementptr i8, ptr %.025.i308.i.i, i64 %lsr.iv2773
  %uglygep2780 = getelementptr i8, ptr %0, i64 %lsr.iv2776
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2780) #15
  call void %8(ptr align 1 %uglygep2780, ptr align 1 %uglygep2775) #15
  call void %8(ptr align 1 %uglygep2775, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2779) #15
  call void %8(ptr align 1 %uglygep2779, ptr align 1 %uglygep2778) #15
  call void %8(ptr align 1 %uglygep2778, ptr nonnull align 1 %10) #15
  %352 = icmp eq i64 %.1.i314.i.i, 0
  br i1 %352, label %sort.quad_reversal.exit315.i.i, label %353

353:                                              ; preds = %351
  %354 = add nsw i64 %.1.i314.i.i, -1
  %lsr.iv.next2774 = add i64 %lsr.iv2773, %.pre-phi.i306.i.i
  %lsr.iv.next2777 = add i64 %lsr.iv2776, %6
  br label %351

sort.quad_reversal.exit315.i.i:                   ; preds = %351
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.thread.i.i

355:                                              ; preds = %257
  %356 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %357 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %358 = ptrtoint ptr %356 to i64
  %359 = sub nuw i64 %357, %358
  %360 = shl nuw i64 %6, 1
  %361 = udiv i64 %359, %360
  %362 = mul nuw i64 %361, %6
  %363 = getelementptr inbounds i8, ptr %356, i64 %362
  %364 = sub i64 0, %362
  %365 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %364
  %366 = and i64 %361, 1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %370, label %._crit_edge.i317.i.i

._crit_edge.i317.i.i:                             ; preds = %355
  %.pre.i316.i.i = sub i64 0, %6
  br label %368

368:                                              ; preds = %370, %._crit_edge.i317.i.i
  %.pre-phi.i318.i.i = phi i64 [ %.pre.i316.i.i, %._crit_edge.i317.i.i ], [ %371, %370 ]
  %.027.i319.i.i = phi ptr [ %365, %._crit_edge.i317.i.i ], [ %373, %370 ]
  %.025.i320.i.i = phi ptr [ %363, %._crit_edge.i317.i.i ], [ %372, %370 ]
  %.0.i321.i.i = phi i64 [ %361, %._crit_edge.i317.i.i ], [ %374, %370 ]
  %369 = lshr i64 %.0.i321.i.i, 1
  br label %375

370:                                              ; preds = %355
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %363) #15
  call void %8(ptr nonnull align 1 %363, ptr nonnull align 1 %365) #15
  %371 = sub i64 0, %6
  %372 = getelementptr inbounds i8, ptr %363, i64 %371
  call void %8(ptr nonnull align 1 %365, ptr nonnull align 1 %10) #15
  %373 = getelementptr inbounds i8, ptr %365, i64 %6
  %374 = add i64 %361, -1
  br label %368

375:                                              ; preds = %377, %368
  %lsr.iv2784 = phi i64 [ %lsr.iv.next2785, %377 ], [ 0, %368 ]
  %lsr.iv2781 = phi i64 [ %lsr.iv.next2782, %377 ], [ 0, %368 ]
  %.1.i326.i.i = phi i64 [ %369, %368 ], [ %378, %377 ]
  %uglygep2783 = getelementptr i8, ptr %.4225.lcssa.i.i, i64 %lsr.iv2781
  %uglygep2786 = getelementptr i8, ptr %.027.i319.i.i, i64 %lsr.iv2784
  %uglygep2787 = getelementptr i8, ptr %.025.i320.i.i, i64 %lsr.iv2781
  %uglygep2788 = getelementptr i8, ptr %356, i64 %lsr.iv2784
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2788) #15
  call void %8(ptr align 1 %uglygep2788, ptr align 1 %uglygep2783) #15
  call void %8(ptr align 1 %uglygep2783, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2787) #15
  call void %8(ptr align 1 %uglygep2787, ptr align 1 %uglygep2786) #15
  call void %8(ptr align 1 %uglygep2786, ptr nonnull align 1 %10) #15
  %376 = icmp eq i64 %.1.i326.i.i, 0
  br i1 %376, label %sort.quad_reversal.exit327.i.i, label %377

377:                                              ; preds = %375
  %378 = add nsw i64 %.1.i326.i.i, -1
  %lsr.iv.next2782 = add i64 %lsr.iv2781, %.pre-phi.i318.i.i
  %lsr.iv.next2785 = add i64 %lsr.iv2784, %6
  br label %375

sort.quad_reversal.exit327.i.i:                   ; preds = %375
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %280

379:                                              ; preds = %257
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %380 = ptrtoint ptr %.4.lcssa.i.i to i64
  %381 = ptrtoint ptr %0 to i64
  %382 = sub nuw i64 %380, %381
  %383 = shl nuw i64 %6, 1
  %384 = udiv i64 %382, %383
  %385 = mul nuw i64 %384, %6
  %386 = getelementptr inbounds i8, ptr %0, i64 %385
  %387 = sub i64 0, %385
  %388 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %387
  %389 = and i64 %384, 1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %393, label %._crit_edge.i329.i.i

._crit_edge.i329.i.i:                             ; preds = %379
  %.pre.i328.i.i = sub i64 0, %6
  br label %391

391:                                              ; preds = %393, %._crit_edge.i329.i.i
  %.pre-phi.i330.i.i = phi i64 [ %.pre.i328.i.i, %._crit_edge.i329.i.i ], [ %394, %393 ]
  %.027.i331.i.i = phi ptr [ %388, %._crit_edge.i329.i.i ], [ %396, %393 ]
  %.025.i332.i.i = phi ptr [ %386, %._crit_edge.i329.i.i ], [ %395, %393 ]
  %.0.i333.i.i = phi i64 [ %384, %._crit_edge.i329.i.i ], [ %397, %393 ]
  %392 = lshr i64 %.0.i333.i.i, 1
  br label %398

393:                                              ; preds = %379
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %386) #15
  call void %8(ptr nonnull align 1 %386, ptr nonnull align 1 %388) #15
  %394 = sub i64 0, %6
  %395 = getelementptr inbounds i8, ptr %386, i64 %394
  call void %8(ptr nonnull align 1 %388, ptr nonnull align 1 %10) #15
  %396 = getelementptr inbounds i8, ptr %388, i64 %6
  %397 = add i64 %384, -1
  br label %391

398:                                              ; preds = %400, %391
  %lsr.iv2800 = phi i64 [ %lsr.iv.next2801, %400 ], [ 0, %391 ]
  %lsr.iv2797 = phi i64 [ %lsr.iv.next2798, %400 ], [ 0, %391 ]
  %.1.i338.i.i = phi i64 [ %392, %391 ], [ %401, %400 ]
  %uglygep2799 = getelementptr i8, ptr %.4.lcssa.i.i, i64 %lsr.iv2797
  %uglygep2802 = getelementptr i8, ptr %.027.i331.i.i, i64 %lsr.iv2800
  %uglygep2803 = getelementptr i8, ptr %.025.i332.i.i, i64 %lsr.iv2797
  %uglygep2804 = getelementptr i8, ptr %0, i64 %lsr.iv2800
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2804) #15
  call void %8(ptr align 1 %uglygep2804, ptr align 1 %uglygep2799) #15
  call void %8(ptr align 1 %uglygep2799, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2803) #15
  call void %8(ptr align 1 %uglygep2803, ptr align 1 %uglygep2802) #15
  call void %8(ptr align 1 %uglygep2802, ptr nonnull align 1 %10) #15
  %399 = icmp eq i64 %.1.i338.i.i, 0
  br i1 %399, label %sort.quad_reversal.exit339.i.i, label %400

400:                                              ; preds = %398
  %401 = add nsw i64 %.1.i338.i.i, -1
  %lsr.iv.next2798 = add i64 %lsr.iv2797, %.pre-phi.i330.i.i
  %lsr.iv.next2801 = add i64 %lsr.iv2800, %6
  br label %398

sort.quad_reversal.exit339.i.i:                   ; preds = %398
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  %402 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %403 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %404 = ptrtoint ptr %402 to i64
  %405 = sub nuw i64 %403, %404
  %406 = udiv i64 %405, %383
  %407 = mul nuw i64 %406, %6
  %408 = getelementptr inbounds i8, ptr %402, i64 %407
  %409 = sub i64 0, %407
  %410 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %409
  %411 = and i64 %406, 1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %415, label %._crit_edge.i341.i.i

._crit_edge.i341.i.i:                             ; preds = %sort.quad_reversal.exit339.i.i
  %.pre.i340.i.i = sub i64 0, %6
  br label %413

413:                                              ; preds = %415, %._crit_edge.i341.i.i
  %.pre-phi.i342.i.i = phi i64 [ %.pre.i340.i.i, %._crit_edge.i341.i.i ], [ %416, %415 ]
  %.027.i343.i.i = phi ptr [ %410, %._crit_edge.i341.i.i ], [ %418, %415 ]
  %.025.i344.i.i = phi ptr [ %408, %._crit_edge.i341.i.i ], [ %417, %415 ]
  %.0.i345.i.i = phi i64 [ %406, %._crit_edge.i341.i.i ], [ %419, %415 ]
  %414 = lshr i64 %.0.i345.i.i, 1
  br label %420

415:                                              ; preds = %sort.quad_reversal.exit339.i.i
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %408) #15
  call void %8(ptr nonnull align 1 %408, ptr nonnull align 1 %410) #15
  %416 = sub i64 0, %6
  %417 = getelementptr inbounds i8, ptr %408, i64 %416
  call void %8(ptr nonnull align 1 %410, ptr nonnull align 1 %10) #15
  %418 = getelementptr inbounds i8, ptr %410, i64 %6
  %419 = add i64 %406, -1
  br label %413

420:                                              ; preds = %422, %413
  %lsr.iv2792 = phi i64 [ %lsr.iv.next2793, %422 ], [ 0, %413 ]
  %lsr.iv2789 = phi i64 [ %lsr.iv.next2790, %422 ], [ 0, %413 ]
  %.1.i350.i.i = phi i64 [ %414, %413 ], [ %423, %422 ]
  %uglygep2791 = getelementptr i8, ptr %.4225.lcssa.i.i, i64 %lsr.iv2789
  %uglygep2794 = getelementptr i8, ptr %.027.i343.i.i, i64 %lsr.iv2792
  %uglygep2795 = getelementptr i8, ptr %.025.i344.i.i, i64 %lsr.iv2789
  %uglygep2796 = getelementptr i8, ptr %402, i64 %lsr.iv2792
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2796) #15
  call void %8(ptr align 1 %uglygep2796, ptr align 1 %uglygep2791) #15
  call void %8(ptr align 1 %uglygep2791, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2795) #15
  call void %8(ptr align 1 %uglygep2795, ptr align 1 %uglygep2794) #15
  call void %8(ptr align 1 %uglygep2794, ptr nonnull align 1 %10) #15
  %421 = icmp eq i64 %.1.i350.i.i, 0
  br i1 %421, label %.thread444.thread.thread.i.i, label %422

422:                                              ; preds = %420
  %423 = add nsw i64 %.1.i350.i.i, -1
  %lsr.iv.next2790 = add i64 %lsr.iv2789, %.pre-phi.i342.i.i
  %lsr.iv.next2793 = add i64 %lsr.iv2792, %6
  br label %420

.thread444.thread.thread.i.i:                     ; preds = %420
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %242

424:                                              ; preds = %257
  %425 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %426 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %427 = ptrtoint ptr %425 to i64
  %428 = sub nuw i64 %426, %427
  %429 = shl nuw i64 %6, 1
  %430 = udiv i64 %428, %429
  %431 = mul nuw i64 %430, %6
  %432 = getelementptr inbounds i8, ptr %425, i64 %431
  %433 = sub i64 0, %431
  %434 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %433
  %435 = and i64 %430, 1
  %436 = icmp eq i64 %435, 0
  br i1 %436, label %439, label %._crit_edge.i353.i.i

._crit_edge.i353.i.i:                             ; preds = %424
  %.pre.i352.i.i = sub i64 0, %6
  br label %437

437:                                              ; preds = %439, %._crit_edge.i353.i.i
  %.pre-phi.i354.i.i = phi i64 [ %.pre.i352.i.i, %._crit_edge.i353.i.i ], [ %440, %439 ]
  %.027.i355.i.i = phi ptr [ %434, %._crit_edge.i353.i.i ], [ %442, %439 ]
  %.025.i356.i.i = phi ptr [ %432, %._crit_edge.i353.i.i ], [ %441, %439 ]
  %.0.i357.i.i = phi i64 [ %430, %._crit_edge.i353.i.i ], [ %443, %439 ]
  %438 = lshr i64 %.0.i357.i.i, 1
  br label %444

439:                                              ; preds = %424
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %432) #15
  call void %8(ptr nonnull align 1 %432, ptr nonnull align 1 %434) #15
  %440 = sub i64 0, %6
  %441 = getelementptr inbounds i8, ptr %432, i64 %440
  call void %8(ptr nonnull align 1 %434, ptr nonnull align 1 %10) #15
  %442 = getelementptr inbounds i8, ptr %434, i64 %6
  %443 = add i64 %430, -1
  br label %437

444:                                              ; preds = %446, %437
  %lsr.iv2808 = phi i64 [ %lsr.iv.next2809, %446 ], [ 0, %437 ]
  %lsr.iv2805 = phi i64 [ %lsr.iv.next2806, %446 ], [ 0, %437 ]
  %.1.i362.i.i = phi i64 [ %438, %437 ], [ %447, %446 ]
  %uglygep2807 = getelementptr i8, ptr %.4225.lcssa.i.i, i64 %lsr.iv2805
  %uglygep2810 = getelementptr i8, ptr %.027.i355.i.i, i64 %lsr.iv2808
  %uglygep2811 = getelementptr i8, ptr %.025.i356.i.i, i64 %lsr.iv2805
  %uglygep2812 = getelementptr i8, ptr %425, i64 %lsr.iv2808
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2812) #15
  call void %8(ptr align 1 %uglygep2812, ptr align 1 %uglygep2807) #15
  call void %8(ptr align 1 %uglygep2807, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2811) #15
  call void %8(ptr align 1 %uglygep2811, ptr align 1 %uglygep2810) #15
  call void %8(ptr align 1 %uglygep2810, ptr nonnull align 1 %10) #15
  %445 = icmp eq i64 %.1.i362.i.i, 0
  br i1 %445, label %sort.quad_reversal.exit363.i.i, label %446

446:                                              ; preds = %444
  %447 = add nsw i64 %.1.i362.i.i, -1
  %lsr.iv.next2806 = add i64 %lsr.iv2805, %.pre-phi.i354.i.i
  %lsr.iv.next2809 = add i64 %lsr.iv2808, %6
  br label %444

sort.quad_reversal.exit363.i.i:                   ; preds = %444
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %280

448:                                              ; preds = %257
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %449 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %450 = ptrtoint ptr %0 to i64
  %451 = sub nuw i64 %449, %450
  %452 = shl nuw i64 %6, 1
  %453 = udiv i64 %451, %452
  %454 = mul nuw i64 %453, %6
  %455 = getelementptr inbounds i8, ptr %0, i64 %454
  %456 = sub i64 0, %454
  %457 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %456
  %458 = and i64 %453, 1
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %462, label %._crit_edge.i365.i.i

._crit_edge.i365.i.i:                             ; preds = %448
  %.pre.i364.i.i = sub i64 0, %6
  br label %460

460:                                              ; preds = %462, %._crit_edge.i365.i.i
  %.pre-phi.i366.i.i = phi i64 [ %.pre.i364.i.i, %._crit_edge.i365.i.i ], [ %463, %462 ]
  %.027.i367.i.i = phi ptr [ %457, %._crit_edge.i365.i.i ], [ %465, %462 ]
  %.025.i368.i.i = phi ptr [ %455, %._crit_edge.i365.i.i ], [ %464, %462 ]
  %.0.i369.i.i = phi i64 [ %453, %._crit_edge.i365.i.i ], [ %466, %462 ]
  %461 = lshr i64 %.0.i369.i.i, 1
  br label %467

462:                                              ; preds = %448
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %455) #15
  call void %8(ptr nonnull align 1 %455, ptr nonnull align 1 %457) #15
  %463 = sub i64 0, %6
  %464 = getelementptr inbounds i8, ptr %455, i64 %463
  call void %8(ptr nonnull align 1 %457, ptr nonnull align 1 %10) #15
  %465 = getelementptr inbounds i8, ptr %457, i64 %6
  %466 = add i64 %453, -1
  br label %460

467:                                              ; preds = %469, %460
  %lsr.iv2816 = phi i64 [ %lsr.iv.next2817, %469 ], [ 0, %460 ]
  %lsr.iv2813 = phi i64 [ %lsr.iv.next2814, %469 ], [ 0, %460 ]
  %.1.i374.i.i = phi i64 [ %461, %460 ], [ %470, %469 ]
  %uglygep2815 = getelementptr i8, ptr %.4225.lcssa.i.i, i64 %lsr.iv2813
  %uglygep2818 = getelementptr i8, ptr %.027.i367.i.i, i64 %lsr.iv2816
  %uglygep2819 = getelementptr i8, ptr %.025.i368.i.i, i64 %lsr.iv2813
  %uglygep2820 = getelementptr i8, ptr %0, i64 %lsr.iv2816
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2820) #15
  call void %8(ptr align 1 %uglygep2820, ptr align 1 %uglygep2815) #15
  call void %8(ptr align 1 %uglygep2815, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2819) #15
  call void %8(ptr align 1 %uglygep2819, ptr align 1 %uglygep2818) #15
  call void %8(ptr align 1 %uglygep2818, ptr nonnull align 1 %10) #15
  %468 = icmp eq i64 %.1.i374.i.i, 0
  br i1 %468, label %sort.quad_reversal.exit375.i.i, label %469

469:                                              ; preds = %467
  %470 = add nsw i64 %.1.i374.i.i, -1
  %lsr.iv.next2814 = add i64 %lsr.iv2813, %.pre-phi.i366.i.i
  %lsr.iv.next2817 = add i64 %lsr.iv2816, %6
  br label %467

sort.quad_reversal.exit375.i.i:                   ; preds = %467
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %sort.flux_analyze__anon_14345.exit.i

471:                                              ; preds = %sort.quad_reversal.exit387.i.i, %280
  %.5235.i.i = phi i64 [ 0, %sort.quad_reversal.exit387.i.i ], [ %.2232.lcssa.i.i, %280 ]
  %472 = icmp eq i64 %227, 1
  %473 = icmp ne i64 %.5241.i.i, 0
  %474 = and i1 %472, %473
  br i1 %474, label %501, label %.thread444.i.i

475:                                              ; preds = %280
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %476 = ptrtoint ptr %.3.lcssa.i.i to i64
  %477 = ptrtoint ptr %0 to i64
  %478 = sub nuw i64 %476, %477
  %479 = shl nuw i64 %6, 1
  %480 = udiv i64 %478, %479
  %481 = mul nuw i64 %480, %6
  %482 = getelementptr inbounds i8, ptr %0, i64 %481
  %483 = sub i64 0, %481
  %484 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %483
  %485 = and i64 %480, 1
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %489, label %._crit_edge.i377.i.i

._crit_edge.i377.i.i:                             ; preds = %475
  %.pre.i376.i.i = sub i64 0, %6
  br label %487

487:                                              ; preds = %489, %._crit_edge.i377.i.i
  %.pre-phi.i378.i.i = phi i64 [ %.pre.i376.i.i, %._crit_edge.i377.i.i ], [ %490, %489 ]
  %.027.i379.i.i = phi ptr [ %484, %._crit_edge.i377.i.i ], [ %492, %489 ]
  %.025.i380.i.i = phi ptr [ %482, %._crit_edge.i377.i.i ], [ %491, %489 ]
  %.0.i381.i.i = phi i64 [ %480, %._crit_edge.i377.i.i ], [ %493, %489 ]
  %488 = lshr i64 %.0.i381.i.i, 1
  br label %494

489:                                              ; preds = %475
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %482) #15
  call void %8(ptr nonnull align 1 %482, ptr nonnull align 1 %484) #15
  %490 = sub i64 0, %6
  %491 = getelementptr inbounds i8, ptr %482, i64 %490
  call void %8(ptr nonnull align 1 %484, ptr nonnull align 1 %10) #15
  %492 = getelementptr inbounds i8, ptr %484, i64 %6
  %493 = add i64 %480, -1
  br label %487

494:                                              ; preds = %496, %487
  %lsr.iv2752 = phi i64 [ %lsr.iv.next2753, %496 ], [ 0, %487 ]
  %lsr.iv2749 = phi i64 [ %lsr.iv.next2750, %496 ], [ 0, %487 ]
  %.1.i386.i.i = phi i64 [ %488, %487 ], [ %497, %496 ]
  %uglygep2751 = getelementptr i8, ptr %.3.lcssa.i.i, i64 %lsr.iv2749
  %uglygep2754 = getelementptr i8, ptr %.027.i379.i.i, i64 %lsr.iv2752
  %uglygep2755 = getelementptr i8, ptr %.025.i380.i.i, i64 %lsr.iv2749
  %uglygep2756 = getelementptr i8, ptr %0, i64 %lsr.iv2752
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2756) #15
  call void %8(ptr align 1 %uglygep2756, ptr align 1 %uglygep2751) #15
  call void %8(ptr align 1 %uglygep2751, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2755) #15
  call void %8(ptr align 1 %uglygep2755, ptr align 1 %uglygep2754) #15
  call void %8(ptr align 1 %uglygep2754, ptr nonnull align 1 %10) #15
  %495 = icmp eq i64 %.1.i386.i.i, 0
  br i1 %495, label %sort.quad_reversal.exit387.i.i, label %496

496:                                              ; preds = %494
  %497 = add nsw i64 %.1.i386.i.i, -1
  %lsr.iv.next2750 = add i64 %lsr.iv2749, %.pre-phi.i378.i.i
  %lsr.iv.next2753 = add i64 %lsr.iv2752, %6
  br label %494

sort.quad_reversal.exit387.i.i:                   ; preds = %494
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %471

.thread444.i.i:                                   ; preds = %sort.quad_reversal.exit399.i.i, %471, %sort.quad_reversal.exit.i.i
  %.5235451.i.i = phi i64 [ %.5235.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5235.i.i, %471 ], [ 0, %sort.quad_reversal.exit.i.i ]
  %.5255441450.i.i = phi i64 [ %.5255.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5255.i.i, %471 ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit.i.i ]
  %.5248442449.i.i = phi i64 [ %.5248.i.i, %sort.quad_reversal.exit399.i.i ], [ %.5248.i.i, %471 ], [ %.3246.lcssa.i.i, %sort.quad_reversal.exit.i.i ]
  %.6242.i.i = phi i64 [ 0, %sort.quad_reversal.exit399.i.i ], [ %.5241.i.i, %471 ], [ 0, %sort.quad_reversal.exit.i.i ]
  %498 = icmp eq i64 %229, 1
  %499 = icmp ne i64 %.5248442449.i.i, 0
  %500 = and i1 %498, %499
  br i1 %500, label %527, label %.thread444.thread.i.i

501:                                              ; preds = %471
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %502 = ptrtoint ptr %.4.lcssa.i.i to i64
  %503 = ptrtoint ptr %262 to i64
  %504 = sub nuw i64 %502, %503
  %505 = shl nuw i64 %6, 1
  %506 = udiv i64 %504, %505
  %507 = mul nuw i64 %506, %6
  %508 = getelementptr inbounds i8, ptr %262, i64 %507
  %509 = sub i64 0, %507
  %510 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %509
  %511 = and i64 %506, 1
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %515, label %._crit_edge.i389.i.i

._crit_edge.i389.i.i:                             ; preds = %501
  %.pre.i388.i.i = sub i64 0, %6
  br label %513

513:                                              ; preds = %515, %._crit_edge.i389.i.i
  %.pre-phi.i390.i.i = phi i64 [ %.pre.i388.i.i, %._crit_edge.i389.i.i ], [ %516, %515 ]
  %.027.i391.i.i = phi ptr [ %510, %._crit_edge.i389.i.i ], [ %518, %515 ]
  %.025.i392.i.i = phi ptr [ %508, %._crit_edge.i389.i.i ], [ %517, %515 ]
  %.0.i393.i.i = phi i64 [ %506, %._crit_edge.i389.i.i ], [ %519, %515 ]
  %514 = lshr i64 %.0.i393.i.i, 1
  br label %520

515:                                              ; preds = %501
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %508) #15
  call void %8(ptr nonnull align 1 %508, ptr nonnull align 1 %510) #15
  %516 = sub i64 0, %6
  %517 = getelementptr inbounds i8, ptr %508, i64 %516
  call void %8(ptr nonnull align 1 %510, ptr nonnull align 1 %10) #15
  %518 = getelementptr inbounds i8, ptr %510, i64 %6
  %519 = add i64 %506, -1
  br label %513

520:                                              ; preds = %522, %513
  %lsr.iv2744 = phi i64 [ %lsr.iv.next2745, %522 ], [ 0, %513 ]
  %lsr.iv2741 = phi i64 [ %lsr.iv.next2742, %522 ], [ 0, %513 ]
  %.1.i398.i.i = phi i64 [ %514, %513 ], [ %523, %522 ]
  %uglygep2743 = getelementptr i8, ptr %.4.lcssa.i.i, i64 %lsr.iv2741
  %uglygep2746 = getelementptr i8, ptr %.027.i391.i.i, i64 %lsr.iv2744
  %uglygep2747 = getelementptr i8, ptr %.025.i392.i.i, i64 %lsr.iv2741
  %uglygep2748 = getelementptr i8, ptr %262, i64 %lsr.iv2744
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2748) #15
  call void %8(ptr align 1 %uglygep2748, ptr align 1 %uglygep2743) #15
  call void %8(ptr align 1 %uglygep2743, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2747) #15
  call void %8(ptr align 1 %uglygep2747, ptr align 1 %uglygep2746) #15
  call void %8(ptr align 1 %uglygep2746, ptr nonnull align 1 %10) #15
  %521 = icmp eq i64 %.1.i398.i.i, 0
  br i1 %521, label %sort.quad_reversal.exit399.i.i, label %522

522:                                              ; preds = %520
  %523 = add nsw i64 %.1.i398.i.i, -1
  %lsr.iv.next2742 = add i64 %lsr.iv2741, %.pre-phi.i390.i.i
  %lsr.iv.next2745 = add i64 %lsr.iv2744, %6
  br label %520

sort.quad_reversal.exit399.i.i:                   ; preds = %520
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.i.i

.thread444.thread.i.i:                            ; preds = %sort.quad_reversal.exit411.i.i, %.thread444.i.i, %sort.quad_reversal.exit315.i.i
  %.6242458.i.i = phi i64 [ %.6242.i.i, %sort.quad_reversal.exit411.i.i ], [ %.6242.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %.5255441450457.i.i = phi i64 [ %.5255441450.i.i, %sort.quad_reversal.exit411.i.i ], [ %.5255441450.i.i, %.thread444.i.i ], [ %.3253.lcssa.i.i, %sort.quad_reversal.exit315.i.i ]
  %.5235451456.i.i = phi i64 [ %.5235451.i.i, %sort.quad_reversal.exit411.i.i ], [ %.5235451.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %.6249.i.i = phi i64 [ 0, %sort.quad_reversal.exit411.i.i ], [ %.5248442449.i.i, %.thread444.i.i ], [ 0, %sort.quad_reversal.exit315.i.i ]
  %524 = icmp eq i64 %231, 1
  %525 = icmp ne i64 %.5255441450457.i.i, 0
  %526 = and i1 %524, %525
  br i1 %526, label %550, label %242

527:                                              ; preds = %.thread444.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %528 = ptrtoint ptr %.4220.lcssa.i.i to i64
  %529 = ptrtoint ptr %267 to i64
  %530 = sub nuw i64 %528, %529
  %531 = shl nuw i64 %6, 1
  %532 = udiv i64 %530, %531
  %533 = mul nuw i64 %532, %6
  %534 = getelementptr inbounds i8, ptr %267, i64 %533
  %535 = sub i64 0, %533
  %536 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %535
  %537 = and i64 %532, 1
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %541, label %._crit_edge.i401.i.i

._crit_edge.i401.i.i:                             ; preds = %527
  %.pre.i400.i.i = sub i64 0, %6
  br label %539

539:                                              ; preds = %541, %._crit_edge.i401.i.i
  %.pre-phi.i402.i.i = phi i64 [ %.pre.i400.i.i, %._crit_edge.i401.i.i ], [ %542, %541 ]
  %.027.i403.i.i = phi ptr [ %536, %._crit_edge.i401.i.i ], [ %544, %541 ]
  %.025.i404.i.i = phi ptr [ %534, %._crit_edge.i401.i.i ], [ %543, %541 ]
  %.0.i405.i.i = phi i64 [ %532, %._crit_edge.i401.i.i ], [ %545, %541 ]
  %540 = lshr i64 %.0.i405.i.i, 1
  br label %546

541:                                              ; preds = %527
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %534) #15
  call void %8(ptr nonnull align 1 %534, ptr nonnull align 1 %536) #15
  %542 = sub i64 0, %6
  %543 = getelementptr inbounds i8, ptr %534, i64 %542
  call void %8(ptr nonnull align 1 %536, ptr nonnull align 1 %10) #15
  %544 = getelementptr inbounds i8, ptr %536, i64 %6
  %545 = add i64 %532, -1
  br label %539

546:                                              ; preds = %548, %539
  %lsr.iv2736 = phi i64 [ %lsr.iv.next2737, %548 ], [ 0, %539 ]
  %lsr.iv2733 = phi i64 [ %lsr.iv.next2734, %548 ], [ 0, %539 ]
  %.1.i410.i.i = phi i64 [ %540, %539 ], [ %549, %548 ]
  %uglygep2735 = getelementptr i8, ptr %.4220.lcssa.i.i, i64 %lsr.iv2733
  %uglygep2738 = getelementptr i8, ptr %.027.i403.i.i, i64 %lsr.iv2736
  %uglygep2739 = getelementptr i8, ptr %.025.i404.i.i, i64 %lsr.iv2733
  %uglygep2740 = getelementptr i8, ptr %267, i64 %lsr.iv2736
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2740) #15
  call void %8(ptr align 1 %uglygep2740, ptr align 1 %uglygep2735) #15
  call void %8(ptr align 1 %uglygep2735, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2739) #15
  call void %8(ptr align 1 %uglygep2739, ptr align 1 %uglygep2738) #15
  call void %8(ptr align 1 %uglygep2738, ptr nonnull align 1 %10) #15
  %547 = icmp eq i64 %.1.i410.i.i, 0
  br i1 %547, label %sort.quad_reversal.exit411.i.i, label %548

548:                                              ; preds = %546
  %549 = add nsw i64 %.1.i410.i.i, -1
  %lsr.iv.next2734 = add i64 %lsr.iv2733, %.pre-phi.i402.i.i
  %lsr.iv.next2737 = add i64 %lsr.iv2736, %6
  br label %546

sort.quad_reversal.exit411.i.i:                   ; preds = %546
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread444.thread.i.i

550:                                              ; preds = %.thread444.thread.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %551 = ptrtoint ptr %.4225.lcssa.i.i to i64
  %552 = ptrtoint ptr %271 to i64
  %553 = sub nuw i64 %551, %552
  %554 = shl nuw i64 %6, 1
  %555 = udiv i64 %553, %554
  %556 = mul nuw i64 %555, %6
  %557 = getelementptr inbounds i8, ptr %271, i64 %556
  %558 = sub i64 0, %556
  %559 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i, i64 %558
  %560 = and i64 %555, 1
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %564, label %._crit_edge.i413.i.i

._crit_edge.i413.i.i:                             ; preds = %550
  %.pre.i412.i.i = sub i64 0, %6
  br label %562

562:                                              ; preds = %564, %._crit_edge.i413.i.i
  %.pre-phi.i414.i.i = phi i64 [ %.pre.i412.i.i, %._crit_edge.i413.i.i ], [ %565, %564 ]
  %.027.i415.i.i = phi ptr [ %559, %._crit_edge.i413.i.i ], [ %567, %564 ]
  %.025.i416.i.i = phi ptr [ %557, %._crit_edge.i413.i.i ], [ %566, %564 ]
  %.0.i417.i.i = phi i64 [ %555, %._crit_edge.i413.i.i ], [ %568, %564 ]
  %563 = lshr i64 %.0.i417.i.i, 1
  br label %569

564:                                              ; preds = %550
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %557) #15
  call void %8(ptr nonnull align 1 %557, ptr nonnull align 1 %559) #15
  %565 = sub i64 0, %6
  %566 = getelementptr inbounds i8, ptr %557, i64 %565
  call void %8(ptr nonnull align 1 %559, ptr nonnull align 1 %10) #15
  %567 = getelementptr inbounds i8, ptr %559, i64 %6
  %568 = add i64 %555, -1
  br label %562

569:                                              ; preds = %571, %562
  %lsr.iv2728 = phi i64 [ %lsr.iv.next2729, %571 ], [ 0, %562 ]
  %lsr.iv2725 = phi i64 [ %lsr.iv.next2726, %571 ], [ 0, %562 ]
  %.1.i422.i.i = phi i64 [ %563, %562 ], [ %572, %571 ]
  %uglygep2727 = getelementptr i8, ptr %.4225.lcssa.i.i, i64 %lsr.iv2725
  %uglygep2730 = getelementptr i8, ptr %.027.i415.i.i, i64 %lsr.iv2728
  %uglygep2731 = getelementptr i8, ptr %.025.i416.i.i, i64 %lsr.iv2725
  %uglygep2732 = getelementptr i8, ptr %271, i64 %lsr.iv2728
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2732) #15
  call void %8(ptr align 1 %uglygep2732, ptr align 1 %uglygep2727) #15
  call void %8(ptr align 1 %uglygep2727, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2731) #15
  call void %8(ptr align 1 %uglygep2731, ptr align 1 %uglygep2730) #15
  call void %8(ptr align 1 %uglygep2730, ptr nonnull align 1 %10) #15
  %570 = icmp eq i64 %.1.i422.i.i, 0
  br i1 %570, label %sort.quad_reversal.exit423.i.i, label %571

571:                                              ; preds = %569
  %572 = add nsw i64 %.1.i422.i.i, -1
  %lsr.iv.next2726 = add i64 %lsr.iv2725, %.pre-phi.i414.i.i
  %lsr.iv.next2729 = add i64 %lsr.iv2728, %6
  br label %569

sort.quad_reversal.exit423.i.i:                   ; preds = %569
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %242

573:                                              ; preds = %581, %242
  %.0267.i.i = phi i4 [ 1, %581 ], [ %255, %242 ]
  %.0266.i.i = phi i4 [ 1, %581 ], [ %252, %242 ]
  %.0265.i.i = phi i4 [ 1, %581 ], [ %249, %242 ]
  %.0264.i.i = phi i4 [ 1, %581 ], [ %246, %242 ]
  %574 = shl nuw nsw i4 %.0265.i.i, 1
  %575 = shl nuw nsw i4 %.0266.i.i, 2
  %576 = or i4 %574, %575
  %577 = shl nuw i4 %.0267.i.i, 3
  %578 = or i4 %576, %577
  %579 = or i4 %578, %.0264.i.i
  %580 = zext i4 %579 to i32
  switch i32 %580, label %586 [
    i32 0, label %587
    i32 1, label %589
    i32 2, label %601
    i32 3, label %614
    i32 4, label %633
    i32 8, label %646
    i32 9, label %656
    i32 12, label %676
    i32 5, label %694
    i32 6, label %694
    i32 7, label %694
    i32 10, label %694
    i32 11, label %694
    i32 13, label %694
    i32 14, label %694
    i32 15, label %694
  ]

581:                                              ; preds = %242
  br label %573

sort.quadsort_swap__anon_14855.exit428.i.i:       ; preds = %742, %740, %739, %732, %731, %692, %690, %689, %sort.quadsort_swap__anon_14855.exit431.i.i, %674, %672, %671, %sort.quadsort_swap__anon_14855.exit429.i.i, %654, %652, %651, %646, %sort.quadsort_swap__anon_14855.exit427.i.i, %sort.quadsort_swap__anon_14855.exit426.i.i, %sort.quadsort_swap__anon_14855.exit424.i.i, %sort.quadsort_swap__anon_14855.exit.i.i
  %582 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #15
  %583 = call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i, ptr align 1 %582) #15
  %.not271.i.i = icmp eq i8 %583, 1
  %584 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #15
  %585 = call i8 %2(ptr align 1 %3, ptr align 1 %.4220.lcssa.i.i, ptr align 1 %584) #15
  br i1 %.not271.i.i, label %747, label %745

586:                                              ; preds = %573
  unreachable

587:                                              ; preds = %573
  %588 = getelementptr inbounds i8, ptr %85, i64 %84
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %588, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.flux_analyze__anon_14345.exit.i

589:                                              ; preds = %573
  %.not288.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not288.i.i, label %sort.quadsort_swap__anon_14855.exit.i.i, label %594

sort.quadsort_swap__anon_14855.exit.i.i:          ; preds = %599, %597, %596, %589
  %590 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %591 = add nuw i64 %99, %100
  %592 = mul nuw i64 %591, %6
  %593 = getelementptr inbounds i8, ptr %85, i64 %592
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %590, ptr nonnull align 1 %85, ptr nonnull align 1 %590, ptr nonnull align 1 %593, i64 %591, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

594:                                              ; preds = %589
  %595 = icmp ult i64 %1, 384
  br i1 %595, label %596, label %597

596:                                              ; preds = %594
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit.i.i

597:                                              ; preds = %594
  %598 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %598, label %599, label %sort.quadsort_swap__anon_14855.exit.i.i

599:                                              ; preds = %597
  %600 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, i64 %600, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit.i.i

601:                                              ; preds = %573
  %602 = getelementptr inbounds i8, ptr %85, i64 %103
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %602, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  %.not287.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not287.i.i, label %sort.quadsort_swap__anon_14855.exit424.i.i, label %606

sort.quadsort_swap__anon_14855.exit424.i.i:       ; preds = %612, %610, %609, %601
  %603 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %604 = mul nuw i64 %100, %6
  %605 = getelementptr inbounds i8, ptr %85, i64 %604
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %603, ptr nonnull align 1 %85, ptr nonnull align 1 %603, ptr nonnull align 1 %605, i64 %100, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

606:                                              ; preds = %601
  %607 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %608 = icmp ult i64 %99, 96
  br i1 %608, label %609, label %610

609:                                              ; preds = %606
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %607, i64 %99, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit424.i.i

610:                                              ; preds = %606
  %611 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %607, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %611, label %612, label %sort.quadsort_swap__anon_14855.exit424.i.i

612:                                              ; preds = %610
  %613 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %607, i64 %99, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %607, i64 %99, ptr nonnull align 1 %85, i64 %1, i64 %613, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit424.i.i

614:                                              ; preds = %573
  %.not285.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not285.i.i, label %sort.quadsort_swap__anon_14855.exit425.i.i, label %615

sort.quadsort_swap__anon_14855.exit425.i.i:       ; preds = %620, %618, %617, %614
  %.not286.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not286.i.i, label %sort.quadsort_swap__anon_14855.exit426.i.i, label %625

615:                                              ; preds = %614
  %616 = icmp ult i64 %1, 384
  br i1 %616, label %617, label %618

617:                                              ; preds = %615
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit425.i.i

618:                                              ; preds = %615
  %619 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %619, label %620, label %sort.quadsort_swap__anon_14855.exit425.i.i

620:                                              ; preds = %618
  %621 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, i64 %621, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit425.i.i

sort.quadsort_swap__anon_14855.exit426.i.i:       ; preds = %631, %629, %628, %sort.quadsort_swap__anon_14855.exit425.i.i
  %622 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %623 = mul nuw i64 %100, %6
  %624 = getelementptr inbounds i8, ptr %85, i64 %623
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %622, ptr nonnull align 1 %85, ptr nonnull align 1 %622, ptr nonnull align 1 %624, i64 %100, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

625:                                              ; preds = %sort.quadsort_swap__anon_14855.exit425.i.i
  %626 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %627 = icmp ult i64 %99, 96
  br i1 %627, label %628, label %629

628:                                              ; preds = %625
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %626, i64 %99, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit426.i.i

629:                                              ; preds = %625
  %630 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %626, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %630, label %631, label %sort.quadsort_swap__anon_14855.exit426.i.i

631:                                              ; preds = %629
  %632 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %626, i64 %99, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %626, i64 %99, ptr nonnull align 1 %85, i64 %1, i64 %632, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit426.i.i

633:                                              ; preds = %573
  %634 = getelementptr inbounds i8, ptr %85, i64 %105
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %634, i64 %97, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  %.not284.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not284.i.i, label %sort.quadsort_swap__anon_14855.exit427.i.i, label %638

sort.quadsort_swap__anon_14855.exit427.i.i:       ; preds = %644, %642, %641, %633
  %635 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %636 = mul nuw i64 %102, %6
  %637 = getelementptr inbounds i8, ptr %85, i64 %636
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %635, ptr nonnull align 1 %85, ptr nonnull align 1 %635, ptr nonnull align 1 %637, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

638:                                              ; preds = %633
  %639 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %640 = icmp ult i64 %100, 192
  br i1 %640, label %641, label %642

641:                                              ; preds = %638
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %639, i64 %101, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit427.i.i

642:                                              ; preds = %638
  %643 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %639, i64 %101, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %643, label %644, label %sort.quadsort_swap__anon_14855.exit427.i.i

644:                                              ; preds = %642
  %645 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %639, i64 %101, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %639, i64 %101, ptr nonnull align 1 %85, i64 %1, i64 %645, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit427.i.i

646:                                              ; preds = %573
  %647 = getelementptr inbounds i8, ptr %85, i64 %108
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %647, i64 %107, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  %.not283.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not283.i.i, label %sort.quadsort_swap__anon_14855.exit428.i.i, label %648

648:                                              ; preds = %646
  %649 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %650 = icmp ult i64 %102, 96
  br i1 %650, label %651, label %652

651:                                              ; preds = %648
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %649, i64 %102, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

652:                                              ; preds = %648
  %653 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %649, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %653, label %654, label %sort.quadsort_swap__anon_14855.exit428.i.i

654:                                              ; preds = %652
  %655 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %649, i64 %102, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %649, i64 %102, ptr nonnull align 1 %85, i64 %1, i64 %655, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

656:                                              ; preds = %573
  %.not281.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not281.i.i, label %sort.quadsort_swap__anon_14855.exit429.i.i, label %661

sort.quadsort_swap__anon_14855.exit429.i.i:       ; preds = %666, %664, %663, %656
  %657 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %658 = add nuw i64 %101, %99
  %659 = mul nuw i64 %658, %6
  %660 = getelementptr inbounds i8, ptr %85, i64 %659
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %657, ptr nonnull align 1 %85, ptr nonnull align 1 %657, ptr nonnull align 1 %660, i64 %658, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  %.not282.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not282.i.i, label %sort.quadsort_swap__anon_14855.exit428.i.i, label %668

661:                                              ; preds = %656
  %662 = icmp ult i64 %1, 384
  br i1 %662, label %663, label %664

663:                                              ; preds = %661
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit429.i.i

664:                                              ; preds = %661
  %665 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %665, label %666, label %sort.quadsort_swap__anon_14855.exit429.i.i

666:                                              ; preds = %664
  %667 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, i64 %667, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit429.i.i

668:                                              ; preds = %sort.quadsort_swap__anon_14855.exit429.i.i
  %669 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %670 = icmp ult i64 %102, 96
  br i1 %670, label %671, label %672

671:                                              ; preds = %668
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %669, i64 %102, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

672:                                              ; preds = %668
  %673 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %669, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %673, label %674, label %sort.quadsort_swap__anon_14855.exit428.i.i

674:                                              ; preds = %672
  %675 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %669, i64 %102, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %669, i64 %102, ptr nonnull align 1 %85, i64 %1, i64 %675, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

676:                                              ; preds = %573
  %677 = getelementptr inbounds i8, ptr %85, i64 %105
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %677, i64 %97, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  %.not279.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not279.i.i, label %sort.quadsort_swap__anon_14855.exit431.i.i, label %678

sort.quadsort_swap__anon_14855.exit431.i.i:       ; preds = %684, %682, %681, %676
  %.not280.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not280.i.i, label %sort.quadsort_swap__anon_14855.exit428.i.i, label %686

678:                                              ; preds = %676
  %679 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %680 = icmp ult i64 %100, 192
  br i1 %680, label %681, label %682

681:                                              ; preds = %678
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %679, i64 %101, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit431.i.i

682:                                              ; preds = %678
  %683 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %679, i64 %101, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %683, label %684, label %sort.quadsort_swap__anon_14855.exit431.i.i

684:                                              ; preds = %682
  %685 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %679, i64 %101, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %679, i64 %101, ptr nonnull align 1 %85, i64 %1, i64 %685, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit431.i.i

686:                                              ; preds = %sort.quadsort_swap__anon_14855.exit431.i.i
  %687 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %688 = icmp ult i64 %102, 96
  br i1 %688, label %689, label %690

689:                                              ; preds = %686
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %687, i64 %102, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

690:                                              ; preds = %686
  %691 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %687, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %691, label %692, label %sort.quadsort_swap__anon_14855.exit428.i.i

692:                                              ; preds = %690
  %693 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %687, i64 %102, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %687, i64 %102, ptr nonnull align 1 %85, i64 %1, i64 %693, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

694:                                              ; preds = %573, %573, %573, %573, %573, %573, %573, %573
  %.not.i.i = icmp eq i4 %.0264.i.i, 0
  br i1 %.not.i.i, label %696, label %695

sort.quadsort_swap__anon_14855.exit433.i.i:       ; preds = %703, %701, %700, %696, %695
  %.not268.i.i = icmp eq i4 %.0265.i.i, 0
  br i1 %.not268.i.i, label %706, label %705

695:                                              ; preds = %694
  %.not278.i.i = icmp eq i64 %.3233.i.i, 0
  br i1 %.not278.i.i, label %sort.quadsort_swap__anon_14855.exit433.i.i, label %698

696:                                              ; preds = %694
  %697 = getelementptr inbounds i8, ptr %85, i64 %103
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %697, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit433.i.i

698:                                              ; preds = %695
  %699 = icmp ult i64 %1, 384
  br i1 %699, label %700, label %701

700:                                              ; preds = %698
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit433.i.i

701:                                              ; preds = %698
  %702 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %98, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %702, label %703, label %sort.quadsort_swap__anon_14855.exit433.i.i

703:                                              ; preds = %701
  %704 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %98, ptr nonnull align 1 %85, i64 %1, i64 %704, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit433.i.i

sort.quadsort_swap__anon_14855.exit434.i.i:       ; preds = %716, %714, %713, %706, %705
  %.not269.i.i = icmp eq i4 %.0266.i.i, 0
  br i1 %.not269.i.i, label %719, label %718

705:                                              ; preds = %sort.quadsort_swap__anon_14855.exit433.i.i
  %.not277.i.i = icmp eq i64 %.4240.i.i, 0
  br i1 %.not277.i.i, label %sort.quadsort_swap__anon_14855.exit434.i.i, label %710

706:                                              ; preds = %sort.quadsort_swap__anon_14855.exit433.i.i
  %707 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %708 = mul nuw i64 %99, %6
  %709 = getelementptr inbounds i8, ptr %85, i64 %708
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %707, ptr nonnull align 1 %85, ptr nonnull align 1 %707, ptr nonnull align 1 %709, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit434.i.i

710:                                              ; preds = %705
  %711 = getelementptr inbounds i8, ptr %.3.lcssa.i.i, i64 %6
  %712 = icmp ult i64 %99, 96
  br i1 %712, label %713, label %714

713:                                              ; preds = %710
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %711, i64 %99, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit434.i.i

714:                                              ; preds = %710
  %715 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %711, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %715, label %716, label %sort.quadsort_swap__anon_14855.exit434.i.i

716:                                              ; preds = %714
  %717 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %711, i64 %99, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %711, i64 %99, ptr nonnull align 1 %85, i64 %1, i64 %717, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit434.i.i

sort.quadsort_swap__anon_14855.exit435.i.i:       ; preds = %729, %727, %726, %719, %718
  %.not270.i.i = icmp eq i4 %.0267.i.i, 0
  br i1 %.not270.i.i, label %732, label %731

718:                                              ; preds = %sort.quadsort_swap__anon_14855.exit434.i.i
  %.not276.i.i = icmp eq i64 %.4247.i.i, 0
  br i1 %.not276.i.i, label %sort.quadsort_swap__anon_14855.exit435.i.i, label %723

719:                                              ; preds = %sort.quadsort_swap__anon_14855.exit434.i.i
  %720 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %721 = mul nuw i64 %101, %6
  %722 = getelementptr inbounds i8, ptr %85, i64 %721
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %720, ptr nonnull align 1 %85, ptr nonnull align 1 %720, ptr nonnull align 1 %722, i64 %101, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit435.i.i

723:                                              ; preds = %718
  %724 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  %725 = icmp ult i64 %100, 192
  br i1 %725, label %726, label %727

726:                                              ; preds = %723
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %724, i64 %101, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit435.i.i

727:                                              ; preds = %723
  %728 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %724, i64 %101, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %728, label %729, label %sort.quadsort_swap__anon_14855.exit435.i.i

729:                                              ; preds = %727
  %730 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %724, i64 %101, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %724, i64 %101, ptr nonnull align 1 %85, i64 %1, i64 %730, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit435.i.i

731:                                              ; preds = %sort.quadsort_swap__anon_14855.exit435.i.i
  %.not275.i.i = icmp eq i64 %.4254.i.i, 0
  br i1 %.not275.i.i, label %sort.quadsort_swap__anon_14855.exit428.i.i, label %736

732:                                              ; preds = %sort.quadsort_swap__anon_14855.exit435.i.i
  %733 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %734 = mul nuw i64 %102, %6
  %735 = getelementptr inbounds i8, ptr %85, i64 %734
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %733, ptr nonnull align 1 %85, ptr nonnull align 1 %733, ptr nonnull align 1 %735, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

736:                                              ; preds = %731
  %737 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i, i64 %6
  %738 = icmp ult i64 %102, 96
  br i1 %738, label %739, label %740

739:                                              ; preds = %736
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %737, i64 %102, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

740:                                              ; preds = %736
  %741 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %737, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br i1 %741, label %742, label %sort.quadsort_swap__anon_14855.exit428.i.i

742:                                              ; preds = %740
  %743 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %737, i64 %102, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %737, i64 %102, ptr nonnull align 1 %85, i64 %1, i64 %743, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14855.exit428.i.i

744:                                              ; preds = %758, %756, %755, %753
  call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %0, ptr nonnull align 1 %85, i64 %97, i64 %100, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %sort.flux_analyze__anon_14345.exit.i

745:                                              ; preds = %sort.quadsort_swap__anon_14855.exit428.i.i
  %746 = icmp eq i8 %585, 1
  br i1 %746, label %753, label %750

747:                                              ; preds = %sort.quadsort_swap__anon_14855.exit428.i.i
  %748 = icmp eq i8 %585, 1
  %749 = getelementptr inbounds i8, ptr %85, i64 %105
  br i1 %748, label %758, label %756

750:                                              ; preds = %745
  %751 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  call void %5(ptr align 1 %3, i64 1) #15
  %752 = call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i, ptr align 1 %751) #15
  %.not274.i.i = icmp eq i8 %752, 1
  br i1 %.not274.i.i, label %755, label %sort.flux_analyze__anon_14345.exit.i

753:                                              ; preds = %745
  %754 = getelementptr inbounds i8, ptr %85, i64 %105
  call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %754, ptr nonnull align 1 %106, i64 %101, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %105, i1 false)
  br label %744

755:                                              ; preds = %750
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %84, i1 false)
  br label %744

756:                                              ; preds = %747
  %757 = mul nuw i64 %100, %6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %749, ptr nonnull align 1 %106, i64 %757, i1 false)
  call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %98, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %744

758:                                              ; preds = %747
  %759 = getelementptr inbounds i8, ptr %.4.lcssa.i.i, i64 %6
  call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %749, ptr nonnull align 1 %759, i64 %101, i64 %102, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %98, i64 %99, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  br label %744

sort.flux_analyze__anon_14345.exit.i:             ; preds = %750, %744, %587, %sort.quad_reversal.exit375.i.i, %239
  call void @roc_dealloc(ptr nonnull align 1 %85, i32 %7)
  br label %sort.quadsort.exit

760:                                              ; preds = %94
  tail call fastcc void @sort.quadsort_direct__anon_14341(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %5)
  ret void

761:                                              ; preds = %83
  %762 = icmp eq ptr %85, null
  br i1 %762, label %1424, label %763

763:                                              ; preds = %761
  %764 = lshr i64 %1, 1
  %765 = lshr i64 %1, 2
  %766 = sub nuw nsw i64 %764, %765
  %767 = sub nuw i64 %1, %764
  %768 = lshr i64 %767, 1
  %769 = sub nuw i64 %767, %768
  %770 = mul nuw i64 %765, %6
  %771 = getelementptr inbounds i8, ptr %0, i64 %770
  %772 = mul nuw i64 %764, %6
  %773 = getelementptr inbounds i8, ptr %0, i64 %772
  %774 = add nuw i64 %768, %764
  %775 = mul nuw i64 %774, %6
  %776 = getelementptr inbounds i8, ptr %0, i64 %775
  %777 = icmp ult i64 %765, %766
  br i1 %777, label %780, label %778

778:                                              ; preds = %780, %763
  %.0234.i.i = phi i64 [ %784, %780 ], [ 0, %763 ]
  %.0210.i.i = phi ptr [ %781, %780 ], [ %771, %763 ]
  %779 = icmp ult i64 %765, %768
  br i1 %779, label %787, label %785

780:                                              ; preds = %763
  %781 = getelementptr inbounds i8, ptr %771, i64 %6
  %782 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %771, ptr nonnull align 1 %781) #15
  %783 = icmp eq i8 %782, 1
  %784 = zext i1 %783 to i64
  br label %778

785:                                              ; preds = %787, %778
  %.0241.i.i = phi i64 [ %791, %787 ], [ 0, %778 ]
  %.0214.i.i = phi ptr [ %788, %787 ], [ %773, %778 ]
  %786 = icmp ult i64 %765, %769
  br i1 %786, label %795, label %792

787:                                              ; preds = %778
  %788 = getelementptr inbounds i8, ptr %773, i64 %6
  %789 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %773, ptr nonnull align 1 %788) #15
  %790 = icmp eq i8 %789, 1
  %791 = zext i1 %790 to i64
  br label %785

792:                                              ; preds = %795, %785
  %.0248.i.i = phi i64 [ %799, %795 ], [ 0, %785 ]
  %.0219.i.i = phi ptr [ %796, %795 ], [ %776, %785 ]
  %793 = icmp ugt i64 %1, 132
  br i1 %793, label %.preheader461.lr.ph.i.i, label %.lr.ph.i.i24.preheader

.preheader461.lr.ph.i.i:                          ; preds = %792
  %794 = mul i64 %6, 96
  br label %.preheader461.i.i

795:                                              ; preds = %785
  %796 = getelementptr inbounds i8, ptr %776, i64 %6
  %797 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %776, ptr nonnull align 1 %796) #15
  %798 = icmp eq i8 %797, 1
  %799 = zext i1 %798 to i64
  br label %792

.preheader461.i.i:                                ; preds = %.critedge.i.i22, %.preheader461.lr.ph.i.i
  %.0483.i.i = phi ptr [ %0, %.preheader461.lr.ph.i.i ], [ %.2.i.i21, %.critedge.i.i22 ]
  %.1211482.i.i = phi ptr [ %.0210.i.i, %.preheader461.lr.ph.i.i ], [ %.3213.i.i, %.critedge.i.i22 ]
  %.1215481.i.i = phi ptr [ %.0214.i.i, %.preheader461.lr.ph.i.i ], [ %.3217.i.i, %.critedge.i.i22 ]
  %.1220480.i.i = phi ptr [ %.0219.i.i, %.preheader461.lr.ph.i.i ], [ %.3222.i.i, %.critedge.i.i22 ]
  %.0224479.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %824, %.critedge.i.i22 ]
  %.0225478.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %830, %.critedge.i.i22 ]
  %.0226477.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %836, %.critedge.i.i22 ]
  %.0227476.i.i = phi i32 [ 0, %.preheader461.lr.ph.i.i ], [ %842, %.critedge.i.i22 ]
  %.0228475.i.i = phi i64 [ 0, %.preheader461.lr.ph.i.i ], [ %.1229.i.i, %.critedge.i.i22 ]
  %.1235474.i.i = phi i64 [ %.0234.i.i, %.preheader461.lr.ph.i.i ], [ %.2236.i.i, %.critedge.i.i22 ]
  %.1242473.i.i = phi i64 [ %.0241.i.i, %.preheader461.lr.ph.i.i ], [ %.2243.i.i, %.critedge.i.i22 ]
  %.1249472.i.i = phi i64 [ %.0248.i.i, %.preheader461.lr.ph.i.i ], [ %.2250.i.i, %.critedge.i.i22 ]
  %.0254471.i.i = phi i64 [ %1, %.preheader461.lr.ph.i.i ], [ %844, %.critedge.i.i22 ]
  %uglygep2953 = getelementptr i8, ptr %.0483.i.i, i64 %6
  %uglygep2959 = getelementptr i8, ptr %.1211482.i.i, i64 %6
  %uglygep2965 = getelementptr i8, ptr %.1215481.i.i, i64 %6
  %uglygep2971 = getelementptr i8, ptr %.1220480.i.i, i64 %6
  br label %801

.preheader.i.i:                                   ; preds = %.critedge.i.i22
  %800 = icmp ugt i64 %844, 7
  br i1 %800, label %.lr.ph.i.i24.preheader, label %._crit_edge.i.i27

.lr.ph.i.i24.preheader:                           ; preds = %.preheader.i.i, %792
  %.0.lcssa.i.i19530 = phi ptr [ %.2.i.i21, %.preheader.i.i ], [ %0, %792 ]
  %.1211.lcssa.i.i529 = phi ptr [ %.3213.i.i, %.preheader.i.i ], [ %.0210.i.i, %792 ]
  %.1215.lcssa.i.i528 = phi ptr [ %.3217.i.i, %.preheader.i.i ], [ %.0214.i.i, %792 ]
  %.1220.lcssa.i.i527 = phi ptr [ %.3222.i.i, %.preheader.i.i ], [ %.0219.i.i, %792 ]
  %.0224.lcssa.i.i526 = phi i32 [ %824, %.preheader.i.i ], [ 0, %792 ]
  %.0225.lcssa.i.i524 = phi i32 [ %830, %.preheader.i.i ], [ 0, %792 ]
  %.0226.lcssa.i.i18522 = phi i32 [ %836, %.preheader.i.i ], [ 0, %792 ]
  %.0227.lcssa.i.i17520 = phi i32 [ %842, %.preheader.i.i ], [ 0, %792 ]
  %.0228.lcssa.i.i16518 = phi i64 [ %.1229.i.i, %.preheader.i.i ], [ 0, %792 ]
  %.1235.lcssa.i.i517 = phi i64 [ %.2236.i.i, %.preheader.i.i ], [ %.0234.i.i, %792 ]
  %.1242.lcssa.i.i516 = phi i64 [ %.2243.i.i, %.preheader.i.i ], [ %.0241.i.i, %792 ]
  %.1249.lcssa.i.i515 = phi i64 [ %.2250.i.i, %.preheader.i.i ], [ %.0248.i.i, %792 ]
  %.0254.lcssa.i.i514 = phi i64 [ %844, %.preheader.i.i ], [ 132, %792 ]
  br label %.lr.ph.i.i24

801:                                              ; preds = %801, %.preheader461.i.i
  %lsr.iv2973 = phi i64 [ %lsr.iv.next2974, %801 ], [ 32, %.preheader461.i.i ]
  %lsr.iv2946 = phi i64 [ %lsr.iv.next2947, %801 ], [ 0, %.preheader461.i.i ]
  %.0257466.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %805, %801 ]
  %.0258465.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %809, %801 ]
  %.0259464.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %813, %801 ]
  %.0260463.i.i = phi i8 [ 0, %.preheader461.i.i ], [ %817, %801 ]
  %uglygep2948 = getelementptr i8, ptr %.0483.i.i, i64 %lsr.iv2946
  %uglygep2955 = getelementptr i8, ptr %.1211482.i.i, i64 %lsr.iv2946
  %uglygep2961 = getelementptr i8, ptr %.1215481.i.i, i64 %lsr.iv2946
  %uglygep2967 = getelementptr i8, ptr %.1220480.i.i, i64 %lsr.iv2946
  %uglygep2954 = getelementptr i8, ptr %uglygep2953, i64 %lsr.iv2946
  %802 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2948, ptr align 1 %uglygep2954) #15
  %803 = icmp eq i8 %802, 1
  %804 = zext i1 %803 to i8
  %805 = add nuw i8 %.0257466.i.i, %804
  %uglygep2960 = getelementptr i8, ptr %uglygep2959, i64 %lsr.iv2946
  %806 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2955, ptr align 1 %uglygep2960) #15
  %807 = icmp eq i8 %806, 1
  %808 = zext i1 %807 to i8
  %809 = add nuw i8 %.0258465.i.i, %808
  %uglygep2966 = getelementptr i8, ptr %uglygep2965, i64 %lsr.iv2946
  %810 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2961, ptr align 1 %uglygep2966) #15
  %811 = icmp eq i8 %810, 1
  %812 = zext i1 %811 to i8
  %813 = add nuw i8 %.0259464.i.i, %812
  %uglygep2972 = getelementptr i8, ptr %uglygep2971, i64 %lsr.iv2946
  %814 = tail call i8 %2(ptr align 1 %3, ptr align 1 %uglygep2967, ptr align 1 %uglygep2972) #15
  %815 = icmp eq i8 %814, 1
  %816 = zext i1 %815 to i8
  %817 = add nuw i8 %.0260463.i.i, %816
  %lsr.iv.next2947 = add i64 %lsr.iv2946, %6
  %lsr.iv.next2974 = add nsw i64 %lsr.iv2973, -1
  %exitcond.not.i.i20 = icmp eq i64 %lsr.iv.next2974, 0
  br i1 %exitcond.not.i.i20, label %818, label %801

818:                                              ; preds = %801
  %819 = zext i8 %805 to i64
  %820 = add nuw i64 %.0228475.i.i, %819
  %821 = and i8 %805, -33
  %822 = icmp eq i8 %821, 0
  %823 = zext i1 %822 to i32
  %824 = add nuw i32 %.0224479.i.i, %823
  %825 = zext i8 %809 to i64
  %826 = add nuw i64 %.1235474.i.i, %825
  %827 = and i8 %809, -33
  %828 = icmp eq i8 %827, 0
  %829 = zext i1 %828 to i32
  %830 = add nuw i32 %.0225478.i.i, %829
  %831 = zext i8 %813 to i64
  %832 = add nuw i64 %.1242473.i.i, %831
  %833 = and i8 %813, -33
  %834 = icmp eq i8 %833, 0
  %835 = zext i1 %834 to i32
  %836 = add nuw i32 %.0226477.i.i, %835
  %837 = zext i8 %817 to i64
  %838 = add nuw i64 %.1249472.i.i, %837
  %839 = and i8 %817, -33
  %840 = icmp eq i8 %839, 0
  %841 = zext i1 %840 to i32
  %842 = add nuw i32 %.0227476.i.i, %841
  %843 = icmp ugt i64 %.0254471.i.i, 516
  %uglygep2949 = getelementptr i8, ptr %.0483.i.i, i64 %lsr.iv.next2947
  %uglygep2956 = getelementptr i8, ptr %.1211482.i.i, i64 %lsr.iv.next2947
  %uglygep2962 = getelementptr i8, ptr %.1215481.i.i, i64 %lsr.iv.next2947
  %uglygep2968 = getelementptr i8, ptr %.1220480.i.i, i64 %lsr.iv.next2947
  br i1 %843, label %846, label %.critedge.i.i22

.critedge.i.i22:                                  ; preds = %857, %846, %818
  %.1255.i.i = phi i64 [ %862, %857 ], [ %.0254471.i.i, %818 ], [ %.0254471.i.i, %846 ]
  %.2250.i.i = phi i64 [ %861, %857 ], [ %838, %818 ], [ %838, %846 ]
  %.2243.i.i = phi i64 [ %860, %857 ], [ %832, %818 ], [ %832, %846 ]
  %.2236.i.i = phi i64 [ %859, %857 ], [ %826, %818 ], [ %826, %846 ]
  %.1229.i.i = phi i64 [ %858, %857 ], [ %820, %818 ], [ %820, %846 ]
  %.3222.i.i = phi ptr [ %uglygep2970, %857 ], [ %uglygep2968, %818 ], [ %uglygep2968, %846 ]
  %.3217.i.i = phi ptr [ %uglygep2964, %857 ], [ %uglygep2962, %818 ], [ %uglygep2962, %846 ]
  %.3213.i.i = phi ptr [ %uglygep2958, %857 ], [ %uglygep2956, %818 ], [ %uglygep2956, %846 ]
  %.2.i.i21 = phi ptr [ %uglygep2952, %857 ], [ %uglygep2949, %818 ], [ %uglygep2949, %846 ]
  %844 = add i64 %.1255.i.i, -128
  %845 = icmp ugt i64 %844, 132
  br i1 %845, label %.preheader461.i.i, label %.preheader.i.i

846:                                              ; preds = %818
  %847 = icmp eq i8 %839, 0
  %848 = icmp eq i8 %833, 0
  %849 = icmp eq i8 %827, 0
  %850 = icmp eq i8 %821, 0
  %.neg.i.i23 = sext i1 %847 to i8
  %851 = zext i1 %848 to i8
  %852 = zext i1 %849 to i8
  %853 = zext i1 %850 to i8
  %854 = add nuw nsw i8 %852, %853
  %855 = add nuw nsw i8 %854, %851
  %856 = icmp eq i8 %855, %.neg.i.i23
  br i1 %856, label %857, label %.critedge.i.i22

857:                                              ; preds = %846
  %858 = add nuw i64 %820, 48
  %uglygep2951 = getelementptr i8, ptr %.0483.i.i, i64 %794
  %uglygep2952 = getelementptr i8, ptr %uglygep2951, i64 %lsr.iv.next2947
  %859 = add nuw i64 %826, 48
  %uglygep2957 = getelementptr i8, ptr %.1211482.i.i, i64 %794
  %uglygep2958 = getelementptr i8, ptr %uglygep2957, i64 %lsr.iv.next2947
  %860 = add nuw i64 %832, 48
  %uglygep2963 = getelementptr i8, ptr %.1215481.i.i, i64 %794
  %uglygep2964 = getelementptr i8, ptr %uglygep2963, i64 %lsr.iv.next2947
  %861 = add nuw i64 %838, 48
  %uglygep2969 = getelementptr i8, ptr %.1220480.i.i, i64 %794
  %uglygep2970 = getelementptr i8, ptr %uglygep2969, i64 %lsr.iv.next2947
  %862 = add i64 %.0254471.i.i, -384
  br label %.critedge.i.i22

.lr.ph.i.i24:                                     ; preds = %.lr.ph.i.i24, %.lr.ph.i.i24.preheader
  %.3504.i.i = phi ptr [ %863, %.lr.ph.i.i24 ], [ %.0.lcssa.i.i19530, %.lr.ph.i.i24.preheader ]
  %.4503.i.i = phi ptr [ %868, %.lr.ph.i.i24 ], [ %.1211.lcssa.i.i529, %.lr.ph.i.i24.preheader ]
  %.4218502.i.i = phi ptr [ %873, %.lr.ph.i.i24 ], [ %.1215.lcssa.i.i528, %.lr.ph.i.i24.preheader ]
  %.4223501.i.i = phi ptr [ %878, %.lr.ph.i.i24 ], [ %.1220.lcssa.i.i527, %.lr.ph.i.i24.preheader ]
  %.2230500.i.i = phi i64 [ %867, %.lr.ph.i.i24 ], [ %.0228.lcssa.i.i16518, %.lr.ph.i.i24.preheader ]
  %.3237499.i.i = phi i64 [ %872, %.lr.ph.i.i24 ], [ %.1235.lcssa.i.i517, %.lr.ph.i.i24.preheader ]
  %.3244498.i.i = phi i64 [ %877, %.lr.ph.i.i24 ], [ %.1242.lcssa.i.i516, %.lr.ph.i.i24.preheader ]
  %.3251497.i.i = phi i64 [ %882, %.lr.ph.i.i24 ], [ %.1249.lcssa.i.i515, %.lr.ph.i.i24.preheader ]
  %.2256496.i.i = phi i64 [ %883, %.lr.ph.i.i24 ], [ %.0254.lcssa.i.i514, %.lr.ph.i.i24.preheader ]
  %863 = getelementptr inbounds i8, ptr %.3504.i.i, i64 %6
  %864 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3504.i.i, ptr align 1 %863) #15
  %865 = icmp eq i8 %864, 1
  %866 = zext i1 %865 to i64
  %867 = add nuw i64 %.2230500.i.i, %866
  %868 = getelementptr inbounds i8, ptr %.4503.i.i, i64 %6
  %869 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4503.i.i, ptr align 1 %868) #15
  %870 = icmp eq i8 %869, 1
  %871 = zext i1 %870 to i64
  %872 = add nuw i64 %.3237499.i.i, %871
  %873 = getelementptr inbounds i8, ptr %.4218502.i.i, i64 %6
  %874 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218502.i.i, ptr align 1 %873) #15
  %875 = icmp eq i8 %874, 1
  %876 = zext i1 %875 to i64
  %877 = add nuw i64 %.3244498.i.i, %876
  %878 = getelementptr inbounds i8, ptr %.4223501.i.i, i64 %6
  %879 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4223501.i.i, ptr align 1 %878) #15
  %880 = icmp eq i8 %879, 1
  %881 = zext i1 %880 to i64
  %882 = add nuw i64 %.3251497.i.i, %881
  %883 = add i64 %.2256496.i.i, -4
  %884 = icmp ugt i64 %883, 7
  br i1 %884, label %.lr.ph.i.i24, label %._crit_edge.i.i27

._crit_edge.i.i27:                                ; preds = %.lr.ph.i.i24, %.preheader.i.i
  %.0224.lcssa.i.i525 = phi i32 [ %824, %.preheader.i.i ], [ %.0224.lcssa.i.i526, %.lr.ph.i.i24 ]
  %.0225.lcssa.i.i523 = phi i32 [ %830, %.preheader.i.i ], [ %.0225.lcssa.i.i524, %.lr.ph.i.i24 ]
  %.0226.lcssa.i.i18521 = phi i32 [ %836, %.preheader.i.i ], [ %.0226.lcssa.i.i18522, %.lr.ph.i.i24 ]
  %.0227.lcssa.i.i17519 = phi i32 [ %842, %.preheader.i.i ], [ %.0227.lcssa.i.i17520, %.lr.ph.i.i24 ]
  %.3251.lcssa.i.i = phi i64 [ %.2250.i.i, %.preheader.i.i ], [ %882, %.lr.ph.i.i24 ]
  %.3244.lcssa.i.i = phi i64 [ %.2243.i.i, %.preheader.i.i ], [ %877, %.lr.ph.i.i24 ]
  %.3237.lcssa.i.i = phi i64 [ %.2236.i.i, %.preheader.i.i ], [ %872, %.lr.ph.i.i24 ]
  %.2230.lcssa.i.i = phi i64 [ %.1229.i.i, %.preheader.i.i ], [ %867, %.lr.ph.i.i24 ]
  %.4223.lcssa.i.i = phi ptr [ %.3222.i.i, %.preheader.i.i ], [ %878, %.lr.ph.i.i24 ]
  %.4218.lcssa.i.i = phi ptr [ %.3217.i.i, %.preheader.i.i ], [ %873, %.lr.ph.i.i24 ]
  %.4.lcssa.i.i25 = phi ptr [ %.3213.i.i, %.preheader.i.i ], [ %868, %.lr.ph.i.i24 ]
  %.3.lcssa.i.i26 = phi ptr [ %.2.i.i21, %.preheader.i.i ], [ %863, %.lr.ph.i.i24 ]
  %885 = add i64 %.3237.lcssa.i.i, %.3244.lcssa.i.i
  %886 = add i64 %885, %.2230.lcssa.i.i
  %887 = sub i64 0, %.3251.lcssa.i.i
  %888 = icmp eq i64 %886, %887
  br i1 %888, label %897, label %.critedge2.i.i31

.critedge2.i.i31:                                 ; preds = %903, %900, %897, %._crit_edge.i.i27
  %889 = sub nuw i64 %765, %.2230.lcssa.i.i
  %890 = icmp eq i64 %889, 1
  %891 = sub nuw i64 %766, %.3237.lcssa.i.i
  %892 = icmp eq i64 %891, 1
  %893 = sub nuw i64 %768, %.3244.lcssa.i.i
  %894 = icmp eq i64 %893, 1
  %895 = sub nuw i64 %769, %.3251.lcssa.i.i
  %896 = icmp eq i64 %895, 1
  %..i.i28 = select i1 %890, i1 true, i1 %892
  %.5.i.i29 = select i1 %..i.i28, i1 true, i1 %894
  %.6.i.i30 = select i1 %.5.i.i29, i1 true, i1 %896
  br i1 %.6.i.i30, label %921, label %906

897:                                              ; preds = %._crit_edge.i.i27
  %898 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %899 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %898) #15
  %.not287.i.i32 = icmp eq i8 %899, 1
  br i1 %.not287.i.i32, label %.critedge2.i.i31, label %900

900:                                              ; preds = %897
  %901 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %902 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %901) #15
  %.not288.i.i33 = icmp eq i8 %902, 1
  br i1 %.not288.i.i33, label %.critedge2.i.i31, label %903

903:                                              ; preds = %900
  %904 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %905 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %904) #15
  %.not289.i.i34 = icmp eq i8 %905, 1
  br i1 %.not289.i.i34, label %.critedge2.i.i31, label %sort.flux_analyze__anon_14346.exit.i

906:                                              ; preds = %sort.quad_reversal.exit421.i.i, %.thread442.thread.i.i, %.thread442.thread.thread.i.i, %.critedge2.i.i31
  %.4252.i.i = phi i64 [ 0, %sort.quad_reversal.exit421.i.i ], [ %.5253439448455.i.i, %.thread442.thread.i.i ], [ %.3251.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.4245.i.i = phi i64 [ %.6247.i.i, %sort.quad_reversal.exit421.i.i ], [ %.6247.i.i, %.thread442.thread.i.i ], [ %.3244.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.4238.i.i = phi i64 [ %.6240456.i.i, %sort.quad_reversal.exit421.i.i ], [ %.6240456.i.i, %.thread442.thread.i.i ], [ %.3237.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %.3231.i.i = phi i64 [ %.5233449454.i.i, %sort.quad_reversal.exit421.i.i ], [ %.5233449454.i.i, %.thread442.thread.i.i ], [ %.2230.lcssa.i.i, %.critedge2.i.i31 ], [ 0, %.thread442.thread.thread.i.i ]
  %const3624 = bitcast i64 1048579 to i64
  %907 = lshr i64 %1, 9
  %908 = zext i32 %.0224.lcssa.i.i525 to i64
  %909 = icmp ult i64 %907, %908
  %910 = zext i1 %909 to i4
  %911 = zext i32 %.0225.lcssa.i.i523 to i64
  %912 = icmp ult i64 %907, %911
  %913 = zext i1 %912 to i4
  %914 = zext i32 %.0226.lcssa.i.i18521 to i64
  %915 = icmp ult i64 %907, %914
  %916 = zext i1 %915 to i4
  %917 = zext i32 %.0227.lcssa.i.i17519 to i64
  %918 = icmp ult i64 %907, %917
  %919 = zext i1 %918 to i4
  %920 = icmp ugt i64 %1, %const3624
  br i1 %920, label %1245, label %1237

921:                                              ; preds = %.critedge2.i.i31
  %922 = icmp eq i64 %895, 1
  %923 = icmp eq i64 %893, 1
  %924 = icmp eq i64 %891, 1
  %925 = icmp eq i64 %889, 1
  %.7.i.i35 = select i1 %925, i1 %924, i1 false
  %926 = getelementptr i8, ptr %.3.lcssa.i.i26, i64 %6
  %927 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %926) #15
  %928 = icmp eq i8 %927, 1
  %929 = and i1 %.7.i.i35, %928
  %930 = zext i1 %929 to i3
  %.8.i.i36 = select i1 %924, i1 %923, i1 false
  %931 = getelementptr i8, ptr %.4.lcssa.i.i25, i64 %6
  %932 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %931) #15
  %933 = icmp eq i8 %932, 1
  %934 = and i1 %.8.i.i36, %933
  %.9.i.i37 = select i1 %923, i1 %922, i1 false
  %935 = getelementptr i8, ptr %.4218.lcssa.i.i, i64 %6
  %936 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %935) #15
  %937 = icmp eq i8 %936, 1
  %938 = and i1 %.9.i.i37, %937
  %939 = select i1 %934, i3 2, i3 0
  %940 = or i3 %939, %930
  %941 = select i1 %938, i3 -4, i3 0
  %942 = or i3 %940, %941
  %943 = zext i3 %942 to i32
  switch i32 %943, label %948 [
    i32 0, label %944
    i32 1, label %949
    i32 2, label %972
    i32 3, label %996
    i32 4, label %1019
    i32 5, label %1043
    i32 6, label %1088
    i32 7, label %1112
  ]

944:                                              ; preds = %sort.quad_reversal.exit361.i.i, %sort.quad_reversal.exit325.i.i, %sort.quad_reversal.exit301.i.i, %921
  %.5253.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ 0, %sort.quad_reversal.exit325.i.i ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit301.i.i ], [ %.3251.lcssa.i.i, %921 ]
  %.5246.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ 0, %sort.quad_reversal.exit325.i.i ], [ 0, %sort.quad_reversal.exit301.i.i ], [ %.3244.lcssa.i.i, %921 ]
  %.5239.i.i = phi i64 [ 0, %sort.quad_reversal.exit361.i.i ], [ %.3237.lcssa.i.i, %sort.quad_reversal.exit325.i.i ], [ 0, %sort.quad_reversal.exit301.i.i ], [ %.3237.lcssa.i.i, %921 ]
  %945 = icmp eq i64 %889, 1
  %946 = icmp ne i64 %.2230.lcssa.i.i, 0
  %947 = and i1 %946, %945
  br i1 %947, label %1139, label %1135

948:                                              ; preds = %921
  unreachable

949:                                              ; preds = %921
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %950 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %951 = ptrtoint ptr %0 to i64
  %952 = sub nuw i64 %950, %951
  %953 = shl nuw i64 %6, 1
  %954 = udiv i64 %952, %953
  %955 = mul nuw i64 %954, %6
  %956 = getelementptr inbounds i8, ptr %0, i64 %955
  %957 = sub i64 0, %955
  %958 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %957
  %959 = and i64 %954, 1
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %963, label %._crit_edge.i.i.i39

._crit_edge.i.i.i39:                              ; preds = %949
  %.pre.i.i.i38 = sub i64 0, %6
  br label %961

961:                                              ; preds = %963, %._crit_edge.i.i.i39
  %.pre-phi.i.i.i40 = phi i64 [ %.pre.i.i.i38, %._crit_edge.i.i.i39 ], [ %964, %963 ]
  %.027.i.i.i41 = phi ptr [ %958, %._crit_edge.i.i.i39 ], [ %966, %963 ]
  %.025.i.i.i42 = phi ptr [ %956, %._crit_edge.i.i.i39 ], [ %965, %963 ]
  %.0.i.i.i43 = phi i64 [ %954, %._crit_edge.i.i.i39 ], [ %967, %963 ]
  %962 = lshr i64 %.0.i.i.i43, 1
  br label %968

963:                                              ; preds = %949
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %956) #15
  call void %8(ptr nonnull align 1 %956, ptr nonnull align 1 %958) #15
  %964 = sub i64 0, %6
  %965 = getelementptr inbounds i8, ptr %956, i64 %964
  call void %8(ptr nonnull align 1 %958, ptr nonnull align 1 %10) #15
  %966 = getelementptr inbounds i8, ptr %958, i64 %6
  %967 = add i64 %954, -1
  br label %961

968:                                              ; preds = %970, %961
  %lsr.iv2885 = phi i64 [ %lsr.iv.next2886, %970 ], [ 0, %961 ]
  %lsr.iv2882 = phi i64 [ %lsr.iv.next2883, %970 ], [ 0, %961 ]
  %.1.i.i.i48 = phi i64 [ %962, %961 ], [ %971, %970 ]
  %uglygep2884 = getelementptr i8, ptr %.4.lcssa.i.i25, i64 %lsr.iv2882
  %uglygep2887 = getelementptr i8, ptr %.027.i.i.i41, i64 %lsr.iv2885
  %uglygep2888 = getelementptr i8, ptr %.025.i.i.i42, i64 %lsr.iv2882
  %uglygep2889 = getelementptr i8, ptr %0, i64 %lsr.iv2885
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2889) #15
  call void %8(ptr align 1 %uglygep2889, ptr align 1 %uglygep2884) #15
  call void %8(ptr align 1 %uglygep2884, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2888) #15
  call void %8(ptr align 1 %uglygep2888, ptr align 1 %uglygep2887) #15
  call void %8(ptr align 1 %uglygep2887, ptr nonnull align 1 %10) #15
  %969 = icmp eq i64 %.1.i.i.i48, 0
  br i1 %969, label %sort.quad_reversal.exit.i.i49, label %970

970:                                              ; preds = %968
  %971 = add nsw i64 %.1.i.i.i48, -1
  %lsr.iv.next2883 = add i64 %lsr.iv2882, %.pre-phi.i.i.i40
  %lsr.iv.next2886 = add i64 %lsr.iv2885, %6
  br label %968

sort.quad_reversal.exit.i.i49:                    ; preds = %968
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.i.i

972:                                              ; preds = %921
  %973 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %974 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %975 = ptrtoint ptr %973 to i64
  %976 = sub nuw i64 %974, %975
  %977 = shl nuw i64 %6, 1
  %978 = udiv i64 %976, %977
  %979 = mul nuw i64 %978, %6
  %980 = getelementptr inbounds i8, ptr %973, i64 %979
  %981 = sub i64 0, %979
  %982 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %981
  %983 = and i64 %978, 1
  %984 = icmp eq i64 %983, 0
  br i1 %984, label %987, label %._crit_edge.i291.i.i

._crit_edge.i291.i.i:                             ; preds = %972
  %.pre.i290.i.i = sub i64 0, %6
  br label %985

985:                                              ; preds = %987, %._crit_edge.i291.i.i
  %.pre-phi.i292.i.i = phi i64 [ %.pre.i290.i.i, %._crit_edge.i291.i.i ], [ %988, %987 ]
  %.027.i293.i.i = phi ptr [ %982, %._crit_edge.i291.i.i ], [ %990, %987 ]
  %.025.i294.i.i = phi ptr [ %980, %._crit_edge.i291.i.i ], [ %989, %987 ]
  %.0.i295.i.i = phi i64 [ %978, %._crit_edge.i291.i.i ], [ %991, %987 ]
  %986 = lshr i64 %.0.i295.i.i, 1
  br label %992

987:                                              ; preds = %972
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %980) #15
  call void %8(ptr nonnull align 1 %980, ptr nonnull align 1 %982) #15
  %988 = sub i64 0, %6
  %989 = getelementptr inbounds i8, ptr %980, i64 %988
  call void %8(ptr nonnull align 1 %982, ptr nonnull align 1 %10) #15
  %990 = getelementptr inbounds i8, ptr %982, i64 %6
  %991 = add i64 %978, -1
  br label %985

992:                                              ; preds = %994, %985
  %lsr.iv2893 = phi i64 [ %lsr.iv.next2894, %994 ], [ 0, %985 ]
  %lsr.iv2890 = phi i64 [ %lsr.iv.next2891, %994 ], [ 0, %985 ]
  %.1.i300.i.i = phi i64 [ %986, %985 ], [ %995, %994 ]
  %uglygep2892 = getelementptr i8, ptr %.4218.lcssa.i.i, i64 %lsr.iv2890
  %uglygep2895 = getelementptr i8, ptr %.027.i293.i.i, i64 %lsr.iv2893
  %uglygep2896 = getelementptr i8, ptr %.025.i294.i.i, i64 %lsr.iv2890
  %uglygep2897 = getelementptr i8, ptr %973, i64 %lsr.iv2893
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2897) #15
  call void %8(ptr align 1 %uglygep2897, ptr align 1 %uglygep2892) #15
  call void %8(ptr align 1 %uglygep2892, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2896) #15
  call void %8(ptr align 1 %uglygep2896, ptr align 1 %uglygep2895) #15
  call void %8(ptr align 1 %uglygep2895, ptr nonnull align 1 %10) #15
  %993 = icmp eq i64 %.1.i300.i.i, 0
  br i1 %993, label %sort.quad_reversal.exit301.i.i, label %994

994:                                              ; preds = %992
  %995 = add nsw i64 %.1.i300.i.i, -1
  %lsr.iv.next2891 = add i64 %lsr.iv2890, %.pre-phi.i292.i.i
  %lsr.iv.next2894 = add i64 %lsr.iv2893, %6
  br label %992

sort.quad_reversal.exit301.i.i:                   ; preds = %992
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %944

996:                                              ; preds = %921
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %997 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %998 = ptrtoint ptr %0 to i64
  %999 = sub nuw i64 %997, %998
  %1000 = shl nuw i64 %6, 1
  %1001 = udiv i64 %999, %1000
  %1002 = mul nuw i64 %1001, %6
  %1003 = getelementptr inbounds i8, ptr %0, i64 %1002
  %1004 = sub i64 0, %1002
  %1005 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %1004
  %1006 = and i64 %1001, 1
  %1007 = icmp eq i64 %1006, 0
  br i1 %1007, label %1010, label %._crit_edge.i303.i.i

._crit_edge.i303.i.i:                             ; preds = %996
  %.pre.i302.i.i = sub i64 0, %6
  br label %1008

1008:                                             ; preds = %1010, %._crit_edge.i303.i.i
  %.pre-phi.i304.i.i = phi i64 [ %.pre.i302.i.i, %._crit_edge.i303.i.i ], [ %1011, %1010 ]
  %.027.i305.i.i = phi ptr [ %1005, %._crit_edge.i303.i.i ], [ %1013, %1010 ]
  %.025.i306.i.i = phi ptr [ %1003, %._crit_edge.i303.i.i ], [ %1012, %1010 ]
  %.0.i307.i.i = phi i64 [ %1001, %._crit_edge.i303.i.i ], [ %1014, %1010 ]
  %1009 = lshr i64 %.0.i307.i.i, 1
  br label %1015

1010:                                             ; preds = %996
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1003) #15
  call void %8(ptr nonnull align 1 %1003, ptr nonnull align 1 %1005) #15
  %1011 = sub i64 0, %6
  %1012 = getelementptr inbounds i8, ptr %1003, i64 %1011
  call void %8(ptr nonnull align 1 %1005, ptr nonnull align 1 %10) #15
  %1013 = getelementptr inbounds i8, ptr %1005, i64 %6
  %1014 = add i64 %1001, -1
  br label %1008

1015:                                             ; preds = %1017, %1008
  %lsr.iv2901 = phi i64 [ %lsr.iv.next2902, %1017 ], [ 0, %1008 ]
  %lsr.iv2898 = phi i64 [ %lsr.iv.next2899, %1017 ], [ 0, %1008 ]
  %.1.i312.i.i = phi i64 [ %1009, %1008 ], [ %1018, %1017 ]
  %uglygep2900 = getelementptr i8, ptr %.4218.lcssa.i.i, i64 %lsr.iv2898
  %uglygep2903 = getelementptr i8, ptr %.027.i305.i.i, i64 %lsr.iv2901
  %uglygep2904 = getelementptr i8, ptr %.025.i306.i.i, i64 %lsr.iv2898
  %uglygep2905 = getelementptr i8, ptr %0, i64 %lsr.iv2901
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2905) #15
  call void %8(ptr align 1 %uglygep2905, ptr align 1 %uglygep2900) #15
  call void %8(ptr align 1 %uglygep2900, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2904) #15
  call void %8(ptr align 1 %uglygep2904, ptr align 1 %uglygep2903) #15
  call void %8(ptr align 1 %uglygep2903, ptr nonnull align 1 %10) #15
  %1016 = icmp eq i64 %.1.i312.i.i, 0
  br i1 %1016, label %sort.quad_reversal.exit313.i.i, label %1017

1017:                                             ; preds = %1015
  %1018 = add nsw i64 %.1.i312.i.i, -1
  %lsr.iv.next2899 = add i64 %lsr.iv2898, %.pre-phi.i304.i.i
  %lsr.iv.next2902 = add i64 %lsr.iv2901, %6
  br label %1015

sort.quad_reversal.exit313.i.i:                   ; preds = %1015
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.thread.i.i

1019:                                             ; preds = %921
  %1020 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1021 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1022 = ptrtoint ptr %1020 to i64
  %1023 = sub nuw i64 %1021, %1022
  %1024 = shl nuw i64 %6, 1
  %1025 = udiv i64 %1023, %1024
  %1026 = mul nuw i64 %1025, %6
  %1027 = getelementptr inbounds i8, ptr %1020, i64 %1026
  %1028 = sub i64 0, %1026
  %1029 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1028
  %1030 = and i64 %1025, 1
  %1031 = icmp eq i64 %1030, 0
  br i1 %1031, label %1034, label %._crit_edge.i315.i.i

._crit_edge.i315.i.i:                             ; preds = %1019
  %.pre.i314.i.i = sub i64 0, %6
  br label %1032

1032:                                             ; preds = %1034, %._crit_edge.i315.i.i
  %.pre-phi.i316.i.i = phi i64 [ %.pre.i314.i.i, %._crit_edge.i315.i.i ], [ %1035, %1034 ]
  %.027.i317.i.i = phi ptr [ %1029, %._crit_edge.i315.i.i ], [ %1037, %1034 ]
  %.025.i318.i.i = phi ptr [ %1027, %._crit_edge.i315.i.i ], [ %1036, %1034 ]
  %.0.i319.i.i = phi i64 [ %1025, %._crit_edge.i315.i.i ], [ %1038, %1034 ]
  %1033 = lshr i64 %.0.i319.i.i, 1
  br label %1039

1034:                                             ; preds = %1019
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1027) #15
  call void %8(ptr nonnull align 1 %1027, ptr nonnull align 1 %1029) #15
  %1035 = sub i64 0, %6
  %1036 = getelementptr inbounds i8, ptr %1027, i64 %1035
  call void %8(ptr nonnull align 1 %1029, ptr nonnull align 1 %10) #15
  %1037 = getelementptr inbounds i8, ptr %1029, i64 %6
  %1038 = add i64 %1025, -1
  br label %1032

1039:                                             ; preds = %1041, %1032
  %lsr.iv2909 = phi i64 [ %lsr.iv.next2910, %1041 ], [ 0, %1032 ]
  %lsr.iv2906 = phi i64 [ %lsr.iv.next2907, %1041 ], [ 0, %1032 ]
  %.1.i324.i.i = phi i64 [ %1033, %1032 ], [ %1042, %1041 ]
  %uglygep2908 = getelementptr i8, ptr %.4223.lcssa.i.i, i64 %lsr.iv2906
  %uglygep2911 = getelementptr i8, ptr %.027.i317.i.i, i64 %lsr.iv2909
  %uglygep2912 = getelementptr i8, ptr %.025.i318.i.i, i64 %lsr.iv2906
  %uglygep2913 = getelementptr i8, ptr %1020, i64 %lsr.iv2909
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2913) #15
  call void %8(ptr align 1 %uglygep2913, ptr align 1 %uglygep2908) #15
  call void %8(ptr align 1 %uglygep2908, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2912) #15
  call void %8(ptr align 1 %uglygep2912, ptr align 1 %uglygep2911) #15
  call void %8(ptr align 1 %uglygep2911, ptr nonnull align 1 %10) #15
  %1040 = icmp eq i64 %.1.i324.i.i, 0
  br i1 %1040, label %sort.quad_reversal.exit325.i.i, label %1041

1041:                                             ; preds = %1039
  %1042 = add nsw i64 %.1.i324.i.i, -1
  %lsr.iv.next2907 = add i64 %lsr.iv2906, %.pre-phi.i316.i.i
  %lsr.iv.next2910 = add i64 %lsr.iv2909, %6
  br label %1039

sort.quad_reversal.exit325.i.i:                   ; preds = %1039
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %944

1043:                                             ; preds = %921
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1044 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %1045 = ptrtoint ptr %0 to i64
  %1046 = sub nuw i64 %1044, %1045
  %1047 = shl nuw i64 %6, 1
  %1048 = udiv i64 %1046, %1047
  %1049 = mul nuw i64 %1048, %6
  %1050 = getelementptr inbounds i8, ptr %0, i64 %1049
  %1051 = sub i64 0, %1049
  %1052 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %1051
  %1053 = and i64 %1048, 1
  %1054 = icmp eq i64 %1053, 0
  br i1 %1054, label %1057, label %._crit_edge.i327.i.i

._crit_edge.i327.i.i:                             ; preds = %1043
  %.pre.i326.i.i = sub i64 0, %6
  br label %1055

1055:                                             ; preds = %1057, %._crit_edge.i327.i.i
  %.pre-phi.i328.i.i = phi i64 [ %.pre.i326.i.i, %._crit_edge.i327.i.i ], [ %1058, %1057 ]
  %.027.i329.i.i = phi ptr [ %1052, %._crit_edge.i327.i.i ], [ %1060, %1057 ]
  %.025.i330.i.i = phi ptr [ %1050, %._crit_edge.i327.i.i ], [ %1059, %1057 ]
  %.0.i331.i.i = phi i64 [ %1048, %._crit_edge.i327.i.i ], [ %1061, %1057 ]
  %1056 = lshr i64 %.0.i331.i.i, 1
  br label %1062

1057:                                             ; preds = %1043
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1050) #15
  call void %8(ptr nonnull align 1 %1050, ptr nonnull align 1 %1052) #15
  %1058 = sub i64 0, %6
  %1059 = getelementptr inbounds i8, ptr %1050, i64 %1058
  call void %8(ptr nonnull align 1 %1052, ptr nonnull align 1 %10) #15
  %1060 = getelementptr inbounds i8, ptr %1052, i64 %6
  %1061 = add i64 %1048, -1
  br label %1055

1062:                                             ; preds = %1064, %1055
  %lsr.iv2925 = phi i64 [ %lsr.iv.next2926, %1064 ], [ 0, %1055 ]
  %lsr.iv2922 = phi i64 [ %lsr.iv.next2923, %1064 ], [ 0, %1055 ]
  %.1.i336.i.i = phi i64 [ %1056, %1055 ], [ %1065, %1064 ]
  %uglygep2924 = getelementptr i8, ptr %.4.lcssa.i.i25, i64 %lsr.iv2922
  %uglygep2927 = getelementptr i8, ptr %.027.i329.i.i, i64 %lsr.iv2925
  %uglygep2928 = getelementptr i8, ptr %.025.i330.i.i, i64 %lsr.iv2922
  %uglygep2929 = getelementptr i8, ptr %0, i64 %lsr.iv2925
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2929) #15
  call void %8(ptr align 1 %uglygep2929, ptr align 1 %uglygep2924) #15
  call void %8(ptr align 1 %uglygep2924, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2928) #15
  call void %8(ptr align 1 %uglygep2928, ptr align 1 %uglygep2927) #15
  call void %8(ptr align 1 %uglygep2927, ptr nonnull align 1 %10) #15
  %1063 = icmp eq i64 %.1.i336.i.i, 0
  br i1 %1063, label %sort.quad_reversal.exit337.i.i, label %1064

1064:                                             ; preds = %1062
  %1065 = add nsw i64 %.1.i336.i.i, -1
  %lsr.iv.next2923 = add i64 %lsr.iv2922, %.pre-phi.i328.i.i
  %lsr.iv.next2926 = add i64 %lsr.iv2925, %6
  br label %1062

sort.quad_reversal.exit337.i.i:                   ; preds = %1062
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  %1066 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1067 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1068 = ptrtoint ptr %1066 to i64
  %1069 = sub nuw i64 %1067, %1068
  %1070 = udiv i64 %1069, %1047
  %1071 = mul nuw i64 %1070, %6
  %1072 = getelementptr inbounds i8, ptr %1066, i64 %1071
  %1073 = sub i64 0, %1071
  %1074 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1073
  %1075 = and i64 %1070, 1
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1079, label %._crit_edge.i339.i.i

._crit_edge.i339.i.i:                             ; preds = %sort.quad_reversal.exit337.i.i
  %.pre.i338.i.i = sub i64 0, %6
  br label %1077

1077:                                             ; preds = %1079, %._crit_edge.i339.i.i
  %.pre-phi.i340.i.i = phi i64 [ %.pre.i338.i.i, %._crit_edge.i339.i.i ], [ %1080, %1079 ]
  %.027.i341.i.i = phi ptr [ %1074, %._crit_edge.i339.i.i ], [ %1082, %1079 ]
  %.025.i342.i.i = phi ptr [ %1072, %._crit_edge.i339.i.i ], [ %1081, %1079 ]
  %.0.i343.i.i = phi i64 [ %1070, %._crit_edge.i339.i.i ], [ %1083, %1079 ]
  %1078 = lshr i64 %.0.i343.i.i, 1
  br label %1084

1079:                                             ; preds = %sort.quad_reversal.exit337.i.i
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1072) #15
  call void %8(ptr nonnull align 1 %1072, ptr nonnull align 1 %1074) #15
  %1080 = sub i64 0, %6
  %1081 = getelementptr inbounds i8, ptr %1072, i64 %1080
  call void %8(ptr nonnull align 1 %1074, ptr nonnull align 1 %10) #15
  %1082 = getelementptr inbounds i8, ptr %1074, i64 %6
  %1083 = add i64 %1070, -1
  br label %1077

1084:                                             ; preds = %1086, %1077
  %lsr.iv2917 = phi i64 [ %lsr.iv.next2918, %1086 ], [ 0, %1077 ]
  %lsr.iv2914 = phi i64 [ %lsr.iv.next2915, %1086 ], [ 0, %1077 ]
  %.1.i348.i.i = phi i64 [ %1078, %1077 ], [ %1087, %1086 ]
  %uglygep2916 = getelementptr i8, ptr %.4223.lcssa.i.i, i64 %lsr.iv2914
  %uglygep2919 = getelementptr i8, ptr %.027.i341.i.i, i64 %lsr.iv2917
  %uglygep2920 = getelementptr i8, ptr %.025.i342.i.i, i64 %lsr.iv2914
  %uglygep2921 = getelementptr i8, ptr %1066, i64 %lsr.iv2917
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2921) #15
  call void %8(ptr align 1 %uglygep2921, ptr align 1 %uglygep2916) #15
  call void %8(ptr align 1 %uglygep2916, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2920) #15
  call void %8(ptr align 1 %uglygep2920, ptr align 1 %uglygep2919) #15
  call void %8(ptr align 1 %uglygep2919, ptr nonnull align 1 %10) #15
  %1085 = icmp eq i64 %.1.i348.i.i, 0
  br i1 %1085, label %.thread442.thread.thread.i.i, label %1086

1086:                                             ; preds = %1084
  %1087 = add nsw i64 %.1.i348.i.i, -1
  %lsr.iv.next2915 = add i64 %lsr.iv2914, %.pre-phi.i340.i.i
  %lsr.iv.next2918 = add i64 %lsr.iv2917, %6
  br label %1084

.thread442.thread.thread.i.i:                     ; preds = %1084
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %906

1088:                                             ; preds = %921
  %1089 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 1
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1090 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1091 = ptrtoint ptr %1089 to i64
  %1092 = sub nuw i64 %1090, %1091
  %1093 = shl nuw i64 %6, 1
  %1094 = udiv i64 %1092, %1093
  %1095 = mul nuw i64 %1094, %6
  %1096 = getelementptr inbounds i8, ptr %1089, i64 %1095
  %1097 = sub i64 0, %1095
  %1098 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1097
  %1099 = and i64 %1094, 1
  %1100 = icmp eq i64 %1099, 0
  br i1 %1100, label %1103, label %._crit_edge.i351.i.i

._crit_edge.i351.i.i:                             ; preds = %1088
  %.pre.i350.i.i = sub i64 0, %6
  br label %1101

1101:                                             ; preds = %1103, %._crit_edge.i351.i.i
  %.pre-phi.i352.i.i = phi i64 [ %.pre.i350.i.i, %._crit_edge.i351.i.i ], [ %1104, %1103 ]
  %.027.i353.i.i = phi ptr [ %1098, %._crit_edge.i351.i.i ], [ %1106, %1103 ]
  %.025.i354.i.i = phi ptr [ %1096, %._crit_edge.i351.i.i ], [ %1105, %1103 ]
  %.0.i355.i.i = phi i64 [ %1094, %._crit_edge.i351.i.i ], [ %1107, %1103 ]
  %1102 = lshr i64 %.0.i355.i.i, 1
  br label %1108

1103:                                             ; preds = %1088
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1096) #15
  call void %8(ptr nonnull align 1 %1096, ptr nonnull align 1 %1098) #15
  %1104 = sub i64 0, %6
  %1105 = getelementptr inbounds i8, ptr %1096, i64 %1104
  call void %8(ptr nonnull align 1 %1098, ptr nonnull align 1 %10) #15
  %1106 = getelementptr inbounds i8, ptr %1098, i64 %6
  %1107 = add i64 %1094, -1
  br label %1101

1108:                                             ; preds = %1110, %1101
  %lsr.iv2933 = phi i64 [ %lsr.iv.next2934, %1110 ], [ 0, %1101 ]
  %lsr.iv2930 = phi i64 [ %lsr.iv.next2931, %1110 ], [ 0, %1101 ]
  %.1.i360.i.i = phi i64 [ %1102, %1101 ], [ %1111, %1110 ]
  %uglygep2932 = getelementptr i8, ptr %.4223.lcssa.i.i, i64 %lsr.iv2930
  %uglygep2935 = getelementptr i8, ptr %.027.i353.i.i, i64 %lsr.iv2933
  %uglygep2936 = getelementptr i8, ptr %.025.i354.i.i, i64 %lsr.iv2930
  %uglygep2937 = getelementptr i8, ptr %1089, i64 %lsr.iv2933
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2937) #15
  call void %8(ptr align 1 %uglygep2937, ptr align 1 %uglygep2932) #15
  call void %8(ptr align 1 %uglygep2932, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2936) #15
  call void %8(ptr align 1 %uglygep2936, ptr align 1 %uglygep2935) #15
  call void %8(ptr align 1 %uglygep2935, ptr nonnull align 1 %10) #15
  %1109 = icmp eq i64 %.1.i360.i.i, 0
  br i1 %1109, label %sort.quad_reversal.exit361.i.i, label %1110

1110:                                             ; preds = %1108
  %1111 = add nsw i64 %.1.i360.i.i, -1
  %lsr.iv.next2931 = add i64 %lsr.iv2930, %.pre-phi.i352.i.i
  %lsr.iv.next2934 = add i64 %lsr.iv2933, %6
  br label %1108

sort.quad_reversal.exit361.i.i:                   ; preds = %1108
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %944

1112:                                             ; preds = %921
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1113 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1114 = ptrtoint ptr %0 to i64
  %1115 = sub nuw i64 %1113, %1114
  %1116 = shl nuw i64 %6, 1
  %1117 = udiv i64 %1115, %1116
  %1118 = mul nuw i64 %1117, %6
  %1119 = getelementptr inbounds i8, ptr %0, i64 %1118
  %1120 = sub i64 0, %1118
  %1121 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1120
  %1122 = and i64 %1117, 1
  %1123 = icmp eq i64 %1122, 0
  br i1 %1123, label %1126, label %._crit_edge.i363.i.i

._crit_edge.i363.i.i:                             ; preds = %1112
  %.pre.i362.i.i = sub i64 0, %6
  br label %1124

1124:                                             ; preds = %1126, %._crit_edge.i363.i.i
  %.pre-phi.i364.i.i = phi i64 [ %.pre.i362.i.i, %._crit_edge.i363.i.i ], [ %1127, %1126 ]
  %.027.i365.i.i = phi ptr [ %1121, %._crit_edge.i363.i.i ], [ %1129, %1126 ]
  %.025.i366.i.i = phi ptr [ %1119, %._crit_edge.i363.i.i ], [ %1128, %1126 ]
  %.0.i367.i.i = phi i64 [ %1117, %._crit_edge.i363.i.i ], [ %1130, %1126 ]
  %1125 = lshr i64 %.0.i367.i.i, 1
  br label %1131

1126:                                             ; preds = %1112
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1119) #15
  call void %8(ptr nonnull align 1 %1119, ptr nonnull align 1 %1121) #15
  %1127 = sub i64 0, %6
  %1128 = getelementptr inbounds i8, ptr %1119, i64 %1127
  call void %8(ptr nonnull align 1 %1121, ptr nonnull align 1 %10) #15
  %1129 = getelementptr inbounds i8, ptr %1121, i64 %6
  %1130 = add i64 %1117, -1
  br label %1124

1131:                                             ; preds = %1133, %1124
  %lsr.iv2941 = phi i64 [ %lsr.iv.next2942, %1133 ], [ 0, %1124 ]
  %lsr.iv2938 = phi i64 [ %lsr.iv.next2939, %1133 ], [ 0, %1124 ]
  %.1.i372.i.i = phi i64 [ %1125, %1124 ], [ %1134, %1133 ]
  %uglygep2940 = getelementptr i8, ptr %.4223.lcssa.i.i, i64 %lsr.iv2938
  %uglygep2943 = getelementptr i8, ptr %.027.i365.i.i, i64 %lsr.iv2941
  %uglygep2944 = getelementptr i8, ptr %.025.i366.i.i, i64 %lsr.iv2938
  %uglygep2945 = getelementptr i8, ptr %0, i64 %lsr.iv2941
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2945) #15
  call void %8(ptr align 1 %uglygep2945, ptr align 1 %uglygep2940) #15
  call void %8(ptr align 1 %uglygep2940, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2944) #15
  call void %8(ptr align 1 %uglygep2944, ptr align 1 %uglygep2943) #15
  call void %8(ptr align 1 %uglygep2943, ptr nonnull align 1 %10) #15
  %1132 = icmp eq i64 %.1.i372.i.i, 0
  br i1 %1132, label %sort.quad_reversal.exit373.i.i, label %1133

1133:                                             ; preds = %1131
  %1134 = add nsw i64 %.1.i372.i.i, -1
  %lsr.iv.next2939 = add i64 %lsr.iv2938, %.pre-phi.i364.i.i
  %lsr.iv.next2942 = add i64 %lsr.iv2941, %6
  br label %1131

sort.quad_reversal.exit373.i.i:                   ; preds = %1131
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %sort.flux_analyze__anon_14346.exit.i

1135:                                             ; preds = %sort.quad_reversal.exit385.i.i, %944
  %.5233.i.i = phi i64 [ 0, %sort.quad_reversal.exit385.i.i ], [ %.2230.lcssa.i.i, %944 ]
  %1136 = icmp eq i64 %891, 1
  %1137 = icmp ne i64 %.5239.i.i, 0
  %1138 = and i1 %1136, %1137
  br i1 %1138, label %1165, label %.thread442.i.i

1139:                                             ; preds = %944
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1140 = ptrtoint ptr %.3.lcssa.i.i26 to i64
  %1141 = ptrtoint ptr %0 to i64
  %1142 = sub nuw i64 %1140, %1141
  %1143 = shl nuw i64 %6, 1
  %1144 = udiv i64 %1142, %1143
  %1145 = mul nuw i64 %1144, %6
  %1146 = getelementptr inbounds i8, ptr %0, i64 %1145
  %1147 = sub i64 0, %1145
  %1148 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %1147
  %1149 = and i64 %1144, 1
  %1150 = icmp eq i64 %1149, 0
  br i1 %1150, label %1153, label %._crit_edge.i375.i.i

._crit_edge.i375.i.i:                             ; preds = %1139
  %.pre.i374.i.i = sub i64 0, %6
  br label %1151

1151:                                             ; preds = %1153, %._crit_edge.i375.i.i
  %.pre-phi.i376.i.i = phi i64 [ %.pre.i374.i.i, %._crit_edge.i375.i.i ], [ %1154, %1153 ]
  %.027.i377.i.i = phi ptr [ %1148, %._crit_edge.i375.i.i ], [ %1156, %1153 ]
  %.025.i378.i.i = phi ptr [ %1146, %._crit_edge.i375.i.i ], [ %1155, %1153 ]
  %.0.i379.i.i = phi i64 [ %1144, %._crit_edge.i375.i.i ], [ %1157, %1153 ]
  %1152 = lshr i64 %.0.i379.i.i, 1
  br label %1158

1153:                                             ; preds = %1139
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1146) #15
  call void %8(ptr nonnull align 1 %1146, ptr nonnull align 1 %1148) #15
  %1154 = sub i64 0, %6
  %1155 = getelementptr inbounds i8, ptr %1146, i64 %1154
  call void %8(ptr nonnull align 1 %1148, ptr nonnull align 1 %10) #15
  %1156 = getelementptr inbounds i8, ptr %1148, i64 %6
  %1157 = add i64 %1144, -1
  br label %1151

1158:                                             ; preds = %1160, %1151
  %lsr.iv2877 = phi i64 [ %lsr.iv.next2878, %1160 ], [ 0, %1151 ]
  %lsr.iv2874 = phi i64 [ %lsr.iv.next2875, %1160 ], [ 0, %1151 ]
  %.1.i384.i.i = phi i64 [ %1152, %1151 ], [ %1161, %1160 ]
  %uglygep2876 = getelementptr i8, ptr %.3.lcssa.i.i26, i64 %lsr.iv2874
  %uglygep2879 = getelementptr i8, ptr %.027.i377.i.i, i64 %lsr.iv2877
  %uglygep2880 = getelementptr i8, ptr %.025.i378.i.i, i64 %lsr.iv2874
  %uglygep2881 = getelementptr i8, ptr %0, i64 %lsr.iv2877
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2881) #15
  call void %8(ptr align 1 %uglygep2881, ptr align 1 %uglygep2876) #15
  call void %8(ptr align 1 %uglygep2876, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2880) #15
  call void %8(ptr align 1 %uglygep2880, ptr align 1 %uglygep2879) #15
  call void %8(ptr align 1 %uglygep2879, ptr nonnull align 1 %10) #15
  %1159 = icmp eq i64 %.1.i384.i.i, 0
  br i1 %1159, label %sort.quad_reversal.exit385.i.i, label %1160

1160:                                             ; preds = %1158
  %1161 = add nsw i64 %.1.i384.i.i, -1
  %lsr.iv.next2875 = add i64 %lsr.iv2874, %.pre-phi.i376.i.i
  %lsr.iv.next2878 = add i64 %lsr.iv2877, %6
  br label %1158

sort.quad_reversal.exit385.i.i:                   ; preds = %1158
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %1135

.thread442.i.i:                                   ; preds = %sort.quad_reversal.exit397.i.i, %1135, %sort.quad_reversal.exit.i.i49
  %.5233449.i.i = phi i64 [ %.5233.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5233.i.i, %1135 ], [ 0, %sort.quad_reversal.exit.i.i49 ]
  %.5253439448.i.i = phi i64 [ %.5253.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5253.i.i, %1135 ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit.i.i49 ]
  %.5246440447.i.i = phi i64 [ %.5246.i.i, %sort.quad_reversal.exit397.i.i ], [ %.5246.i.i, %1135 ], [ %.3244.lcssa.i.i, %sort.quad_reversal.exit.i.i49 ]
  %.6240.i.i = phi i64 [ 0, %sort.quad_reversal.exit397.i.i ], [ %.5239.i.i, %1135 ], [ 0, %sort.quad_reversal.exit.i.i49 ]
  %1162 = icmp eq i64 %893, 1
  %1163 = icmp ne i64 %.5246440447.i.i, 0
  %1164 = and i1 %1162, %1163
  br i1 %1164, label %1191, label %.thread442.thread.i.i

1165:                                             ; preds = %1135
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1166 = ptrtoint ptr %.4.lcssa.i.i25 to i64
  %1167 = ptrtoint ptr %926 to i64
  %1168 = sub nuw i64 %1166, %1167
  %1169 = shl nuw i64 %6, 1
  %1170 = udiv i64 %1168, %1169
  %1171 = mul nuw i64 %1170, %6
  %1172 = getelementptr inbounds i8, ptr %926, i64 %1171
  %1173 = sub i64 0, %1171
  %1174 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %1173
  %1175 = and i64 %1170, 1
  %1176 = icmp eq i64 %1175, 0
  br i1 %1176, label %1179, label %._crit_edge.i387.i.i

._crit_edge.i387.i.i:                             ; preds = %1165
  %.pre.i386.i.i = sub i64 0, %6
  br label %1177

1177:                                             ; preds = %1179, %._crit_edge.i387.i.i
  %.pre-phi.i388.i.i = phi i64 [ %.pre.i386.i.i, %._crit_edge.i387.i.i ], [ %1180, %1179 ]
  %.027.i389.i.i = phi ptr [ %1174, %._crit_edge.i387.i.i ], [ %1182, %1179 ]
  %.025.i390.i.i = phi ptr [ %1172, %._crit_edge.i387.i.i ], [ %1181, %1179 ]
  %.0.i391.i.i = phi i64 [ %1170, %._crit_edge.i387.i.i ], [ %1183, %1179 ]
  %1178 = lshr i64 %.0.i391.i.i, 1
  br label %1184

1179:                                             ; preds = %1165
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1172) #15
  call void %8(ptr nonnull align 1 %1172, ptr nonnull align 1 %1174) #15
  %1180 = sub i64 0, %6
  %1181 = getelementptr inbounds i8, ptr %1172, i64 %1180
  call void %8(ptr nonnull align 1 %1174, ptr nonnull align 1 %10) #15
  %1182 = getelementptr inbounds i8, ptr %1174, i64 %6
  %1183 = add i64 %1170, -1
  br label %1177

1184:                                             ; preds = %1186, %1177
  %lsr.iv2869 = phi i64 [ %lsr.iv.next2870, %1186 ], [ 0, %1177 ]
  %lsr.iv2866 = phi i64 [ %lsr.iv.next2867, %1186 ], [ 0, %1177 ]
  %.1.i396.i.i = phi i64 [ %1178, %1177 ], [ %1187, %1186 ]
  %uglygep2868 = getelementptr i8, ptr %.4.lcssa.i.i25, i64 %lsr.iv2866
  %uglygep2871 = getelementptr i8, ptr %.027.i389.i.i, i64 %lsr.iv2869
  %uglygep2872 = getelementptr i8, ptr %.025.i390.i.i, i64 %lsr.iv2866
  %uglygep2873 = getelementptr i8, ptr %926, i64 %lsr.iv2869
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2873) #15
  call void %8(ptr align 1 %uglygep2873, ptr align 1 %uglygep2868) #15
  call void %8(ptr align 1 %uglygep2868, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2872) #15
  call void %8(ptr align 1 %uglygep2872, ptr align 1 %uglygep2871) #15
  call void %8(ptr align 1 %uglygep2871, ptr nonnull align 1 %10) #15
  %1185 = icmp eq i64 %.1.i396.i.i, 0
  br i1 %1185, label %sort.quad_reversal.exit397.i.i, label %1186

1186:                                             ; preds = %1184
  %1187 = add nsw i64 %.1.i396.i.i, -1
  %lsr.iv.next2867 = add i64 %lsr.iv2866, %.pre-phi.i388.i.i
  %lsr.iv.next2870 = add i64 %lsr.iv2869, %6
  br label %1184

sort.quad_reversal.exit397.i.i:                   ; preds = %1184
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.i.i

.thread442.thread.i.i:                            ; preds = %sort.quad_reversal.exit409.i.i, %.thread442.i.i, %sort.quad_reversal.exit313.i.i
  %.6240456.i.i = phi i64 [ %.6240.i.i, %sort.quad_reversal.exit409.i.i ], [ %.6240.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %.5253439448455.i.i = phi i64 [ %.5253439448.i.i, %sort.quad_reversal.exit409.i.i ], [ %.5253439448.i.i, %.thread442.i.i ], [ %.3251.lcssa.i.i, %sort.quad_reversal.exit313.i.i ]
  %.5233449454.i.i = phi i64 [ %.5233449.i.i, %sort.quad_reversal.exit409.i.i ], [ %.5233449.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %.6247.i.i = phi i64 [ 0, %sort.quad_reversal.exit409.i.i ], [ %.5246440447.i.i, %.thread442.i.i ], [ 0, %sort.quad_reversal.exit313.i.i ]
  %1188 = icmp eq i64 %895, 1
  %1189 = icmp ne i64 %.5253439448455.i.i, 0
  %1190 = and i1 %1188, %1189
  br i1 %1190, label %1214, label %906

1191:                                             ; preds = %.thread442.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1192 = ptrtoint ptr %.4218.lcssa.i.i to i64
  %1193 = ptrtoint ptr %931 to i64
  %1194 = sub nuw i64 %1192, %1193
  %1195 = shl nuw i64 %6, 1
  %1196 = udiv i64 %1194, %1195
  %1197 = mul nuw i64 %1196, %6
  %1198 = getelementptr inbounds i8, ptr %931, i64 %1197
  %1199 = sub i64 0, %1197
  %1200 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %1199
  %1201 = and i64 %1196, 1
  %1202 = icmp eq i64 %1201, 0
  br i1 %1202, label %1205, label %._crit_edge.i399.i.i

._crit_edge.i399.i.i:                             ; preds = %1191
  %.pre.i398.i.i = sub i64 0, %6
  br label %1203

1203:                                             ; preds = %1205, %._crit_edge.i399.i.i
  %.pre-phi.i400.i.i = phi i64 [ %.pre.i398.i.i, %._crit_edge.i399.i.i ], [ %1206, %1205 ]
  %.027.i401.i.i = phi ptr [ %1200, %._crit_edge.i399.i.i ], [ %1208, %1205 ]
  %.025.i402.i.i = phi ptr [ %1198, %._crit_edge.i399.i.i ], [ %1207, %1205 ]
  %.0.i403.i.i = phi i64 [ %1196, %._crit_edge.i399.i.i ], [ %1209, %1205 ]
  %1204 = lshr i64 %.0.i403.i.i, 1
  br label %1210

1205:                                             ; preds = %1191
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1198) #15
  call void %8(ptr nonnull align 1 %1198, ptr nonnull align 1 %1200) #15
  %1206 = sub i64 0, %6
  %1207 = getelementptr inbounds i8, ptr %1198, i64 %1206
  call void %8(ptr nonnull align 1 %1200, ptr nonnull align 1 %10) #15
  %1208 = getelementptr inbounds i8, ptr %1200, i64 %6
  %1209 = add i64 %1196, -1
  br label %1203

1210:                                             ; preds = %1212, %1203
  %lsr.iv2861 = phi i64 [ %lsr.iv.next2862, %1212 ], [ 0, %1203 ]
  %lsr.iv2858 = phi i64 [ %lsr.iv.next2859, %1212 ], [ 0, %1203 ]
  %.1.i408.i.i = phi i64 [ %1204, %1203 ], [ %1213, %1212 ]
  %uglygep2860 = getelementptr i8, ptr %.4218.lcssa.i.i, i64 %lsr.iv2858
  %uglygep2863 = getelementptr i8, ptr %.027.i401.i.i, i64 %lsr.iv2861
  %uglygep2864 = getelementptr i8, ptr %.025.i402.i.i, i64 %lsr.iv2858
  %uglygep2865 = getelementptr i8, ptr %931, i64 %lsr.iv2861
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2865) #15
  call void %8(ptr align 1 %uglygep2865, ptr align 1 %uglygep2860) #15
  call void %8(ptr align 1 %uglygep2860, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2864) #15
  call void %8(ptr align 1 %uglygep2864, ptr align 1 %uglygep2863) #15
  call void %8(ptr align 1 %uglygep2863, ptr nonnull align 1 %10) #15
  %1211 = icmp eq i64 %.1.i408.i.i, 0
  br i1 %1211, label %sort.quad_reversal.exit409.i.i, label %1212

1212:                                             ; preds = %1210
  %1213 = add nsw i64 %.1.i408.i.i, -1
  %lsr.iv.next2859 = add i64 %lsr.iv2858, %.pre-phi.i400.i.i
  %lsr.iv.next2862 = add i64 %lsr.iv2861, %6
  br label %1210

sort.quad_reversal.exit409.i.i:                   ; preds = %1210
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %.thread442.thread.i.i

1214:                                             ; preds = %.thread442.thread.i.i
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %11)
  %1215 = ptrtoint ptr %.4223.lcssa.i.i to i64
  %1216 = ptrtoint ptr %935 to i64
  %1217 = sub nuw i64 %1215, %1216
  %1218 = shl nuw i64 %6, 1
  %1219 = udiv i64 %1217, %1218
  %1220 = mul nuw i64 %1219, %6
  %1221 = getelementptr inbounds i8, ptr %935, i64 %1220
  %1222 = sub i64 0, %1220
  %1223 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i, i64 %1222
  %1224 = and i64 %1219, 1
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1228, label %._crit_edge.i411.i.i

._crit_edge.i411.i.i:                             ; preds = %1214
  %.pre.i410.i.i = sub i64 0, %6
  br label %1226

1226:                                             ; preds = %1228, %._crit_edge.i411.i.i
  %.pre-phi.i412.i.i = phi i64 [ %.pre.i410.i.i, %._crit_edge.i411.i.i ], [ %1229, %1228 ]
  %.027.i413.i.i = phi ptr [ %1223, %._crit_edge.i411.i.i ], [ %1231, %1228 ]
  %.025.i414.i.i = phi ptr [ %1221, %._crit_edge.i411.i.i ], [ %1230, %1228 ]
  %.0.i415.i.i = phi i64 [ %1219, %._crit_edge.i411.i.i ], [ %1232, %1228 ]
  %1227 = lshr i64 %.0.i415.i.i, 1
  br label %1233

1228:                                             ; preds = %1214
  call void %8(ptr nonnull align 1 %10, ptr nonnull align 1 %1221) #15
  call void %8(ptr nonnull align 1 %1221, ptr nonnull align 1 %1223) #15
  %1229 = sub i64 0, %6
  %1230 = getelementptr inbounds i8, ptr %1221, i64 %1229
  call void %8(ptr nonnull align 1 %1223, ptr nonnull align 1 %10) #15
  %1231 = getelementptr inbounds i8, ptr %1223, i64 %6
  %1232 = add i64 %1219, -1
  br label %1226

1233:                                             ; preds = %1235, %1226
  %lsr.iv2853 = phi i64 [ %lsr.iv.next2854, %1235 ], [ 0, %1226 ]
  %lsr.iv2850 = phi i64 [ %lsr.iv.next2851, %1235 ], [ 0, %1226 ]
  %.1.i420.i.i = phi i64 [ %1227, %1226 ], [ %1236, %1235 ]
  %uglygep2852 = getelementptr i8, ptr %.4223.lcssa.i.i, i64 %lsr.iv2850
  %uglygep2855 = getelementptr i8, ptr %.027.i413.i.i, i64 %lsr.iv2853
  %uglygep2856 = getelementptr i8, ptr %.025.i414.i.i, i64 %lsr.iv2850
  %uglygep2857 = getelementptr i8, ptr %935, i64 %lsr.iv2853
  call void %8(ptr nonnull align 1 %11, ptr align 1 %uglygep2857) #15
  call void %8(ptr align 1 %uglygep2857, ptr align 1 %uglygep2852) #15
  call void %8(ptr align 1 %uglygep2852, ptr nonnull align 1 %11) #15
  call void %8(ptr nonnull align 1 %10, ptr align 1 %uglygep2856) #15
  call void %8(ptr align 1 %uglygep2856, ptr align 1 %uglygep2855) #15
  call void %8(ptr align 1 %uglygep2855, ptr nonnull align 1 %10) #15
  %1234 = icmp eq i64 %.1.i420.i.i, 0
  br i1 %1234, label %sort.quad_reversal.exit421.i.i, label %1235

1235:                                             ; preds = %1233
  %1236 = add nsw i64 %.1.i420.i.i, -1
  %lsr.iv.next2851 = add i64 %lsr.iv2850, %.pre-phi.i412.i.i
  %lsr.iv.next2854 = add i64 %lsr.iv2853, %6
  br label %1233

sort.quad_reversal.exit421.i.i:                   ; preds = %1233
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %11)
  br label %906

1237:                                             ; preds = %1245, %906
  %.0265.i.i50 = phi i4 [ 1, %1245 ], [ %919, %906 ]
  %.0264.i.i51 = phi i4 [ 1, %1245 ], [ %916, %906 ]
  %.0263.i.i = phi i4 [ 1, %1245 ], [ %913, %906 ]
  %.0262.i.i = phi i4 [ 1, %1245 ], [ %910, %906 ]
  %1238 = shl nuw nsw i4 %.0263.i.i, 1
  %1239 = shl nuw nsw i4 %.0264.i.i51, 2
  %1240 = or i4 %1238, %1239
  %1241 = shl nuw i4 %.0265.i.i50, 3
  %1242 = or i4 %1240, %1241
  %1243 = or i4 %1242, %.0262.i.i
  %1244 = zext i4 %1243 to i32
  switch i32 %1244, label %1250 [
    i32 0, label %1251
    i32 1, label %1253
    i32 2, label %1265
    i32 3, label %1278
    i32 4, label %1297
    i32 8, label %1310
    i32 9, label %1320
    i32 12, label %1340
    i32 5, label %1358
    i32 6, label %1358
    i32 7, label %1358
    i32 10, label %1358
    i32 11, label %1358
    i32 13, label %1358
    i32 14, label %1358
    i32 15, label %1358
  ]

1245:                                             ; preds = %906
  br label %1237

sort.quadsort_swap__anon_14858.exit426.i.i:       ; preds = %1406, %1404, %1403, %1396, %1395, %1356, %1354, %1353, %sort.quadsort_swap__anon_14858.exit429.i.i, %1338, %1336, %1335, %sort.quadsort_swap__anon_14858.exit427.i.i, %1318, %1316, %1315, %1310, %sort.quadsort_swap__anon_14858.exit425.i.i, %sort.quadsort_swap__anon_14858.exit424.i.i, %sort.quadsort_swap__anon_14858.exit422.i.i, %sort.quadsort_swap__anon_14858.exit.i.i
  %1246 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1247 = call i8 %2(ptr align 1 %3, ptr align 1 %.3.lcssa.i.i26, ptr align 1 %1246) #15
  %.not269.i.i52 = icmp eq i8 %1247, 1
  %1248 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1249 = call i8 %2(ptr align 1 %3, ptr align 1 %.4218.lcssa.i.i, ptr align 1 %1248) #15
  br i1 %.not269.i.i52, label %1411, label %1409

1250:                                             ; preds = %1237
  unreachable

1251:                                             ; preds = %1237
  %1252 = getelementptr inbounds i8, ptr %85, i64 %84
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1252, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.flux_analyze__anon_14346.exit.i

1253:                                             ; preds = %1237
  %.not286.i.i54 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not286.i.i54, label %sort.quadsort_swap__anon_14858.exit.i.i, label %1258

sort.quadsort_swap__anon_14858.exit.i.i:          ; preds = %1263, %1261, %1260, %1253
  %1254 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1255 = add nuw i64 %766, %767
  %1256 = mul nuw i64 %1255, %6
  %1257 = getelementptr inbounds i8, ptr %85, i64 %1256
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1254, ptr nonnull align 1 %85, ptr nonnull align 1 %1254, ptr nonnull align 1 %1257, i64 %1255, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1258:                                             ; preds = %1253
  %1259 = icmp ult i64 %1, 384
  br i1 %1259, label %1260, label %1261

1260:                                             ; preds = %1258
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit.i.i

1261:                                             ; preds = %1258
  %1262 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1262, label %1263, label %sort.quadsort_swap__anon_14858.exit.i.i

1263:                                             ; preds = %1261
  %1264 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, i64 %1264, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit.i.i

1265:                                             ; preds = %1237
  %1266 = getelementptr inbounds i8, ptr %85, i64 %770
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1266, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  %.not285.i.i55 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not285.i.i55, label %sort.quadsort_swap__anon_14858.exit422.i.i, label %1270

sort.quadsort_swap__anon_14858.exit422.i.i:       ; preds = %1276, %1274, %1273, %1265
  %1267 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1268 = mul nuw i64 %767, %6
  %1269 = getelementptr inbounds i8, ptr %85, i64 %1268
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1267, ptr nonnull align 1 %85, ptr nonnull align 1 %1267, ptr nonnull align 1 %1269, i64 %767, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1270:                                             ; preds = %1265
  %1271 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1272 = icmp ult i64 %766, 96
  br i1 %1272, label %1273, label %1274

1273:                                             ; preds = %1270
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1271, i64 %766, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit422.i.i

1274:                                             ; preds = %1270
  %1275 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1271, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1275, label %1276, label %sort.quadsort_swap__anon_14858.exit422.i.i

1276:                                             ; preds = %1274
  %1277 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1271, i64 %766, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1271, i64 %766, ptr nonnull align 1 %85, i64 %1, i64 %1277, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit422.i.i

1278:                                             ; preds = %1237
  %.not283.i.i56 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not283.i.i56, label %sort.quadsort_swap__anon_14858.exit423.i.i, label %1279

sort.quadsort_swap__anon_14858.exit423.i.i:       ; preds = %1284, %1282, %1281, %1278
  %.not284.i.i57 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not284.i.i57, label %sort.quadsort_swap__anon_14858.exit424.i.i, label %1289

1279:                                             ; preds = %1278
  %1280 = icmp ult i64 %1, 384
  br i1 %1280, label %1281, label %1282

1281:                                             ; preds = %1279
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit423.i.i

1282:                                             ; preds = %1279
  %1283 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1283, label %1284, label %sort.quadsort_swap__anon_14858.exit423.i.i

1284:                                             ; preds = %1282
  %1285 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, i64 %1285, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit423.i.i

sort.quadsort_swap__anon_14858.exit424.i.i:       ; preds = %1295, %1293, %1292, %sort.quadsort_swap__anon_14858.exit423.i.i
  %1286 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1287 = mul nuw i64 %767, %6
  %1288 = getelementptr inbounds i8, ptr %85, i64 %1287
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1286, ptr nonnull align 1 %85, ptr nonnull align 1 %1286, ptr nonnull align 1 %1288, i64 %767, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1289:                                             ; preds = %sort.quadsort_swap__anon_14858.exit423.i.i
  %1290 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1291 = icmp ult i64 %766, 96
  br i1 %1291, label %1292, label %1293

1292:                                             ; preds = %1289
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1290, i64 %766, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit424.i.i

1293:                                             ; preds = %1289
  %1294 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1290, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1294, label %1295, label %sort.quadsort_swap__anon_14858.exit424.i.i

1295:                                             ; preds = %1293
  %1296 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1290, i64 %766, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1290, i64 %766, ptr nonnull align 1 %85, i64 %1, i64 %1296, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit424.i.i

1297:                                             ; preds = %1237
  %1298 = getelementptr inbounds i8, ptr %85, i64 %772
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1298, i64 %764, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  %.not282.i.i58 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not282.i.i58, label %sort.quadsort_swap__anon_14858.exit425.i.i, label %1302

sort.quadsort_swap__anon_14858.exit425.i.i:       ; preds = %1308, %1306, %1305, %1297
  %1299 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1300 = mul nuw i64 %769, %6
  %1301 = getelementptr inbounds i8, ptr %85, i64 %1300
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1299, ptr nonnull align 1 %85, ptr nonnull align 1 %1299, ptr nonnull align 1 %1301, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1302:                                             ; preds = %1297
  %1303 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1304 = icmp ult i64 %767, 192
  br i1 %1304, label %1305, label %1306

1305:                                             ; preds = %1302
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1303, i64 %768, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit425.i.i

1306:                                             ; preds = %1302
  %1307 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1303, i64 %768, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1307, label %1308, label %sort.quadsort_swap__anon_14858.exit425.i.i

1308:                                             ; preds = %1306
  %1309 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1303, i64 %768, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1303, i64 %768, ptr nonnull align 1 %85, i64 %1, i64 %1309, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit425.i.i

1310:                                             ; preds = %1237
  %1311 = getelementptr inbounds i8, ptr %85, i64 %775
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1311, i64 %774, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  %.not281.i.i59 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not281.i.i59, label %sort.quadsort_swap__anon_14858.exit426.i.i, label %1312

1312:                                             ; preds = %1310
  %1313 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1314 = icmp ult i64 %769, 96
  br i1 %1314, label %1315, label %1316

1315:                                             ; preds = %1312
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1313, i64 %769, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1316:                                             ; preds = %1312
  %1317 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1313, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1317, label %1318, label %sort.quadsort_swap__anon_14858.exit426.i.i

1318:                                             ; preds = %1316
  %1319 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1313, i64 %769, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1313, i64 %769, ptr nonnull align 1 %85, i64 %1, i64 %1319, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1320:                                             ; preds = %1237
  %.not279.i.i60 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not279.i.i60, label %sort.quadsort_swap__anon_14858.exit427.i.i, label %1325

sort.quadsort_swap__anon_14858.exit427.i.i:       ; preds = %1330, %1328, %1327, %1320
  %1321 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1322 = add nuw i64 %768, %766
  %1323 = mul nuw i64 %1322, %6
  %1324 = getelementptr inbounds i8, ptr %85, i64 %1323
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1321, ptr nonnull align 1 %85, ptr nonnull align 1 %1321, ptr nonnull align 1 %1324, i64 %1322, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  %.not280.i.i61 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not280.i.i61, label %sort.quadsort_swap__anon_14858.exit426.i.i, label %1332

1325:                                             ; preds = %1320
  %1326 = icmp ult i64 %1, 384
  br i1 %1326, label %1327, label %1328

1327:                                             ; preds = %1325
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit427.i.i

1328:                                             ; preds = %1325
  %1329 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1329, label %1330, label %sort.quadsort_swap__anon_14858.exit427.i.i

1330:                                             ; preds = %1328
  %1331 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, i64 %1331, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit427.i.i

1332:                                             ; preds = %sort.quadsort_swap__anon_14858.exit427.i.i
  %1333 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1334 = icmp ult i64 %769, 96
  br i1 %1334, label %1335, label %1336

1335:                                             ; preds = %1332
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1333, i64 %769, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1336:                                             ; preds = %1332
  %1337 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1333, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1337, label %1338, label %sort.quadsort_swap__anon_14858.exit426.i.i

1338:                                             ; preds = %1336
  %1339 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1333, i64 %769, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1333, i64 %769, ptr nonnull align 1 %85, i64 %1, i64 %1339, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1340:                                             ; preds = %1237
  %1341 = getelementptr inbounds i8, ptr %85, i64 %772
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1341, i64 %764, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  %.not277.i.i62 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not277.i.i62, label %sort.quadsort_swap__anon_14858.exit429.i.i, label %1342

sort.quadsort_swap__anon_14858.exit429.i.i:       ; preds = %1348, %1346, %1345, %1340
  %.not278.i.i63 = icmp eq i64 %.4252.i.i, 0
  br i1 %.not278.i.i63, label %sort.quadsort_swap__anon_14858.exit426.i.i, label %1350

1342:                                             ; preds = %1340
  %1343 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1344 = icmp ult i64 %767, 192
  br i1 %1344, label %1345, label %1346

1345:                                             ; preds = %1342
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1343, i64 %768, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit429.i.i

1346:                                             ; preds = %1342
  %1347 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1343, i64 %768, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1347, label %1348, label %sort.quadsort_swap__anon_14858.exit429.i.i

1348:                                             ; preds = %1346
  %1349 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1343, i64 %768, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1343, i64 %768, ptr nonnull align 1 %85, i64 %1, i64 %1349, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit429.i.i

1350:                                             ; preds = %sort.quadsort_swap__anon_14858.exit429.i.i
  %1351 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1352 = icmp ult i64 %769, 96
  br i1 %1352, label %1353, label %1354

1353:                                             ; preds = %1350
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1351, i64 %769, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1354:                                             ; preds = %1350
  %1355 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1351, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1355, label %1356, label %sort.quadsort_swap__anon_14858.exit426.i.i

1356:                                             ; preds = %1354
  %1357 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1351, i64 %769, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1351, i64 %769, ptr nonnull align 1 %85, i64 %1, i64 %1357, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1358:                                             ; preds = %1237, %1237, %1237, %1237, %1237, %1237, %1237, %1237
  %.not.i.i64 = icmp eq i4 %.0262.i.i, 0
  br i1 %.not.i.i64, label %1360, label %1359

sort.quadsort_swap__anon_14858.exit431.i.i:       ; preds = %1367, %1365, %1364, %1360, %1359
  %.not266.i.i = icmp eq i4 %.0263.i.i, 0
  br i1 %.not266.i.i, label %1370, label %1369

1359:                                             ; preds = %1358
  %.not276.i.i65 = icmp eq i64 %.3231.i.i, 0
  br i1 %.not276.i.i65, label %sort.quadsort_swap__anon_14858.exit431.i.i, label %1362

1360:                                             ; preds = %1358
  %1361 = getelementptr inbounds i8, ptr %85, i64 %770
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %85, ptr nonnull align 1 %0, ptr nonnull align 1 %1361, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit431.i.i

1362:                                             ; preds = %1359
  %1363 = icmp ult i64 %1, 384
  br i1 %1363, label %1364, label %1365

1364:                                             ; preds = %1362
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit431.i.i

1365:                                             ; preds = %1362
  %1366 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %765, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1366, label %1367, label %sort.quadsort_swap__anon_14858.exit431.i.i

1367:                                             ; preds = %1365
  %1368 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %765, ptr nonnull align 1 %85, i64 %1, i64 %1368, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit431.i.i

sort.quadsort_swap__anon_14858.exit432.i.i:       ; preds = %1380, %1378, %1377, %1370, %1369
  %.not267.i.i = icmp eq i4 %.0264.i.i51, 0
  br i1 %.not267.i.i, label %1383, label %1382

1369:                                             ; preds = %sort.quadsort_swap__anon_14858.exit431.i.i
  %.not275.i.i66 = icmp eq i64 %.4238.i.i, 0
  br i1 %.not275.i.i66, label %sort.quadsort_swap__anon_14858.exit432.i.i, label %1374

1370:                                             ; preds = %sort.quadsort_swap__anon_14858.exit431.i.i
  %1371 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1372 = mul nuw i64 %766, %6
  %1373 = getelementptr inbounds i8, ptr %85, i64 %1372
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1371, ptr nonnull align 1 %85, ptr nonnull align 1 %1371, ptr nonnull align 1 %1373, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit432.i.i

1374:                                             ; preds = %1369
  %1375 = getelementptr inbounds i8, ptr %.3.lcssa.i.i26, i64 %6
  %1376 = icmp ult i64 %766, 96
  br i1 %1376, label %1377, label %1378

1377:                                             ; preds = %1374
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1375, i64 %766, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit432.i.i

1378:                                             ; preds = %1374
  %1379 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1375, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1379, label %1380, label %sort.quadsort_swap__anon_14858.exit432.i.i

1380:                                             ; preds = %1378
  %1381 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1375, i64 %766, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1375, i64 %766, ptr nonnull align 1 %85, i64 %1, i64 %1381, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit432.i.i

sort.quadsort_swap__anon_14858.exit433.i.i:       ; preds = %1393, %1391, %1390, %1383, %1382
  %.not268.i.i67 = icmp eq i4 %.0265.i.i50, 0
  br i1 %.not268.i.i67, label %1396, label %1395

1382:                                             ; preds = %sort.quadsort_swap__anon_14858.exit432.i.i
  %.not274.i.i68 = icmp eq i64 %.4245.i.i, 0
  br i1 %.not274.i.i68, label %sort.quadsort_swap__anon_14858.exit433.i.i, label %1387

1383:                                             ; preds = %sort.quadsort_swap__anon_14858.exit432.i.i
  %1384 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1385 = mul nuw i64 %768, %6
  %1386 = getelementptr inbounds i8, ptr %85, i64 %1385
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1384, ptr nonnull align 1 %85, ptr nonnull align 1 %1384, ptr nonnull align 1 %1386, i64 %768, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit433.i.i

1387:                                             ; preds = %1382
  %1388 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1389 = icmp ult i64 %767, 192
  br i1 %1389, label %1390, label %1391

1390:                                             ; preds = %1387
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1388, i64 %768, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit433.i.i

1391:                                             ; preds = %1387
  %1392 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1388, i64 %768, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1392, label %1393, label %sort.quadsort_swap__anon_14858.exit433.i.i

1393:                                             ; preds = %1391
  %1394 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1388, i64 %768, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1388, i64 %768, ptr nonnull align 1 %85, i64 %1, i64 %1394, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit433.i.i

1395:                                             ; preds = %sort.quadsort_swap__anon_14858.exit433.i.i
  %.not273.i.i = icmp eq i64 %.4252.i.i, 0
  br i1 %.not273.i.i, label %sort.quadsort_swap__anon_14858.exit426.i.i, label %1400

1396:                                             ; preds = %sort.quadsort_swap__anon_14858.exit433.i.i
  %1397 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1398 = mul nuw i64 %769, %6
  %1399 = getelementptr inbounds i8, ptr %85, i64 %1398
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %1397, ptr nonnull align 1 %85, ptr nonnull align 1 %1397, ptr nonnull align 1 %1399, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1400:                                             ; preds = %1395
  %1401 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i, i64 %6
  %1402 = icmp ult i64 %769, 96
  br i1 %1402, label %1403, label %1404

1403:                                             ; preds = %1400
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %1401, i64 %769, ptr nonnull align 1 %85, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1404:                                             ; preds = %1400
  %1405 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %1401, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br i1 %1405, label %1406, label %sort.quadsort_swap__anon_14858.exit426.i.i

1406:                                             ; preds = %1404
  %1407 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %1401, i64 %769, ptr nonnull align 1 %85, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %1401, i64 %769, ptr nonnull align 1 %85, i64 %1, i64 %1407, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit426.i.i

1408:                                             ; preds = %1422, %1420, %1419, %1417
  call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %0, ptr nonnull align 1 %85, i64 %764, i64 %767, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %sort.flux_analyze__anon_14346.exit.i

1409:                                             ; preds = %sort.quadsort_swap__anon_14858.exit426.i.i
  %1410 = icmp eq i8 %1249, 1
  br i1 %1410, label %1417, label %1414

1411:                                             ; preds = %sort.quadsort_swap__anon_14858.exit426.i.i
  %1412 = icmp eq i8 %1249, 1
  %1413 = getelementptr inbounds i8, ptr %85, i64 %772
  br i1 %1412, label %1422, label %1420

1414:                                             ; preds = %1409
  %1415 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  %1416 = call i8 %2(ptr align 1 %3, ptr align 1 %.4.lcssa.i.i25, ptr align 1 %1415) #15
  %.not272.i.i69 = icmp eq i8 %1416, 1
  br i1 %.not272.i.i69, label %1419, label %sort.flux_analyze__anon_14346.exit.i

1417:                                             ; preds = %1409
  %1418 = getelementptr inbounds i8, ptr %85, i64 %772
  call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %1418, ptr nonnull align 1 %773, i64 %768, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %772, i1 false)
  br label %1408

1419:                                             ; preds = %1414
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %84, i1 false)
  br label %1408

1420:                                             ; preds = %1411
  %1421 = mul nuw i64 %767, %6
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1413, ptr nonnull align 1 %773, i64 %1421, i1 false)
  call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %765, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %1408

1422:                                             ; preds = %1411
  %1423 = getelementptr inbounds i8, ptr %.4.lcssa.i.i25, i64 %6
  call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %1413, ptr nonnull align 1 %1423, i64 %768, i64 %769, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %85, ptr nonnull align 1 %0, i64 %765, i64 %766, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, ptr nonnull readonly align 4 %8)
  br label %1408

sort.flux_analyze__anon_14346.exit.i:             ; preds = %1414, %1408, %1251, %sort.quad_reversal.exit373.i.i, %903
  call void @roc_dealloc(ptr nonnull align 1 %85, i32 %7)
  br label %sort.quadsort.exit

1424:                                             ; preds = %761
  tail call fastcc void @sort.quadsort_direct__anon_14342(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %6, i32 %7, ptr nonnull readonly align 4 %8)
  ret void

1425:                                             ; preds = %86
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13352, i64 50)
  unreachable

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader2703
  %lsr.iv3612 = phi ptr [ %uglygep3611, %.lr.ph.preheader2703 ], [ %uglygep3613, %.lr.ph ]
  %lsr.iv3609 = phi ptr [ %uglygep3608, %.lr.ph.preheader2703 ], [ %uglygep3610, %.lr.ph ]
  %lsr.iv3606 = phi i64 [ %91, %.lr.ph.preheader2703 ], [ %lsr.iv.next3607, %.lr.ph ]
  store ptr %lsr.iv3609, ptr %lsr.iv3612, align 8
  %lsr.iv.next3607 = add i64 %lsr.iv3606, -1
  %uglygep3610 = getelementptr i8, ptr %lsr.iv3609, i64 %6
  %uglygep3613 = getelementptr i8, ptr %lsr.iv3612, i64 8
  %exitcond.not = icmp eq i64 %lsr.iv.next3607, 0
  br i1 %exitcond.not, label %._crit_edge, label %.lr.ph, !llvm.loop !15

._crit_edge:                                      ; preds = %.lr.ph, %middle.block
  %1426 = tail call ptr @roc_alloc(i64 %87, i32 8)
  br i1 %4, label %1429, label %2403

sort.fluxsort_direct__anon_13350.exit:            ; preds = %3374, %sort.flux_analyze__anon_14348.exit.i, %2402, %sort.flux_analyze__anon_14347.exit.i
  %1427 = mul nuw i64 %6, %1
  %1428 = tail call ptr @roc_alloc(i64 %1427, i32 %7)
  %.not13 = icmp eq ptr %1428, null
  br i1 %.not13, label %3375, label %.lr.ph403.preheader

.lr.ph403.preheader:                              ; preds = %sort.fluxsort_direct__anon_13350.exit
  br label %.lr.ph403

1429:                                             ; preds = %._crit_edge
  %1430 = icmp eq ptr %1426, null
  br i1 %1430, label %2402, label %1431

1431:                                             ; preds = %1429
  %1432 = lshr i64 %1, 1
  %1433 = lshr i64 %1, 2
  %1434 = sub nuw nsw i64 %1432, %1433
  %1435 = sub nuw i64 %1, %1432
  %1436 = lshr i64 %1435, 1
  %1437 = sub nuw i64 %1435, %1436
  %1438 = shl nuw i64 %1433, 3
  %1439 = getelementptr inbounds i8, ptr %88, i64 %1438
  %1440 = shl nuw i64 %1432, 3
  %1441 = getelementptr inbounds i8, ptr %88, i64 %1440
  %1442 = add nuw i64 %1436, %1432
  %1443 = shl nuw i64 %1442, 3
  %1444 = getelementptr inbounds i8, ptr %88, i64 %1443
  %1445 = icmp ult i64 %1433, %1434
  br i1 %1445, label %1448, label %1446

1446:                                             ; preds = %1448, %1431
  %.0236.i.i71 = phi i64 [ %1454, %1448 ], [ 0, %1431 ]
  %.0212.i.i72 = phi ptr [ %1449, %1448 ], [ %1439, %1431 ]
  %1447 = icmp ult i64 %1433, %1436
  br i1 %1447, label %1457, label %1455

1448:                                             ; preds = %1431
  %1449 = getelementptr inbounds i8, ptr %1439, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1450 = load ptr, ptr %1439, align 8
  %1451 = load ptr, ptr %1449, align 8
  %1452 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1450, ptr align 1 %1451) #15
  %1453 = icmp eq i8 %1452, 1
  %1454 = zext i1 %1453 to i64
  br label %1446

1455:                                             ; preds = %1457, %1446
  %.0243.i.i73 = phi i64 [ %1463, %1457 ], [ 0, %1446 ]
  %.0216.i.i74 = phi ptr [ %1458, %1457 ], [ %1441, %1446 ]
  %1456 = icmp ult i64 %1433, %1437
  br i1 %1456, label %1466, label %1464

1457:                                             ; preds = %1446
  %1458 = getelementptr inbounds i8, ptr %1441, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1459 = load ptr, ptr %1441, align 8
  %1460 = load ptr, ptr %1458, align 8
  %1461 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1459, ptr align 1 %1460) #15
  %1462 = icmp eq i8 %1461, 1
  %1463 = zext i1 %1462 to i64
  br label %1455

1464:                                             ; preds = %1466, %1455
  %.0250.i.i75 = phi i64 [ %1472, %1466 ], [ 0, %1455 ]
  %.0221.i.i76 = phi ptr [ %1467, %1466 ], [ %1444, %1455 ]
  %1465 = icmp ugt i64 %1, 132
  br i1 %1465, label %.lr.ph.i.i77.preheader, label %._crit_edge.i.i91

.lr.ph.i.i77.preheader:                           ; preds = %1464
  br label %.lr.ph.i.i77

1466:                                             ; preds = %1455
  %1467 = getelementptr inbounds i8, ptr %1444, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1468 = load ptr, ptr %1444, align 8
  %1469 = load ptr, ptr %1467, align 8
  %1470 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1468, ptr align 1 %1469) #15
  %1471 = icmp eq i8 %1470, 1
  %1472 = zext i1 %1471 to i64
  br label %1464

.lr.ph.i.i77:                                     ; preds = %.critedge.i.i102, %.lr.ph.i.i77.preheader
  %.0111.i.i = phi ptr [ %.2.i.i101, %.critedge.i.i102 ], [ %88, %.lr.ph.i.i77.preheader ]
  %.1213110.i.i = phi ptr [ %.3215.i.i100, %.critedge.i.i102 ], [ %.0212.i.i72, %.lr.ph.i.i77.preheader ]
  %.1217109.i.i = phi ptr [ %.3219.i.i99, %.critedge.i.i102 ], [ %.0216.i.i74, %.lr.ph.i.i77.preheader ]
  %.1222108.i.i = phi ptr [ %.3224.i.i98, %.critedge.i.i102 ], [ %.0221.i.i76, %.lr.ph.i.i77.preheader ]
  %.0226107.i.i = phi i32 [ %1505, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0227106.i.i = phi i32 [ %1511, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0228105.i.i = phi i32 [ %1517, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0229104.i.i = phi i32 [ %1523, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.0230103.i.i = phi i64 [ %.1231.i.i97, %.critedge.i.i102 ], [ 0, %.lr.ph.i.i77.preheader ]
  %.1237102.i.i = phi i64 [ %.2238.i.i96, %.critedge.i.i102 ], [ %.0236.i.i71, %.lr.ph.i.i77.preheader ]
  %.1244101.i.i = phi i64 [ %.2245.i.i95, %.critedge.i.i102 ], [ %.0243.i.i73, %.lr.ph.i.i77.preheader ]
  %.1251100.i.i = phi i64 [ %.2252.i.i94, %.critedge.i.i102 ], [ %.0250.i.i75, %.lr.ph.i.i77.preheader ]
  %.025699.i.i = phi i64 [ %1525, %.critedge.i.i102 ], [ %1, %.lr.ph.i.i77.preheader ]
  tail call void %5(ptr align 1 %3, i64 128) #15
  br label %1474

._crit_edge.i.i91:                                ; preds = %.critedge.i.i102, %1464
  %.0256.lcssa.i.i78 = phi i64 [ %1, %1464 ], [ %1525, %.critedge.i.i102 ]
  %.1251.lcssa.i.i79 = phi i64 [ %.0250.i.i75, %1464 ], [ %.2252.i.i94, %.critedge.i.i102 ]
  %.1244.lcssa.i.i80 = phi i64 [ %.0243.i.i73, %1464 ], [ %.2245.i.i95, %.critedge.i.i102 ]
  %.1237.lcssa.i.i81 = phi i64 [ %.0236.i.i71, %1464 ], [ %.2238.i.i96, %.critedge.i.i102 ]
  %.0230.lcssa.i.i82 = phi i64 [ 0, %1464 ], [ %.1231.i.i97, %.critedge.i.i102 ]
  %.0229.lcssa.i.i83 = phi i32 [ 0, %1464 ], [ %1523, %.critedge.i.i102 ]
  %.0228.lcssa.i.i84 = phi i32 [ 0, %1464 ], [ %1517, %.critedge.i.i102 ]
  %.0227.lcssa.i.i85 = phi i32 [ 0, %1464 ], [ %1511, %.critedge.i.i102 ]
  %.0226.lcssa.i.i86 = phi i32 [ 0, %1464 ], [ %1505, %.critedge.i.i102 ]
  %.1222.lcssa.i.i87 = phi ptr [ %.0221.i.i76, %1464 ], [ %.3224.i.i98, %.critedge.i.i102 ]
  %.1217.lcssa.i.i88 = phi ptr [ %.0216.i.i74, %1464 ], [ %.3219.i.i99, %.critedge.i.i102 ]
  %.1213.lcssa.i.i89 = phi ptr [ %.0212.i.i72, %1464 ], [ %.3215.i.i100, %.critedge.i.i102 ]
  %.0.lcssa.i.i90 = phi ptr [ %88, %1464 ], [ %.2.i.i101, %.critedge.i.i102 ]
  %1473 = icmp ugt i64 %.0256.lcssa.i.i78, 7
  br i1 %1473, label %.lr.ph134.preheader.i.i, label %._crit_edge135.i.i

1474:                                             ; preds = %1474, %.lr.ph.i.i77
  %lsr.iv3266 = phi i64 [ %lsr.iv.next3267, %1474 ], [ 0, %.lr.ph.i.i77 ]
  %.025994.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1480, %1474 ]
  %.026093.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1486, %1474 ]
  %.026192.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1492, %1474 ]
  %.026291.i.i = phi i8 [ 0, %.lr.ph.i.i77 ], [ %1498, %1474 ]
  %uglygep3270 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv3266
  %uglygep3276 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv3266
  %uglygep3283 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv3266
  %uglygep3287 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv3266
  %uglygep3271 = getelementptr i8, ptr %uglygep3270, i64 8
  %1475 = load ptr, ptr %uglygep3270, align 8
  %1476 = load ptr, ptr %uglygep3271, align 8
  %1477 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1475, ptr align 1 %1476) #15
  %1478 = icmp eq i8 %1477, 1
  %1479 = zext i1 %1478 to i8
  %1480 = add nuw i8 %.025994.i.i, %1479
  %uglygep3277 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv3266
  %uglygep3278 = getelementptr i8, ptr %uglygep3277, i64 8
  %1481 = load ptr, ptr %uglygep3276, align 8
  %1482 = load ptr, ptr %uglygep3278, align 8
  %1483 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1481, ptr align 1 %1482) #15
  %1484 = icmp eq i8 %1483, 1
  %1485 = zext i1 %1484 to i8
  %1486 = add nuw i8 %.026093.i.i, %1485
  %uglygep3284 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv3266
  %uglygep3285 = getelementptr i8, ptr %uglygep3284, i64 8
  %1487 = load ptr, ptr %uglygep3283, align 8
  %1488 = load ptr, ptr %uglygep3285, align 8
  %1489 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1487, ptr align 1 %1488) #15
  %1490 = icmp eq i8 %1489, 1
  %1491 = zext i1 %1490 to i8
  %1492 = add nuw i8 %.026192.i.i, %1491
  %uglygep3288 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv3266
  %uglygep3289 = getelementptr i8, ptr %uglygep3288, i64 8
  %1493 = load ptr, ptr %uglygep3287, align 8
  %1494 = load ptr, ptr %uglygep3289, align 8
  %1495 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1493, ptr align 1 %1494) #15
  %1496 = icmp eq i8 %1495, 1
  %1497 = zext i1 %1496 to i8
  %1498 = add nuw i8 %.026291.i.i, %1497
  %lsr.iv.next3267 = add nuw nsw i64 %lsr.iv3266, 8
  %exitcond.not.i.i92 = icmp eq i64 %lsr.iv.next3267, 256
  br i1 %exitcond.not.i.i92, label %1499, label %1474

1499:                                             ; preds = %1474
  %1500 = zext i8 %1480 to i64
  %1501 = add nuw i64 %.0230103.i.i, %1500
  %1502 = and i8 %1480, -33
  %1503 = icmp eq i8 %1502, 0
  %1504 = zext i1 %1503 to i32
  %1505 = add nuw i32 %.0226107.i.i, %1504
  %1506 = zext i8 %1486 to i64
  %1507 = add nuw i64 %.1237102.i.i, %1506
  %1508 = and i8 %1486, -33
  %1509 = icmp eq i8 %1508, 0
  %1510 = zext i1 %1509 to i32
  %1511 = add nuw i32 %.0227106.i.i, %1510
  %1512 = zext i8 %1492 to i64
  %1513 = add nuw i64 %.1244101.i.i, %1512
  %1514 = and i8 %1492, -33
  %1515 = icmp eq i8 %1514, 0
  %1516 = zext i1 %1515 to i32
  %1517 = add nuw i32 %.0228105.i.i, %1516
  %1518 = zext i8 %1498 to i64
  %1519 = add nuw i64 %.1251100.i.i, %1518
  %1520 = and i8 %1498, -33
  %1521 = icmp eq i8 %1520, 0
  %1522 = zext i1 %1521 to i32
  %1523 = add nuw i32 %.0229104.i.i, %1522
  %1524 = icmp ugt i64 %.025699.i.i, 516
  %uglygep3272 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv.next3267
  %uglygep3279 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv.next3267
  %uglygep3280 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv.next3267
  %uglygep3286 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv.next3267
  br i1 %1524, label %1527, label %.critedge.i.i102

.critedge.i.i102:                                 ; preds = %1538, %1527, %1499
  %.1257.i.i93 = phi i64 [ %1543, %1538 ], [ %.025699.i.i, %1499 ], [ %.025699.i.i, %1527 ]
  %.2252.i.i94 = phi i64 [ %1542, %1538 ], [ %1519, %1499 ], [ %1519, %1527 ]
  %.2245.i.i95 = phi i64 [ %1541, %1538 ], [ %1513, %1499 ], [ %1513, %1527 ]
  %.2238.i.i96 = phi i64 [ %1540, %1538 ], [ %1507, %1499 ], [ %1507, %1527 ]
  %.1231.i.i97 = phi i64 [ %1539, %1538 ], [ %1501, %1499 ], [ %1501, %1527 ]
  %.3224.i.i98 = phi ptr [ %uglygep3291, %1538 ], [ %uglygep3280, %1499 ], [ %uglygep3280, %1527 ]
  %.3219.i.i99 = phi ptr [ %uglygep3282, %1538 ], [ %uglygep3286, %1499 ], [ %uglygep3286, %1527 ]
  %.3215.i.i100 = phi ptr [ %uglygep3275, %1538 ], [ %uglygep3279, %1499 ], [ %uglygep3279, %1527 ]
  %.2.i.i101 = phi ptr [ %uglygep3269, %1538 ], [ %uglygep3272, %1499 ], [ %uglygep3272, %1527 ]
  %1525 = add i64 %.1257.i.i93, -128
  %1526 = icmp ugt i64 %1525, 132
  br i1 %1526, label %.lr.ph.i.i77, label %._crit_edge.i.i91

1527:                                             ; preds = %1499
  %1528 = icmp eq i8 %1520, 0
  %1529 = icmp eq i8 %1514, 0
  %1530 = icmp eq i8 %1508, 0
  %1531 = icmp eq i8 %1502, 0
  %.neg.i.i103 = sext i1 %1528 to i8
  %1532 = zext i1 %1529 to i8
  %1533 = zext i1 %1530 to i8
  %1534 = zext i1 %1531 to i8
  %1535 = add nuw nsw i8 %1533, %1534
  %1536 = add nuw nsw i8 %1535, %1532
  %1537 = icmp eq i8 %1536, %.neg.i.i103
  br i1 %1537, label %1538, label %.critedge.i.i102

1538:                                             ; preds = %1527
  %1539 = add nuw i64 %1501, 48
  %uglygep3268 = getelementptr i8, ptr %.0111.i.i, i64 %lsr.iv.next3267
  %uglygep3269 = getelementptr i8, ptr %uglygep3268, i64 768
  %1540 = add nuw i64 %1507, 48
  %uglygep3274 = getelementptr i8, ptr %.1213110.i.i, i64 %lsr.iv.next3267
  %uglygep3275 = getelementptr i8, ptr %uglygep3274, i64 768
  %1541 = add nuw i64 %1513, 48
  %uglygep3281 = getelementptr i8, ptr %.1217109.i.i, i64 %lsr.iv.next3267
  %uglygep3282 = getelementptr i8, ptr %uglygep3281, i64 768
  %1542 = add nuw i64 %1519, 48
  %uglygep3290 = getelementptr i8, ptr %.1222108.i.i, i64 %lsr.iv.next3267
  %uglygep3291 = getelementptr i8, ptr %uglygep3290, i64 768
  %1543 = add i64 %.025699.i.i, -384
  br label %.critedge.i.i102

.lr.ph134.preheader.i.i:                          ; preds = %._crit_edge.i.i91
  %1544 = and i64 %.0256.lcssa.i.i78, 252
  %1545 = add nsw i64 %1544, -4
  tail call void %5(ptr align 1 %3, i64 %1545) #15
  br label %.lr.ph134.i.i

.lr.ph134.i.i:                                    ; preds = %.lr.ph134.i.i, %.lr.ph134.preheader.i.i
  %.3132.i.i = phi ptr [ %1546, %.lr.ph134.i.i ], [ %.0.lcssa.i.i90, %.lr.ph134.preheader.i.i ]
  %.4131.i.i = phi ptr [ %1553, %.lr.ph134.i.i ], [ %.1213.lcssa.i.i89, %.lr.ph134.preheader.i.i ]
  %.4220130.i.i = phi ptr [ %1560, %.lr.ph134.i.i ], [ %.1217.lcssa.i.i88, %.lr.ph134.preheader.i.i ]
  %.4225129.i.i = phi ptr [ %1567, %.lr.ph134.i.i ], [ %.1222.lcssa.i.i87, %.lr.ph134.preheader.i.i ]
  %.2232128.i.i = phi i64 [ %1552, %.lr.ph134.i.i ], [ %.0230.lcssa.i.i82, %.lr.ph134.preheader.i.i ]
  %.3239127.i.i = phi i64 [ %1559, %.lr.ph134.i.i ], [ %.1237.lcssa.i.i81, %.lr.ph134.preheader.i.i ]
  %.3246126.i.i = phi i64 [ %1566, %.lr.ph134.i.i ], [ %.1244.lcssa.i.i80, %.lr.ph134.preheader.i.i ]
  %.3253125.i.i = phi i64 [ %1573, %.lr.ph134.i.i ], [ %.1251.lcssa.i.i79, %.lr.ph134.preheader.i.i ]
  %.2258124.i.i = phi i64 [ %1574, %.lr.ph134.i.i ], [ %.0256.lcssa.i.i78, %.lr.ph134.preheader.i.i ]
  %1546 = getelementptr inbounds i8, ptr %.3132.i.i, i64 8
  %1547 = load ptr, ptr %.3132.i.i, align 8
  %1548 = load ptr, ptr %1546, align 8
  %1549 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1547, ptr align 1 %1548) #15
  %1550 = icmp eq i8 %1549, 1
  %1551 = zext i1 %1550 to i64
  %1552 = add nuw i64 %.2232128.i.i, %1551
  %1553 = getelementptr inbounds i8, ptr %.4131.i.i, i64 8
  %1554 = load ptr, ptr %.4131.i.i, align 8
  %1555 = load ptr, ptr %1553, align 8
  %1556 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1554, ptr align 1 %1555) #15
  %1557 = icmp eq i8 %1556, 1
  %1558 = zext i1 %1557 to i64
  %1559 = add nuw i64 %.3239127.i.i, %1558
  %1560 = getelementptr inbounds i8, ptr %.4220130.i.i, i64 8
  %1561 = load ptr, ptr %.4220130.i.i, align 8
  %1562 = load ptr, ptr %1560, align 8
  %1563 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1561, ptr align 1 %1562) #15
  %1564 = icmp eq i8 %1563, 1
  %1565 = zext i1 %1564 to i64
  %1566 = add nuw i64 %.3246126.i.i, %1565
  %1567 = getelementptr inbounds i8, ptr %.4225129.i.i, i64 8
  %1568 = load ptr, ptr %.4225129.i.i, align 8
  %1569 = load ptr, ptr %1567, align 8
  %1570 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1568, ptr align 1 %1569) #15
  %1571 = icmp eq i8 %1570, 1
  %1572 = zext i1 %1571 to i64
  %1573 = add nuw i64 %.3253125.i.i, %1572
  %1574 = add i64 %.2258124.i.i, -4
  %1575 = icmp ugt i64 %1574, 7
  br i1 %1575, label %.lr.ph134.i.i, label %._crit_edge135.i.i

._crit_edge135.i.i:                               ; preds = %.lr.ph134.i.i, %._crit_edge.i.i91
  %.3253.lcssa.i.i104 = phi i64 [ %.1251.lcssa.i.i79, %._crit_edge.i.i91 ], [ %1573, %.lr.ph134.i.i ]
  %.3246.lcssa.i.i105 = phi i64 [ %.1244.lcssa.i.i80, %._crit_edge.i.i91 ], [ %1566, %.lr.ph134.i.i ]
  %.3239.lcssa.i.i106 = phi i64 [ %.1237.lcssa.i.i81, %._crit_edge.i.i91 ], [ %1559, %.lr.ph134.i.i ]
  %.2232.lcssa.i.i107 = phi i64 [ %.0230.lcssa.i.i82, %._crit_edge.i.i91 ], [ %1552, %.lr.ph134.i.i ]
  %.4225.lcssa.i.i108 = phi ptr [ %.1222.lcssa.i.i87, %._crit_edge.i.i91 ], [ %1567, %.lr.ph134.i.i ]
  %.4220.lcssa.i.i109 = phi ptr [ %.1217.lcssa.i.i88, %._crit_edge.i.i91 ], [ %1560, %.lr.ph134.i.i ]
  %.4.lcssa.i.i110 = phi ptr [ %.1213.lcssa.i.i89, %._crit_edge.i.i91 ], [ %1553, %.lr.ph134.i.i ]
  %.3.lcssa.i.i111 = phi ptr [ %.0.lcssa.i.i90, %._crit_edge.i.i91 ], [ %1546, %.lr.ph134.i.i ]
  %1576 = add i64 %.3239.lcssa.i.i106, %.3246.lcssa.i.i105
  %1577 = add i64 %1576, %.2232.lcssa.i.i107
  %1578 = sub i64 0, %.3253.lcssa.i.i104
  %1579 = icmp eq i64 %1577, %1578
  br i1 %1579, label %1588, label %.critedge2.i.i115

.critedge2.i.i115:                                ; preds = %1598, %1593, %1588, %._crit_edge135.i.i
  %1580 = sub nuw i64 %1433, %.2232.lcssa.i.i107
  %1581 = icmp eq i64 %1580, 1
  %1582 = sub nuw i64 %1434, %.3239.lcssa.i.i106
  %1583 = icmp eq i64 %1582, 1
  %1584 = sub nuw i64 %1436, %.3246.lcssa.i.i105
  %1585 = icmp eq i64 %1584, 1
  %1586 = sub nuw i64 %1437, %.3253.lcssa.i.i104
  %1587 = icmp eq i64 %1586, 1
  %..i.i112 = select i1 %1581, i1 true, i1 %1583
  %.5.i.i113 = select i1 %..i.i112, i1 true, i1 %1585
  %.6.i.i114 = select i1 %.5.i.i113, i1 true, i1 %1587
  br i1 %.6.i.i114, label %1617, label %sort.quad_reversal.exit401.i.i

1588:                                             ; preds = %._crit_edge135.i.i
  %1589 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1590 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %1591 = load ptr, ptr %1589, align 8
  %1592 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1590, ptr align 1 %1591) #15
  %.not289.i.i116 = icmp eq i8 %1592, 1
  br i1 %.not289.i.i116, label %.critedge2.i.i115, label %1593

1593:                                             ; preds = %1588
  %1594 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1595 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %1596 = load ptr, ptr %1594, align 8
  %1597 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1595, ptr align 1 %1596) #15
  %.not290.i.i117 = icmp eq i8 %1597, 1
  br i1 %.not290.i.i117, label %.critedge2.i.i115, label %1598

1598:                                             ; preds = %1593
  %1599 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %1600 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %1601 = load ptr, ptr %1599, align 8
  %1602 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1600, ptr align 1 %1601) #15
  %.not291.i.i118 = icmp eq i8 %1602, 1
  br i1 %.not291.i.i118, label %.critedge2.i.i115, label %sort.flux_analyze__anon_14347.exit.i

sort.quad_reversal.exit401.i.i:                   ; preds = %.lr.ph215.i.i, %middle.block2375, %._crit_edge.i392.i.i, %sort.quad_reversal.exit391.i.i, %.lr.ph167.i.i, %middle.block1807, %._crit_edge.i332.i.i, %.critedge2.i.i115
  %.4254.i.i119 = phi i64 [ %.5255637279.i.i, %sort.quad_reversal.exit391.i.i ], [ %.3253.lcssa.i.i104, %.critedge2.i.i115 ], [ 0, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ 0, %middle.block2375 ], [ 0, %middle.block1807 ], [ 0, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.4247.i.i120 = phi i64 [ %.6249.i.i145, %sort.quad_reversal.exit391.i.i ], [ %.3246.lcssa.i.i105, %.critedge2.i.i115 ], [ %.6249.i.i145, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.6249.i.i145, %middle.block2375 ], [ 0, %middle.block1807 ], [ %.6249.i.i145, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.4240.i.i121 = phi i64 [ %.624280.i.i, %sort.quad_reversal.exit391.i.i ], [ %.3239.lcssa.i.i106, %.critedge2.i.i115 ], [ %.624280.i.i, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.624280.i.i, %middle.block2375 ], [ 0, %middle.block1807 ], [ %.624280.i.i, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %.3233.i.i122 = phi i64 [ %.52357378.i.i, %sort.quad_reversal.exit391.i.i ], [ %.2232.lcssa.i.i107, %.critedge2.i.i115 ], [ %.52357378.i.i, %._crit_edge.i392.i.i ], [ 0, %._crit_edge.i332.i.i ], [ %.52357378.i.i, %middle.block2375 ], [ 0, %middle.block1807 ], [ %.52357378.i.i, %.lr.ph215.i.i ], [ 0, %.lr.ph167.i.i ]
  %const3623 = bitcast i64 1048579 to i64
  %1603 = lshr i64 %1, 9
  %1604 = zext i32 %.0226.lcssa.i.i86 to i64
  %1605 = icmp ult i64 %1603, %1604
  %1606 = zext i1 %1605 to i4
  %1607 = zext i32 %.0227.lcssa.i.i85 to i64
  %1608 = icmp ult i64 %1603, %1607
  %1609 = zext i1 %1608 to i4
  %1610 = zext i32 %.0228.lcssa.i.i84 to i64
  %1611 = icmp ult i64 %1603, %1610
  %1612 = zext i1 %1611 to i4
  %1613 = zext i32 %.0229.lcssa.i.i83 to i64
  %1614 = icmp ult i64 %1603, %1613
  %1615 = zext i1 %1614 to i4
  %1616 = icmp ugt i64 %1, %const3623
  br i1 %1616, label %2217, label %2209

1617:                                             ; preds = %.critedge2.i.i115
  %1618 = icmp eq i64 %1586, 1
  %1619 = icmp eq i64 %1584, 1
  %1620 = icmp eq i64 %1582, 1
  %1621 = icmp eq i64 %1580, 1
  tail call void %5(ptr align 1 %3, i64 3) #15
  %.7.i.i123 = select i1 %1621, i1 %1620, i1 false
  %1622 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %1623 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %1624 = load ptr, ptr %1622, align 8
  %1625 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1623, ptr align 1 %1624) #15
  %1626 = icmp eq i8 %1625, 1
  %1627 = and i1 %.7.i.i123, %1626
  %1628 = zext i1 %1627 to i3
  %.8.i.i124 = select i1 %1620, i1 %1619, i1 false
  %1629 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %1630 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %1631 = load ptr, ptr %1629, align 8
  %1632 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1630, ptr align 1 %1631) #15
  %1633 = icmp eq i8 %1632, 1
  %1634 = and i1 %.8.i.i124, %1633
  %.9.i.i125 = select i1 %1619, i1 %1618, i1 false
  %1635 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %1636 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %1637 = load ptr, ptr %1635, align 8
  %1638 = tail call i8 %2(ptr align 1 %3, ptr align 1 %1636, ptr align 1 %1637) #15
  %1639 = icmp eq i8 %1638, 1
  %1640 = and i1 %.9.i.i125, %1639
  %1641 = select i1 %1634, i3 2, i3 0
  %1642 = or i3 %1641, %1628
  %1643 = select i1 %1640, i3 -4, i3 0
  %1644 = or i3 %1642, %1643
  %1645 = zext i3 %1644 to i32
  switch i32 %1645, label %1649 [
    i32 0, label %sort.quad_reversal.exit301.i.i129
    i32 1, label %1650
    i32 2, label %1695
    i32 3, label %1742
    i32 4, label %1787
    i32 5, label %1834
    i32 6, label %1925
    i32 7, label %1972
  ]

sort.quad_reversal.exit301.i.i129:                ; preds = %.lr.ph155.i.i, %middle.block1665, %._crit_edge.i342.i.i, %.lr.ph173.i.i, %middle.block1878, %._crit_edge.i312.i.i, %.lr.ph185.i.i, %middle.block2020, %._crit_edge.i292.i.i, %1617
  %.5255.i.i126 = phi i64 [ %.3253.lcssa.i.i104, %1617 ], [ %.3253.lcssa.i.i104, %._crit_edge.i292.i.i ], [ 0, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ %.3253.lcssa.i.i104, %middle.block2020 ], [ 0, %middle.block1878 ], [ 0, %middle.block1665 ], [ %.3253.lcssa.i.i104, %.lr.ph185.i.i ], [ 0, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %.5248.i.i127 = phi i64 [ %.3246.lcssa.i.i105, %1617 ], [ 0, %._crit_edge.i292.i.i ], [ 0, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ 0, %middle.block2020 ], [ 0, %middle.block1878 ], [ 0, %middle.block1665 ], [ 0, %.lr.ph185.i.i ], [ 0, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %.5241.i.i128 = phi i64 [ %.3239.lcssa.i.i106, %1617 ], [ 0, %._crit_edge.i292.i.i ], [ %.3239.lcssa.i.i106, %._crit_edge.i312.i.i ], [ 0, %._crit_edge.i342.i.i ], [ 0, %middle.block2020 ], [ %.3239.lcssa.i.i106, %middle.block1878 ], [ 0, %middle.block1665 ], [ 0, %.lr.ph185.i.i ], [ %.3239.lcssa.i.i106, %.lr.ph173.i.i ], [ 0, %.lr.ph155.i.i ]
  %1646 = icmp eq i64 %1580, 1
  %1647 = icmp ne i64 %.2232.lcssa.i.i107, 0
  %1648 = and i1 %1647, %1646
  br i1 %1648, label %2020, label %sort.quad_reversal.exit371.i.i

1649:                                             ; preds = %1617
  unreachable

1650:                                             ; preds = %1617
  %1651 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %1652 = ptrtoint ptr %88 to i64
  %1653 = sub nuw i64 %1651, %1652
  %1654 = lshr i64 %1653, 4
  %1655 = shl nuw nsw i64 %1654, 3
  %1656 = getelementptr inbounds i8, ptr %88, i64 %1655
  %1657 = sub nsw i64 0, %1655
  %1658 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %1657
  %1659 = and i64 %1653, 16
  %1660 = icmp eq i64 %1659, 0
  br i1 %1660, label %1683, label %._crit_edge.i.i.i133

._crit_edge.i.i.i133:                             ; preds = %1683, %1650
  %.027.i.i.i130 = phi ptr [ %1687, %1683 ], [ %1658, %1650 ]
  %.025.i.i.i131 = phi ptr [ %1686, %1683 ], [ %1656, %1650 ]
  %.0.i.i.i132 = phi i64 [ %1688, %1683 ], [ %1654, %1650 ]
  %1661 = load i64, ptr %88, align 8
  %1662 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %1662, ptr %88, align 8
  store i64 %1661, ptr %.4.lcssa.i.i110, align 8
  %1663 = load i64, ptr %.025.i.i.i131, align 8
  %1664 = load i64, ptr %.027.i.i.i130, align 8
  store i64 %1664, ptr %.025.i.i.i131, align 8
  store i64 %1663, ptr %.027.i.i.i130, align 8
  %1665 = icmp ult i64 %.0.i.i.i132, 2
  br i1 %1665, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.preheader.i.i

.lr.ph191.preheader.i.i:                          ; preds = %._crit_edge.i.i.i133
  %1666 = lshr i64 %.0.i.i.i132, 1
  %min.iters.check2093 = icmp ult i64 %.0.i.i.i132, 48
  br i1 %min.iters.check2093, label %.lr.ph191.i.i.preheader, label %vector.scevcheck2052

vector.scevcheck2052:                             ; preds = %.lr.ph191.preheader.i.i
  %1667 = add nsw i64 %1666, -1
  %uglygep2053 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result2055.neg = mul i64 %1667, -8
  %1668 = getelementptr i8, ptr %uglygep2053, i64 %mul.result2055.neg
  %1669 = icmp ugt ptr %1668, %uglygep2053
  %uglygep2057 = getelementptr i8, ptr %.025.i.i.i131, i64 -8
  %mul.result2059.neg = mul i64 %1667, -8
  %mul.overflow2060 = icmp ugt i64 %1667, 2305843009213693951
  %1670 = getelementptr i8, ptr %uglygep2057, i64 %mul.result2059.neg
  %1671 = icmp ugt ptr %1670, %uglygep2057
  %1672 = or i1 %1671, %mul.overflow2060
  %1673 = or i1 %1669, %1672
  br i1 %1673, label %.lr.ph191.i.i.preheader, label %vector.memcheck2061

vector.memcheck2061:                              ; preds = %vector.scevcheck2052
  %uglygep2062 = getelementptr i8, ptr %88, i64 8
  %1674 = shl i64 %1666, 3
  %1675 = add i64 %1674, 8
  %uglygep2063 = getelementptr i8, ptr %88, i64 %1675
  %uglygep2064 = getelementptr i8, ptr %.027.i.i.i130, i64 8
  %uglygep2065 = getelementptr i8, ptr %.027.i.i.i130, i64 %1675
  %1676 = mul i64 %1666, -8
  %uglygep2066 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1676
  %uglygep2067 = getelementptr i8, ptr %.025.i.i.i131, i64 %1676
  %bound02068 = icmp ult ptr %uglygep2062, %uglygep2065
  %bound12069 = icmp ult ptr %uglygep2064, %uglygep2063
  %found.conflict2070 = and i1 %bound02068, %bound12069
  %bound02071 = icmp ult ptr %uglygep2062, %.4.lcssa.i.i110
  %bound12072 = icmp ult ptr %uglygep2066, %uglygep2063
  %found.conflict2073 = and i1 %bound02071, %bound12072
  %conflict.rdx2074 = or i1 %found.conflict2070, %found.conflict2073
  %bound02075 = icmp ult ptr %uglygep2062, %.025.i.i.i131
  %bound12076 = icmp ult ptr %uglygep2067, %uglygep2063
  %found.conflict2077 = and i1 %bound02075, %bound12076
  %conflict.rdx2078 = or i1 %conflict.rdx2074, %found.conflict2077
  %bound02079 = icmp ult ptr %uglygep2064, %.4.lcssa.i.i110
  %bound12080 = icmp ult ptr %uglygep2066, %uglygep2065
  %found.conflict2081 = and i1 %bound02079, %bound12080
  %conflict.rdx2082 = or i1 %conflict.rdx2078, %found.conflict2081
  %bound02083 = icmp ult ptr %uglygep2064, %.025.i.i.i131
  %bound12084 = icmp ult ptr %uglygep2067, %uglygep2065
  %found.conflict2085 = and i1 %bound02083, %bound12084
  %conflict.rdx2086 = or i1 %conflict.rdx2082, %found.conflict2085
  %bound02087 = icmp ult ptr %uglygep2066, %.025.i.i.i131
  %bound12088 = icmp ult ptr %uglygep2067, %.4.lcssa.i.i110
  %found.conflict2089 = and i1 %bound02087, %bound12088
  %conflict.rdx2090 = or i1 %conflict.rdx2086, %found.conflict2089
  br i1 %conflict.rdx2090, label %.lr.ph191.i.i.preheader, label %vector.ph2094

vector.ph2094:                                    ; preds = %vector.memcheck2061
  %1677 = lshr i64 %.0.i.i.i132, 1
  %n.vec2096 = and i64 %1666, 9223372036854775806
  %ind.end2097 = and i64 %1677, 1
  %1678 = shl i64 %n.vec2096, 3
  %ind.end2099 = getelementptr i8, ptr %88, i64 %1678
  %1679 = mul i64 %n.vec2096, -8
  %ind.end2101 = getelementptr i8, ptr %.025.i.i.i131, i64 %1679
  %1680 = shl i64 %n.vec2096, 3
  %ind.end2103 = getelementptr i8, ptr %.027.i.i.i130, i64 %1680
  %1681 = mul i64 %n.vec2096, -8
  %ind.end2105 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1681
  %next.gep21102513 = getelementptr i8, ptr %88, i64 8
  %next.gep21122510 = getelementptr i8, ptr %.027.i.i.i130, i64 8
  %uglygep3086 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -16
  %uglygep3091 = getelementptr i8, ptr %.025.i.i.i131, i64 -16
  br label %vector.body2108

vector.body2108:                                  ; preds = %vector.body2108, %vector.ph2094
  %lsr.iv3096 = phi i64 [ %lsr.iv.next3097, %vector.body2108 ], [ %n.vec2096, %vector.ph2094 ]
  %lsr.iv3094 = phi ptr [ %uglygep3095, %vector.body2108 ], [ %next.gep21102513, %vector.ph2094 ]
  %lsr.iv3092 = phi ptr [ %uglygep3093, %vector.body2108 ], [ %uglygep3091, %vector.ph2094 ]
  %lsr.iv3089 = phi ptr [ %uglygep3090, %vector.body2108 ], [ %next.gep21122510, %vector.ph2094 ]
  %lsr.iv3087 = phi ptr [ %uglygep3088, %vector.body2108 ], [ %uglygep3086, %vector.ph2094 ]
  %wide.load2114 = load <2 x i64>, ptr %lsr.iv3094, align 8, !alias.scope !16, !noalias !19
  %wide.load2115 = load <2 x i64>, ptr %lsr.iv3087, align 8, !alias.scope !23, !noalias !24
  %reverse2116 = shufflevector <2 x i64> %wide.load2115, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2116, ptr %lsr.iv3094, align 8, !alias.scope !16, !noalias !19
  %reverse2117 = shufflevector <2 x i64> %wide.load2114, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2117, ptr %lsr.iv3087, align 8, !alias.scope !23, !noalias !24
  %wide.load2118 = load <2 x i64>, ptr %lsr.iv3092, align 8, !alias.scope !24
  %reverse2119 = shufflevector <2 x i64> %wide.load2118, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2120 = load <2 x i64>, ptr %lsr.iv3089, align 8, !alias.scope !25, !noalias !26
  %reverse2121 = shufflevector <2 x i64> %wide.load2120, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2121, ptr %lsr.iv3092, align 8, !alias.scope !24
  store <2 x i64> %reverse2119, ptr %lsr.iv3089, align 8, !alias.scope !25, !noalias !26
  %uglygep3088 = getelementptr i8, ptr %lsr.iv3087, i64 -16
  %uglygep3090 = getelementptr i8, ptr %lsr.iv3089, i64 16
  %uglygep3093 = getelementptr i8, ptr %lsr.iv3092, i64 -16
  %uglygep3095 = getelementptr i8, ptr %lsr.iv3094, i64 16
  %lsr.iv.next3097 = add nsw i64 %lsr.iv3096, -2
  %1682 = icmp eq i64 %lsr.iv.next3097, 0
  br i1 %1682, label %middle.block2091, label %vector.body2108, !llvm.loop !27

middle.block2091:                                 ; preds = %vector.body2108
  %cmp.n2107 = icmp eq i64 %1666, %n.vec2096
  br i1 %cmp.n2107, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.i.i.preheader

.lr.ph191.i.i.preheader:                          ; preds = %middle.block2091, %vector.memcheck2061, %vector.scevcheck2052, %.lr.ph191.preheader.i.i
  %.1.i190.i.i.ph = phi i64 [ %ind.end2097, %middle.block2091 ], [ %1666, %.lr.ph191.preheader.i.i ], [ %1666, %vector.scevcheck2052 ], [ %1666, %vector.memcheck2061 ]
  %.024.i189.i.i.ph = phi ptr [ %ind.end2099, %middle.block2091 ], [ %88, %.lr.ph191.preheader.i.i ], [ %88, %vector.scevcheck2052 ], [ %88, %vector.memcheck2061 ]
  %.126.i188.i.i.ph = phi ptr [ %ind.end2101, %middle.block2091 ], [ %.025.i.i.i131, %.lr.ph191.preheader.i.i ], [ %.025.i.i.i131, %vector.scevcheck2052 ], [ %.025.i.i.i131, %vector.memcheck2061 ]
  %.128.i187.i.i.ph = phi ptr [ %ind.end2103, %middle.block2091 ], [ %.027.i.i.i130, %.lr.ph191.preheader.i.i ], [ %.027.i.i.i130, %vector.scevcheck2052 ], [ %.027.i.i.i130, %vector.memcheck2061 ]
  %.029.i186.i.i.ph = phi ptr [ %ind.end2105, %middle.block2091 ], [ %.4.lcssa.i.i110, %.lr.ph191.preheader.i.i ], [ %.4.lcssa.i.i110, %vector.scevcheck2052 ], [ %.4.lcssa.i.i110, %vector.memcheck2061 ]
  %uglygep3074 = getelementptr i8, ptr %.024.i189.i.i.ph, i64 8
  %uglygep3077 = getelementptr i8, ptr %.126.i188.i.i.ph, i64 -8
  %uglygep3080 = getelementptr i8, ptr %.128.i187.i.i.ph, i64 8
  %uglygep3083 = getelementptr i8, ptr %.029.i186.i.i.ph, i64 -8
  br label %.lr.ph191.i.i

1683:                                             ; preds = %1650
  %1684 = load i64, ptr %1656, align 8
  %1685 = load i64, ptr %1658, align 8
  store i64 %1685, ptr %1656, align 8
  %1686 = getelementptr inbounds i8, ptr %1656, i64 -8
  store i64 %1684, ptr %1658, align 8
  %1687 = getelementptr inbounds i8, ptr %1658, i64 8
  %1688 = add nsw i64 %1654, -1
  br label %._crit_edge.i.i.i133

.lr.ph191.i.i:                                    ; preds = %.lr.ph191.i.i, %.lr.ph191.i.i.preheader
  %lsr.iv3084 = phi ptr [ %uglygep3083, %.lr.ph191.i.i.preheader ], [ %uglygep3085, %.lr.ph191.i.i ]
  %lsr.iv3081 = phi ptr [ %uglygep3080, %.lr.ph191.i.i.preheader ], [ %uglygep3082, %.lr.ph191.i.i ]
  %lsr.iv3078 = phi ptr [ %uglygep3077, %.lr.ph191.i.i.preheader ], [ %uglygep3079, %.lr.ph191.i.i ]
  %lsr.iv3075 = phi ptr [ %uglygep3074, %.lr.ph191.i.i.preheader ], [ %uglygep3076, %.lr.ph191.i.i ]
  %.1.i190.i.i = phi i64 [ %1689, %.lr.ph191.i.i ], [ %.1.i190.i.i.ph, %.lr.ph191.i.i.preheader ]
  %1689 = add nsw i64 %.1.i190.i.i, -1
  %1690 = load i64, ptr %lsr.iv3075, align 8
  %1691 = load i64, ptr %lsr.iv3084, align 8
  store i64 %1691, ptr %lsr.iv3075, align 8
  store i64 %1690, ptr %lsr.iv3084, align 8
  %1692 = load i64, ptr %lsr.iv3078, align 8
  %1693 = load i64, ptr %lsr.iv3081, align 8
  store i64 %1693, ptr %lsr.iv3078, align 8
  store i64 %1692, ptr %lsr.iv3081, align 8
  %uglygep3076 = getelementptr i8, ptr %lsr.iv3075, i64 8
  %uglygep3079 = getelementptr i8, ptr %lsr.iv3078, i64 -8
  %uglygep3082 = getelementptr i8, ptr %lsr.iv3081, i64 8
  %uglygep3085 = getelementptr i8, ptr %lsr.iv3084, i64 -8
  %1694 = icmp eq i64 %1689, 0
  br i1 %1694, label %sort.quad_reversal.exit381.i.i, label %.lr.ph191.i.i, !llvm.loop !28

1695:                                             ; preds = %1617
  %1696 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 1
  %1697 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %1698 = ptrtoint ptr %1696 to i64
  %1699 = sub nuw i64 %1697, %1698
  %1700 = lshr i64 %1699, 4
  %1701 = shl nuw nsw i64 %1700, 3
  %1702 = getelementptr inbounds i8, ptr %1696, i64 %1701
  %1703 = sub nsw i64 0, %1701
  %1704 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %1703
  %1705 = and i64 %1699, 16
  %1706 = icmp eq i64 %1705, 0
  br i1 %1706, label %1730, label %._crit_edge.i292.i.i

._crit_edge.i292.i.i:                             ; preds = %1730, %1695
  %.027.i293.i.i134 = phi ptr [ %1734, %1730 ], [ %1704, %1695 ]
  %.025.i294.i.i135 = phi ptr [ %1733, %1730 ], [ %1702, %1695 ]
  %.0.i295.i.i136 = phi i64 [ %1735, %1730 ], [ %1700, %1695 ]
  %1707 = load i64, ptr %1696, align 8
  %1708 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %1708, ptr %1696, align 8
  store i64 %1707, ptr %.4220.lcssa.i.i109, align 8
  %1709 = load i64, ptr %.025.i294.i.i135, align 8
  %1710 = load i64, ptr %.027.i293.i.i134, align 8
  store i64 %1710, ptr %.025.i294.i.i135, align 8
  store i64 %1709, ptr %.027.i293.i.i134, align 8
  %1711 = icmp ult i64 %.0.i295.i.i136, 2
  br i1 %1711, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.preheader.i.i

.lr.ph185.preheader.i.i:                          ; preds = %._crit_edge.i292.i.i
  %1712 = lshr i64 %.0.i295.i.i136, 1
  %min.iters.check2022 = icmp ult i64 %.0.i295.i.i136, 48
  br i1 %min.iters.check2022, label %.lr.ph185.i.i.preheader, label %vector.scevcheck1981

vector.scevcheck1981:                             ; preds = %.lr.ph185.preheader.i.i
  %1713 = add nsw i64 %1712, -1
  %uglygep1982 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result1984.neg = mul i64 %1713, -8
  %1714 = getelementptr i8, ptr %uglygep1982, i64 %mul.result1984.neg
  %1715 = icmp ugt ptr %1714, %uglygep1982
  %uglygep1986 = getelementptr i8, ptr %.025.i294.i.i135, i64 -8
  %mul.result1988.neg = mul i64 %1713, -8
  %mul.overflow1989 = icmp ugt i64 %1713, 2305843009213693951
  %1716 = getelementptr i8, ptr %uglygep1986, i64 %mul.result1988.neg
  %1717 = icmp ugt ptr %1716, %uglygep1986
  %1718 = or i1 %1717, %mul.overflow1989
  %1719 = or i1 %1715, %1718
  br i1 %1719, label %.lr.ph185.i.i.preheader, label %vector.memcheck1990

vector.memcheck1990:                              ; preds = %vector.scevcheck1981
  %uglygep1991 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %1720 = shl i64 %1712, 3
  %1721 = add i64 %1720, 9
  %uglygep1992 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %1721
  %uglygep1993 = getelementptr i8, ptr %.027.i293.i.i134, i64 8
  %1722 = add i64 %1720, 8
  %uglygep1994 = getelementptr i8, ptr %.027.i293.i.i134, i64 %1722
  %1723 = mul i64 %1712, -8
  %uglygep1995 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %1723
  %uglygep1996 = getelementptr i8, ptr %.025.i294.i.i135, i64 %1723
  %bound01997 = icmp ult ptr %uglygep1991, %uglygep1994
  %bound11998 = icmp ult ptr %uglygep1993, %uglygep1992
  %found.conflict1999 = and i1 %bound01997, %bound11998
  %bound02000 = icmp ult ptr %uglygep1991, %.4220.lcssa.i.i109
  %bound12001 = icmp ult ptr %uglygep1995, %uglygep1992
  %found.conflict2002 = and i1 %bound02000, %bound12001
  %conflict.rdx2003 = or i1 %found.conflict1999, %found.conflict2002
  %bound02004 = icmp ult ptr %uglygep1991, %.025.i294.i.i135
  %bound12005 = icmp ult ptr %uglygep1996, %uglygep1992
  %found.conflict2006 = and i1 %bound02004, %bound12005
  %conflict.rdx2007 = or i1 %conflict.rdx2003, %found.conflict2006
  %bound02008 = icmp ult ptr %uglygep1993, %.4220.lcssa.i.i109
  %bound12009 = icmp ult ptr %uglygep1995, %uglygep1994
  %found.conflict2010 = and i1 %bound02008, %bound12009
  %conflict.rdx2011 = or i1 %conflict.rdx2007, %found.conflict2010
  %bound02012 = icmp ult ptr %uglygep1993, %.025.i294.i.i135
  %bound12013 = icmp ult ptr %uglygep1996, %uglygep1994
  %found.conflict2014 = and i1 %bound02012, %bound12013
  %conflict.rdx2015 = or i1 %conflict.rdx2011, %found.conflict2014
  %bound02016 = icmp ult ptr %uglygep1995, %.025.i294.i.i135
  %bound12017 = icmp ult ptr %uglygep1996, %.4220.lcssa.i.i109
  %found.conflict2018 = and i1 %bound02016, %bound12017
  %conflict.rdx2019 = or i1 %conflict.rdx2015, %found.conflict2018
  br i1 %conflict.rdx2019, label %.lr.ph185.i.i.preheader, label %vector.ph2023

vector.ph2023:                                    ; preds = %vector.memcheck1990
  %1724 = lshr i64 %.0.i295.i.i136, 1
  %n.vec2025 = and i64 %1712, 9223372036854775806
  %ind.end2026 = and i64 %1724, 1
  %1725 = shl i64 %n.vec2025, 3
  %ind.end2028 = getelementptr i8, ptr %1696, i64 %1725
  %1726 = mul i64 %n.vec2025, -8
  %ind.end2030 = getelementptr i8, ptr %.025.i294.i.i135, i64 %1726
  %1727 = shl i64 %n.vec2025, 3
  %ind.end2032 = getelementptr i8, ptr %.027.i293.i.i134, i64 %1727
  %1728 = mul i64 %n.vec2025, -8
  %ind.end2034 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %1728
  %next.gep20392509 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %next.gep20412506 = getelementptr i8, ptr %.027.i293.i.i134, i64 8
  %uglygep3110 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -16
  %uglygep3115 = getelementptr i8, ptr %.025.i294.i.i135, i64 -16
  br label %vector.body2037

vector.body2037:                                  ; preds = %vector.body2037, %vector.ph2023
  %lsr.iv3120 = phi i64 [ %lsr.iv.next3121, %vector.body2037 ], [ %n.vec2025, %vector.ph2023 ]
  %lsr.iv3118 = phi ptr [ %uglygep3119, %vector.body2037 ], [ %next.gep20392509, %vector.ph2023 ]
  %lsr.iv3116 = phi ptr [ %uglygep3117, %vector.body2037 ], [ %uglygep3115, %vector.ph2023 ]
  %lsr.iv3113 = phi ptr [ %uglygep3114, %vector.body2037 ], [ %next.gep20412506, %vector.ph2023 ]
  %lsr.iv3111 = phi ptr [ %uglygep3112, %vector.body2037 ], [ %uglygep3110, %vector.ph2023 ]
  %wide.load2043 = load <2 x i64>, ptr %lsr.iv3118, align 8, !alias.scope !29, !noalias !32
  %wide.load2044 = load <2 x i64>, ptr %lsr.iv3111, align 8, !alias.scope !36, !noalias !37
  %reverse2045 = shufflevector <2 x i64> %wide.load2044, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2045, ptr %lsr.iv3118, align 8, !alias.scope !29, !noalias !32
  %reverse2046 = shufflevector <2 x i64> %wide.load2043, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2046, ptr %lsr.iv3111, align 8, !alias.scope !36, !noalias !37
  %wide.load2047 = load <2 x i64>, ptr %lsr.iv3116, align 8, !alias.scope !37
  %reverse2048 = shufflevector <2 x i64> %wide.load2047, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2049 = load <2 x i64>, ptr %lsr.iv3113, align 8, !alias.scope !38, !noalias !39
  %reverse2050 = shufflevector <2 x i64> %wide.load2049, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2050, ptr %lsr.iv3116, align 8, !alias.scope !37
  store <2 x i64> %reverse2048, ptr %lsr.iv3113, align 8, !alias.scope !38, !noalias !39
  %uglygep3112 = getelementptr i8, ptr %lsr.iv3111, i64 -16
  %uglygep3114 = getelementptr i8, ptr %lsr.iv3113, i64 16
  %uglygep3117 = getelementptr i8, ptr %lsr.iv3116, i64 -16
  %uglygep3119 = getelementptr i8, ptr %lsr.iv3118, i64 16
  %lsr.iv.next3121 = add nsw i64 %lsr.iv3120, -2
  %1729 = icmp eq i64 %lsr.iv.next3121, 0
  br i1 %1729, label %middle.block2020, label %vector.body2037, !llvm.loop !40

middle.block2020:                                 ; preds = %vector.body2037
  %cmp.n2036 = icmp eq i64 %1712, %n.vec2025
  br i1 %cmp.n2036, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.i.i.preheader

.lr.ph185.i.i.preheader:                          ; preds = %middle.block2020, %vector.memcheck1990, %vector.scevcheck1981, %.lr.ph185.preheader.i.i
  %.1.i300184.i.i.ph = phi i64 [ %ind.end2026, %middle.block2020 ], [ %1712, %.lr.ph185.preheader.i.i ], [ %1712, %vector.scevcheck1981 ], [ %1712, %vector.memcheck1990 ]
  %.024.i299183.i.i.ph = phi ptr [ %ind.end2028, %middle.block2020 ], [ %1696, %.lr.ph185.preheader.i.i ], [ %1696, %vector.scevcheck1981 ], [ %1696, %vector.memcheck1990 ]
  %.126.i298182.i.i.ph = phi ptr [ %ind.end2030, %middle.block2020 ], [ %.025.i294.i.i135, %.lr.ph185.preheader.i.i ], [ %.025.i294.i.i135, %vector.scevcheck1981 ], [ %.025.i294.i.i135, %vector.memcheck1990 ]
  %.128.i297181.i.i.ph = phi ptr [ %ind.end2032, %middle.block2020 ], [ %.027.i293.i.i134, %.lr.ph185.preheader.i.i ], [ %.027.i293.i.i134, %vector.scevcheck1981 ], [ %.027.i293.i.i134, %vector.memcheck1990 ]
  %.029.i296180.i.i.ph = phi ptr [ %ind.end2034, %middle.block2020 ], [ %.4220.lcssa.i.i109, %.lr.ph185.preheader.i.i ], [ %.4220.lcssa.i.i109, %vector.scevcheck1981 ], [ %.4220.lcssa.i.i109, %vector.memcheck1990 ]
  %uglygep3098 = getelementptr i8, ptr %.024.i299183.i.i.ph, i64 8
  %uglygep3101 = getelementptr i8, ptr %.126.i298182.i.i.ph, i64 -8
  %uglygep3104 = getelementptr i8, ptr %.128.i297181.i.i.ph, i64 8
  %uglygep3107 = getelementptr i8, ptr %.029.i296180.i.i.ph, i64 -8
  br label %.lr.ph185.i.i

1730:                                             ; preds = %1695
  %1731 = load i64, ptr %1702, align 8
  %1732 = load i64, ptr %1704, align 8
  store i64 %1732, ptr %1702, align 8
  %1733 = getelementptr inbounds i8, ptr %1702, i64 -8
  store i64 %1731, ptr %1704, align 8
  %1734 = getelementptr inbounds i8, ptr %1704, i64 8
  %1735 = add nsw i64 %1700, -1
  br label %._crit_edge.i292.i.i

.lr.ph185.i.i:                                    ; preds = %.lr.ph185.i.i, %.lr.ph185.i.i.preheader
  %lsr.iv3108 = phi ptr [ %uglygep3107, %.lr.ph185.i.i.preheader ], [ %uglygep3109, %.lr.ph185.i.i ]
  %lsr.iv3105 = phi ptr [ %uglygep3104, %.lr.ph185.i.i.preheader ], [ %uglygep3106, %.lr.ph185.i.i ]
  %lsr.iv3102 = phi ptr [ %uglygep3101, %.lr.ph185.i.i.preheader ], [ %uglygep3103, %.lr.ph185.i.i ]
  %lsr.iv3099 = phi ptr [ %uglygep3098, %.lr.ph185.i.i.preheader ], [ %uglygep3100, %.lr.ph185.i.i ]
  %.1.i300184.i.i = phi i64 [ %1736, %.lr.ph185.i.i ], [ %.1.i300184.i.i.ph, %.lr.ph185.i.i.preheader ]
  %1736 = add nsw i64 %.1.i300184.i.i, -1
  %1737 = load i64, ptr %lsr.iv3099, align 8
  %1738 = load i64, ptr %lsr.iv3108, align 8
  store i64 %1738, ptr %lsr.iv3099, align 8
  store i64 %1737, ptr %lsr.iv3108, align 8
  %1739 = load i64, ptr %lsr.iv3102, align 8
  %1740 = load i64, ptr %lsr.iv3105, align 8
  store i64 %1740, ptr %lsr.iv3102, align 8
  store i64 %1739, ptr %lsr.iv3105, align 8
  %uglygep3100 = getelementptr i8, ptr %lsr.iv3099, i64 8
  %uglygep3103 = getelementptr i8, ptr %lsr.iv3102, i64 -8
  %uglygep3106 = getelementptr i8, ptr %lsr.iv3105, i64 8
  %uglygep3109 = getelementptr i8, ptr %lsr.iv3108, i64 -8
  %1741 = icmp eq i64 %1736, 0
  br i1 %1741, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph185.i.i, !llvm.loop !41

1742:                                             ; preds = %1617
  %1743 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %1744 = ptrtoint ptr %88 to i64
  %1745 = sub nuw i64 %1743, %1744
  %1746 = lshr i64 %1745, 4
  %1747 = shl nuw nsw i64 %1746, 3
  %1748 = getelementptr inbounds i8, ptr %88, i64 %1747
  %1749 = sub nsw i64 0, %1747
  %1750 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %1749
  %1751 = and i64 %1745, 16
  %1752 = icmp eq i64 %1751, 0
  br i1 %1752, label %1775, label %._crit_edge.i302.i.i

._crit_edge.i302.i.i:                             ; preds = %1775, %1742
  %.027.i303.i.i = phi ptr [ %1779, %1775 ], [ %1750, %1742 ]
  %.025.i304.i.i = phi ptr [ %1778, %1775 ], [ %1748, %1742 ]
  %.0.i305.i.i = phi i64 [ %1780, %1775 ], [ %1746, %1742 ]
  %1753 = load i64, ptr %88, align 8
  %1754 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %1754, ptr %88, align 8
  store i64 %1753, ptr %.4220.lcssa.i.i109, align 8
  %1755 = load i64, ptr %.025.i304.i.i, align 8
  %1756 = load i64, ptr %.027.i303.i.i, align 8
  store i64 %1756, ptr %.025.i304.i.i, align 8
  store i64 %1755, ptr %.027.i303.i.i, align 8
  %1757 = icmp ult i64 %.0.i305.i.i, 2
  br i1 %1757, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.preheader.i.i

.lr.ph179.preheader.i.i:                          ; preds = %._crit_edge.i302.i.i
  %1758 = lshr i64 %.0.i305.i.i, 1
  %min.iters.check1951 = icmp ult i64 %.0.i305.i.i, 48
  br i1 %min.iters.check1951, label %.lr.ph179.i.i.preheader, label %vector.scevcheck1910

vector.scevcheck1910:                             ; preds = %.lr.ph179.preheader.i.i
  %1759 = add nsw i64 %1758, -1
  %uglygep1911 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result1913.neg = mul i64 %1759, -8
  %1760 = getelementptr i8, ptr %uglygep1911, i64 %mul.result1913.neg
  %1761 = icmp ugt ptr %1760, %uglygep1911
  %uglygep1915 = getelementptr i8, ptr %.025.i304.i.i, i64 -8
  %mul.result1917.neg = mul i64 %1759, -8
  %mul.overflow1918 = icmp ugt i64 %1759, 2305843009213693951
  %1762 = getelementptr i8, ptr %uglygep1915, i64 %mul.result1917.neg
  %1763 = icmp ugt ptr %1762, %uglygep1915
  %1764 = or i1 %1763, %mul.overflow1918
  %1765 = or i1 %1761, %1764
  br i1 %1765, label %.lr.ph179.i.i.preheader, label %vector.memcheck1919

vector.memcheck1919:                              ; preds = %vector.scevcheck1910
  %uglygep1920 = getelementptr i8, ptr %88, i64 8
  %1766 = shl i64 %1758, 3
  %1767 = add i64 %1766, 8
  %uglygep1921 = getelementptr i8, ptr %88, i64 %1767
  %uglygep1922 = getelementptr i8, ptr %.027.i303.i.i, i64 8
  %uglygep1923 = getelementptr i8, ptr %.027.i303.i.i, i64 %1767
  %1768 = mul i64 %1758, -8
  %uglygep1924 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %1768
  %uglygep1925 = getelementptr i8, ptr %.025.i304.i.i, i64 %1768
  %bound01926 = icmp ult ptr %uglygep1920, %uglygep1923
  %bound11927 = icmp ult ptr %uglygep1922, %uglygep1921
  %found.conflict1928 = and i1 %bound01926, %bound11927
  %bound01929 = icmp ult ptr %uglygep1920, %.4220.lcssa.i.i109
  %bound11930 = icmp ult ptr %uglygep1924, %uglygep1921
  %found.conflict1931 = and i1 %bound01929, %bound11930
  %conflict.rdx1932 = or i1 %found.conflict1928, %found.conflict1931
  %bound01933 = icmp ult ptr %uglygep1920, %.025.i304.i.i
  %bound11934 = icmp ult ptr %uglygep1925, %uglygep1921
  %found.conflict1935 = and i1 %bound01933, %bound11934
  %conflict.rdx1936 = or i1 %conflict.rdx1932, %found.conflict1935
  %bound01937 = icmp ult ptr %uglygep1922, %.4220.lcssa.i.i109
  %bound11938 = icmp ult ptr %uglygep1924, %uglygep1923
  %found.conflict1939 = and i1 %bound01937, %bound11938
  %conflict.rdx1940 = or i1 %conflict.rdx1936, %found.conflict1939
  %bound01941 = icmp ult ptr %uglygep1922, %.025.i304.i.i
  %bound11942 = icmp ult ptr %uglygep1925, %uglygep1923
  %found.conflict1943 = and i1 %bound01941, %bound11942
  %conflict.rdx1944 = or i1 %conflict.rdx1940, %found.conflict1943
  %bound01945 = icmp ult ptr %uglygep1924, %.025.i304.i.i
  %bound11946 = icmp ult ptr %uglygep1925, %.4220.lcssa.i.i109
  %found.conflict1947 = and i1 %bound01945, %bound11946
  %conflict.rdx1948 = or i1 %conflict.rdx1944, %found.conflict1947
  br i1 %conflict.rdx1948, label %.lr.ph179.i.i.preheader, label %vector.ph1952

vector.ph1952:                                    ; preds = %vector.memcheck1919
  %1769 = lshr i64 %.0.i305.i.i, 1
  %n.vec1954 = and i64 %1758, 9223372036854775806
  %ind.end1955 = and i64 %1769, 1
  %1770 = shl i64 %n.vec1954, 3
  %ind.end1957 = getelementptr i8, ptr %88, i64 %1770
  %1771 = mul i64 %n.vec1954, -8
  %ind.end1959 = getelementptr i8, ptr %.025.i304.i.i, i64 %1771
  %1772 = shl i64 %n.vec1954, 3
  %ind.end1961 = getelementptr i8, ptr %.027.i303.i.i, i64 %1772
  %1773 = mul i64 %n.vec1954, -8
  %ind.end1963 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %1773
  %next.gep19682505 = getelementptr i8, ptr %88, i64 8
  %next.gep19702502 = getelementptr i8, ptr %.027.i303.i.i, i64 8
  %uglygep3134 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -16
  %uglygep3139 = getelementptr i8, ptr %.025.i304.i.i, i64 -16
  br label %vector.body1966

vector.body1966:                                  ; preds = %vector.body1966, %vector.ph1952
  %lsr.iv3144 = phi i64 [ %lsr.iv.next3145, %vector.body1966 ], [ %n.vec1954, %vector.ph1952 ]
  %lsr.iv3142 = phi ptr [ %uglygep3143, %vector.body1966 ], [ %next.gep19682505, %vector.ph1952 ]
  %lsr.iv3140 = phi ptr [ %uglygep3141, %vector.body1966 ], [ %uglygep3139, %vector.ph1952 ]
  %lsr.iv3137 = phi ptr [ %uglygep3138, %vector.body1966 ], [ %next.gep19702502, %vector.ph1952 ]
  %lsr.iv3135 = phi ptr [ %uglygep3136, %vector.body1966 ], [ %uglygep3134, %vector.ph1952 ]
  %wide.load1972 = load <2 x i64>, ptr %lsr.iv3142, align 8, !alias.scope !42, !noalias !45
  %wide.load1973 = load <2 x i64>, ptr %lsr.iv3135, align 8, !alias.scope !49, !noalias !50
  %reverse1974 = shufflevector <2 x i64> %wide.load1973, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1974, ptr %lsr.iv3142, align 8, !alias.scope !42, !noalias !45
  %reverse1975 = shufflevector <2 x i64> %wide.load1972, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1975, ptr %lsr.iv3135, align 8, !alias.scope !49, !noalias !50
  %wide.load1976 = load <2 x i64>, ptr %lsr.iv3140, align 8, !alias.scope !50
  %reverse1977 = shufflevector <2 x i64> %wide.load1976, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1978 = load <2 x i64>, ptr %lsr.iv3137, align 8, !alias.scope !51, !noalias !52
  %reverse1979 = shufflevector <2 x i64> %wide.load1978, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1979, ptr %lsr.iv3140, align 8, !alias.scope !50
  store <2 x i64> %reverse1977, ptr %lsr.iv3137, align 8, !alias.scope !51, !noalias !52
  %uglygep3136 = getelementptr i8, ptr %lsr.iv3135, i64 -16
  %uglygep3138 = getelementptr i8, ptr %lsr.iv3137, i64 16
  %uglygep3141 = getelementptr i8, ptr %lsr.iv3140, i64 -16
  %uglygep3143 = getelementptr i8, ptr %lsr.iv3142, i64 16
  %lsr.iv.next3145 = add nsw i64 %lsr.iv3144, -2
  %1774 = icmp eq i64 %lsr.iv.next3145, 0
  br i1 %1774, label %middle.block1949, label %vector.body1966, !llvm.loop !53

middle.block1949:                                 ; preds = %vector.body1966
  %cmp.n1965 = icmp eq i64 %1758, %n.vec1954
  br i1 %cmp.n1965, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.i.i.preheader

.lr.ph179.i.i.preheader:                          ; preds = %middle.block1949, %vector.memcheck1919, %vector.scevcheck1910, %.lr.ph179.preheader.i.i
  %.1.i310178.i.i.ph = phi i64 [ %ind.end1955, %middle.block1949 ], [ %1758, %.lr.ph179.preheader.i.i ], [ %1758, %vector.scevcheck1910 ], [ %1758, %vector.memcheck1919 ]
  %.024.i309177.i.i.ph = phi ptr [ %ind.end1957, %middle.block1949 ], [ %88, %.lr.ph179.preheader.i.i ], [ %88, %vector.scevcheck1910 ], [ %88, %vector.memcheck1919 ]
  %.126.i308176.i.i.ph = phi ptr [ %ind.end1959, %middle.block1949 ], [ %.025.i304.i.i, %.lr.ph179.preheader.i.i ], [ %.025.i304.i.i, %vector.scevcheck1910 ], [ %.025.i304.i.i, %vector.memcheck1919 ]
  %.128.i307175.i.i.ph = phi ptr [ %ind.end1961, %middle.block1949 ], [ %.027.i303.i.i, %.lr.ph179.preheader.i.i ], [ %.027.i303.i.i, %vector.scevcheck1910 ], [ %.027.i303.i.i, %vector.memcheck1919 ]
  %.029.i306174.i.i.ph = phi ptr [ %ind.end1963, %middle.block1949 ], [ %.4220.lcssa.i.i109, %.lr.ph179.preheader.i.i ], [ %.4220.lcssa.i.i109, %vector.scevcheck1910 ], [ %.4220.lcssa.i.i109, %vector.memcheck1919 ]
  %uglygep3122 = getelementptr i8, ptr %.024.i309177.i.i.ph, i64 8
  %uglygep3125 = getelementptr i8, ptr %.126.i308176.i.i.ph, i64 -8
  %uglygep3128 = getelementptr i8, ptr %.128.i307175.i.i.ph, i64 8
  %uglygep3131 = getelementptr i8, ptr %.029.i306174.i.i.ph, i64 -8
  br label %.lr.ph179.i.i

1775:                                             ; preds = %1742
  %1776 = load i64, ptr %1748, align 8
  %1777 = load i64, ptr %1750, align 8
  store i64 %1777, ptr %1748, align 8
  %1778 = getelementptr inbounds i8, ptr %1748, i64 -8
  store i64 %1776, ptr %1750, align 8
  %1779 = getelementptr inbounds i8, ptr %1750, i64 8
  %1780 = add nsw i64 %1746, -1
  br label %._crit_edge.i302.i.i

.lr.ph179.i.i:                                    ; preds = %.lr.ph179.i.i, %.lr.ph179.i.i.preheader
  %lsr.iv3132 = phi ptr [ %uglygep3131, %.lr.ph179.i.i.preheader ], [ %uglygep3133, %.lr.ph179.i.i ]
  %lsr.iv3129 = phi ptr [ %uglygep3128, %.lr.ph179.i.i.preheader ], [ %uglygep3130, %.lr.ph179.i.i ]
  %lsr.iv3126 = phi ptr [ %uglygep3125, %.lr.ph179.i.i.preheader ], [ %uglygep3127, %.lr.ph179.i.i ]
  %lsr.iv3123 = phi ptr [ %uglygep3122, %.lr.ph179.i.i.preheader ], [ %uglygep3124, %.lr.ph179.i.i ]
  %.1.i310178.i.i = phi i64 [ %1781, %.lr.ph179.i.i ], [ %.1.i310178.i.i.ph, %.lr.ph179.i.i.preheader ]
  %1781 = add nsw i64 %.1.i310178.i.i, -1
  %1782 = load i64, ptr %lsr.iv3123, align 8
  %1783 = load i64, ptr %lsr.iv3132, align 8
  store i64 %1783, ptr %lsr.iv3123, align 8
  store i64 %1782, ptr %lsr.iv3132, align 8
  %1784 = load i64, ptr %lsr.iv3126, align 8
  %1785 = load i64, ptr %lsr.iv3129, align 8
  store i64 %1785, ptr %lsr.iv3126, align 8
  store i64 %1784, ptr %lsr.iv3129, align 8
  %uglygep3124 = getelementptr i8, ptr %lsr.iv3123, i64 8
  %uglygep3127 = getelementptr i8, ptr %lsr.iv3126, i64 -8
  %uglygep3130 = getelementptr i8, ptr %lsr.iv3129, i64 8
  %uglygep3133 = getelementptr i8, ptr %lsr.iv3132, i64 -8
  %1786 = icmp eq i64 %1781, 0
  br i1 %1786, label %sort.quad_reversal.exit391.i.i, label %.lr.ph179.i.i, !llvm.loop !54

1787:                                             ; preds = %1617
  %1788 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 1
  %1789 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %1790 = ptrtoint ptr %1788 to i64
  %1791 = sub nuw i64 %1789, %1790
  %1792 = lshr i64 %1791, 4
  %1793 = shl nuw nsw i64 %1792, 3
  %1794 = getelementptr inbounds i8, ptr %1788, i64 %1793
  %1795 = sub nsw i64 0, %1793
  %1796 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %1795
  %1797 = and i64 %1791, 16
  %1798 = icmp eq i64 %1797, 0
  br i1 %1798, label %1822, label %._crit_edge.i312.i.i

._crit_edge.i312.i.i:                             ; preds = %1822, %1787
  %.027.i313.i.i = phi ptr [ %1826, %1822 ], [ %1796, %1787 ]
  %.025.i314.i.i = phi ptr [ %1825, %1822 ], [ %1794, %1787 ]
  %.0.i315.i.i = phi i64 [ %1827, %1822 ], [ %1792, %1787 ]
  %1799 = load i64, ptr %1788, align 8
  %1800 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %1800, ptr %1788, align 8
  store i64 %1799, ptr %.4225.lcssa.i.i108, align 8
  %1801 = load i64, ptr %.025.i314.i.i, align 8
  %1802 = load i64, ptr %.027.i313.i.i, align 8
  store i64 %1802, ptr %.025.i314.i.i, align 8
  store i64 %1801, ptr %.027.i313.i.i, align 8
  %1803 = icmp ult i64 %.0.i315.i.i, 2
  br i1 %1803, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.preheader.i.i

.lr.ph173.preheader.i.i:                          ; preds = %._crit_edge.i312.i.i
  %1804 = lshr i64 %.0.i315.i.i, 1
  %min.iters.check1880 = icmp ult i64 %.0.i315.i.i, 48
  br i1 %min.iters.check1880, label %.lr.ph173.i.i.preheader, label %vector.scevcheck1839

vector.scevcheck1839:                             ; preds = %.lr.ph173.preheader.i.i
  %1805 = add nsw i64 %1804, -1
  %uglygep1840 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1842.neg = mul i64 %1805, -8
  %1806 = getelementptr i8, ptr %uglygep1840, i64 %mul.result1842.neg
  %1807 = icmp ugt ptr %1806, %uglygep1840
  %uglygep1844 = getelementptr i8, ptr %.025.i314.i.i, i64 -8
  %mul.result1846.neg = mul i64 %1805, -8
  %mul.overflow1847 = icmp ugt i64 %1805, 2305843009213693951
  %1808 = getelementptr i8, ptr %uglygep1844, i64 %mul.result1846.neg
  %1809 = icmp ugt ptr %1808, %uglygep1844
  %1810 = or i1 %1809, %mul.overflow1847
  %1811 = or i1 %1807, %1810
  br i1 %1811, label %.lr.ph173.i.i.preheader, label %vector.memcheck1848

vector.memcheck1848:                              ; preds = %vector.scevcheck1839
  %uglygep1849 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %1812 = shl i64 %1804, 3
  %1813 = add i64 %1812, 9
  %uglygep1850 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1813
  %uglygep1851 = getelementptr i8, ptr %.027.i313.i.i, i64 8
  %1814 = add i64 %1812, 8
  %uglygep1852 = getelementptr i8, ptr %.027.i313.i.i, i64 %1814
  %1815 = mul i64 %1804, -8
  %uglygep1853 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1815
  %uglygep1854 = getelementptr i8, ptr %.025.i314.i.i, i64 %1815
  %bound01855 = icmp ult ptr %uglygep1849, %uglygep1852
  %bound11856 = icmp ult ptr %uglygep1851, %uglygep1850
  %found.conflict1857 = and i1 %bound01855, %bound11856
  %bound01858 = icmp ult ptr %uglygep1849, %.4225.lcssa.i.i108
  %bound11859 = icmp ult ptr %uglygep1853, %uglygep1850
  %found.conflict1860 = and i1 %bound01858, %bound11859
  %conflict.rdx1861 = or i1 %found.conflict1857, %found.conflict1860
  %bound01862 = icmp ult ptr %uglygep1849, %.025.i314.i.i
  %bound11863 = icmp ult ptr %uglygep1854, %uglygep1850
  %found.conflict1864 = and i1 %bound01862, %bound11863
  %conflict.rdx1865 = or i1 %conflict.rdx1861, %found.conflict1864
  %bound01866 = icmp ult ptr %uglygep1851, %.4225.lcssa.i.i108
  %bound11867 = icmp ult ptr %uglygep1853, %uglygep1852
  %found.conflict1868 = and i1 %bound01866, %bound11867
  %conflict.rdx1869 = or i1 %conflict.rdx1865, %found.conflict1868
  %bound01870 = icmp ult ptr %uglygep1851, %.025.i314.i.i
  %bound11871 = icmp ult ptr %uglygep1854, %uglygep1852
  %found.conflict1872 = and i1 %bound01870, %bound11871
  %conflict.rdx1873 = or i1 %conflict.rdx1869, %found.conflict1872
  %bound01874 = icmp ult ptr %uglygep1853, %.025.i314.i.i
  %bound11875 = icmp ult ptr %uglygep1854, %.4225.lcssa.i.i108
  %found.conflict1876 = and i1 %bound01874, %bound11875
  %conflict.rdx1877 = or i1 %conflict.rdx1873, %found.conflict1876
  br i1 %conflict.rdx1877, label %.lr.ph173.i.i.preheader, label %vector.ph1881

vector.ph1881:                                    ; preds = %vector.memcheck1848
  %1816 = lshr i64 %.0.i315.i.i, 1
  %n.vec1883 = and i64 %1804, 9223372036854775806
  %ind.end1884 = and i64 %1816, 1
  %1817 = shl i64 %n.vec1883, 3
  %ind.end1886 = getelementptr i8, ptr %1788, i64 %1817
  %1818 = mul i64 %n.vec1883, -8
  %ind.end1888 = getelementptr i8, ptr %.025.i314.i.i, i64 %1818
  %1819 = shl i64 %n.vec1883, 3
  %ind.end1890 = getelementptr i8, ptr %.027.i313.i.i, i64 %1819
  %1820 = mul i64 %n.vec1883, -8
  %ind.end1892 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1820
  %next.gep18972501 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %next.gep18992498 = getelementptr i8, ptr %.027.i313.i.i, i64 8
  %uglygep3158 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -16
  %uglygep3163 = getelementptr i8, ptr %.025.i314.i.i, i64 -16
  br label %vector.body1895

vector.body1895:                                  ; preds = %vector.body1895, %vector.ph1881
  %lsr.iv3168 = phi i64 [ %lsr.iv.next3169, %vector.body1895 ], [ %n.vec1883, %vector.ph1881 ]
  %lsr.iv3166 = phi ptr [ %uglygep3167, %vector.body1895 ], [ %next.gep18972501, %vector.ph1881 ]
  %lsr.iv3164 = phi ptr [ %uglygep3165, %vector.body1895 ], [ %uglygep3163, %vector.ph1881 ]
  %lsr.iv3161 = phi ptr [ %uglygep3162, %vector.body1895 ], [ %next.gep18992498, %vector.ph1881 ]
  %lsr.iv3159 = phi ptr [ %uglygep3160, %vector.body1895 ], [ %uglygep3158, %vector.ph1881 ]
  %wide.load1901 = load <2 x i64>, ptr %lsr.iv3166, align 8, !alias.scope !55, !noalias !58
  %wide.load1902 = load <2 x i64>, ptr %lsr.iv3159, align 8, !alias.scope !62, !noalias !63
  %reverse1903 = shufflevector <2 x i64> %wide.load1902, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1903, ptr %lsr.iv3166, align 8, !alias.scope !55, !noalias !58
  %reverse1904 = shufflevector <2 x i64> %wide.load1901, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1904, ptr %lsr.iv3159, align 8, !alias.scope !62, !noalias !63
  %wide.load1905 = load <2 x i64>, ptr %lsr.iv3164, align 8, !alias.scope !63
  %reverse1906 = shufflevector <2 x i64> %wide.load1905, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1907 = load <2 x i64>, ptr %lsr.iv3161, align 8, !alias.scope !64, !noalias !65
  %reverse1908 = shufflevector <2 x i64> %wide.load1907, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1908, ptr %lsr.iv3164, align 8, !alias.scope !63
  store <2 x i64> %reverse1906, ptr %lsr.iv3161, align 8, !alias.scope !64, !noalias !65
  %uglygep3160 = getelementptr i8, ptr %lsr.iv3159, i64 -16
  %uglygep3162 = getelementptr i8, ptr %lsr.iv3161, i64 16
  %uglygep3165 = getelementptr i8, ptr %lsr.iv3164, i64 -16
  %uglygep3167 = getelementptr i8, ptr %lsr.iv3166, i64 16
  %lsr.iv.next3169 = add nsw i64 %lsr.iv3168, -2
  %1821 = icmp eq i64 %lsr.iv.next3169, 0
  br i1 %1821, label %middle.block1878, label %vector.body1895, !llvm.loop !66

middle.block1878:                                 ; preds = %vector.body1895
  %cmp.n1894 = icmp eq i64 %1804, %n.vec1883
  br i1 %cmp.n1894, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.i.i.preheader

.lr.ph173.i.i.preheader:                          ; preds = %middle.block1878, %vector.memcheck1848, %vector.scevcheck1839, %.lr.ph173.preheader.i.i
  %.1.i320172.i.i.ph = phi i64 [ %ind.end1884, %middle.block1878 ], [ %1804, %.lr.ph173.preheader.i.i ], [ %1804, %vector.scevcheck1839 ], [ %1804, %vector.memcheck1848 ]
  %.024.i319171.i.i.ph = phi ptr [ %ind.end1886, %middle.block1878 ], [ %1788, %.lr.ph173.preheader.i.i ], [ %1788, %vector.scevcheck1839 ], [ %1788, %vector.memcheck1848 ]
  %.126.i318170.i.i.ph = phi ptr [ %ind.end1888, %middle.block1878 ], [ %.025.i314.i.i, %.lr.ph173.preheader.i.i ], [ %.025.i314.i.i, %vector.scevcheck1839 ], [ %.025.i314.i.i, %vector.memcheck1848 ]
  %.128.i317169.i.i.ph = phi ptr [ %ind.end1890, %middle.block1878 ], [ %.027.i313.i.i, %.lr.ph173.preheader.i.i ], [ %.027.i313.i.i, %vector.scevcheck1839 ], [ %.027.i313.i.i, %vector.memcheck1848 ]
  %.029.i316168.i.i.ph = phi ptr [ %ind.end1892, %middle.block1878 ], [ %.4225.lcssa.i.i108, %.lr.ph173.preheader.i.i ], [ %.4225.lcssa.i.i108, %vector.scevcheck1839 ], [ %.4225.lcssa.i.i108, %vector.memcheck1848 ]
  %uglygep3146 = getelementptr i8, ptr %.024.i319171.i.i.ph, i64 8
  %uglygep3149 = getelementptr i8, ptr %.126.i318170.i.i.ph, i64 -8
  %uglygep3152 = getelementptr i8, ptr %.128.i317169.i.i.ph, i64 8
  %uglygep3155 = getelementptr i8, ptr %.029.i316168.i.i.ph, i64 -8
  br label %.lr.ph173.i.i

1822:                                             ; preds = %1787
  %1823 = load i64, ptr %1794, align 8
  %1824 = load i64, ptr %1796, align 8
  store i64 %1824, ptr %1794, align 8
  %1825 = getelementptr inbounds i8, ptr %1794, i64 -8
  store i64 %1823, ptr %1796, align 8
  %1826 = getelementptr inbounds i8, ptr %1796, i64 8
  %1827 = add nsw i64 %1792, -1
  br label %._crit_edge.i312.i.i

.lr.ph173.i.i:                                    ; preds = %.lr.ph173.i.i, %.lr.ph173.i.i.preheader
  %lsr.iv3156 = phi ptr [ %uglygep3155, %.lr.ph173.i.i.preheader ], [ %uglygep3157, %.lr.ph173.i.i ]
  %lsr.iv3153 = phi ptr [ %uglygep3152, %.lr.ph173.i.i.preheader ], [ %uglygep3154, %.lr.ph173.i.i ]
  %lsr.iv3150 = phi ptr [ %uglygep3149, %.lr.ph173.i.i.preheader ], [ %uglygep3151, %.lr.ph173.i.i ]
  %lsr.iv3147 = phi ptr [ %uglygep3146, %.lr.ph173.i.i.preheader ], [ %uglygep3148, %.lr.ph173.i.i ]
  %.1.i320172.i.i = phi i64 [ %1828, %.lr.ph173.i.i ], [ %.1.i320172.i.i.ph, %.lr.ph173.i.i.preheader ]
  %1828 = add nsw i64 %.1.i320172.i.i, -1
  %1829 = load i64, ptr %lsr.iv3147, align 8
  %1830 = load i64, ptr %lsr.iv3156, align 8
  store i64 %1830, ptr %lsr.iv3147, align 8
  store i64 %1829, ptr %lsr.iv3156, align 8
  %1831 = load i64, ptr %lsr.iv3150, align 8
  %1832 = load i64, ptr %lsr.iv3153, align 8
  store i64 %1832, ptr %lsr.iv3150, align 8
  store i64 %1831, ptr %lsr.iv3153, align 8
  %uglygep3148 = getelementptr i8, ptr %lsr.iv3147, i64 8
  %uglygep3151 = getelementptr i8, ptr %lsr.iv3150, i64 -8
  %uglygep3154 = getelementptr i8, ptr %lsr.iv3153, i64 8
  %uglygep3157 = getelementptr i8, ptr %lsr.iv3156, i64 -8
  %1833 = icmp eq i64 %1828, 0
  br i1 %1833, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph173.i.i, !llvm.loop !67

1834:                                             ; preds = %1617
  %1835 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %1836 = ptrtoint ptr %88 to i64
  %1837 = sub nuw i64 %1835, %1836
  %1838 = lshr i64 %1837, 4
  %1839 = shl nuw nsw i64 %1838, 3
  %1840 = getelementptr inbounds i8, ptr %88, i64 %1839
  %1841 = sub nsw i64 0, %1839
  %1842 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %1841
  %1843 = and i64 %1837, 16
  %1844 = icmp eq i64 %1843, 0
  br i1 %1844, label %1867, label %._crit_edge.i322.i.i

._crit_edge.i322.i.i:                             ; preds = %1867, %1834
  %.027.i323.i.i = phi ptr [ %1871, %1867 ], [ %1842, %1834 ]
  %.025.i324.i.i = phi ptr [ %1870, %1867 ], [ %1840, %1834 ]
  %.0.i325.i.i = phi i64 [ %1872, %1867 ], [ %1838, %1834 ]
  %1845 = load i64, ptr %88, align 8
  %1846 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %1846, ptr %88, align 8
  store i64 %1845, ptr %.4.lcssa.i.i110, align 8
  %1847 = load i64, ptr %.025.i324.i.i, align 8
  %1848 = load i64, ptr %.027.i323.i.i, align 8
  store i64 %1848, ptr %.025.i324.i.i, align 8
  store i64 %1847, ptr %.027.i323.i.i, align 8
  %1849 = icmp ult i64 %.0.i325.i.i, 2
  br i1 %1849, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.preheader.i.i

.lr.ph161.preheader.i.i:                          ; preds = %._crit_edge.i322.i.i
  %1850 = lshr i64 %.0.i325.i.i, 1
  %min.iters.check1738 = icmp ult i64 %.0.i325.i.i, 48
  br i1 %min.iters.check1738, label %.lr.ph161.i.i.preheader, label %vector.scevcheck1697

vector.scevcheck1697:                             ; preds = %.lr.ph161.preheader.i.i
  %1851 = add nsw i64 %1850, -1
  %uglygep1698 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result1700.neg = mul i64 %1851, -8
  %1852 = getelementptr i8, ptr %uglygep1698, i64 %mul.result1700.neg
  %1853 = icmp ugt ptr %1852, %uglygep1698
  %uglygep1702 = getelementptr i8, ptr %.025.i324.i.i, i64 -8
  %mul.result1704.neg = mul i64 %1851, -8
  %mul.overflow1705 = icmp ugt i64 %1851, 2305843009213693951
  %1854 = getelementptr i8, ptr %uglygep1702, i64 %mul.result1704.neg
  %1855 = icmp ugt ptr %1854, %uglygep1702
  %1856 = or i1 %1855, %mul.overflow1705
  %1857 = or i1 %1853, %1856
  br i1 %1857, label %.lr.ph161.i.i.preheader, label %vector.memcheck1706

vector.memcheck1706:                              ; preds = %vector.scevcheck1697
  %uglygep1707 = getelementptr i8, ptr %88, i64 8
  %1858 = shl i64 %1850, 3
  %1859 = add i64 %1858, 8
  %uglygep1708 = getelementptr i8, ptr %88, i64 %1859
  %uglygep1709 = getelementptr i8, ptr %.027.i323.i.i, i64 8
  %uglygep1710 = getelementptr i8, ptr %.027.i323.i.i, i64 %1859
  %1860 = mul i64 %1850, -8
  %uglygep1711 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1860
  %uglygep1712 = getelementptr i8, ptr %.025.i324.i.i, i64 %1860
  %bound01713 = icmp ult ptr %uglygep1707, %uglygep1710
  %bound11714 = icmp ult ptr %uglygep1709, %uglygep1708
  %found.conflict1715 = and i1 %bound01713, %bound11714
  %bound01716 = icmp ult ptr %uglygep1707, %.4.lcssa.i.i110
  %bound11717 = icmp ult ptr %uglygep1711, %uglygep1708
  %found.conflict1718 = and i1 %bound01716, %bound11717
  %conflict.rdx1719 = or i1 %found.conflict1715, %found.conflict1718
  %bound01720 = icmp ult ptr %uglygep1707, %.025.i324.i.i
  %bound11721 = icmp ult ptr %uglygep1712, %uglygep1708
  %found.conflict1722 = and i1 %bound01720, %bound11721
  %conflict.rdx1723 = or i1 %conflict.rdx1719, %found.conflict1722
  %bound01724 = icmp ult ptr %uglygep1709, %.4.lcssa.i.i110
  %bound11725 = icmp ult ptr %uglygep1711, %uglygep1710
  %found.conflict1726 = and i1 %bound01724, %bound11725
  %conflict.rdx1727 = or i1 %conflict.rdx1723, %found.conflict1726
  %bound01728 = icmp ult ptr %uglygep1709, %.025.i324.i.i
  %bound11729 = icmp ult ptr %uglygep1712, %uglygep1710
  %found.conflict1730 = and i1 %bound01728, %bound11729
  %conflict.rdx1731 = or i1 %conflict.rdx1727, %found.conflict1730
  %bound01732 = icmp ult ptr %uglygep1711, %.025.i324.i.i
  %bound11733 = icmp ult ptr %uglygep1712, %.4.lcssa.i.i110
  %found.conflict1734 = and i1 %bound01732, %bound11733
  %conflict.rdx1735 = or i1 %conflict.rdx1731, %found.conflict1734
  br i1 %conflict.rdx1735, label %.lr.ph161.i.i.preheader, label %vector.ph1739

vector.ph1739:                                    ; preds = %vector.memcheck1706
  %1861 = lshr i64 %.0.i325.i.i, 1
  %n.vec1741 = and i64 %1850, 9223372036854775806
  %ind.end1742 = and i64 %1861, 1
  %1862 = shl i64 %n.vec1741, 3
  %ind.end1744 = getelementptr i8, ptr %88, i64 %1862
  %1863 = mul i64 %n.vec1741, -8
  %ind.end1746 = getelementptr i8, ptr %.025.i324.i.i, i64 %1863
  %1864 = shl i64 %n.vec1741, 3
  %ind.end1748 = getelementptr i8, ptr %.027.i323.i.i, i64 %1864
  %1865 = mul i64 %n.vec1741, -8
  %ind.end1750 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1865
  %next.gep17552493 = getelementptr i8, ptr %88, i64 8
  %next.gep17572490 = getelementptr i8, ptr %.027.i323.i.i, i64 8
  %uglygep3206 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -16
  %uglygep3211 = getelementptr i8, ptr %.025.i324.i.i, i64 -16
  br label %vector.body1753

vector.body1753:                                  ; preds = %vector.body1753, %vector.ph1739
  %lsr.iv3216 = phi i64 [ %lsr.iv.next3217, %vector.body1753 ], [ %n.vec1741, %vector.ph1739 ]
  %lsr.iv3214 = phi ptr [ %uglygep3215, %vector.body1753 ], [ %next.gep17552493, %vector.ph1739 ]
  %lsr.iv3212 = phi ptr [ %uglygep3213, %vector.body1753 ], [ %uglygep3211, %vector.ph1739 ]
  %lsr.iv3209 = phi ptr [ %uglygep3210, %vector.body1753 ], [ %next.gep17572490, %vector.ph1739 ]
  %lsr.iv3207 = phi ptr [ %uglygep3208, %vector.body1753 ], [ %uglygep3206, %vector.ph1739 ]
  %wide.load1759 = load <2 x i64>, ptr %lsr.iv3214, align 8, !alias.scope !68, !noalias !71
  %wide.load1760 = load <2 x i64>, ptr %lsr.iv3207, align 8, !alias.scope !75, !noalias !76
  %reverse1761 = shufflevector <2 x i64> %wide.load1760, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1761, ptr %lsr.iv3214, align 8, !alias.scope !68, !noalias !71
  %reverse1762 = shufflevector <2 x i64> %wide.load1759, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1762, ptr %lsr.iv3207, align 8, !alias.scope !75, !noalias !76
  %wide.load1763 = load <2 x i64>, ptr %lsr.iv3212, align 8, !alias.scope !76
  %reverse1764 = shufflevector <2 x i64> %wide.load1763, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1765 = load <2 x i64>, ptr %lsr.iv3209, align 8, !alias.scope !77, !noalias !78
  %reverse1766 = shufflevector <2 x i64> %wide.load1765, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1766, ptr %lsr.iv3212, align 8, !alias.scope !76
  store <2 x i64> %reverse1764, ptr %lsr.iv3209, align 8, !alias.scope !77, !noalias !78
  %uglygep3208 = getelementptr i8, ptr %lsr.iv3207, i64 -16
  %uglygep3210 = getelementptr i8, ptr %lsr.iv3209, i64 16
  %uglygep3213 = getelementptr i8, ptr %lsr.iv3212, i64 -16
  %uglygep3215 = getelementptr i8, ptr %lsr.iv3214, i64 16
  %lsr.iv.next3217 = add nsw i64 %lsr.iv3216, -2
  %1866 = icmp eq i64 %lsr.iv.next3217, 0
  br i1 %1866, label %middle.block1736, label %vector.body1753, !llvm.loop !79

middle.block1736:                                 ; preds = %vector.body1753
  %cmp.n1752 = icmp eq i64 %1850, %n.vec1741
  br i1 %cmp.n1752, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.i.i.preheader

.lr.ph161.i.i.preheader:                          ; preds = %middle.block1736, %vector.memcheck1706, %vector.scevcheck1697, %.lr.ph161.preheader.i.i
  %.1.i330160.i.i.ph = phi i64 [ %ind.end1742, %middle.block1736 ], [ %1850, %.lr.ph161.preheader.i.i ], [ %1850, %vector.scevcheck1697 ], [ %1850, %vector.memcheck1706 ]
  %.024.i329159.i.i.ph = phi ptr [ %ind.end1744, %middle.block1736 ], [ %88, %.lr.ph161.preheader.i.i ], [ %88, %vector.scevcheck1697 ], [ %88, %vector.memcheck1706 ]
  %.126.i328158.i.i.ph = phi ptr [ %ind.end1746, %middle.block1736 ], [ %.025.i324.i.i, %.lr.ph161.preheader.i.i ], [ %.025.i324.i.i, %vector.scevcheck1697 ], [ %.025.i324.i.i, %vector.memcheck1706 ]
  %.128.i327157.i.i.ph = phi ptr [ %ind.end1748, %middle.block1736 ], [ %.027.i323.i.i, %.lr.ph161.preheader.i.i ], [ %.027.i323.i.i, %vector.scevcheck1697 ], [ %.027.i323.i.i, %vector.memcheck1706 ]
  %.029.i326156.i.i.ph = phi ptr [ %ind.end1750, %middle.block1736 ], [ %.4.lcssa.i.i110, %.lr.ph161.preheader.i.i ], [ %.4.lcssa.i.i110, %vector.scevcheck1697 ], [ %.4.lcssa.i.i110, %vector.memcheck1706 ]
  %uglygep3194 = getelementptr i8, ptr %.024.i329159.i.i.ph, i64 8
  %uglygep3197 = getelementptr i8, ptr %.126.i328158.i.i.ph, i64 -8
  %uglygep3200 = getelementptr i8, ptr %.128.i327157.i.i.ph, i64 8
  %uglygep3203 = getelementptr i8, ptr %.029.i326156.i.i.ph, i64 -8
  br label %.lr.ph161.i.i

1867:                                             ; preds = %1834
  %1868 = load i64, ptr %1840, align 8
  %1869 = load i64, ptr %1842, align 8
  store i64 %1869, ptr %1840, align 8
  %1870 = getelementptr inbounds i8, ptr %1840, i64 -8
  store i64 %1868, ptr %1842, align 8
  %1871 = getelementptr inbounds i8, ptr %1842, i64 8
  %1872 = add nsw i64 %1838, -1
  br label %._crit_edge.i322.i.i

.lr.ph161.i.i:                                    ; preds = %.lr.ph161.i.i, %.lr.ph161.i.i.preheader
  %lsr.iv3204 = phi ptr [ %uglygep3203, %.lr.ph161.i.i.preheader ], [ %uglygep3205, %.lr.ph161.i.i ]
  %lsr.iv3201 = phi ptr [ %uglygep3200, %.lr.ph161.i.i.preheader ], [ %uglygep3202, %.lr.ph161.i.i ]
  %lsr.iv3198 = phi ptr [ %uglygep3197, %.lr.ph161.i.i.preheader ], [ %uglygep3199, %.lr.ph161.i.i ]
  %lsr.iv3195 = phi ptr [ %uglygep3194, %.lr.ph161.i.i.preheader ], [ %uglygep3196, %.lr.ph161.i.i ]
  %.1.i330160.i.i = phi i64 [ %1873, %.lr.ph161.i.i ], [ %.1.i330160.i.i.ph, %.lr.ph161.i.i.preheader ]
  %1873 = add nsw i64 %.1.i330160.i.i, -1
  %1874 = load i64, ptr %lsr.iv3195, align 8
  %1875 = load i64, ptr %lsr.iv3204, align 8
  store i64 %1875, ptr %lsr.iv3195, align 8
  store i64 %1874, ptr %lsr.iv3204, align 8
  %1876 = load i64, ptr %lsr.iv3198, align 8
  %1877 = load i64, ptr %lsr.iv3201, align 8
  store i64 %1877, ptr %lsr.iv3198, align 8
  store i64 %1876, ptr %lsr.iv3201, align 8
  %uglygep3196 = getelementptr i8, ptr %lsr.iv3195, i64 8
  %uglygep3199 = getelementptr i8, ptr %lsr.iv3198, i64 -8
  %uglygep3202 = getelementptr i8, ptr %lsr.iv3201, i64 8
  %uglygep3205 = getelementptr i8, ptr %lsr.iv3204, i64 -8
  %1878 = icmp eq i64 %1873, 0
  br i1 %1878, label %sort.quad_reversal.exit331.i.i, label %.lr.ph161.i.i, !llvm.loop !80

sort.quad_reversal.exit331.i.i:                   ; preds = %.lr.ph161.i.i, %middle.block1736, %._crit_edge.i322.i.i
  %1879 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 1
  %1880 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %1881 = ptrtoint ptr %1879 to i64
  %1882 = sub nuw i64 %1880, %1881
  %1883 = lshr i64 %1882, 4
  %1884 = shl nuw nsw i64 %1883, 3
  %1885 = getelementptr inbounds i8, ptr %1879, i64 %1884
  %1886 = sub nsw i64 0, %1884
  %1887 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %1886
  %1888 = and i64 %1882, 16
  %1889 = icmp eq i64 %1888, 0
  br i1 %1889, label %1913, label %._crit_edge.i332.i.i

._crit_edge.i332.i.i:                             ; preds = %1913, %sort.quad_reversal.exit331.i.i
  %.027.i333.i.i = phi ptr [ %1917, %1913 ], [ %1887, %sort.quad_reversal.exit331.i.i ]
  %.025.i334.i.i = phi ptr [ %1916, %1913 ], [ %1885, %sort.quad_reversal.exit331.i.i ]
  %.0.i335.i.i = phi i64 [ %1918, %1913 ], [ %1883, %sort.quad_reversal.exit331.i.i ]
  %1890 = load i64, ptr %1879, align 8
  %1891 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %1891, ptr %1879, align 8
  store i64 %1890, ptr %.4225.lcssa.i.i108, align 8
  %1892 = load i64, ptr %.025.i334.i.i, align 8
  %1893 = load i64, ptr %.027.i333.i.i, align 8
  store i64 %1893, ptr %.025.i334.i.i, align 8
  store i64 %1892, ptr %.027.i333.i.i, align 8
  %1894 = icmp ult i64 %.0.i335.i.i, 2
  br i1 %1894, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.preheader.i.i

.lr.ph167.preheader.i.i:                          ; preds = %._crit_edge.i332.i.i
  %1895 = lshr i64 %.0.i335.i.i, 1
  %min.iters.check1809 = icmp ult i64 %.0.i335.i.i, 48
  br i1 %min.iters.check1809, label %.lr.ph167.i.i.preheader, label %vector.scevcheck1768

vector.scevcheck1768:                             ; preds = %.lr.ph167.preheader.i.i
  %1896 = add nsw i64 %1895, -1
  %uglygep1769 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1771.neg = mul i64 %1896, -8
  %1897 = getelementptr i8, ptr %uglygep1769, i64 %mul.result1771.neg
  %1898 = icmp ugt ptr %1897, %uglygep1769
  %uglygep1773 = getelementptr i8, ptr %.025.i334.i.i, i64 -8
  %mul.result1775.neg = mul i64 %1896, -8
  %mul.overflow1776 = icmp ugt i64 %1896, 2305843009213693951
  %1899 = getelementptr i8, ptr %uglygep1773, i64 %mul.result1775.neg
  %1900 = icmp ugt ptr %1899, %uglygep1773
  %1901 = or i1 %1900, %mul.overflow1776
  %1902 = or i1 %1898, %1901
  br i1 %1902, label %.lr.ph167.i.i.preheader, label %vector.memcheck1777

vector.memcheck1777:                              ; preds = %vector.scevcheck1768
  %uglygep1778 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %1903 = shl i64 %1895, 3
  %1904 = add i64 %1903, 9
  %uglygep1779 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %1904
  %uglygep1780 = getelementptr i8, ptr %.027.i333.i.i, i64 8
  %1905 = add i64 %1903, 8
  %uglygep1781 = getelementptr i8, ptr %.027.i333.i.i, i64 %1905
  %1906 = mul i64 %1895, -8
  %uglygep1782 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1906
  %uglygep1783 = getelementptr i8, ptr %.025.i334.i.i, i64 %1906
  %bound01784 = icmp ult ptr %uglygep1778, %uglygep1781
  %bound11785 = icmp ult ptr %uglygep1780, %uglygep1779
  %found.conflict1786 = and i1 %bound01784, %bound11785
  %bound01787 = icmp ult ptr %uglygep1778, %.4225.lcssa.i.i108
  %bound11788 = icmp ult ptr %uglygep1782, %uglygep1779
  %found.conflict1789 = and i1 %bound01787, %bound11788
  %conflict.rdx1790 = or i1 %found.conflict1786, %found.conflict1789
  %bound01791 = icmp ult ptr %uglygep1778, %.025.i334.i.i
  %bound11792 = icmp ult ptr %uglygep1783, %uglygep1779
  %found.conflict1793 = and i1 %bound01791, %bound11792
  %conflict.rdx1794 = or i1 %conflict.rdx1790, %found.conflict1793
  %bound01795 = icmp ult ptr %uglygep1780, %.4225.lcssa.i.i108
  %bound11796 = icmp ult ptr %uglygep1782, %uglygep1781
  %found.conflict1797 = and i1 %bound01795, %bound11796
  %conflict.rdx1798 = or i1 %conflict.rdx1794, %found.conflict1797
  %bound01799 = icmp ult ptr %uglygep1780, %.025.i334.i.i
  %bound11800 = icmp ult ptr %uglygep1783, %uglygep1781
  %found.conflict1801 = and i1 %bound01799, %bound11800
  %conflict.rdx1802 = or i1 %conflict.rdx1798, %found.conflict1801
  %bound01803 = icmp ult ptr %uglygep1782, %.025.i334.i.i
  %bound11804 = icmp ult ptr %uglygep1783, %.4225.lcssa.i.i108
  %found.conflict1805 = and i1 %bound01803, %bound11804
  %conflict.rdx1806 = or i1 %conflict.rdx1802, %found.conflict1805
  br i1 %conflict.rdx1806, label %.lr.ph167.i.i.preheader, label %vector.ph1810

vector.ph1810:                                    ; preds = %vector.memcheck1777
  %1907 = lshr i64 %.0.i335.i.i, 1
  %n.vec1812 = and i64 %1895, 9223372036854775806
  %ind.end1813 = and i64 %1907, 1
  %1908 = shl i64 %n.vec1812, 3
  %ind.end1815 = getelementptr i8, ptr %1879, i64 %1908
  %1909 = mul i64 %n.vec1812, -8
  %ind.end1817 = getelementptr i8, ptr %.025.i334.i.i, i64 %1909
  %1910 = shl i64 %n.vec1812, 3
  %ind.end1819 = getelementptr i8, ptr %.027.i333.i.i, i64 %1910
  %1911 = mul i64 %n.vec1812, -8
  %ind.end1821 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1911
  %next.gep18262497 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 9
  %next.gep18282494 = getelementptr i8, ptr %.027.i333.i.i, i64 8
  %uglygep3182 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -16
  %uglygep3187 = getelementptr i8, ptr %.025.i334.i.i, i64 -16
  br label %vector.body1824

vector.body1824:                                  ; preds = %vector.body1824, %vector.ph1810
  %lsr.iv3192 = phi i64 [ %lsr.iv.next3193, %vector.body1824 ], [ %n.vec1812, %vector.ph1810 ]
  %lsr.iv3190 = phi ptr [ %uglygep3191, %vector.body1824 ], [ %next.gep18262497, %vector.ph1810 ]
  %lsr.iv3188 = phi ptr [ %uglygep3189, %vector.body1824 ], [ %uglygep3187, %vector.ph1810 ]
  %lsr.iv3185 = phi ptr [ %uglygep3186, %vector.body1824 ], [ %next.gep18282494, %vector.ph1810 ]
  %lsr.iv3183 = phi ptr [ %uglygep3184, %vector.body1824 ], [ %uglygep3182, %vector.ph1810 ]
  %wide.load1830 = load <2 x i64>, ptr %lsr.iv3190, align 8, !alias.scope !81, !noalias !84
  %wide.load1831 = load <2 x i64>, ptr %lsr.iv3183, align 8, !alias.scope !88, !noalias !89
  %reverse1832 = shufflevector <2 x i64> %wide.load1831, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1832, ptr %lsr.iv3190, align 8, !alias.scope !81, !noalias !84
  %reverse1833 = shufflevector <2 x i64> %wide.load1830, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1833, ptr %lsr.iv3183, align 8, !alias.scope !88, !noalias !89
  %wide.load1834 = load <2 x i64>, ptr %lsr.iv3188, align 8, !alias.scope !89
  %reverse1835 = shufflevector <2 x i64> %wide.load1834, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1836 = load <2 x i64>, ptr %lsr.iv3185, align 8, !alias.scope !90, !noalias !91
  %reverse1837 = shufflevector <2 x i64> %wide.load1836, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1837, ptr %lsr.iv3188, align 8, !alias.scope !89
  store <2 x i64> %reverse1835, ptr %lsr.iv3185, align 8, !alias.scope !90, !noalias !91
  %uglygep3184 = getelementptr i8, ptr %lsr.iv3183, i64 -16
  %uglygep3186 = getelementptr i8, ptr %lsr.iv3185, i64 16
  %uglygep3189 = getelementptr i8, ptr %lsr.iv3188, i64 -16
  %uglygep3191 = getelementptr i8, ptr %lsr.iv3190, i64 16
  %lsr.iv.next3193 = add nsw i64 %lsr.iv3192, -2
  %1912 = icmp eq i64 %lsr.iv.next3193, 0
  br i1 %1912, label %middle.block1807, label %vector.body1824, !llvm.loop !92

middle.block1807:                                 ; preds = %vector.body1824
  %cmp.n1823 = icmp eq i64 %1895, %n.vec1812
  br i1 %cmp.n1823, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.i.i.preheader

.lr.ph167.i.i.preheader:                          ; preds = %middle.block1807, %vector.memcheck1777, %vector.scevcheck1768, %.lr.ph167.preheader.i.i
  %.1.i340166.i.i.ph = phi i64 [ %ind.end1813, %middle.block1807 ], [ %1895, %.lr.ph167.preheader.i.i ], [ %1895, %vector.scevcheck1768 ], [ %1895, %vector.memcheck1777 ]
  %.024.i339165.i.i.ph = phi ptr [ %ind.end1815, %middle.block1807 ], [ %1879, %.lr.ph167.preheader.i.i ], [ %1879, %vector.scevcheck1768 ], [ %1879, %vector.memcheck1777 ]
  %.126.i338164.i.i.ph = phi ptr [ %ind.end1817, %middle.block1807 ], [ %.025.i334.i.i, %.lr.ph167.preheader.i.i ], [ %.025.i334.i.i, %vector.scevcheck1768 ], [ %.025.i334.i.i, %vector.memcheck1777 ]
  %.128.i337163.i.i.ph = phi ptr [ %ind.end1819, %middle.block1807 ], [ %.027.i333.i.i, %.lr.ph167.preheader.i.i ], [ %.027.i333.i.i, %vector.scevcheck1768 ], [ %.027.i333.i.i, %vector.memcheck1777 ]
  %.029.i336162.i.i.ph = phi ptr [ %ind.end1821, %middle.block1807 ], [ %.4225.lcssa.i.i108, %.lr.ph167.preheader.i.i ], [ %.4225.lcssa.i.i108, %vector.scevcheck1768 ], [ %.4225.lcssa.i.i108, %vector.memcheck1777 ]
  %uglygep3170 = getelementptr i8, ptr %.024.i339165.i.i.ph, i64 8
  %uglygep3173 = getelementptr i8, ptr %.126.i338164.i.i.ph, i64 -8
  %uglygep3176 = getelementptr i8, ptr %.128.i337163.i.i.ph, i64 8
  %uglygep3179 = getelementptr i8, ptr %.029.i336162.i.i.ph, i64 -8
  br label %.lr.ph167.i.i

1913:                                             ; preds = %sort.quad_reversal.exit331.i.i
  %1914 = load i64, ptr %1885, align 8
  %1915 = load i64, ptr %1887, align 8
  store i64 %1915, ptr %1885, align 8
  %1916 = getelementptr inbounds i8, ptr %1885, i64 -8
  store i64 %1914, ptr %1887, align 8
  %1917 = getelementptr inbounds i8, ptr %1887, i64 8
  %1918 = add nsw i64 %1883, -1
  br label %._crit_edge.i332.i.i

.lr.ph167.i.i:                                    ; preds = %.lr.ph167.i.i, %.lr.ph167.i.i.preheader
  %lsr.iv3180 = phi ptr [ %uglygep3179, %.lr.ph167.i.i.preheader ], [ %uglygep3181, %.lr.ph167.i.i ]
  %lsr.iv3177 = phi ptr [ %uglygep3176, %.lr.ph167.i.i.preheader ], [ %uglygep3178, %.lr.ph167.i.i ]
  %lsr.iv3174 = phi ptr [ %uglygep3173, %.lr.ph167.i.i.preheader ], [ %uglygep3175, %.lr.ph167.i.i ]
  %lsr.iv3171 = phi ptr [ %uglygep3170, %.lr.ph167.i.i.preheader ], [ %uglygep3172, %.lr.ph167.i.i ]
  %.1.i340166.i.i = phi i64 [ %1919, %.lr.ph167.i.i ], [ %.1.i340166.i.i.ph, %.lr.ph167.i.i.preheader ]
  %1919 = add nsw i64 %.1.i340166.i.i, -1
  %1920 = load i64, ptr %lsr.iv3171, align 8
  %1921 = load i64, ptr %lsr.iv3180, align 8
  store i64 %1921, ptr %lsr.iv3171, align 8
  store i64 %1920, ptr %lsr.iv3180, align 8
  %1922 = load i64, ptr %lsr.iv3174, align 8
  %1923 = load i64, ptr %lsr.iv3177, align 8
  store i64 %1923, ptr %lsr.iv3174, align 8
  store i64 %1922, ptr %lsr.iv3177, align 8
  %uglygep3172 = getelementptr i8, ptr %lsr.iv3171, i64 8
  %uglygep3175 = getelementptr i8, ptr %lsr.iv3174, i64 -8
  %uglygep3178 = getelementptr i8, ptr %lsr.iv3177, i64 8
  %uglygep3181 = getelementptr i8, ptr %lsr.iv3180, i64 -8
  %1924 = icmp eq i64 %1919, 0
  br i1 %1924, label %sort.quad_reversal.exit401.i.i, label %.lr.ph167.i.i, !llvm.loop !93

1925:                                             ; preds = %1617
  %1926 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 1
  %1927 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %1928 = ptrtoint ptr %1926 to i64
  %1929 = sub nuw i64 %1927, %1928
  %1930 = lshr i64 %1929, 4
  %1931 = shl nuw nsw i64 %1930, 3
  %1932 = getelementptr inbounds i8, ptr %1926, i64 %1931
  %1933 = sub nsw i64 0, %1931
  %1934 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %1933
  %1935 = and i64 %1929, 16
  %1936 = icmp eq i64 %1935, 0
  br i1 %1936, label %1960, label %._crit_edge.i342.i.i

._crit_edge.i342.i.i:                             ; preds = %1960, %1925
  %.027.i343.i.i137 = phi ptr [ %1964, %1960 ], [ %1934, %1925 ]
  %.025.i344.i.i138 = phi ptr [ %1963, %1960 ], [ %1932, %1925 ]
  %.0.i345.i.i139 = phi i64 [ %1965, %1960 ], [ %1930, %1925 ]
  %1937 = load i64, ptr %1926, align 8
  %1938 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %1938, ptr %1926, align 8
  store i64 %1937, ptr %.4225.lcssa.i.i108, align 8
  %1939 = load i64, ptr %.025.i344.i.i138, align 8
  %1940 = load i64, ptr %.027.i343.i.i137, align 8
  store i64 %1940, ptr %.025.i344.i.i138, align 8
  store i64 %1939, ptr %.027.i343.i.i137, align 8
  %1941 = icmp ult i64 %.0.i345.i.i139, 2
  br i1 %1941, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.preheader.i.i

.lr.ph155.preheader.i.i:                          ; preds = %._crit_edge.i342.i.i
  %1942 = lshr i64 %.0.i345.i.i139, 1
  %min.iters.check1667 = icmp ult i64 %.0.i345.i.i139, 48
  br i1 %min.iters.check1667, label %.lr.ph155.i.i.preheader, label %vector.scevcheck1626

vector.scevcheck1626:                             ; preds = %.lr.ph155.preheader.i.i
  %1943 = add nsw i64 %1942, -1
  %uglygep1627 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1629.neg = mul i64 %1943, -8
  %1944 = getelementptr i8, ptr %uglygep1627, i64 %mul.result1629.neg
  %1945 = icmp ugt ptr %1944, %uglygep1627
  %uglygep1631 = getelementptr i8, ptr %.025.i344.i.i138, i64 -8
  %mul.result1633.neg = mul i64 %1943, -8
  %mul.overflow1634 = icmp ugt i64 %1943, 2305843009213693951
  %1946 = getelementptr i8, ptr %uglygep1631, i64 %mul.result1633.neg
  %1947 = icmp ugt ptr %1946, %uglygep1631
  %1948 = or i1 %1947, %mul.overflow1634
  %1949 = or i1 %1945, %1948
  br i1 %1949, label %.lr.ph155.i.i.preheader, label %vector.memcheck1635

vector.memcheck1635:                              ; preds = %vector.scevcheck1626
  %uglygep1636 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %1950 = shl i64 %1942, 3
  %1951 = add i64 %1950, 9
  %uglygep1637 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %1951
  %uglygep1638 = getelementptr i8, ptr %.027.i343.i.i137, i64 8
  %1952 = add i64 %1950, 8
  %uglygep1639 = getelementptr i8, ptr %.027.i343.i.i137, i64 %1952
  %1953 = mul i64 %1942, -8
  %uglygep1640 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1953
  %uglygep1641 = getelementptr i8, ptr %.025.i344.i.i138, i64 %1953
  %bound01642 = icmp ult ptr %uglygep1636, %uglygep1639
  %bound11643 = icmp ult ptr %uglygep1638, %uglygep1637
  %found.conflict1644 = and i1 %bound01642, %bound11643
  %bound01645 = icmp ult ptr %uglygep1636, %.4225.lcssa.i.i108
  %bound11646 = icmp ult ptr %uglygep1640, %uglygep1637
  %found.conflict1647 = and i1 %bound01645, %bound11646
  %conflict.rdx1648 = or i1 %found.conflict1644, %found.conflict1647
  %bound01649 = icmp ult ptr %uglygep1636, %.025.i344.i.i138
  %bound11650 = icmp ult ptr %uglygep1641, %uglygep1637
  %found.conflict1651 = and i1 %bound01649, %bound11650
  %conflict.rdx1652 = or i1 %conflict.rdx1648, %found.conflict1651
  %bound01653 = icmp ult ptr %uglygep1638, %.4225.lcssa.i.i108
  %bound11654 = icmp ult ptr %uglygep1640, %uglygep1639
  %found.conflict1655 = and i1 %bound01653, %bound11654
  %conflict.rdx1656 = or i1 %conflict.rdx1652, %found.conflict1655
  %bound01657 = icmp ult ptr %uglygep1638, %.025.i344.i.i138
  %bound11658 = icmp ult ptr %uglygep1641, %uglygep1639
  %found.conflict1659 = and i1 %bound01657, %bound11658
  %conflict.rdx1660 = or i1 %conflict.rdx1656, %found.conflict1659
  %bound01661 = icmp ult ptr %uglygep1640, %.025.i344.i.i138
  %bound11662 = icmp ult ptr %uglygep1641, %.4225.lcssa.i.i108
  %found.conflict1663 = and i1 %bound01661, %bound11662
  %conflict.rdx1664 = or i1 %conflict.rdx1660, %found.conflict1663
  br i1 %conflict.rdx1664, label %.lr.ph155.i.i.preheader, label %vector.ph1668

vector.ph1668:                                    ; preds = %vector.memcheck1635
  %1954 = lshr i64 %.0.i345.i.i139, 1
  %n.vec1670 = and i64 %1942, 9223372036854775806
  %ind.end1671 = and i64 %1954, 1
  %1955 = shl i64 %n.vec1670, 3
  %ind.end1673 = getelementptr i8, ptr %1926, i64 %1955
  %1956 = mul i64 %n.vec1670, -8
  %ind.end1675 = getelementptr i8, ptr %.025.i344.i.i138, i64 %1956
  %1957 = shl i64 %n.vec1670, 3
  %ind.end1677 = getelementptr i8, ptr %.027.i343.i.i137, i64 %1957
  %1958 = mul i64 %n.vec1670, -8
  %ind.end1679 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1958
  %next.gep16842473 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 9
  %next.gep16862470 = getelementptr i8, ptr %.027.i343.i.i137, i64 8
  %uglygep3230 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -16
  %uglygep3235 = getelementptr i8, ptr %.025.i344.i.i138, i64 -16
  br label %vector.body1682

vector.body1682:                                  ; preds = %vector.body1682, %vector.ph1668
  %lsr.iv3240 = phi i64 [ %lsr.iv.next3241, %vector.body1682 ], [ %n.vec1670, %vector.ph1668 ]
  %lsr.iv3238 = phi ptr [ %uglygep3239, %vector.body1682 ], [ %next.gep16842473, %vector.ph1668 ]
  %lsr.iv3236 = phi ptr [ %uglygep3237, %vector.body1682 ], [ %uglygep3235, %vector.ph1668 ]
  %lsr.iv3233 = phi ptr [ %uglygep3234, %vector.body1682 ], [ %next.gep16862470, %vector.ph1668 ]
  %lsr.iv3231 = phi ptr [ %uglygep3232, %vector.body1682 ], [ %uglygep3230, %vector.ph1668 ]
  %wide.load1688 = load <2 x i64>, ptr %lsr.iv3238, align 8, !alias.scope !94, !noalias !97
  %wide.load1689 = load <2 x i64>, ptr %lsr.iv3231, align 8, !alias.scope !101, !noalias !102
  %reverse1690 = shufflevector <2 x i64> %wide.load1689, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1690, ptr %lsr.iv3238, align 8, !alias.scope !94, !noalias !97
  %reverse1691 = shufflevector <2 x i64> %wide.load1688, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1691, ptr %lsr.iv3231, align 8, !alias.scope !101, !noalias !102
  %wide.load1692 = load <2 x i64>, ptr %lsr.iv3236, align 8, !alias.scope !102
  %reverse1693 = shufflevector <2 x i64> %wide.load1692, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1694 = load <2 x i64>, ptr %lsr.iv3233, align 8, !alias.scope !103, !noalias !104
  %reverse1695 = shufflevector <2 x i64> %wide.load1694, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1695, ptr %lsr.iv3236, align 8, !alias.scope !102
  store <2 x i64> %reverse1693, ptr %lsr.iv3233, align 8, !alias.scope !103, !noalias !104
  %uglygep3232 = getelementptr i8, ptr %lsr.iv3231, i64 -16
  %uglygep3234 = getelementptr i8, ptr %lsr.iv3233, i64 16
  %uglygep3237 = getelementptr i8, ptr %lsr.iv3236, i64 -16
  %uglygep3239 = getelementptr i8, ptr %lsr.iv3238, i64 16
  %lsr.iv.next3241 = add nsw i64 %lsr.iv3240, -2
  %1959 = icmp eq i64 %lsr.iv.next3241, 0
  br i1 %1959, label %middle.block1665, label %vector.body1682, !llvm.loop !105

middle.block1665:                                 ; preds = %vector.body1682
  %cmp.n1681 = icmp eq i64 %1942, %n.vec1670
  br i1 %cmp.n1681, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.i.i.preheader

.lr.ph155.i.i.preheader:                          ; preds = %middle.block1665, %vector.memcheck1635, %vector.scevcheck1626, %.lr.ph155.preheader.i.i
  %.1.i350154.i.i.ph = phi i64 [ %ind.end1671, %middle.block1665 ], [ %1942, %.lr.ph155.preheader.i.i ], [ %1942, %vector.scevcheck1626 ], [ %1942, %vector.memcheck1635 ]
  %.024.i349153.i.i.ph = phi ptr [ %ind.end1673, %middle.block1665 ], [ %1926, %.lr.ph155.preheader.i.i ], [ %1926, %vector.scevcheck1626 ], [ %1926, %vector.memcheck1635 ]
  %.126.i348152.i.i.ph = phi ptr [ %ind.end1675, %middle.block1665 ], [ %.025.i344.i.i138, %.lr.ph155.preheader.i.i ], [ %.025.i344.i.i138, %vector.scevcheck1626 ], [ %.025.i344.i.i138, %vector.memcheck1635 ]
  %.128.i347151.i.i.ph = phi ptr [ %ind.end1677, %middle.block1665 ], [ %.027.i343.i.i137, %.lr.ph155.preheader.i.i ], [ %.027.i343.i.i137, %vector.scevcheck1626 ], [ %.027.i343.i.i137, %vector.memcheck1635 ]
  %.029.i346150.i.i.ph = phi ptr [ %ind.end1679, %middle.block1665 ], [ %.4225.lcssa.i.i108, %.lr.ph155.preheader.i.i ], [ %.4225.lcssa.i.i108, %vector.scevcheck1626 ], [ %.4225.lcssa.i.i108, %vector.memcheck1635 ]
  %uglygep3218 = getelementptr i8, ptr %.024.i349153.i.i.ph, i64 8
  %uglygep3221 = getelementptr i8, ptr %.126.i348152.i.i.ph, i64 -8
  %uglygep3224 = getelementptr i8, ptr %.128.i347151.i.i.ph, i64 8
  %uglygep3227 = getelementptr i8, ptr %.029.i346150.i.i.ph, i64 -8
  br label %.lr.ph155.i.i

1960:                                             ; preds = %1925
  %1961 = load i64, ptr %1932, align 8
  %1962 = load i64, ptr %1934, align 8
  store i64 %1962, ptr %1932, align 8
  %1963 = getelementptr inbounds i8, ptr %1932, i64 -8
  store i64 %1961, ptr %1934, align 8
  %1964 = getelementptr inbounds i8, ptr %1934, i64 8
  %1965 = add nsw i64 %1930, -1
  br label %._crit_edge.i342.i.i

.lr.ph155.i.i:                                    ; preds = %.lr.ph155.i.i, %.lr.ph155.i.i.preheader
  %lsr.iv3228 = phi ptr [ %uglygep3227, %.lr.ph155.i.i.preheader ], [ %uglygep3229, %.lr.ph155.i.i ]
  %lsr.iv3225 = phi ptr [ %uglygep3224, %.lr.ph155.i.i.preheader ], [ %uglygep3226, %.lr.ph155.i.i ]
  %lsr.iv3222 = phi ptr [ %uglygep3221, %.lr.ph155.i.i.preheader ], [ %uglygep3223, %.lr.ph155.i.i ]
  %lsr.iv3219 = phi ptr [ %uglygep3218, %.lr.ph155.i.i.preheader ], [ %uglygep3220, %.lr.ph155.i.i ]
  %.1.i350154.i.i = phi i64 [ %1966, %.lr.ph155.i.i ], [ %.1.i350154.i.i.ph, %.lr.ph155.i.i.preheader ]
  %1966 = add nsw i64 %.1.i350154.i.i, -1
  %1967 = load i64, ptr %lsr.iv3219, align 8
  %1968 = load i64, ptr %lsr.iv3228, align 8
  store i64 %1968, ptr %lsr.iv3219, align 8
  store i64 %1967, ptr %lsr.iv3228, align 8
  %1969 = load i64, ptr %lsr.iv3222, align 8
  %1970 = load i64, ptr %lsr.iv3225, align 8
  store i64 %1970, ptr %lsr.iv3222, align 8
  store i64 %1969, ptr %lsr.iv3225, align 8
  %uglygep3220 = getelementptr i8, ptr %lsr.iv3219, i64 8
  %uglygep3223 = getelementptr i8, ptr %lsr.iv3222, i64 -8
  %uglygep3226 = getelementptr i8, ptr %lsr.iv3225, i64 8
  %uglygep3229 = getelementptr i8, ptr %lsr.iv3228, i64 -8
  %1971 = icmp eq i64 %1966, 0
  br i1 %1971, label %sort.quad_reversal.exit301.i.i129, label %.lr.ph155.i.i, !llvm.loop !106

1972:                                             ; preds = %1617
  %1973 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %1974 = ptrtoint ptr %88 to i64
  %1975 = sub nuw i64 %1973, %1974
  %1976 = lshr i64 %1975, 4
  %1977 = shl nuw nsw i64 %1976, 3
  %1978 = getelementptr inbounds i8, ptr %88, i64 %1977
  %1979 = sub nsw i64 0, %1977
  %1980 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %1979
  %1981 = and i64 %1975, 16
  %1982 = icmp eq i64 %1981, 0
  br i1 %1982, label %2005, label %._crit_edge.i352.i.i

._crit_edge.i352.i.i:                             ; preds = %2005, %1972
  %.027.i353.i.i140 = phi ptr [ %2009, %2005 ], [ %1980, %1972 ]
  %.025.i354.i.i141 = phi ptr [ %2008, %2005 ], [ %1978, %1972 ]
  %.0.i355.i.i142 = phi i64 [ %2010, %2005 ], [ %1976, %1972 ]
  %1983 = load i64, ptr %88, align 8
  %1984 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %1984, ptr %88, align 8
  store i64 %1983, ptr %.4225.lcssa.i.i108, align 8
  %1985 = load i64, ptr %.025.i354.i.i141, align 8
  %1986 = load i64, ptr %.027.i353.i.i140, align 8
  store i64 %1986, ptr %.025.i354.i.i141, align 8
  store i64 %1985, ptr %.027.i353.i.i140, align 8
  %1987 = icmp ult i64 %.0.i355.i.i142, 2
  br i1 %1987, label %sort.flux_analyze__anon_14347.exit.i, label %.lr.ph149.preheader.i.i

.lr.ph149.preheader.i.i:                          ; preds = %._crit_edge.i352.i.i
  %1988 = lshr i64 %.0.i355.i.i142, 1
  %min.iters.check1596 = icmp ult i64 %.0.i355.i.i142, 48
  br i1 %min.iters.check1596, label %.lr.ph149.i.i.preheader, label %vector.scevcheck1555

vector.scevcheck1555:                             ; preds = %.lr.ph149.preheader.i.i
  %1989 = add nsw i64 %1988, -1
  %uglygep1556 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result1558.neg = mul i64 %1989, -8
  %1990 = getelementptr i8, ptr %uglygep1556, i64 %mul.result1558.neg
  %1991 = icmp ugt ptr %1990, %uglygep1556
  %uglygep1560 = getelementptr i8, ptr %.025.i354.i.i141, i64 -8
  %mul.result1562.neg = mul i64 %1989, -8
  %mul.overflow1563 = icmp ugt i64 %1989, 2305843009213693951
  %1992 = getelementptr i8, ptr %uglygep1560, i64 %mul.result1562.neg
  %1993 = icmp ugt ptr %1992, %uglygep1560
  %1994 = or i1 %1993, %mul.overflow1563
  %1995 = or i1 %1991, %1994
  br i1 %1995, label %.lr.ph149.i.i.preheader, label %vector.memcheck1564

vector.memcheck1564:                              ; preds = %vector.scevcheck1555
  %uglygep1565 = getelementptr i8, ptr %88, i64 8
  %1996 = shl i64 %1988, 3
  %1997 = add i64 %1996, 8
  %uglygep1566 = getelementptr i8, ptr %88, i64 %1997
  %uglygep1567 = getelementptr i8, ptr %.027.i353.i.i140, i64 8
  %uglygep1568 = getelementptr i8, ptr %.027.i353.i.i140, i64 %1997
  %1998 = mul i64 %1988, -8
  %uglygep1569 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %1998
  %uglygep1570 = getelementptr i8, ptr %.025.i354.i.i141, i64 %1998
  %bound01571 = icmp ult ptr %uglygep1565, %uglygep1568
  %bound11572 = icmp ult ptr %uglygep1567, %uglygep1566
  %found.conflict1573 = and i1 %bound01571, %bound11572
  %bound01574 = icmp ult ptr %uglygep1565, %.4225.lcssa.i.i108
  %bound11575 = icmp ult ptr %uglygep1569, %uglygep1566
  %found.conflict1576 = and i1 %bound01574, %bound11575
  %conflict.rdx1577 = or i1 %found.conflict1573, %found.conflict1576
  %bound01578 = icmp ult ptr %uglygep1565, %.025.i354.i.i141
  %bound11579 = icmp ult ptr %uglygep1570, %uglygep1566
  %found.conflict1580 = and i1 %bound01578, %bound11579
  %conflict.rdx1581 = or i1 %conflict.rdx1577, %found.conflict1580
  %bound01582 = icmp ult ptr %uglygep1567, %.4225.lcssa.i.i108
  %bound11583 = icmp ult ptr %uglygep1569, %uglygep1568
  %found.conflict1584 = and i1 %bound01582, %bound11583
  %conflict.rdx1585 = or i1 %conflict.rdx1581, %found.conflict1584
  %bound01586 = icmp ult ptr %uglygep1567, %.025.i354.i.i141
  %bound11587 = icmp ult ptr %uglygep1570, %uglygep1568
  %found.conflict1588 = and i1 %bound01586, %bound11587
  %conflict.rdx1589 = or i1 %conflict.rdx1585, %found.conflict1588
  %bound01590 = icmp ult ptr %uglygep1569, %.025.i354.i.i141
  %bound11591 = icmp ult ptr %uglygep1570, %.4225.lcssa.i.i108
  %found.conflict1592 = and i1 %bound01590, %bound11591
  %conflict.rdx1593 = or i1 %conflict.rdx1589, %found.conflict1592
  br i1 %conflict.rdx1593, label %.lr.ph149.i.i.preheader, label %vector.ph1597

vector.ph1597:                                    ; preds = %vector.memcheck1564
  %1999 = lshr i64 %.0.i355.i.i142, 1
  %n.vec1599 = and i64 %1988, 9223372036854775806
  %ind.end1600 = and i64 %1999, 1
  %2000 = shl i64 %n.vec1599, 3
  %ind.end1602 = getelementptr i8, ptr %88, i64 %2000
  %2001 = mul i64 %n.vec1599, -8
  %ind.end1604 = getelementptr i8, ptr %.025.i354.i.i141, i64 %2001
  %2002 = shl i64 %n.vec1599, 3
  %ind.end1606 = getelementptr i8, ptr %.027.i353.i.i140, i64 %2002
  %2003 = mul i64 %n.vec1599, -8
  %ind.end1608 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2003
  %next.gep16132469 = getelementptr i8, ptr %88, i64 8
  %next.gep16152466 = getelementptr i8, ptr %.027.i353.i.i140, i64 8
  %uglygep3254 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -16
  %uglygep3259 = getelementptr i8, ptr %.025.i354.i.i141, i64 -16
  br label %vector.body1611

vector.body1611:                                  ; preds = %vector.body1611, %vector.ph1597
  %lsr.iv3264 = phi i64 [ %lsr.iv.next3265, %vector.body1611 ], [ %n.vec1599, %vector.ph1597 ]
  %lsr.iv3262 = phi ptr [ %uglygep3263, %vector.body1611 ], [ %next.gep16132469, %vector.ph1597 ]
  %lsr.iv3260 = phi ptr [ %uglygep3261, %vector.body1611 ], [ %uglygep3259, %vector.ph1597 ]
  %lsr.iv3257 = phi ptr [ %uglygep3258, %vector.body1611 ], [ %next.gep16152466, %vector.ph1597 ]
  %lsr.iv3255 = phi ptr [ %uglygep3256, %vector.body1611 ], [ %uglygep3254, %vector.ph1597 ]
  %wide.load1617 = load <2 x i64>, ptr %lsr.iv3262, align 8, !alias.scope !107, !noalias !110
  %wide.load1618 = load <2 x i64>, ptr %lsr.iv3255, align 8, !alias.scope !114, !noalias !115
  %reverse1619 = shufflevector <2 x i64> %wide.load1618, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1619, ptr %lsr.iv3262, align 8, !alias.scope !107, !noalias !110
  %reverse1620 = shufflevector <2 x i64> %wide.load1617, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1620, ptr %lsr.iv3255, align 8, !alias.scope !114, !noalias !115
  %wide.load1621 = load <2 x i64>, ptr %lsr.iv3260, align 8, !alias.scope !115
  %reverse1622 = shufflevector <2 x i64> %wide.load1621, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1623 = load <2 x i64>, ptr %lsr.iv3257, align 8, !alias.scope !116, !noalias !117
  %reverse1624 = shufflevector <2 x i64> %wide.load1623, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1624, ptr %lsr.iv3260, align 8, !alias.scope !115
  store <2 x i64> %reverse1622, ptr %lsr.iv3257, align 8, !alias.scope !116, !noalias !117
  %uglygep3256 = getelementptr i8, ptr %lsr.iv3255, i64 -16
  %uglygep3258 = getelementptr i8, ptr %lsr.iv3257, i64 16
  %uglygep3261 = getelementptr i8, ptr %lsr.iv3260, i64 -16
  %uglygep3263 = getelementptr i8, ptr %lsr.iv3262, i64 16
  %lsr.iv.next3265 = add nsw i64 %lsr.iv3264, -2
  %2004 = icmp eq i64 %lsr.iv.next3265, 0
  br i1 %2004, label %middle.block1594, label %vector.body1611, !llvm.loop !118

middle.block1594:                                 ; preds = %vector.body1611
  %cmp.n1610 = icmp eq i64 %1988, %n.vec1599
  br i1 %cmp.n1610, label %sort.flux_analyze__anon_14347.exit.i, label %.lr.ph149.i.i.preheader

.lr.ph149.i.i.preheader:                          ; preds = %middle.block1594, %vector.memcheck1564, %vector.scevcheck1555, %.lr.ph149.preheader.i.i
  %.1.i360148.i.i.ph = phi i64 [ %ind.end1600, %middle.block1594 ], [ %1988, %.lr.ph149.preheader.i.i ], [ %1988, %vector.scevcheck1555 ], [ %1988, %vector.memcheck1564 ]
  %.024.i359147.i.i.ph = phi ptr [ %ind.end1602, %middle.block1594 ], [ %88, %.lr.ph149.preheader.i.i ], [ %88, %vector.scevcheck1555 ], [ %88, %vector.memcheck1564 ]
  %.126.i358146.i.i.ph = phi ptr [ %ind.end1604, %middle.block1594 ], [ %.025.i354.i.i141, %.lr.ph149.preheader.i.i ], [ %.025.i354.i.i141, %vector.scevcheck1555 ], [ %.025.i354.i.i141, %vector.memcheck1564 ]
  %.128.i357145.i.i.ph = phi ptr [ %ind.end1606, %middle.block1594 ], [ %.027.i353.i.i140, %.lr.ph149.preheader.i.i ], [ %.027.i353.i.i140, %vector.scevcheck1555 ], [ %.027.i353.i.i140, %vector.memcheck1564 ]
  %.029.i356144.i.i.ph = phi ptr [ %ind.end1608, %middle.block1594 ], [ %.4225.lcssa.i.i108, %.lr.ph149.preheader.i.i ], [ %.4225.lcssa.i.i108, %vector.scevcheck1555 ], [ %.4225.lcssa.i.i108, %vector.memcheck1564 ]
  %uglygep3242 = getelementptr i8, ptr %.024.i359147.i.i.ph, i64 8
  %uglygep3245 = getelementptr i8, ptr %.126.i358146.i.i.ph, i64 -8
  %uglygep3248 = getelementptr i8, ptr %.128.i357145.i.i.ph, i64 8
  %uglygep3251 = getelementptr i8, ptr %.029.i356144.i.i.ph, i64 -8
  br label %.lr.ph149.i.i

2005:                                             ; preds = %1972
  %2006 = load i64, ptr %1978, align 8
  %2007 = load i64, ptr %1980, align 8
  store i64 %2007, ptr %1978, align 8
  %2008 = getelementptr inbounds i8, ptr %1978, i64 -8
  store i64 %2006, ptr %1980, align 8
  %2009 = getelementptr inbounds i8, ptr %1980, i64 8
  %2010 = add nsw i64 %1976, -1
  br label %._crit_edge.i352.i.i

.lr.ph149.i.i:                                    ; preds = %.lr.ph149.i.i, %.lr.ph149.i.i.preheader
  %lsr.iv3252 = phi ptr [ %uglygep3251, %.lr.ph149.i.i.preheader ], [ %uglygep3253, %.lr.ph149.i.i ]
  %lsr.iv3249 = phi ptr [ %uglygep3248, %.lr.ph149.i.i.preheader ], [ %uglygep3250, %.lr.ph149.i.i ]
  %lsr.iv3246 = phi ptr [ %uglygep3245, %.lr.ph149.i.i.preheader ], [ %uglygep3247, %.lr.ph149.i.i ]
  %lsr.iv3243 = phi ptr [ %uglygep3242, %.lr.ph149.i.i.preheader ], [ %uglygep3244, %.lr.ph149.i.i ]
  %.1.i360148.i.i = phi i64 [ %2011, %.lr.ph149.i.i ], [ %.1.i360148.i.i.ph, %.lr.ph149.i.i.preheader ]
  %2011 = add nsw i64 %.1.i360148.i.i, -1
  %2012 = load i64, ptr %lsr.iv3243, align 8
  %2013 = load i64, ptr %lsr.iv3252, align 8
  store i64 %2013, ptr %lsr.iv3243, align 8
  store i64 %2012, ptr %lsr.iv3252, align 8
  %2014 = load i64, ptr %lsr.iv3246, align 8
  %2015 = load i64, ptr %lsr.iv3249, align 8
  store i64 %2015, ptr %lsr.iv3246, align 8
  store i64 %2014, ptr %lsr.iv3249, align 8
  %uglygep3244 = getelementptr i8, ptr %lsr.iv3243, i64 8
  %uglygep3247 = getelementptr i8, ptr %lsr.iv3246, i64 -8
  %uglygep3250 = getelementptr i8, ptr %lsr.iv3249, i64 8
  %uglygep3253 = getelementptr i8, ptr %lsr.iv3252, i64 -8
  %2016 = icmp eq i64 %2011, 0
  br i1 %2016, label %sort.flux_analyze__anon_14347.exit.i, label %.lr.ph149.i.i, !llvm.loop !119

sort.quad_reversal.exit371.i.i:                   ; preds = %.lr.ph197.i.i, %middle.block2162, %._crit_edge.i362.i.i, %sort.quad_reversal.exit301.i.i129
  %.5235.i.i143 = phi i64 [ %.2232.lcssa.i.i107, %sort.quad_reversal.exit301.i.i129 ], [ 0, %._crit_edge.i362.i.i ], [ 0, %middle.block2162 ], [ 0, %.lr.ph197.i.i ]
  %2017 = icmp eq i64 %1582, 1
  %2018 = icmp ne i64 %.5241.i.i128, 0
  %2019 = and i1 %2017, %2018
  br i1 %2019, label %2068, label %sort.quad_reversal.exit381.i.i

2020:                                             ; preds = %sort.quad_reversal.exit301.i.i129
  %2021 = ptrtoint ptr %.3.lcssa.i.i111 to i64
  %2022 = ptrtoint ptr %88 to i64
  %2023 = sub nuw i64 %2021, %2022
  %2024 = lshr i64 %2023, 4
  %2025 = shl nuw nsw i64 %2024, 3
  %2026 = getelementptr inbounds i8, ptr %88, i64 %2025
  %2027 = sub nsw i64 0, %2025
  %2028 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 %2027
  %2029 = and i64 %2023, 16
  %2030 = icmp eq i64 %2029, 0
  br i1 %2030, label %2053, label %._crit_edge.i362.i.i

._crit_edge.i362.i.i:                             ; preds = %2053, %2020
  %.027.i363.i.i = phi ptr [ %2057, %2053 ], [ %2028, %2020 ]
  %.025.i364.i.i = phi ptr [ %2056, %2053 ], [ %2026, %2020 ]
  %.0.i365.i.i = phi i64 [ %2058, %2053 ], [ %2024, %2020 ]
  %2031 = load i64, ptr %88, align 8
  %2032 = load i64, ptr %.3.lcssa.i.i111, align 8
  store i64 %2032, ptr %88, align 8
  store i64 %2031, ptr %.3.lcssa.i.i111, align 8
  %2033 = load i64, ptr %.025.i364.i.i, align 8
  %2034 = load i64, ptr %.027.i363.i.i, align 8
  store i64 %2034, ptr %.025.i364.i.i, align 8
  store i64 %2033, ptr %.027.i363.i.i, align 8
  %2035 = icmp ult i64 %.0.i365.i.i, 2
  br i1 %2035, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.preheader.i.i

.lr.ph197.preheader.i.i:                          ; preds = %._crit_edge.i362.i.i
  %2036 = lshr i64 %.0.i365.i.i, 1
  %min.iters.check2164 = icmp ult i64 %.0.i365.i.i, 48
  br i1 %min.iters.check2164, label %.lr.ph197.i.i.preheader, label %vector.scevcheck2123

vector.scevcheck2123:                             ; preds = %.lr.ph197.preheader.i.i
  %2037 = add nsw i64 %2036, -1
  %uglygep2124 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 -8
  %mul.result2126.neg = mul i64 %2037, -8
  %2038 = getelementptr i8, ptr %uglygep2124, i64 %mul.result2126.neg
  %2039 = icmp ugt ptr %2038, %uglygep2124
  %uglygep2128 = getelementptr i8, ptr %.025.i364.i.i, i64 -8
  %mul.result2130.neg = mul i64 %2037, -8
  %mul.overflow2131 = icmp ugt i64 %2037, 2305843009213693951
  %2040 = getelementptr i8, ptr %uglygep2128, i64 %mul.result2130.neg
  %2041 = icmp ugt ptr %2040, %uglygep2128
  %2042 = or i1 %2041, %mul.overflow2131
  %2043 = or i1 %2039, %2042
  br i1 %2043, label %.lr.ph197.i.i.preheader, label %vector.memcheck2132

vector.memcheck2132:                              ; preds = %vector.scevcheck2123
  %uglygep2133 = getelementptr i8, ptr %88, i64 8
  %2044 = shl i64 %2036, 3
  %2045 = add i64 %2044, 8
  %uglygep2134 = getelementptr i8, ptr %88, i64 %2045
  %uglygep2135 = getelementptr i8, ptr %.027.i363.i.i, i64 8
  %uglygep2136 = getelementptr i8, ptr %.027.i363.i.i, i64 %2045
  %2046 = mul i64 %2036, -8
  %uglygep2137 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2046
  %uglygep2138 = getelementptr i8, ptr %.025.i364.i.i, i64 %2046
  %bound02139 = icmp ult ptr %uglygep2133, %uglygep2136
  %bound12140 = icmp ult ptr %uglygep2135, %uglygep2134
  %found.conflict2141 = and i1 %bound02139, %bound12140
  %bound02142 = icmp ult ptr %uglygep2133, %.3.lcssa.i.i111
  %bound12143 = icmp ult ptr %uglygep2137, %uglygep2134
  %found.conflict2144 = and i1 %bound02142, %bound12143
  %conflict.rdx2145 = or i1 %found.conflict2141, %found.conflict2144
  %bound02146 = icmp ult ptr %uglygep2133, %.025.i364.i.i
  %bound12147 = icmp ult ptr %uglygep2138, %uglygep2134
  %found.conflict2148 = and i1 %bound02146, %bound12147
  %conflict.rdx2149 = or i1 %conflict.rdx2145, %found.conflict2148
  %bound02150 = icmp ult ptr %uglygep2135, %.3.lcssa.i.i111
  %bound12151 = icmp ult ptr %uglygep2137, %uglygep2136
  %found.conflict2152 = and i1 %bound02150, %bound12151
  %conflict.rdx2153 = or i1 %conflict.rdx2149, %found.conflict2152
  %bound02154 = icmp ult ptr %uglygep2135, %.025.i364.i.i
  %bound12155 = icmp ult ptr %uglygep2138, %uglygep2136
  %found.conflict2156 = and i1 %bound02154, %bound12155
  %conflict.rdx2157 = or i1 %conflict.rdx2153, %found.conflict2156
  %bound02158 = icmp ult ptr %uglygep2137, %.025.i364.i.i
  %bound12159 = icmp ult ptr %uglygep2138, %.3.lcssa.i.i111
  %found.conflict2160 = and i1 %bound02158, %bound12159
  %conflict.rdx2161 = or i1 %conflict.rdx2157, %found.conflict2160
  br i1 %conflict.rdx2161, label %.lr.ph197.i.i.preheader, label %vector.ph2165

vector.ph2165:                                    ; preds = %vector.memcheck2132
  %2047 = lshr i64 %.0.i365.i.i, 1
  %n.vec2167 = and i64 %2036, 9223372036854775806
  %ind.end2168 = and i64 %2047, 1
  %2048 = shl i64 %n.vec2167, 3
  %ind.end2170 = getelementptr i8, ptr %88, i64 %2048
  %2049 = mul i64 %n.vec2167, -8
  %ind.end2172 = getelementptr i8, ptr %.025.i364.i.i, i64 %2049
  %2050 = shl i64 %n.vec2167, 3
  %ind.end2174 = getelementptr i8, ptr %.027.i363.i.i, i64 %2050
  %2051 = mul i64 %n.vec2167, -8
  %ind.end2176 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2051
  %next.gep21812489 = getelementptr i8, ptr %88, i64 8
  %next.gep21832486 = getelementptr i8, ptr %.027.i363.i.i, i64 8
  %uglygep3062 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 -16
  %uglygep3067 = getelementptr i8, ptr %.025.i364.i.i, i64 -16
  br label %vector.body2179

vector.body2179:                                  ; preds = %vector.body2179, %vector.ph2165
  %lsr.iv3072 = phi i64 [ %lsr.iv.next3073, %vector.body2179 ], [ %n.vec2167, %vector.ph2165 ]
  %lsr.iv3070 = phi ptr [ %uglygep3071, %vector.body2179 ], [ %next.gep21812489, %vector.ph2165 ]
  %lsr.iv3068 = phi ptr [ %uglygep3069, %vector.body2179 ], [ %uglygep3067, %vector.ph2165 ]
  %lsr.iv3065 = phi ptr [ %uglygep3066, %vector.body2179 ], [ %next.gep21832486, %vector.ph2165 ]
  %lsr.iv3063 = phi ptr [ %uglygep3064, %vector.body2179 ], [ %uglygep3062, %vector.ph2165 ]
  %wide.load2185 = load <2 x i64>, ptr %lsr.iv3070, align 8, !alias.scope !120, !noalias !123
  %wide.load2186 = load <2 x i64>, ptr %lsr.iv3063, align 8, !alias.scope !127, !noalias !128
  %reverse2187 = shufflevector <2 x i64> %wide.load2186, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2187, ptr %lsr.iv3070, align 8, !alias.scope !120, !noalias !123
  %reverse2188 = shufflevector <2 x i64> %wide.load2185, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2188, ptr %lsr.iv3063, align 8, !alias.scope !127, !noalias !128
  %wide.load2189 = load <2 x i64>, ptr %lsr.iv3068, align 8, !alias.scope !128
  %reverse2190 = shufflevector <2 x i64> %wide.load2189, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2191 = load <2 x i64>, ptr %lsr.iv3065, align 8, !alias.scope !129, !noalias !130
  %reverse2192 = shufflevector <2 x i64> %wide.load2191, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2192, ptr %lsr.iv3068, align 8, !alias.scope !128
  store <2 x i64> %reverse2190, ptr %lsr.iv3065, align 8, !alias.scope !129, !noalias !130
  %uglygep3064 = getelementptr i8, ptr %lsr.iv3063, i64 -16
  %uglygep3066 = getelementptr i8, ptr %lsr.iv3065, i64 16
  %uglygep3069 = getelementptr i8, ptr %lsr.iv3068, i64 -16
  %uglygep3071 = getelementptr i8, ptr %lsr.iv3070, i64 16
  %lsr.iv.next3073 = add nsw i64 %lsr.iv3072, -2
  %2052 = icmp eq i64 %lsr.iv.next3073, 0
  br i1 %2052, label %middle.block2162, label %vector.body2179, !llvm.loop !131

middle.block2162:                                 ; preds = %vector.body2179
  %cmp.n2178 = icmp eq i64 %2036, %n.vec2167
  br i1 %cmp.n2178, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.i.i.preheader

.lr.ph197.i.i.preheader:                          ; preds = %middle.block2162, %vector.memcheck2132, %vector.scevcheck2123, %.lr.ph197.preheader.i.i
  %.1.i370196.i.i.ph = phi i64 [ %ind.end2168, %middle.block2162 ], [ %2036, %.lr.ph197.preheader.i.i ], [ %2036, %vector.scevcheck2123 ], [ %2036, %vector.memcheck2132 ]
  %.024.i369195.i.i.ph = phi ptr [ %ind.end2170, %middle.block2162 ], [ %88, %.lr.ph197.preheader.i.i ], [ %88, %vector.scevcheck2123 ], [ %88, %vector.memcheck2132 ]
  %.126.i368194.i.i.ph = phi ptr [ %ind.end2172, %middle.block2162 ], [ %.025.i364.i.i, %.lr.ph197.preheader.i.i ], [ %.025.i364.i.i, %vector.scevcheck2123 ], [ %.025.i364.i.i, %vector.memcheck2132 ]
  %.128.i367193.i.i.ph = phi ptr [ %ind.end2174, %middle.block2162 ], [ %.027.i363.i.i, %.lr.ph197.preheader.i.i ], [ %.027.i363.i.i, %vector.scevcheck2123 ], [ %.027.i363.i.i, %vector.memcheck2132 ]
  %.029.i366192.i.i.ph = phi ptr [ %ind.end2176, %middle.block2162 ], [ %.3.lcssa.i.i111, %.lr.ph197.preheader.i.i ], [ %.3.lcssa.i.i111, %vector.scevcheck2123 ], [ %.3.lcssa.i.i111, %vector.memcheck2132 ]
  %uglygep3050 = getelementptr i8, ptr %.024.i369195.i.i.ph, i64 8
  %uglygep3053 = getelementptr i8, ptr %.126.i368194.i.i.ph, i64 -8
  %uglygep3056 = getelementptr i8, ptr %.128.i367193.i.i.ph, i64 8
  %uglygep3059 = getelementptr i8, ptr %.029.i366192.i.i.ph, i64 -8
  br label %.lr.ph197.i.i

2053:                                             ; preds = %2020
  %2054 = load i64, ptr %2026, align 8
  %2055 = load i64, ptr %2028, align 8
  store i64 %2055, ptr %2026, align 8
  %2056 = getelementptr inbounds i8, ptr %2026, i64 -8
  store i64 %2054, ptr %2028, align 8
  %2057 = getelementptr inbounds i8, ptr %2028, i64 8
  %2058 = add nsw i64 %2024, -1
  br label %._crit_edge.i362.i.i

.lr.ph197.i.i:                                    ; preds = %.lr.ph197.i.i, %.lr.ph197.i.i.preheader
  %lsr.iv3060 = phi ptr [ %uglygep3059, %.lr.ph197.i.i.preheader ], [ %uglygep3061, %.lr.ph197.i.i ]
  %lsr.iv3057 = phi ptr [ %uglygep3056, %.lr.ph197.i.i.preheader ], [ %uglygep3058, %.lr.ph197.i.i ]
  %lsr.iv3054 = phi ptr [ %uglygep3053, %.lr.ph197.i.i.preheader ], [ %uglygep3055, %.lr.ph197.i.i ]
  %lsr.iv3051 = phi ptr [ %uglygep3050, %.lr.ph197.i.i.preheader ], [ %uglygep3052, %.lr.ph197.i.i ]
  %.1.i370196.i.i = phi i64 [ %2059, %.lr.ph197.i.i ], [ %.1.i370196.i.i.ph, %.lr.ph197.i.i.preheader ]
  %2059 = add nsw i64 %.1.i370196.i.i, -1
  %2060 = load i64, ptr %lsr.iv3051, align 8
  %2061 = load i64, ptr %lsr.iv3060, align 8
  store i64 %2061, ptr %lsr.iv3051, align 8
  store i64 %2060, ptr %lsr.iv3060, align 8
  %2062 = load i64, ptr %lsr.iv3054, align 8
  %2063 = load i64, ptr %lsr.iv3057, align 8
  store i64 %2063, ptr %lsr.iv3054, align 8
  store i64 %2062, ptr %lsr.iv3057, align 8
  %uglygep3052 = getelementptr i8, ptr %lsr.iv3051, i64 8
  %uglygep3055 = getelementptr i8, ptr %lsr.iv3054, i64 -8
  %uglygep3058 = getelementptr i8, ptr %lsr.iv3057, i64 8
  %uglygep3061 = getelementptr i8, ptr %lsr.iv3060, i64 -8
  %2064 = icmp eq i64 %2059, 0
  br i1 %2064, label %sort.quad_reversal.exit371.i.i, label %.lr.ph197.i.i, !llvm.loop !132

sort.quad_reversal.exit381.i.i:                   ; preds = %.lr.ph203.i.i, %middle.block2233, %._crit_edge.i372.i.i, %sort.quad_reversal.exit371.i.i, %.lr.ph191.i.i, %middle.block2091, %._crit_edge.i.i.i133
  %.523573.i.i = phi i64 [ %.5235.i.i143, %sort.quad_reversal.exit371.i.i ], [ %.5235.i.i143, %._crit_edge.i372.i.i ], [ 0, %._crit_edge.i.i.i133 ], [ %.5235.i.i143, %middle.block2233 ], [ 0, %middle.block2091 ], [ %.5235.i.i143, %.lr.ph203.i.i ], [ 0, %.lr.ph191.i.i ]
  %.52556372.i.i = phi i64 [ %.5255.i.i126, %sort.quad_reversal.exit371.i.i ], [ %.5255.i.i126, %._crit_edge.i372.i.i ], [ %.3253.lcssa.i.i104, %._crit_edge.i.i.i133 ], [ %.5255.i.i126, %middle.block2233 ], [ %.3253.lcssa.i.i104, %middle.block2091 ], [ %.5255.i.i126, %.lr.ph203.i.i ], [ %.3253.lcssa.i.i104, %.lr.ph191.i.i ]
  %.52486471.i.i = phi i64 [ %.5248.i.i127, %sort.quad_reversal.exit371.i.i ], [ %.5248.i.i127, %._crit_edge.i372.i.i ], [ %.3246.lcssa.i.i105, %._crit_edge.i.i.i133 ], [ %.5248.i.i127, %middle.block2233 ], [ %.3246.lcssa.i.i105, %middle.block2091 ], [ %.5248.i.i127, %.lr.ph203.i.i ], [ %.3246.lcssa.i.i105, %.lr.ph191.i.i ]
  %.6242.i.i144 = phi i64 [ %.5241.i.i128, %sort.quad_reversal.exit371.i.i ], [ 0, %._crit_edge.i372.i.i ], [ 0, %._crit_edge.i.i.i133 ], [ 0, %middle.block2233 ], [ 0, %middle.block2091 ], [ 0, %.lr.ph203.i.i ], [ 0, %.lr.ph191.i.i ]
  %2065 = icmp eq i64 %1584, 1
  %2066 = icmp ne i64 %.52486471.i.i, 0
  %2067 = and i1 %2065, %2066
  br i1 %2067, label %2117, label %sort.quad_reversal.exit391.i.i

2068:                                             ; preds = %sort.quad_reversal.exit371.i.i
  %2069 = ptrtoint ptr %.4.lcssa.i.i110 to i64
  %2070 = ptrtoint ptr %1622 to i64
  %2071 = sub nuw i64 %2069, %2070
  %2072 = lshr i64 %2071, 4
  %2073 = shl nuw nsw i64 %2072, 3
  %2074 = getelementptr inbounds i8, ptr %1622, i64 %2073
  %2075 = sub nsw i64 0, %2073
  %2076 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 %2075
  %2077 = and i64 %2071, 16
  %2078 = icmp eq i64 %2077, 0
  br i1 %2078, label %2102, label %._crit_edge.i372.i.i

._crit_edge.i372.i.i:                             ; preds = %2102, %2068
  %.027.i373.i.i = phi ptr [ %2106, %2102 ], [ %2076, %2068 ]
  %.025.i374.i.i = phi ptr [ %2105, %2102 ], [ %2074, %2068 ]
  %.0.i375.i.i = phi i64 [ %2107, %2102 ], [ %2072, %2068 ]
  %2079 = load i64, ptr %1622, align 8
  %2080 = load i64, ptr %.4.lcssa.i.i110, align 8
  store i64 %2080, ptr %1622, align 8
  store i64 %2079, ptr %.4.lcssa.i.i110, align 8
  %2081 = load i64, ptr %.025.i374.i.i, align 8
  %2082 = load i64, ptr %.027.i373.i.i, align 8
  store i64 %2082, ptr %.025.i374.i.i, align 8
  store i64 %2081, ptr %.027.i373.i.i, align 8
  %2083 = icmp ult i64 %.0.i375.i.i, 2
  br i1 %2083, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.preheader.i.i

.lr.ph203.preheader.i.i:                          ; preds = %._crit_edge.i372.i.i
  %2084 = lshr i64 %.0.i375.i.i, 1
  %min.iters.check2235 = icmp ult i64 %.0.i375.i.i, 48
  br i1 %min.iters.check2235, label %.lr.ph203.i.i.preheader, label %vector.scevcheck2194

vector.scevcheck2194:                             ; preds = %.lr.ph203.preheader.i.i
  %2085 = add nsw i64 %2084, -1
  %uglygep2195 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -8
  %mul.result2197.neg = mul i64 %2085, -8
  %2086 = getelementptr i8, ptr %uglygep2195, i64 %mul.result2197.neg
  %2087 = icmp ugt ptr %2086, %uglygep2195
  %uglygep2199 = getelementptr i8, ptr %.025.i374.i.i, i64 -8
  %mul.result2201.neg = mul i64 %2085, -8
  %mul.overflow2202 = icmp ugt i64 %2085, 2305843009213693951
  %2088 = getelementptr i8, ptr %uglygep2199, i64 %mul.result2201.neg
  %2089 = icmp ugt ptr %2088, %uglygep2199
  %2090 = or i1 %2089, %mul.overflow2202
  %2091 = or i1 %2087, %2090
  br i1 %2091, label %.lr.ph203.i.i.preheader, label %vector.memcheck2203

vector.memcheck2203:                              ; preds = %vector.scevcheck2194
  %uglygep2204 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 16
  %2092 = shl i64 %2084, 3
  %2093 = add i64 %2092, 16
  %uglygep2205 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 %2093
  %uglygep2206 = getelementptr i8, ptr %.027.i373.i.i, i64 8
  %2094 = add i64 %2092, 8
  %uglygep2207 = getelementptr i8, ptr %.027.i373.i.i, i64 %2094
  %2095 = mul i64 %2084, -8
  %uglygep2208 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2095
  %uglygep2209 = getelementptr i8, ptr %.025.i374.i.i, i64 %2095
  %bound02210 = icmp ult ptr %uglygep2204, %uglygep2207
  %bound12211 = icmp ult ptr %uglygep2206, %uglygep2205
  %found.conflict2212 = and i1 %bound02210, %bound12211
  %bound02213 = icmp ult ptr %uglygep2204, %.4.lcssa.i.i110
  %bound12214 = icmp ult ptr %uglygep2208, %uglygep2205
  %found.conflict2215 = and i1 %bound02213, %bound12214
  %conflict.rdx2216 = or i1 %found.conflict2212, %found.conflict2215
  %bound02217 = icmp ult ptr %uglygep2204, %.025.i374.i.i
  %bound12218 = icmp ult ptr %uglygep2209, %uglygep2205
  %found.conflict2219 = and i1 %bound02217, %bound12218
  %conflict.rdx2220 = or i1 %conflict.rdx2216, %found.conflict2219
  %bound02221 = icmp ult ptr %uglygep2206, %.4.lcssa.i.i110
  %bound12222 = icmp ult ptr %uglygep2208, %uglygep2207
  %found.conflict2223 = and i1 %bound02221, %bound12222
  %conflict.rdx2224 = or i1 %conflict.rdx2220, %found.conflict2223
  %bound02225 = icmp ult ptr %uglygep2206, %.025.i374.i.i
  %bound12226 = icmp ult ptr %uglygep2209, %uglygep2207
  %found.conflict2227 = and i1 %bound02225, %bound12226
  %conflict.rdx2228 = or i1 %conflict.rdx2224, %found.conflict2227
  %bound02229 = icmp ult ptr %uglygep2208, %.025.i374.i.i
  %bound12230 = icmp ult ptr %uglygep2209, %.4.lcssa.i.i110
  %found.conflict2231 = and i1 %bound02229, %bound12230
  %conflict.rdx2232 = or i1 %conflict.rdx2228, %found.conflict2231
  br i1 %conflict.rdx2232, label %.lr.ph203.i.i.preheader, label %vector.ph2236

vector.ph2236:                                    ; preds = %vector.memcheck2203
  %2096 = lshr i64 %.0.i375.i.i, 1
  %n.vec2238 = and i64 %2084, 9223372036854775806
  %ind.end2239 = and i64 %2096, 1
  %2097 = shl i64 %n.vec2238, 3
  %ind.end2241 = getelementptr i8, ptr %1622, i64 %2097
  %2098 = mul i64 %n.vec2238, -8
  %ind.end2243 = getelementptr i8, ptr %.025.i374.i.i, i64 %2098
  %2099 = shl i64 %n.vec2238, 3
  %ind.end2245 = getelementptr i8, ptr %.027.i373.i.i, i64 %2099
  %2100 = mul i64 %n.vec2238, -8
  %ind.end2247 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2100
  %next.gep22522485 = getelementptr i8, ptr %.3.lcssa.i.i111, i64 16
  %next.gep22542482 = getelementptr i8, ptr %.027.i373.i.i, i64 8
  %uglygep3038 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 -16
  %uglygep3043 = getelementptr i8, ptr %.025.i374.i.i, i64 -16
  br label %vector.body2250

vector.body2250:                                  ; preds = %vector.body2250, %vector.ph2236
  %lsr.iv3048 = phi i64 [ %lsr.iv.next3049, %vector.body2250 ], [ %n.vec2238, %vector.ph2236 ]
  %lsr.iv3046 = phi ptr [ %uglygep3047, %vector.body2250 ], [ %next.gep22522485, %vector.ph2236 ]
  %lsr.iv3044 = phi ptr [ %uglygep3045, %vector.body2250 ], [ %uglygep3043, %vector.ph2236 ]
  %lsr.iv3041 = phi ptr [ %uglygep3042, %vector.body2250 ], [ %next.gep22542482, %vector.ph2236 ]
  %lsr.iv3039 = phi ptr [ %uglygep3040, %vector.body2250 ], [ %uglygep3038, %vector.ph2236 ]
  %wide.load2256 = load <2 x i64>, ptr %lsr.iv3046, align 8, !alias.scope !133, !noalias !136
  %wide.load2257 = load <2 x i64>, ptr %lsr.iv3039, align 8, !alias.scope !140, !noalias !141
  %reverse2258 = shufflevector <2 x i64> %wide.load2257, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2258, ptr %lsr.iv3046, align 8, !alias.scope !133, !noalias !136
  %reverse2259 = shufflevector <2 x i64> %wide.load2256, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2259, ptr %lsr.iv3039, align 8, !alias.scope !140, !noalias !141
  %wide.load2260 = load <2 x i64>, ptr %lsr.iv3044, align 8, !alias.scope !141
  %reverse2261 = shufflevector <2 x i64> %wide.load2260, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2262 = load <2 x i64>, ptr %lsr.iv3041, align 8, !alias.scope !142, !noalias !143
  %reverse2263 = shufflevector <2 x i64> %wide.load2262, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2263, ptr %lsr.iv3044, align 8, !alias.scope !141
  store <2 x i64> %reverse2261, ptr %lsr.iv3041, align 8, !alias.scope !142, !noalias !143
  %uglygep3040 = getelementptr i8, ptr %lsr.iv3039, i64 -16
  %uglygep3042 = getelementptr i8, ptr %lsr.iv3041, i64 16
  %uglygep3045 = getelementptr i8, ptr %lsr.iv3044, i64 -16
  %uglygep3047 = getelementptr i8, ptr %lsr.iv3046, i64 16
  %lsr.iv.next3049 = add nsw i64 %lsr.iv3048, -2
  %2101 = icmp eq i64 %lsr.iv.next3049, 0
  br i1 %2101, label %middle.block2233, label %vector.body2250, !llvm.loop !144

middle.block2233:                                 ; preds = %vector.body2250
  %cmp.n2249 = icmp eq i64 %2084, %n.vec2238
  br i1 %cmp.n2249, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.i.i.preheader

.lr.ph203.i.i.preheader:                          ; preds = %middle.block2233, %vector.memcheck2203, %vector.scevcheck2194, %.lr.ph203.preheader.i.i
  %.1.i380202.i.i.ph = phi i64 [ %ind.end2239, %middle.block2233 ], [ %2084, %.lr.ph203.preheader.i.i ], [ %2084, %vector.scevcheck2194 ], [ %2084, %vector.memcheck2203 ]
  %.024.i379201.i.i.ph = phi ptr [ %ind.end2241, %middle.block2233 ], [ %1622, %.lr.ph203.preheader.i.i ], [ %1622, %vector.scevcheck2194 ], [ %1622, %vector.memcheck2203 ]
  %.126.i378200.i.i.ph = phi ptr [ %ind.end2243, %middle.block2233 ], [ %.025.i374.i.i, %.lr.ph203.preheader.i.i ], [ %.025.i374.i.i, %vector.scevcheck2194 ], [ %.025.i374.i.i, %vector.memcheck2203 ]
  %.128.i377199.i.i.ph = phi ptr [ %ind.end2245, %middle.block2233 ], [ %.027.i373.i.i, %.lr.ph203.preheader.i.i ], [ %.027.i373.i.i, %vector.scevcheck2194 ], [ %.027.i373.i.i, %vector.memcheck2203 ]
  %.029.i376198.i.i.ph = phi ptr [ %ind.end2247, %middle.block2233 ], [ %.4.lcssa.i.i110, %.lr.ph203.preheader.i.i ], [ %.4.lcssa.i.i110, %vector.scevcheck2194 ], [ %.4.lcssa.i.i110, %vector.memcheck2203 ]
  %uglygep3026 = getelementptr i8, ptr %.024.i379201.i.i.ph, i64 8
  %uglygep3029 = getelementptr i8, ptr %.126.i378200.i.i.ph, i64 -8
  %uglygep3032 = getelementptr i8, ptr %.128.i377199.i.i.ph, i64 8
  %uglygep3035 = getelementptr i8, ptr %.029.i376198.i.i.ph, i64 -8
  br label %.lr.ph203.i.i

2102:                                             ; preds = %2068
  %2103 = load i64, ptr %2074, align 8
  %2104 = load i64, ptr %2076, align 8
  store i64 %2104, ptr %2074, align 8
  %2105 = getelementptr inbounds i8, ptr %2074, i64 -8
  store i64 %2103, ptr %2076, align 8
  %2106 = getelementptr inbounds i8, ptr %2076, i64 8
  %2107 = add nsw i64 %2072, -1
  br label %._crit_edge.i372.i.i

.lr.ph203.i.i:                                    ; preds = %.lr.ph203.i.i, %.lr.ph203.i.i.preheader
  %lsr.iv3036 = phi ptr [ %uglygep3035, %.lr.ph203.i.i.preheader ], [ %uglygep3037, %.lr.ph203.i.i ]
  %lsr.iv3033 = phi ptr [ %uglygep3032, %.lr.ph203.i.i.preheader ], [ %uglygep3034, %.lr.ph203.i.i ]
  %lsr.iv3030 = phi ptr [ %uglygep3029, %.lr.ph203.i.i.preheader ], [ %uglygep3031, %.lr.ph203.i.i ]
  %lsr.iv3027 = phi ptr [ %uglygep3026, %.lr.ph203.i.i.preheader ], [ %uglygep3028, %.lr.ph203.i.i ]
  %.1.i380202.i.i = phi i64 [ %2108, %.lr.ph203.i.i ], [ %.1.i380202.i.i.ph, %.lr.ph203.i.i.preheader ]
  %2108 = add nsw i64 %.1.i380202.i.i, -1
  %2109 = load i64, ptr %lsr.iv3027, align 8
  %2110 = load i64, ptr %lsr.iv3036, align 8
  store i64 %2110, ptr %lsr.iv3027, align 8
  store i64 %2109, ptr %lsr.iv3036, align 8
  %2111 = load i64, ptr %lsr.iv3030, align 8
  %2112 = load i64, ptr %lsr.iv3033, align 8
  store i64 %2112, ptr %lsr.iv3030, align 8
  store i64 %2111, ptr %lsr.iv3033, align 8
  %uglygep3028 = getelementptr i8, ptr %lsr.iv3027, i64 8
  %uglygep3031 = getelementptr i8, ptr %lsr.iv3030, i64 -8
  %uglygep3034 = getelementptr i8, ptr %lsr.iv3033, i64 8
  %uglygep3037 = getelementptr i8, ptr %lsr.iv3036, i64 -8
  %2113 = icmp eq i64 %2108, 0
  br i1 %2113, label %sort.quad_reversal.exit381.i.i, label %.lr.ph203.i.i, !llvm.loop !145

sort.quad_reversal.exit391.i.i:                   ; preds = %.lr.ph209.i.i, %middle.block2304, %._crit_edge.i382.i.i, %sort.quad_reversal.exit381.i.i, %.lr.ph179.i.i, %middle.block1949, %._crit_edge.i302.i.i
  %.624280.i.i = phi i64 [ %.6242.i.i144, %sort.quad_reversal.exit381.i.i ], [ %.6242.i.i144, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ %.6242.i.i144, %middle.block2304 ], [ 0, %middle.block1949 ], [ %.6242.i.i144, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %.5255637279.i.i = phi i64 [ %.52556372.i.i, %sort.quad_reversal.exit381.i.i ], [ %.52556372.i.i, %._crit_edge.i382.i.i ], [ %.3253.lcssa.i.i104, %._crit_edge.i302.i.i ], [ %.52556372.i.i, %middle.block2304 ], [ %.3253.lcssa.i.i104, %middle.block1949 ], [ %.52556372.i.i, %.lr.ph209.i.i ], [ %.3253.lcssa.i.i104, %.lr.ph179.i.i ]
  %.52357378.i.i = phi i64 [ %.523573.i.i, %sort.quad_reversal.exit381.i.i ], [ %.523573.i.i, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ %.523573.i.i, %middle.block2304 ], [ 0, %middle.block1949 ], [ %.523573.i.i, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %.6249.i.i145 = phi i64 [ %.52486471.i.i, %sort.quad_reversal.exit381.i.i ], [ 0, %._crit_edge.i382.i.i ], [ 0, %._crit_edge.i302.i.i ], [ 0, %middle.block2304 ], [ 0, %middle.block1949 ], [ 0, %.lr.ph209.i.i ], [ 0, %.lr.ph179.i.i ]
  %2114 = icmp eq i64 %1586, 1
  %2115 = icmp ne i64 %.5255637279.i.i, 0
  %2116 = and i1 %2114, %2115
  br i1 %2116, label %2163, label %sort.quad_reversal.exit401.i.i

2117:                                             ; preds = %sort.quad_reversal.exit381.i.i
  %2118 = ptrtoint ptr %.4220.lcssa.i.i109 to i64
  %2119 = ptrtoint ptr %1629 to i64
  %2120 = sub nuw i64 %2118, %2119
  %2121 = lshr i64 %2120, 4
  %2122 = shl nuw nsw i64 %2121, 3
  %2123 = getelementptr inbounds i8, ptr %1629, i64 %2122
  %2124 = sub nsw i64 0, %2122
  %2125 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 %2124
  %2126 = and i64 %2120, 16
  %2127 = icmp eq i64 %2126, 0
  br i1 %2127, label %2151, label %._crit_edge.i382.i.i

._crit_edge.i382.i.i:                             ; preds = %2151, %2117
  %.027.i383.i.i = phi ptr [ %2155, %2151 ], [ %2125, %2117 ]
  %.025.i384.i.i = phi ptr [ %2154, %2151 ], [ %2123, %2117 ]
  %.0.i385.i.i = phi i64 [ %2156, %2151 ], [ %2121, %2117 ]
  %2128 = load i64, ptr %1629, align 8
  %2129 = load i64, ptr %.4220.lcssa.i.i109, align 8
  store i64 %2129, ptr %1629, align 8
  store i64 %2128, ptr %.4220.lcssa.i.i109, align 8
  %2130 = load i64, ptr %.025.i384.i.i, align 8
  %2131 = load i64, ptr %.027.i383.i.i, align 8
  store i64 %2131, ptr %.025.i384.i.i, align 8
  store i64 %2130, ptr %.027.i383.i.i, align 8
  %2132 = icmp ult i64 %.0.i385.i.i, 2
  br i1 %2132, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.preheader.i.i

.lr.ph209.preheader.i.i:                          ; preds = %._crit_edge.i382.i.i
  %2133 = lshr i64 %.0.i385.i.i, 1
  %min.iters.check2306 = icmp ult i64 %.0.i385.i.i, 48
  br i1 %min.iters.check2306, label %.lr.ph209.i.i.preheader, label %vector.scevcheck2265

vector.scevcheck2265:                             ; preds = %.lr.ph209.preheader.i.i
  %2134 = add nsw i64 %2133, -1
  %uglygep2266 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -8
  %mul.result2268.neg = mul i64 %2134, -8
  %2135 = getelementptr i8, ptr %uglygep2266, i64 %mul.result2268.neg
  %2136 = icmp ugt ptr %2135, %uglygep2266
  %uglygep2270 = getelementptr i8, ptr %.025.i384.i.i, i64 -8
  %mul.result2272.neg = mul i64 %2134, -8
  %mul.overflow2273 = icmp ugt i64 %2134, 2305843009213693951
  %2137 = getelementptr i8, ptr %uglygep2270, i64 %mul.result2272.neg
  %2138 = icmp ugt ptr %2137, %uglygep2270
  %2139 = or i1 %2138, %mul.overflow2273
  %2140 = or i1 %2136, %2139
  br i1 %2140, label %.lr.ph209.i.i.preheader, label %vector.memcheck2274

vector.memcheck2274:                              ; preds = %vector.scevcheck2265
  %uglygep2275 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 16
  %2141 = shl i64 %2133, 3
  %2142 = add i64 %2141, 16
  %uglygep2276 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 %2142
  %uglygep2277 = getelementptr i8, ptr %.027.i383.i.i, i64 8
  %2143 = add i64 %2141, 8
  %uglygep2278 = getelementptr i8, ptr %.027.i383.i.i, i64 %2143
  %2144 = mul i64 %2133, -8
  %uglygep2279 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2144
  %uglygep2280 = getelementptr i8, ptr %.025.i384.i.i, i64 %2144
  %bound02281 = icmp ult ptr %uglygep2275, %uglygep2278
  %bound12282 = icmp ult ptr %uglygep2277, %uglygep2276
  %found.conflict2283 = and i1 %bound02281, %bound12282
  %bound02284 = icmp ult ptr %uglygep2275, %.4220.lcssa.i.i109
  %bound12285 = icmp ult ptr %uglygep2279, %uglygep2276
  %found.conflict2286 = and i1 %bound02284, %bound12285
  %conflict.rdx2287 = or i1 %found.conflict2283, %found.conflict2286
  %bound02288 = icmp ult ptr %uglygep2275, %.025.i384.i.i
  %bound12289 = icmp ult ptr %uglygep2280, %uglygep2276
  %found.conflict2290 = and i1 %bound02288, %bound12289
  %conflict.rdx2291 = or i1 %conflict.rdx2287, %found.conflict2290
  %bound02292 = icmp ult ptr %uglygep2277, %.4220.lcssa.i.i109
  %bound12293 = icmp ult ptr %uglygep2279, %uglygep2278
  %found.conflict2294 = and i1 %bound02292, %bound12293
  %conflict.rdx2295 = or i1 %conflict.rdx2291, %found.conflict2294
  %bound02296 = icmp ult ptr %uglygep2277, %.025.i384.i.i
  %bound12297 = icmp ult ptr %uglygep2280, %uglygep2278
  %found.conflict2298 = and i1 %bound02296, %bound12297
  %conflict.rdx2299 = or i1 %conflict.rdx2295, %found.conflict2298
  %bound02300 = icmp ult ptr %uglygep2279, %.025.i384.i.i
  %bound12301 = icmp ult ptr %uglygep2280, %.4220.lcssa.i.i109
  %found.conflict2302 = and i1 %bound02300, %bound12301
  %conflict.rdx2303 = or i1 %conflict.rdx2299, %found.conflict2302
  br i1 %conflict.rdx2303, label %.lr.ph209.i.i.preheader, label %vector.ph2307

vector.ph2307:                                    ; preds = %vector.memcheck2274
  %2145 = lshr i64 %.0.i385.i.i, 1
  %n.vec2309 = and i64 %2133, 9223372036854775806
  %ind.end2310 = and i64 %2145, 1
  %2146 = shl i64 %n.vec2309, 3
  %ind.end2312 = getelementptr i8, ptr %1629, i64 %2146
  %2147 = mul i64 %n.vec2309, -8
  %ind.end2314 = getelementptr i8, ptr %.025.i384.i.i, i64 %2147
  %2148 = shl i64 %n.vec2309, 3
  %ind.end2316 = getelementptr i8, ptr %.027.i383.i.i, i64 %2148
  %2149 = mul i64 %n.vec2309, -8
  %ind.end2318 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2149
  %next.gep23232481 = getelementptr i8, ptr %.4.lcssa.i.i110, i64 16
  %next.gep23252478 = getelementptr i8, ptr %.027.i383.i.i, i64 8
  %uglygep3014 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 -16
  %uglygep3019 = getelementptr i8, ptr %.025.i384.i.i, i64 -16
  br label %vector.body2321

vector.body2321:                                  ; preds = %vector.body2321, %vector.ph2307
  %lsr.iv3024 = phi i64 [ %lsr.iv.next3025, %vector.body2321 ], [ %n.vec2309, %vector.ph2307 ]
  %lsr.iv3022 = phi ptr [ %uglygep3023, %vector.body2321 ], [ %next.gep23232481, %vector.ph2307 ]
  %lsr.iv3020 = phi ptr [ %uglygep3021, %vector.body2321 ], [ %uglygep3019, %vector.ph2307 ]
  %lsr.iv3017 = phi ptr [ %uglygep3018, %vector.body2321 ], [ %next.gep23252478, %vector.ph2307 ]
  %lsr.iv3015 = phi ptr [ %uglygep3016, %vector.body2321 ], [ %uglygep3014, %vector.ph2307 ]
  %wide.load2327 = load <2 x i64>, ptr %lsr.iv3022, align 8, !alias.scope !146, !noalias !149
  %wide.load2328 = load <2 x i64>, ptr %lsr.iv3015, align 8, !alias.scope !153, !noalias !154
  %reverse2329 = shufflevector <2 x i64> %wide.load2328, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2329, ptr %lsr.iv3022, align 8, !alias.scope !146, !noalias !149
  %reverse2330 = shufflevector <2 x i64> %wide.load2327, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2330, ptr %lsr.iv3015, align 8, !alias.scope !153, !noalias !154
  %wide.load2331 = load <2 x i64>, ptr %lsr.iv3020, align 8, !alias.scope !154
  %reverse2332 = shufflevector <2 x i64> %wide.load2331, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2333 = load <2 x i64>, ptr %lsr.iv3017, align 8, !alias.scope !155, !noalias !156
  %reverse2334 = shufflevector <2 x i64> %wide.load2333, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2334, ptr %lsr.iv3020, align 8, !alias.scope !154
  store <2 x i64> %reverse2332, ptr %lsr.iv3017, align 8, !alias.scope !155, !noalias !156
  %uglygep3016 = getelementptr i8, ptr %lsr.iv3015, i64 -16
  %uglygep3018 = getelementptr i8, ptr %lsr.iv3017, i64 16
  %uglygep3021 = getelementptr i8, ptr %lsr.iv3020, i64 -16
  %uglygep3023 = getelementptr i8, ptr %lsr.iv3022, i64 16
  %lsr.iv.next3025 = add nsw i64 %lsr.iv3024, -2
  %2150 = icmp eq i64 %lsr.iv.next3025, 0
  br i1 %2150, label %middle.block2304, label %vector.body2321, !llvm.loop !157

middle.block2304:                                 ; preds = %vector.body2321
  %cmp.n2320 = icmp eq i64 %2133, %n.vec2309
  br i1 %cmp.n2320, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.i.i.preheader

.lr.ph209.i.i.preheader:                          ; preds = %middle.block2304, %vector.memcheck2274, %vector.scevcheck2265, %.lr.ph209.preheader.i.i
  %.1.i390208.i.i.ph = phi i64 [ %ind.end2310, %middle.block2304 ], [ %2133, %.lr.ph209.preheader.i.i ], [ %2133, %vector.scevcheck2265 ], [ %2133, %vector.memcheck2274 ]
  %.024.i389207.i.i.ph = phi ptr [ %ind.end2312, %middle.block2304 ], [ %1629, %.lr.ph209.preheader.i.i ], [ %1629, %vector.scevcheck2265 ], [ %1629, %vector.memcheck2274 ]
  %.126.i388206.i.i.ph = phi ptr [ %ind.end2314, %middle.block2304 ], [ %.025.i384.i.i, %.lr.ph209.preheader.i.i ], [ %.025.i384.i.i, %vector.scevcheck2265 ], [ %.025.i384.i.i, %vector.memcheck2274 ]
  %.128.i387205.i.i.ph = phi ptr [ %ind.end2316, %middle.block2304 ], [ %.027.i383.i.i, %.lr.ph209.preheader.i.i ], [ %.027.i383.i.i, %vector.scevcheck2265 ], [ %.027.i383.i.i, %vector.memcheck2274 ]
  %.029.i386204.i.i.ph = phi ptr [ %ind.end2318, %middle.block2304 ], [ %.4220.lcssa.i.i109, %.lr.ph209.preheader.i.i ], [ %.4220.lcssa.i.i109, %vector.scevcheck2265 ], [ %.4220.lcssa.i.i109, %vector.memcheck2274 ]
  %uglygep3002 = getelementptr i8, ptr %.024.i389207.i.i.ph, i64 8
  %uglygep3005 = getelementptr i8, ptr %.126.i388206.i.i.ph, i64 -8
  %uglygep3008 = getelementptr i8, ptr %.128.i387205.i.i.ph, i64 8
  %uglygep3011 = getelementptr i8, ptr %.029.i386204.i.i.ph, i64 -8
  br label %.lr.ph209.i.i

2151:                                             ; preds = %2117
  %2152 = load i64, ptr %2123, align 8
  %2153 = load i64, ptr %2125, align 8
  store i64 %2153, ptr %2123, align 8
  %2154 = getelementptr inbounds i8, ptr %2123, i64 -8
  store i64 %2152, ptr %2125, align 8
  %2155 = getelementptr inbounds i8, ptr %2125, i64 8
  %2156 = add nsw i64 %2121, -1
  br label %._crit_edge.i382.i.i

.lr.ph209.i.i:                                    ; preds = %.lr.ph209.i.i, %.lr.ph209.i.i.preheader
  %lsr.iv3012 = phi ptr [ %uglygep3011, %.lr.ph209.i.i.preheader ], [ %uglygep3013, %.lr.ph209.i.i ]
  %lsr.iv3009 = phi ptr [ %uglygep3008, %.lr.ph209.i.i.preheader ], [ %uglygep3010, %.lr.ph209.i.i ]
  %lsr.iv3006 = phi ptr [ %uglygep3005, %.lr.ph209.i.i.preheader ], [ %uglygep3007, %.lr.ph209.i.i ]
  %lsr.iv3003 = phi ptr [ %uglygep3002, %.lr.ph209.i.i.preheader ], [ %uglygep3004, %.lr.ph209.i.i ]
  %.1.i390208.i.i = phi i64 [ %2157, %.lr.ph209.i.i ], [ %.1.i390208.i.i.ph, %.lr.ph209.i.i.preheader ]
  %2157 = add nsw i64 %.1.i390208.i.i, -1
  %2158 = load i64, ptr %lsr.iv3003, align 8
  %2159 = load i64, ptr %lsr.iv3012, align 8
  store i64 %2159, ptr %lsr.iv3003, align 8
  store i64 %2158, ptr %lsr.iv3012, align 8
  %2160 = load i64, ptr %lsr.iv3006, align 8
  %2161 = load i64, ptr %lsr.iv3009, align 8
  store i64 %2161, ptr %lsr.iv3006, align 8
  store i64 %2160, ptr %lsr.iv3009, align 8
  %uglygep3004 = getelementptr i8, ptr %lsr.iv3003, i64 8
  %uglygep3007 = getelementptr i8, ptr %lsr.iv3006, i64 -8
  %uglygep3010 = getelementptr i8, ptr %lsr.iv3009, i64 8
  %uglygep3013 = getelementptr i8, ptr %lsr.iv3012, i64 -8
  %2162 = icmp eq i64 %2157, 0
  br i1 %2162, label %sort.quad_reversal.exit391.i.i, label %.lr.ph209.i.i, !llvm.loop !158

2163:                                             ; preds = %sort.quad_reversal.exit391.i.i
  %2164 = ptrtoint ptr %.4225.lcssa.i.i108 to i64
  %2165 = ptrtoint ptr %1635 to i64
  %2166 = sub nuw i64 %2164, %2165
  %2167 = lshr i64 %2166, 4
  %2168 = shl nuw nsw i64 %2167, 3
  %2169 = getelementptr inbounds i8, ptr %1635, i64 %2168
  %2170 = sub nsw i64 0, %2168
  %2171 = getelementptr inbounds i8, ptr %.4225.lcssa.i.i108, i64 %2170
  %2172 = and i64 %2166, 16
  %2173 = icmp eq i64 %2172, 0
  br i1 %2173, label %2197, label %._crit_edge.i392.i.i

._crit_edge.i392.i.i:                             ; preds = %2197, %2163
  %.027.i393.i.i = phi ptr [ %2201, %2197 ], [ %2171, %2163 ]
  %.025.i394.i.i = phi ptr [ %2200, %2197 ], [ %2169, %2163 ]
  %.0.i395.i.i = phi i64 [ %2202, %2197 ], [ %2167, %2163 ]
  %2174 = load i64, ptr %1635, align 8
  %2175 = load i64, ptr %.4225.lcssa.i.i108, align 8
  store i64 %2175, ptr %1635, align 8
  store i64 %2174, ptr %.4225.lcssa.i.i108, align 8
  %2176 = load i64, ptr %.025.i394.i.i, align 8
  %2177 = load i64, ptr %.027.i393.i.i, align 8
  store i64 %2177, ptr %.025.i394.i.i, align 8
  store i64 %2176, ptr %.027.i393.i.i, align 8
  %2178 = icmp ult i64 %.0.i395.i.i, 2
  br i1 %2178, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.preheader.i.i

.lr.ph215.preheader.i.i:                          ; preds = %._crit_edge.i392.i.i
  %2179 = lshr i64 %.0.i395.i.i, 1
  %min.iters.check2377 = icmp ult i64 %.0.i395.i.i, 48
  br i1 %min.iters.check2377, label %.lr.ph215.i.i.preheader, label %vector.scevcheck2336

vector.scevcheck2336:                             ; preds = %.lr.ph215.preheader.i.i
  %2180 = add nsw i64 %2179, -1
  %uglygep2337 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -8
  %mul.result2339.neg = mul i64 %2180, -8
  %2181 = getelementptr i8, ptr %uglygep2337, i64 %mul.result2339.neg
  %2182 = icmp ugt ptr %2181, %uglygep2337
  %uglygep2341 = getelementptr i8, ptr %.025.i394.i.i, i64 -8
  %mul.result2343.neg = mul i64 %2180, -8
  %mul.overflow2344 = icmp ugt i64 %2180, 2305843009213693951
  %2183 = getelementptr i8, ptr %uglygep2341, i64 %mul.result2343.neg
  %2184 = icmp ugt ptr %2183, %uglygep2341
  %2185 = or i1 %2184, %mul.overflow2344
  %2186 = or i1 %2182, %2185
  br i1 %2186, label %.lr.ph215.i.i.preheader, label %vector.memcheck2345

vector.memcheck2345:                              ; preds = %vector.scevcheck2336
  %uglygep2346 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 16
  %2187 = shl i64 %2179, 3
  %2188 = add i64 %2187, 16
  %uglygep2347 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 %2188
  %uglygep2348 = getelementptr i8, ptr %.027.i393.i.i, i64 8
  %2189 = add i64 %2187, 8
  %uglygep2349 = getelementptr i8, ptr %.027.i393.i.i, i64 %2189
  %2190 = mul i64 %2179, -8
  %uglygep2350 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2190
  %uglygep2351 = getelementptr i8, ptr %.025.i394.i.i, i64 %2190
  %bound02352 = icmp ult ptr %uglygep2346, %uglygep2349
  %bound12353 = icmp ult ptr %uglygep2348, %uglygep2347
  %found.conflict2354 = and i1 %bound02352, %bound12353
  %bound02355 = icmp ult ptr %uglygep2346, %.4225.lcssa.i.i108
  %bound12356 = icmp ult ptr %uglygep2350, %uglygep2347
  %found.conflict2357 = and i1 %bound02355, %bound12356
  %conflict.rdx2358 = or i1 %found.conflict2354, %found.conflict2357
  %bound02359 = icmp ult ptr %uglygep2346, %.025.i394.i.i
  %bound12360 = icmp ult ptr %uglygep2351, %uglygep2347
  %found.conflict2361 = and i1 %bound02359, %bound12360
  %conflict.rdx2362 = or i1 %conflict.rdx2358, %found.conflict2361
  %bound02363 = icmp ult ptr %uglygep2348, %.4225.lcssa.i.i108
  %bound12364 = icmp ult ptr %uglygep2350, %uglygep2349
  %found.conflict2365 = and i1 %bound02363, %bound12364
  %conflict.rdx2366 = or i1 %conflict.rdx2362, %found.conflict2365
  %bound02367 = icmp ult ptr %uglygep2348, %.025.i394.i.i
  %bound12368 = icmp ult ptr %uglygep2351, %uglygep2349
  %found.conflict2369 = and i1 %bound02367, %bound12368
  %conflict.rdx2370 = or i1 %conflict.rdx2366, %found.conflict2369
  %bound02371 = icmp ult ptr %uglygep2350, %.025.i394.i.i
  %bound12372 = icmp ult ptr %uglygep2351, %.4225.lcssa.i.i108
  %found.conflict2373 = and i1 %bound02371, %bound12372
  %conflict.rdx2374 = or i1 %conflict.rdx2370, %found.conflict2373
  br i1 %conflict.rdx2374, label %.lr.ph215.i.i.preheader, label %vector.ph2378

vector.ph2378:                                    ; preds = %vector.memcheck2345
  %2191 = lshr i64 %.0.i395.i.i, 1
  %n.vec2380 = and i64 %2179, 9223372036854775806
  %ind.end2381 = and i64 %2191, 1
  %2192 = shl i64 %n.vec2380, 3
  %ind.end2383 = getelementptr i8, ptr %1635, i64 %2192
  %2193 = mul i64 %n.vec2380, -8
  %ind.end2385 = getelementptr i8, ptr %.025.i394.i.i, i64 %2193
  %2194 = shl i64 %n.vec2380, 3
  %ind.end2387 = getelementptr i8, ptr %.027.i393.i.i, i64 %2194
  %2195 = mul i64 %n.vec2380, -8
  %ind.end2389 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 %2195
  %next.gep23942477 = getelementptr i8, ptr %.4220.lcssa.i.i109, i64 16
  %next.gep23962474 = getelementptr i8, ptr %.027.i393.i.i, i64 8
  %uglygep2990 = getelementptr i8, ptr %.4225.lcssa.i.i108, i64 -16
  %uglygep2995 = getelementptr i8, ptr %.025.i394.i.i, i64 -16
  br label %vector.body2392

vector.body2392:                                  ; preds = %vector.body2392, %vector.ph2378
  %lsr.iv3000 = phi i64 [ %lsr.iv.next3001, %vector.body2392 ], [ %n.vec2380, %vector.ph2378 ]
  %lsr.iv2998 = phi ptr [ %uglygep2999, %vector.body2392 ], [ %next.gep23942477, %vector.ph2378 ]
  %lsr.iv2996 = phi ptr [ %uglygep2997, %vector.body2392 ], [ %uglygep2995, %vector.ph2378 ]
  %lsr.iv2993 = phi ptr [ %uglygep2994, %vector.body2392 ], [ %next.gep23962474, %vector.ph2378 ]
  %lsr.iv2991 = phi ptr [ %uglygep2992, %vector.body2392 ], [ %uglygep2990, %vector.ph2378 ]
  %wide.load2398 = load <2 x i64>, ptr %lsr.iv2998, align 8, !alias.scope !159, !noalias !162
  %wide.load2399 = load <2 x i64>, ptr %lsr.iv2991, align 8, !alias.scope !166, !noalias !167
  %reverse2400 = shufflevector <2 x i64> %wide.load2399, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2400, ptr %lsr.iv2998, align 8, !alias.scope !159, !noalias !162
  %reverse2401 = shufflevector <2 x i64> %wide.load2398, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2401, ptr %lsr.iv2991, align 8, !alias.scope !166, !noalias !167
  %wide.load2402 = load <2 x i64>, ptr %lsr.iv2996, align 8, !alias.scope !167
  %reverse2403 = shufflevector <2 x i64> %wide.load2402, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load2404 = load <2 x i64>, ptr %lsr.iv2993, align 8, !alias.scope !168, !noalias !169
  %reverse2405 = shufflevector <2 x i64> %wide.load2404, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse2405, ptr %lsr.iv2996, align 8, !alias.scope !167
  store <2 x i64> %reverse2403, ptr %lsr.iv2993, align 8, !alias.scope !168, !noalias !169
  %uglygep2992 = getelementptr i8, ptr %lsr.iv2991, i64 -16
  %uglygep2994 = getelementptr i8, ptr %lsr.iv2993, i64 16
  %uglygep2997 = getelementptr i8, ptr %lsr.iv2996, i64 -16
  %uglygep2999 = getelementptr i8, ptr %lsr.iv2998, i64 16
  %lsr.iv.next3001 = add nsw i64 %lsr.iv3000, -2
  %2196 = icmp eq i64 %lsr.iv.next3001, 0
  br i1 %2196, label %middle.block2375, label %vector.body2392, !llvm.loop !170

middle.block2375:                                 ; preds = %vector.body2392
  %cmp.n2391 = icmp eq i64 %2179, %n.vec2380
  br i1 %cmp.n2391, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.i.i.preheader

.lr.ph215.i.i.preheader:                          ; preds = %middle.block2375, %vector.memcheck2345, %vector.scevcheck2336, %.lr.ph215.preheader.i.i
  %.1.i400214.i.i.ph = phi i64 [ %ind.end2381, %middle.block2375 ], [ %2179, %.lr.ph215.preheader.i.i ], [ %2179, %vector.scevcheck2336 ], [ %2179, %vector.memcheck2345 ]
  %.024.i399213.i.i.ph = phi ptr [ %ind.end2383, %middle.block2375 ], [ %1635, %.lr.ph215.preheader.i.i ], [ %1635, %vector.scevcheck2336 ], [ %1635, %vector.memcheck2345 ]
  %.126.i398212.i.i.ph = phi ptr [ %ind.end2385, %middle.block2375 ], [ %.025.i394.i.i, %.lr.ph215.preheader.i.i ], [ %.025.i394.i.i, %vector.scevcheck2336 ], [ %.025.i394.i.i, %vector.memcheck2345 ]
  %.128.i397211.i.i.ph = phi ptr [ %ind.end2387, %middle.block2375 ], [ %.027.i393.i.i, %.lr.ph215.preheader.i.i ], [ %.027.i393.i.i, %vector.scevcheck2336 ], [ %.027.i393.i.i, %vector.memcheck2345 ]
  %.029.i396210.i.i.ph = phi ptr [ %ind.end2389, %middle.block2375 ], [ %.4225.lcssa.i.i108, %.lr.ph215.preheader.i.i ], [ %.4225.lcssa.i.i108, %vector.scevcheck2336 ], [ %.4225.lcssa.i.i108, %vector.memcheck2345 ]
  %uglygep2978 = getelementptr i8, ptr %.024.i399213.i.i.ph, i64 8
  %uglygep2981 = getelementptr i8, ptr %.126.i398212.i.i.ph, i64 -8
  %uglygep2984 = getelementptr i8, ptr %.128.i397211.i.i.ph, i64 8
  %uglygep2987 = getelementptr i8, ptr %.029.i396210.i.i.ph, i64 -8
  br label %.lr.ph215.i.i

2197:                                             ; preds = %2163
  %2198 = load i64, ptr %2169, align 8
  %2199 = load i64, ptr %2171, align 8
  store i64 %2199, ptr %2169, align 8
  %2200 = getelementptr inbounds i8, ptr %2169, i64 -8
  store i64 %2198, ptr %2171, align 8
  %2201 = getelementptr inbounds i8, ptr %2171, i64 8
  %2202 = add nsw i64 %2167, -1
  br label %._crit_edge.i392.i.i

.lr.ph215.i.i:                                    ; preds = %.lr.ph215.i.i, %.lr.ph215.i.i.preheader
  %lsr.iv2988 = phi ptr [ %uglygep2987, %.lr.ph215.i.i.preheader ], [ %uglygep2989, %.lr.ph215.i.i ]
  %lsr.iv2985 = phi ptr [ %uglygep2984, %.lr.ph215.i.i.preheader ], [ %uglygep2986, %.lr.ph215.i.i ]
  %lsr.iv2982 = phi ptr [ %uglygep2981, %.lr.ph215.i.i.preheader ], [ %uglygep2983, %.lr.ph215.i.i ]
  %lsr.iv2979 = phi ptr [ %uglygep2978, %.lr.ph215.i.i.preheader ], [ %uglygep2980, %.lr.ph215.i.i ]
  %.1.i400214.i.i = phi i64 [ %2203, %.lr.ph215.i.i ], [ %.1.i400214.i.i.ph, %.lr.ph215.i.i.preheader ]
  %2203 = add nsw i64 %.1.i400214.i.i, -1
  %2204 = load i64, ptr %lsr.iv2979, align 8
  %2205 = load i64, ptr %lsr.iv2988, align 8
  store i64 %2205, ptr %lsr.iv2979, align 8
  store i64 %2204, ptr %lsr.iv2988, align 8
  %2206 = load i64, ptr %lsr.iv2982, align 8
  %2207 = load i64, ptr %lsr.iv2985, align 8
  store i64 %2207, ptr %lsr.iv2982, align 8
  store i64 %2206, ptr %lsr.iv2985, align 8
  %uglygep2980 = getelementptr i8, ptr %lsr.iv2979, i64 8
  %uglygep2983 = getelementptr i8, ptr %lsr.iv2982, i64 -8
  %uglygep2986 = getelementptr i8, ptr %lsr.iv2985, i64 8
  %uglygep2989 = getelementptr i8, ptr %lsr.iv2988, i64 -8
  %2208 = icmp eq i64 %2203, 0
  br i1 %2208, label %sort.quad_reversal.exit401.i.i, label %.lr.ph215.i.i, !llvm.loop !171

2209:                                             ; preds = %2217, %sort.quad_reversal.exit401.i.i
  %.0267.i.i146 = phi i4 [ 1, %2217 ], [ %1615, %sort.quad_reversal.exit401.i.i ]
  %.0266.i.i147 = phi i4 [ 1, %2217 ], [ %1612, %sort.quad_reversal.exit401.i.i ]
  %.0265.i.i148 = phi i4 [ 1, %2217 ], [ %1609, %sort.quad_reversal.exit401.i.i ]
  %.0264.i.i149 = phi i4 [ 1, %2217 ], [ %1606, %sort.quad_reversal.exit401.i.i ]
  %2210 = shl nuw nsw i4 %.0265.i.i148, 1
  %2211 = shl nuw nsw i4 %.0266.i.i147, 2
  %2212 = or i4 %2210, %2211
  %2213 = shl nuw i4 %.0267.i.i146, 3
  %2214 = or i4 %2212, %2213
  %2215 = or i4 %2214, %.0264.i.i149
  %2216 = zext i4 %2215 to i32
  switch i32 %2216, label %2226 [
    i32 0, label %2227
    i32 1, label %2229
    i32 2, label %2241
    i32 3, label %2254
    i32 4, label %2273
    i32 8, label %2286
    i32 9, label %2296
    i32 12, label %2316
    i32 5, label %2334
    i32 6, label %2334
    i32 7, label %2334
    i32 10, label %2334
    i32 11, label %2334
    i32 13, label %2334
    i32 14, label %2334
    i32 15, label %2334
  ]

2217:                                             ; preds = %sort.quad_reversal.exit401.i.i
  br label %2209

sort.quadsort_swap__anon_14861.exit406.i.i:       ; preds = %2382, %2380, %2379, %2372, %2371, %2332, %2330, %2329, %sort.quadsort_swap__anon_14861.exit409.i.i, %2314, %2312, %2311, %sort.quadsort_swap__anon_14861.exit407.i.i, %2294, %2292, %2291, %2286, %sort.quadsort_swap__anon_14861.exit405.i.i, %sort.quadsort_swap__anon_14861.exit404.i.i, %sort.quadsort_swap__anon_14861.exit402.i.i, %sort.quadsort_swap__anon_14861.exit.i.i
  %2218 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %2219 = load ptr, ptr %.3.lcssa.i.i111, align 8
  %2220 = load ptr, ptr %2218, align 8
  %2221 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2219, ptr align 1 %2220) #15
  %.not271.i.i150 = icmp eq i8 %2221, 1
  %2222 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %2223 = load ptr, ptr %.4220.lcssa.i.i109, align 8
  %2224 = load ptr, ptr %2222, align 8
  %2225 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2223, ptr align 1 %2224) #15
  br i1 %.not271.i.i150, label %2387, label %2385

2226:                                             ; preds = %2209
  unreachable

2227:                                             ; preds = %2209
  %2228 = getelementptr inbounds i8, ptr %1426, i64 %87
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2228, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.flux_analyze__anon_14347.exit.i

2229:                                             ; preds = %2209
  %.not288.i.i152 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not288.i.i152, label %sort.quadsort_swap__anon_14861.exit.i.i, label %2234

sort.quadsort_swap__anon_14861.exit.i.i:          ; preds = %2239, %2237, %2236, %2229
  %2230 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2231 = add nuw i64 %1434, %1435
  %2232 = shl nuw i64 %2231, 3
  %2233 = getelementptr inbounds i8, ptr %1426, i64 %2232
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2230, ptr nonnull align 1 %1426, ptr nonnull align 1 %2230, ptr nonnull align 1 %2233, i64 %2231, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2234:                                             ; preds = %2229
  %2235 = icmp ult i64 %1, 384
  br i1 %2235, label %2236, label %2237

2236:                                             ; preds = %2234
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit.i.i

2237:                                             ; preds = %2234
  %2238 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %88, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2238, label %2239, label %sort.quadsort_swap__anon_14861.exit.i.i

2239:                                             ; preds = %2237
  %2240 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, i64 %2240, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit.i.i

2241:                                             ; preds = %2209
  %2242 = getelementptr inbounds i8, ptr %1426, i64 %1438
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2242, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  %.not287.i.i153 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not287.i.i153, label %sort.quadsort_swap__anon_14861.exit402.i.i, label %2246

sort.quadsort_swap__anon_14861.exit402.i.i:       ; preds = %2252, %2250, %2249, %2241
  %2243 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2244 = shl nuw i64 %1435, 3
  %2245 = getelementptr inbounds i8, ptr %1426, i64 %2244
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2243, ptr nonnull align 1 %1426, ptr nonnull align 1 %2243, ptr nonnull align 1 %2245, i64 %1435, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2246:                                             ; preds = %2241
  %2247 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2248 = icmp ult i64 %1434, 96
  br i1 %2248, label %2249, label %2250

2249:                                             ; preds = %2246
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2247, i64 %1434, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit402.i.i

2250:                                             ; preds = %2246
  %2251 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2247, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2251, label %2252, label %sort.quadsort_swap__anon_14861.exit402.i.i

2252:                                             ; preds = %2250
  %2253 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2247, i64 %1434, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2247, i64 %1434, ptr nonnull align 1 %1426, i64 %1, i64 %2253, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit402.i.i

2254:                                             ; preds = %2209
  %.not285.i.i154 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not285.i.i154, label %sort.quadsort_swap__anon_14861.exit403.i.i, label %2255

sort.quadsort_swap__anon_14861.exit403.i.i:       ; preds = %2260, %2258, %2257, %2254
  %.not286.i.i155 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not286.i.i155, label %sort.quadsort_swap__anon_14861.exit404.i.i, label %2265

2255:                                             ; preds = %2254
  %2256 = icmp ult i64 %1, 384
  br i1 %2256, label %2257, label %2258

2257:                                             ; preds = %2255
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit403.i.i

2258:                                             ; preds = %2255
  %2259 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %88, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2259, label %2260, label %sort.quadsort_swap__anon_14861.exit403.i.i

2260:                                             ; preds = %2258
  %2261 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, i64 %2261, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit403.i.i

sort.quadsort_swap__anon_14861.exit404.i.i:       ; preds = %2271, %2269, %2268, %sort.quadsort_swap__anon_14861.exit403.i.i
  %2262 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2263 = shl nuw i64 %1435, 3
  %2264 = getelementptr inbounds i8, ptr %1426, i64 %2263
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2262, ptr nonnull align 1 %1426, ptr nonnull align 1 %2262, ptr nonnull align 1 %2264, i64 %1435, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2265:                                             ; preds = %sort.quadsort_swap__anon_14861.exit403.i.i
  %2266 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2267 = icmp ult i64 %1434, 96
  br i1 %2267, label %2268, label %2269

2268:                                             ; preds = %2265
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2266, i64 %1434, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit404.i.i

2269:                                             ; preds = %2265
  %2270 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2266, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2270, label %2271, label %sort.quadsort_swap__anon_14861.exit404.i.i

2271:                                             ; preds = %2269
  %2272 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2266, i64 %1434, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2266, i64 %1434, ptr nonnull align 1 %1426, i64 %1, i64 %2272, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit404.i.i

2273:                                             ; preds = %2209
  %2274 = getelementptr inbounds i8, ptr %1426, i64 %1440
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2274, i64 %1432, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  %.not284.i.i156 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not284.i.i156, label %sort.quadsort_swap__anon_14861.exit405.i.i, label %2278

sort.quadsort_swap__anon_14861.exit405.i.i:       ; preds = %2284, %2282, %2281, %2273
  %2275 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2276 = shl nuw i64 %1437, 3
  %2277 = getelementptr inbounds i8, ptr %1426, i64 %2276
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2275, ptr nonnull align 1 %1426, ptr nonnull align 1 %2275, ptr nonnull align 1 %2277, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2278:                                             ; preds = %2273
  %2279 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2280 = icmp ult i64 %1435, 192
  br i1 %2280, label %2281, label %2282

2281:                                             ; preds = %2278
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2279, i64 %1436, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit405.i.i

2282:                                             ; preds = %2278
  %2283 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2279, i64 %1436, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2283, label %2284, label %sort.quadsort_swap__anon_14861.exit405.i.i

2284:                                             ; preds = %2282
  %2285 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2279, i64 %1436, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2279, i64 %1436, ptr nonnull align 1 %1426, i64 %1, i64 %2285, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit405.i.i

2286:                                             ; preds = %2209
  %2287 = getelementptr inbounds i8, ptr %1426, i64 %1443
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2287, i64 %1442, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  %.not283.i.i157 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not283.i.i157, label %sort.quadsort_swap__anon_14861.exit406.i.i, label %2288

2288:                                             ; preds = %2286
  %2289 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2290 = icmp ult i64 %1437, 96
  br i1 %2290, label %2291, label %2292

2291:                                             ; preds = %2288
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2289, i64 %1437, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2292:                                             ; preds = %2288
  %2293 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2289, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2293, label %2294, label %sort.quadsort_swap__anon_14861.exit406.i.i

2294:                                             ; preds = %2292
  %2295 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2289, i64 %1437, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2289, i64 %1437, ptr nonnull align 1 %1426, i64 %1, i64 %2295, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2296:                                             ; preds = %2209
  %.not281.i.i158 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not281.i.i158, label %sort.quadsort_swap__anon_14861.exit407.i.i, label %2301

sort.quadsort_swap__anon_14861.exit407.i.i:       ; preds = %2306, %2304, %2303, %2296
  %2297 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2298 = add nuw i64 %1436, %1434
  %2299 = shl nuw i64 %2298, 3
  %2300 = getelementptr inbounds i8, ptr %1426, i64 %2299
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2297, ptr nonnull align 1 %1426, ptr nonnull align 1 %2297, ptr nonnull align 1 %2300, i64 %2298, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  %.not282.i.i159 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not282.i.i159, label %sort.quadsort_swap__anon_14861.exit406.i.i, label %2308

2301:                                             ; preds = %2296
  %2302 = icmp ult i64 %1, 384
  br i1 %2302, label %2303, label %2304

2303:                                             ; preds = %2301
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit407.i.i

2304:                                             ; preds = %2301
  %2305 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %88, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2305, label %2306, label %sort.quadsort_swap__anon_14861.exit407.i.i

2306:                                             ; preds = %2304
  %2307 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, i64 %2307, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit407.i.i

2308:                                             ; preds = %sort.quadsort_swap__anon_14861.exit407.i.i
  %2309 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2310 = icmp ult i64 %1437, 96
  br i1 %2310, label %2311, label %2312

2311:                                             ; preds = %2308
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2309, i64 %1437, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2312:                                             ; preds = %2308
  %2313 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2309, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2313, label %2314, label %sort.quadsort_swap__anon_14861.exit406.i.i

2314:                                             ; preds = %2312
  %2315 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2309, i64 %1437, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2309, i64 %1437, ptr nonnull align 1 %1426, i64 %1, i64 %2315, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2316:                                             ; preds = %2209
  %2317 = getelementptr inbounds i8, ptr %1426, i64 %1440
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2317, i64 %1432, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  %.not279.i.i160 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not279.i.i160, label %sort.quadsort_swap__anon_14861.exit409.i.i, label %2318

sort.quadsort_swap__anon_14861.exit409.i.i:       ; preds = %2324, %2322, %2321, %2316
  %.not280.i.i161 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not280.i.i161, label %sort.quadsort_swap__anon_14861.exit406.i.i, label %2326

2318:                                             ; preds = %2316
  %2319 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2320 = icmp ult i64 %1435, 192
  br i1 %2320, label %2321, label %2322

2321:                                             ; preds = %2318
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2319, i64 %1436, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit409.i.i

2322:                                             ; preds = %2318
  %2323 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2319, i64 %1436, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2323, label %2324, label %sort.quadsort_swap__anon_14861.exit409.i.i

2324:                                             ; preds = %2322
  %2325 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2319, i64 %1436, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2319, i64 %1436, ptr nonnull align 1 %1426, i64 %1, i64 %2325, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit409.i.i

2326:                                             ; preds = %sort.quadsort_swap__anon_14861.exit409.i.i
  %2327 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2328 = icmp ult i64 %1437, 96
  br i1 %2328, label %2329, label %2330

2329:                                             ; preds = %2326
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2327, i64 %1437, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2330:                                             ; preds = %2326
  %2331 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2327, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2331, label %2332, label %sort.quadsort_swap__anon_14861.exit406.i.i

2332:                                             ; preds = %2330
  %2333 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2327, i64 %1437, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2327, i64 %1437, ptr nonnull align 1 %1426, i64 %1, i64 %2333, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2334:                                             ; preds = %2209, %2209, %2209, %2209, %2209, %2209, %2209, %2209
  %.not.i.i162 = icmp eq i4 %.0264.i.i149, 0
  br i1 %.not.i.i162, label %2336, label %2335

sort.quadsort_swap__anon_14861.exit411.i.i:       ; preds = %2343, %2341, %2340, %2336, %2335
  %.not268.i.i163 = icmp eq i4 %.0265.i.i148, 0
  br i1 %.not268.i.i163, label %2346, label %2345

2335:                                             ; preds = %2334
  %.not278.i.i164 = icmp eq i64 %.3233.i.i122, 0
  br i1 %.not278.i.i164, label %sort.quadsort_swap__anon_14861.exit411.i.i, label %2338

2336:                                             ; preds = %2334
  %2337 = getelementptr inbounds i8, ptr %1426, i64 %1438
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %2337, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit411.i.i

2338:                                             ; preds = %2335
  %2339 = icmp ult i64 %1, 384
  br i1 %2339, label %2340, label %2341

2340:                                             ; preds = %2338
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit411.i.i

2341:                                             ; preds = %2338
  %2342 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %88, i64 %1433, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2342, label %2343, label %sort.quadsort_swap__anon_14861.exit411.i.i

2343:                                             ; preds = %2341
  %2344 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %88, i64 %1433, ptr nonnull align 1 %1426, i64 %1, i64 %2344, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit411.i.i

sort.quadsort_swap__anon_14861.exit412.i.i:       ; preds = %2356, %2354, %2353, %2346, %2345
  %.not269.i.i165 = icmp eq i4 %.0266.i.i147, 0
  br i1 %.not269.i.i165, label %2359, label %2358

2345:                                             ; preds = %sort.quadsort_swap__anon_14861.exit411.i.i
  %.not277.i.i166 = icmp eq i64 %.4240.i.i121, 0
  br i1 %.not277.i.i166, label %sort.quadsort_swap__anon_14861.exit412.i.i, label %2350

2346:                                             ; preds = %sort.quadsort_swap__anon_14861.exit411.i.i
  %2347 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2348 = shl nuw i64 %1434, 3
  %2349 = getelementptr inbounds i8, ptr %1426, i64 %2348
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2347, ptr nonnull align 1 %1426, ptr nonnull align 1 %2347, ptr nonnull align 1 %2349, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit412.i.i

2350:                                             ; preds = %2345
  %2351 = getelementptr inbounds i8, ptr %.3.lcssa.i.i111, i64 8
  %2352 = icmp ult i64 %1434, 96
  br i1 %2352, label %2353, label %2354

2353:                                             ; preds = %2350
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2351, i64 %1434, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit412.i.i

2354:                                             ; preds = %2350
  %2355 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2351, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2355, label %2356, label %sort.quadsort_swap__anon_14861.exit412.i.i

2356:                                             ; preds = %2354
  %2357 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2351, i64 %1434, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2351, i64 %1434, ptr nonnull align 1 %1426, i64 %1, i64 %2357, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit412.i.i

sort.quadsort_swap__anon_14861.exit413.i.i:       ; preds = %2369, %2367, %2366, %2359, %2358
  %.not270.i.i167 = icmp eq i4 %.0267.i.i146, 0
  br i1 %.not270.i.i167, label %2372, label %2371

2358:                                             ; preds = %sort.quadsort_swap__anon_14861.exit412.i.i
  %.not276.i.i168 = icmp eq i64 %.4247.i.i120, 0
  br i1 %.not276.i.i168, label %sort.quadsort_swap__anon_14861.exit413.i.i, label %2363

2359:                                             ; preds = %sort.quadsort_swap__anon_14861.exit412.i.i
  %2360 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2361 = shl nuw i64 %1436, 3
  %2362 = getelementptr inbounds i8, ptr %1426, i64 %2361
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2360, ptr nonnull align 1 %1426, ptr nonnull align 1 %2360, ptr nonnull align 1 %2362, i64 %1436, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit413.i.i

2363:                                             ; preds = %2358
  %2364 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  %2365 = icmp ult i64 %1435, 192
  br i1 %2365, label %2366, label %2367

2366:                                             ; preds = %2363
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2364, i64 %1436, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit413.i.i

2367:                                             ; preds = %2363
  %2368 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2364, i64 %1436, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2368, label %2369, label %sort.quadsort_swap__anon_14861.exit413.i.i

2369:                                             ; preds = %2367
  %2370 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2364, i64 %1436, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2364, i64 %1436, ptr nonnull align 1 %1426, i64 %1, i64 %2370, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit413.i.i

2371:                                             ; preds = %sort.quadsort_swap__anon_14861.exit413.i.i
  %.not275.i.i169 = icmp eq i64 %.4254.i.i119, 0
  br i1 %.not275.i.i169, label %sort.quadsort_swap__anon_14861.exit406.i.i, label %2376

2372:                                             ; preds = %sort.quadsort_swap__anon_14861.exit413.i.i
  %2373 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2374 = shl nuw i64 %1437, 3
  %2375 = getelementptr inbounds i8, ptr %1426, i64 %2374
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %2373, ptr nonnull align 1 %1426, ptr nonnull align 1 %2373, ptr nonnull align 1 %2375, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2376:                                             ; preds = %2371
  %2377 = getelementptr inbounds i8, ptr %.4220.lcssa.i.i109, i64 8
  %2378 = icmp ult i64 %1437, 96
  br i1 %2378, label %2379, label %2380

2379:                                             ; preds = %2376
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %2377, i64 %1437, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2380:                                             ; preds = %2376
  %2381 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %2377, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br i1 %2381, label %2382, label %sort.quadsort_swap__anon_14861.exit406.i.i

2382:                                             ; preds = %2380
  %2383 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %2377, i64 %1437, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %2377, i64 %1437, ptr nonnull align 1 %1426, i64 %1, i64 %2383, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.quadsort_swap__anon_14861.exit406.i.i

2384:                                             ; preds = %2400, %2398, %2397, %2395
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, i64 %1432, i64 %1435, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.flux_analyze__anon_14347.exit.i

2385:                                             ; preds = %sort.quadsort_swap__anon_14861.exit406.i.i
  %2386 = icmp eq i8 %2225, 1
  br i1 %2386, label %2395, label %2390

2387:                                             ; preds = %sort.quadsort_swap__anon_14861.exit406.i.i
  %2388 = icmp eq i8 %2225, 1
  %2389 = getelementptr inbounds i8, ptr %1426, i64 %1440
  br i1 %2388, label %2400, label %2398

2390:                                             ; preds = %2385
  %2391 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call void %5(ptr align 1 %3, i64 1) #15
  %2392 = load ptr, ptr %.4.lcssa.i.i110, align 8
  %2393 = load ptr, ptr %2391, align 8
  %2394 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2392, ptr align 1 %2393) #15
  %.not274.i.i170 = icmp eq i8 %2394, 1
  br i1 %.not274.i.i170, label %2397, label %sort.flux_analyze__anon_14347.exit.i

2395:                                             ; preds = %2385
  %2396 = getelementptr inbounds i8, ptr %1426, i64 %1440
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %2396, ptr nonnull align 1 %1441, i64 %1436, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %1440, i1 false)
  br label %2384

2397:                                             ; preds = %2390
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %87, i1 false)
  br label %2384

2398:                                             ; preds = %2387
  %2399 = shl nuw i64 %1435, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2389, ptr nonnull align 1 %1441, i64 %2399, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %1433, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %2384

2400:                                             ; preds = %2387
  %2401 = getelementptr inbounds i8, ptr %.4.lcssa.i.i110, i64 8
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %2389, ptr nonnull align 1 %2401, i64 %1436, i64 %1437, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %1433, i64 %1434, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %2384

sort.flux_analyze__anon_14347.exit.i:             ; preds = %2390, %2384, %2227, %.lr.ph149.i.i, %middle.block1594, %._crit_edge.i352.i.i, %1598
  tail call void @roc_dealloc(ptr nonnull align 1 %1426, i32 8)
  br label %sort.fluxsort_direct__anon_13350.exit

2402:                                             ; preds = %1429
  tail call fastcc void @sort.quadsort_direct__anon_14343(ptr nonnull align 1 %88, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %5)
  br label %sort.fluxsort_direct__anon_13350.exit

2403:                                             ; preds = %._crit_edge
  %2404 = icmp eq ptr %1426, null
  br i1 %2404, label %3374, label %2405

2405:                                             ; preds = %2403
  %2406 = lshr i64 %1, 1
  %2407 = lshr i64 %1, 2
  %2408 = sub nuw nsw i64 %2406, %2407
  %2409 = sub nuw i64 %1, %2406
  %2410 = lshr i64 %2409, 1
  %2411 = sub nuw i64 %2409, %2410
  %2412 = shl nuw i64 %2407, 3
  %2413 = getelementptr inbounds i8, ptr %88, i64 %2412
  %2414 = shl nuw i64 %2406, 3
  %2415 = getelementptr inbounds i8, ptr %88, i64 %2414
  %2416 = add nuw i64 %2410, %2406
  %2417 = shl nuw i64 %2416, 3
  %2418 = getelementptr inbounds i8, ptr %88, i64 %2417
  %2419 = icmp ult i64 %2407, %2408
  br i1 %2419, label %2422, label %2420

2420:                                             ; preds = %2422, %2405
  %.0234.i.i172 = phi i64 [ %2428, %2422 ], [ 0, %2405 ]
  %.0210.i.i173 = phi ptr [ %2423, %2422 ], [ %2413, %2405 ]
  %2421 = icmp ult i64 %2407, %2410
  br i1 %2421, label %2431, label %2429

2422:                                             ; preds = %2405
  %2423 = getelementptr inbounds i8, ptr %2413, i64 8
  %2424 = load ptr, ptr %2413, align 8
  %2425 = load ptr, ptr %2423, align 8
  %2426 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2424, ptr align 1 %2425) #15
  %2427 = icmp eq i8 %2426, 1
  %2428 = zext i1 %2427 to i64
  br label %2420

2429:                                             ; preds = %2431, %2420
  %.0241.i.i174 = phi i64 [ %2437, %2431 ], [ 0, %2420 ]
  %.0214.i.i175 = phi ptr [ %2432, %2431 ], [ %2415, %2420 ]
  %2430 = icmp ult i64 %2407, %2411
  br i1 %2430, label %2440, label %2438

2431:                                             ; preds = %2420
  %2432 = getelementptr inbounds i8, ptr %2415, i64 8
  %2433 = load ptr, ptr %2415, align 8
  %2434 = load ptr, ptr %2432, align 8
  %2435 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2433, ptr align 1 %2434) #15
  %2436 = icmp eq i8 %2435, 1
  %2437 = zext i1 %2436 to i64
  br label %2429

2438:                                             ; preds = %2440, %2429
  %.0248.i.i176 = phi i64 [ %2446, %2440 ], [ 0, %2429 ]
  %.0219.i.i177 = phi ptr [ %2441, %2440 ], [ %2418, %2429 ]
  %2439 = icmp ugt i64 %1, 132
  br i1 %2439, label %.preheader89.i.i.preheader, label %.preheader.i.i192

.preheader89.i.i.preheader:                       ; preds = %2438
  br label %.preheader89.i.i

2440:                                             ; preds = %2429
  %2441 = getelementptr inbounds i8, ptr %2418, i64 8
  %2442 = load ptr, ptr %2418, align 8
  %2443 = load ptr, ptr %2441, align 8
  %2444 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2442, ptr align 1 %2443) #15
  %2445 = icmp eq i8 %2444, 1
  %2446 = zext i1 %2445 to i64
  br label %2438

.preheader89.i.i:                                 ; preds = %.critedge.i.i204, %.preheader89.i.i.preheader
  %.0111.i.i178 = phi ptr [ %.2.i.i203, %.critedge.i.i204 ], [ %88, %.preheader89.i.i.preheader ]
  %.1211110.i.i = phi ptr [ %.3213.i.i202, %.critedge.i.i204 ], [ %.0210.i.i173, %.preheader89.i.i.preheader ]
  %.1215109.i.i = phi ptr [ %.3217.i.i201, %.critedge.i.i204 ], [ %.0214.i.i175, %.preheader89.i.i.preheader ]
  %.1220108.i.i = phi ptr [ %.3222.i.i200, %.critedge.i.i204 ], [ %.0219.i.i177, %.preheader89.i.i.preheader ]
  %.0224107.i.i = phi i32 [ %2479, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0225106.i.i = phi i32 [ %2485, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0226105.i.i = phi i32 [ %2491, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0227104.i.i = phi i32 [ %2497, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.0228103.i.i = phi i64 [ %.1229.i.i199, %.critedge.i.i204 ], [ 0, %.preheader89.i.i.preheader ]
  %.1235102.i.i = phi i64 [ %.2236.i.i198, %.critedge.i.i204 ], [ %.0234.i.i172, %.preheader89.i.i.preheader ]
  %.1242101.i.i = phi i64 [ %.2243.i.i197, %.critedge.i.i204 ], [ %.0241.i.i174, %.preheader89.i.i.preheader ]
  %.1249100.i.i = phi i64 [ %.2250.i.i196, %.critedge.i.i204 ], [ %.0248.i.i176, %.preheader89.i.i.preheader ]
  %.025499.i.i = phi i64 [ %2499, %.critedge.i.i204 ], [ %1, %.preheader89.i.i.preheader ]
  br label %2448

.preheader.i.i192:                                ; preds = %.critedge.i.i204, %2438
  %.0254.lcssa.i.i179 = phi i64 [ %1, %2438 ], [ %2499, %.critedge.i.i204 ]
  %.1249.lcssa.i.i180 = phi i64 [ %.0248.i.i176, %2438 ], [ %.2250.i.i196, %.critedge.i.i204 ]
  %.1242.lcssa.i.i181 = phi i64 [ %.0241.i.i174, %2438 ], [ %.2243.i.i197, %.critedge.i.i204 ]
  %.1235.lcssa.i.i182 = phi i64 [ %.0234.i.i172, %2438 ], [ %.2236.i.i198, %.critedge.i.i204 ]
  %.0228.lcssa.i.i183 = phi i64 [ 0, %2438 ], [ %.1229.i.i199, %.critedge.i.i204 ]
  %.0227.lcssa.i.i184 = phi i32 [ 0, %2438 ], [ %2497, %.critedge.i.i204 ]
  %.0226.lcssa.i.i185 = phi i32 [ 0, %2438 ], [ %2491, %.critedge.i.i204 ]
  %.0225.lcssa.i.i186 = phi i32 [ 0, %2438 ], [ %2485, %.critedge.i.i204 ]
  %.0224.lcssa.i.i187 = phi i32 [ 0, %2438 ], [ %2479, %.critedge.i.i204 ]
  %.1220.lcssa.i.i188 = phi ptr [ %.0219.i.i177, %2438 ], [ %.3222.i.i200, %.critedge.i.i204 ]
  %.1215.lcssa.i.i189 = phi ptr [ %.0214.i.i175, %2438 ], [ %.3217.i.i201, %.critedge.i.i204 ]
  %.1211.lcssa.i.i190 = phi ptr [ %.0210.i.i173, %2438 ], [ %.3213.i.i202, %.critedge.i.i204 ]
  %.0.lcssa.i.i191 = phi ptr [ %88, %2438 ], [ %.2.i.i203, %.critedge.i.i204 ]
  %2447 = icmp ugt i64 %.0254.lcssa.i.i179, 7
  br i1 %2447, label %.lr.ph.i.i208.preheader, label %._crit_edge.i.i217

.lr.ph.i.i208.preheader:                          ; preds = %.preheader.i.i192
  br label %.lr.ph.i.i208

2448:                                             ; preds = %2448, %.preheader89.i.i
  %lsr.iv3580 = phi i64 [ %lsr.iv.next3581, %2448 ], [ 0, %.preheader89.i.i ]
  %.025794.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2454, %2448 ]
  %.025893.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2460, %2448 ]
  %.025992.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2466, %2448 ]
  %.026091.i.i = phi i8 [ 0, %.preheader89.i.i ], [ %2472, %2448 ]
  %uglygep3584 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv3580
  %uglygep3590 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv3580
  %uglygep3597 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv3580
  %uglygep3601 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv3580
  %uglygep3585 = getelementptr i8, ptr %uglygep3584, i64 8
  %2449 = load ptr, ptr %uglygep3584, align 8
  %2450 = load ptr, ptr %uglygep3585, align 8
  %2451 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2449, ptr align 1 %2450) #15
  %2452 = icmp eq i8 %2451, 1
  %2453 = zext i1 %2452 to i8
  %2454 = add nuw i8 %.025794.i.i, %2453
  %uglygep3591 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv3580
  %uglygep3592 = getelementptr i8, ptr %uglygep3591, i64 8
  %2455 = load ptr, ptr %uglygep3590, align 8
  %2456 = load ptr, ptr %uglygep3592, align 8
  %2457 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2455, ptr align 1 %2456) #15
  %2458 = icmp eq i8 %2457, 1
  %2459 = zext i1 %2458 to i8
  %2460 = add nuw i8 %.025893.i.i, %2459
  %uglygep3598 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv3580
  %uglygep3599 = getelementptr i8, ptr %uglygep3598, i64 8
  %2461 = load ptr, ptr %uglygep3597, align 8
  %2462 = load ptr, ptr %uglygep3599, align 8
  %2463 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2461, ptr align 1 %2462) #15
  %2464 = icmp eq i8 %2463, 1
  %2465 = zext i1 %2464 to i8
  %2466 = add nuw i8 %.025992.i.i, %2465
  %uglygep3602 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv3580
  %uglygep3603 = getelementptr i8, ptr %uglygep3602, i64 8
  %2467 = load ptr, ptr %uglygep3601, align 8
  %2468 = load ptr, ptr %uglygep3603, align 8
  %2469 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2467, ptr align 1 %2468) #15
  %2470 = icmp eq i8 %2469, 1
  %2471 = zext i1 %2470 to i8
  %2472 = add nuw i8 %.026091.i.i, %2471
  %lsr.iv.next3581 = add nuw nsw i64 %lsr.iv3580, 8
  %exitcond.not.i.i194 = icmp eq i64 %lsr.iv.next3581, 256
  br i1 %exitcond.not.i.i194, label %2473, label %2448

2473:                                             ; preds = %2448
  %2474 = zext i8 %2454 to i64
  %2475 = add nuw i64 %.0228103.i.i, %2474
  %2476 = and i8 %2454, -33
  %2477 = icmp eq i8 %2476, 0
  %2478 = zext i1 %2477 to i32
  %2479 = add nuw i32 %.0224107.i.i, %2478
  %2480 = zext i8 %2460 to i64
  %2481 = add nuw i64 %.1235102.i.i, %2480
  %2482 = and i8 %2460, -33
  %2483 = icmp eq i8 %2482, 0
  %2484 = zext i1 %2483 to i32
  %2485 = add nuw i32 %.0225106.i.i, %2484
  %2486 = zext i8 %2466 to i64
  %2487 = add nuw i64 %.1242101.i.i, %2486
  %2488 = and i8 %2466, -33
  %2489 = icmp eq i8 %2488, 0
  %2490 = zext i1 %2489 to i32
  %2491 = add nuw i32 %.0226105.i.i, %2490
  %2492 = zext i8 %2472 to i64
  %2493 = add nuw i64 %.1249100.i.i, %2492
  %2494 = and i8 %2472, -33
  %2495 = icmp eq i8 %2494, 0
  %2496 = zext i1 %2495 to i32
  %2497 = add nuw i32 %.0227104.i.i, %2496
  %2498 = icmp ugt i64 %.025499.i.i, 516
  %uglygep3586 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv.next3581
  %uglygep3593 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv.next3581
  %uglygep3594 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv.next3581
  %uglygep3600 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv.next3581
  br i1 %2498, label %2501, label %.critedge.i.i204

.critedge.i.i204:                                 ; preds = %2512, %2501, %2473
  %.1255.i.i195 = phi i64 [ %2517, %2512 ], [ %.025499.i.i, %2473 ], [ %.025499.i.i, %2501 ]
  %.2250.i.i196 = phi i64 [ %2516, %2512 ], [ %2493, %2473 ], [ %2493, %2501 ]
  %.2243.i.i197 = phi i64 [ %2515, %2512 ], [ %2487, %2473 ], [ %2487, %2501 ]
  %.2236.i.i198 = phi i64 [ %2514, %2512 ], [ %2481, %2473 ], [ %2481, %2501 ]
  %.1229.i.i199 = phi i64 [ %2513, %2512 ], [ %2475, %2473 ], [ %2475, %2501 ]
  %.3222.i.i200 = phi ptr [ %uglygep3605, %2512 ], [ %uglygep3594, %2473 ], [ %uglygep3594, %2501 ]
  %.3217.i.i201 = phi ptr [ %uglygep3596, %2512 ], [ %uglygep3600, %2473 ], [ %uglygep3600, %2501 ]
  %.3213.i.i202 = phi ptr [ %uglygep3589, %2512 ], [ %uglygep3593, %2473 ], [ %uglygep3593, %2501 ]
  %.2.i.i203 = phi ptr [ %uglygep3583, %2512 ], [ %uglygep3586, %2473 ], [ %uglygep3586, %2501 ]
  %2499 = add i64 %.1255.i.i195, -128
  %2500 = icmp ugt i64 %2499, 132
  br i1 %2500, label %.preheader89.i.i, label %.preheader.i.i192

2501:                                             ; preds = %2473
  %2502 = icmp eq i8 %2494, 0
  %2503 = icmp eq i8 %2488, 0
  %2504 = icmp eq i8 %2482, 0
  %2505 = icmp eq i8 %2476, 0
  %.neg.i.i205 = sext i1 %2502 to i8
  %2506 = zext i1 %2503 to i8
  %2507 = zext i1 %2504 to i8
  %2508 = zext i1 %2505 to i8
  %2509 = add nuw nsw i8 %2507, %2508
  %2510 = add nuw nsw i8 %2509, %2506
  %2511 = icmp eq i8 %2510, %.neg.i.i205
  br i1 %2511, label %2512, label %.critedge.i.i204

2512:                                             ; preds = %2501
  %2513 = add nuw i64 %2475, 48
  %uglygep3582 = getelementptr i8, ptr %.0111.i.i178, i64 %lsr.iv.next3581
  %uglygep3583 = getelementptr i8, ptr %uglygep3582, i64 768
  %2514 = add nuw i64 %2481, 48
  %uglygep3588 = getelementptr i8, ptr %.1211110.i.i, i64 %lsr.iv.next3581
  %uglygep3589 = getelementptr i8, ptr %uglygep3588, i64 768
  %2515 = add nuw i64 %2487, 48
  %uglygep3595 = getelementptr i8, ptr %.1215109.i.i, i64 %lsr.iv.next3581
  %uglygep3596 = getelementptr i8, ptr %uglygep3595, i64 768
  %2516 = add nuw i64 %2493, 48
  %uglygep3604 = getelementptr i8, ptr %.1220108.i.i, i64 %lsr.iv.next3581
  %uglygep3605 = getelementptr i8, ptr %uglygep3604, i64 768
  %2517 = add i64 %.025499.i.i, -384
  br label %.critedge.i.i204

.lr.ph.i.i208:                                    ; preds = %.lr.ph.i.i208, %.lr.ph.i.i208.preheader
  %.3132.i.i206 = phi ptr [ %2518, %.lr.ph.i.i208 ], [ %.0.lcssa.i.i191, %.lr.ph.i.i208.preheader ]
  %.4131.i.i207 = phi ptr [ %2525, %.lr.ph.i.i208 ], [ %.1211.lcssa.i.i190, %.lr.ph.i.i208.preheader ]
  %.4218130.i.i = phi ptr [ %2532, %.lr.ph.i.i208 ], [ %.1215.lcssa.i.i189, %.lr.ph.i.i208.preheader ]
  %.4223129.i.i = phi ptr [ %2539, %.lr.ph.i.i208 ], [ %.1220.lcssa.i.i188, %.lr.ph.i.i208.preheader ]
  %.2230128.i.i = phi i64 [ %2524, %.lr.ph.i.i208 ], [ %.0228.lcssa.i.i183, %.lr.ph.i.i208.preheader ]
  %.3237127.i.i = phi i64 [ %2531, %.lr.ph.i.i208 ], [ %.1235.lcssa.i.i182, %.lr.ph.i.i208.preheader ]
  %.3244126.i.i = phi i64 [ %2538, %.lr.ph.i.i208 ], [ %.1242.lcssa.i.i181, %.lr.ph.i.i208.preheader ]
  %.3251125.i.i = phi i64 [ %2545, %.lr.ph.i.i208 ], [ %.1249.lcssa.i.i180, %.lr.ph.i.i208.preheader ]
  %.2256124.i.i = phi i64 [ %2546, %.lr.ph.i.i208 ], [ %.0254.lcssa.i.i179, %.lr.ph.i.i208.preheader ]
  %2518 = getelementptr inbounds i8, ptr %.3132.i.i206, i64 8
  %2519 = load ptr, ptr %.3132.i.i206, align 8
  %2520 = load ptr, ptr %2518, align 8
  %2521 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2519, ptr align 1 %2520) #15
  %2522 = icmp eq i8 %2521, 1
  %2523 = zext i1 %2522 to i64
  %2524 = add nuw i64 %.2230128.i.i, %2523
  %2525 = getelementptr inbounds i8, ptr %.4131.i.i207, i64 8
  %2526 = load ptr, ptr %.4131.i.i207, align 8
  %2527 = load ptr, ptr %2525, align 8
  %2528 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2526, ptr align 1 %2527) #15
  %2529 = icmp eq i8 %2528, 1
  %2530 = zext i1 %2529 to i64
  %2531 = add nuw i64 %.3237127.i.i, %2530
  %2532 = getelementptr inbounds i8, ptr %.4218130.i.i, i64 8
  %2533 = load ptr, ptr %.4218130.i.i, align 8
  %2534 = load ptr, ptr %2532, align 8
  %2535 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2533, ptr align 1 %2534) #15
  %2536 = icmp eq i8 %2535, 1
  %2537 = zext i1 %2536 to i64
  %2538 = add nuw i64 %.3244126.i.i, %2537
  %2539 = getelementptr inbounds i8, ptr %.4223129.i.i, i64 8
  %2540 = load ptr, ptr %.4223129.i.i, align 8
  %2541 = load ptr, ptr %2539, align 8
  %2542 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2540, ptr align 1 %2541) #15
  %2543 = icmp eq i8 %2542, 1
  %2544 = zext i1 %2543 to i64
  %2545 = add nuw i64 %.3251125.i.i, %2544
  %2546 = add i64 %.2256124.i.i, -4
  %2547 = icmp ugt i64 %2546, 7
  br i1 %2547, label %.lr.ph.i.i208, label %._crit_edge.i.i217

._crit_edge.i.i217:                               ; preds = %.lr.ph.i.i208, %.preheader.i.i192
  %.3251.lcssa.i.i209 = phi i64 [ %.1249.lcssa.i.i180, %.preheader.i.i192 ], [ %2545, %.lr.ph.i.i208 ]
  %.3244.lcssa.i.i210 = phi i64 [ %.1242.lcssa.i.i181, %.preheader.i.i192 ], [ %2538, %.lr.ph.i.i208 ]
  %.3237.lcssa.i.i211 = phi i64 [ %.1235.lcssa.i.i182, %.preheader.i.i192 ], [ %2531, %.lr.ph.i.i208 ]
  %.2230.lcssa.i.i212 = phi i64 [ %.0228.lcssa.i.i183, %.preheader.i.i192 ], [ %2524, %.lr.ph.i.i208 ]
  %.4223.lcssa.i.i213 = phi ptr [ %.1220.lcssa.i.i188, %.preheader.i.i192 ], [ %2539, %.lr.ph.i.i208 ]
  %.4218.lcssa.i.i214 = phi ptr [ %.1215.lcssa.i.i189, %.preheader.i.i192 ], [ %2532, %.lr.ph.i.i208 ]
  %.4.lcssa.i.i215 = phi ptr [ %.1211.lcssa.i.i190, %.preheader.i.i192 ], [ %2525, %.lr.ph.i.i208 ]
  %.3.lcssa.i.i216 = phi ptr [ %.0.lcssa.i.i191, %.preheader.i.i192 ], [ %2518, %.lr.ph.i.i208 ]
  %2548 = add i64 %.3237.lcssa.i.i211, %.3244.lcssa.i.i210
  %2549 = add i64 %2548, %.2230.lcssa.i.i212
  %2550 = sub i64 0, %.3251.lcssa.i.i209
  %2551 = icmp eq i64 %2549, %2550
  br i1 %2551, label %2560, label %.critedge2.i.i221

.critedge2.i.i221:                                ; preds = %2570, %2565, %2560, %._crit_edge.i.i217
  %2552 = sub nuw i64 %2407, %.2230.lcssa.i.i212
  %2553 = icmp eq i64 %2552, 1
  %2554 = sub nuw i64 %2408, %.3237.lcssa.i.i211
  %2555 = icmp eq i64 %2554, 1
  %2556 = sub nuw i64 %2410, %.3244.lcssa.i.i210
  %2557 = icmp eq i64 %2556, 1
  %2558 = sub nuw i64 %2411, %.3251.lcssa.i.i209
  %2559 = icmp eq i64 %2558, 1
  %..i.i218 = select i1 %2553, i1 true, i1 %2555
  %.5.i.i219 = select i1 %..i.i218, i1 true, i1 %2557
  %.6.i.i220 = select i1 %.5.i.i219, i1 true, i1 %2559
  br i1 %.6.i.i220, label %2589, label %sort.quad_reversal.exit399.i.i229

2560:                                             ; preds = %._crit_edge.i.i217
  %2561 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %2562 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %2563 = load ptr, ptr %2561, align 8
  %2564 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2562, ptr align 1 %2563) #15
  %.not287.i.i222 = icmp eq i8 %2564, 1
  br i1 %.not287.i.i222, label %.critedge2.i.i221, label %2565

2565:                                             ; preds = %2560
  %2566 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %2567 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %2568 = load ptr, ptr %2566, align 8
  %2569 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2567, ptr align 1 %2568) #15
  %.not288.i.i223 = icmp eq i8 %2569, 1
  br i1 %.not288.i.i223, label %.critedge2.i.i221, label %2570

2570:                                             ; preds = %2565
  %2571 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %2572 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %2573 = load ptr, ptr %2571, align 8
  %2574 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2572, ptr align 1 %2573) #15
  %.not289.i.i224 = icmp eq i8 %2574, 1
  br i1 %.not289.i.i224, label %.critedge2.i.i221, label %sort.flux_analyze__anon_14348.exit.i

sort.quad_reversal.exit399.i.i229:                ; preds = %.lr.ph212.i.i, %middle.block1523, %._crit_edge.i390.i.i, %sort.quad_reversal.exit389.i.i, %.lr.ph164.i.i, %middle.block955, %._crit_edge.i330.i.i, %.critedge2.i.i221
  %.4252.i.i225 = phi i64 [ %.5253627178.i.i, %sort.quad_reversal.exit389.i.i ], [ %.3251.lcssa.i.i209, %.critedge2.i.i221 ], [ 0, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ 0, %middle.block1523 ], [ 0, %middle.block955 ], [ 0, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.4245.i.i226 = phi i64 [ %.6247.i.i248, %sort.quad_reversal.exit389.i.i ], [ %.3244.lcssa.i.i210, %.critedge2.i.i221 ], [ %.6247.i.i248, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.6247.i.i248, %middle.block1523 ], [ 0, %middle.block955 ], [ %.6247.i.i248, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.4238.i.i227 = phi i64 [ %.624079.i.i, %sort.quad_reversal.exit389.i.i ], [ %.3237.lcssa.i.i211, %.critedge2.i.i221 ], [ %.624079.i.i, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.624079.i.i, %middle.block1523 ], [ 0, %middle.block955 ], [ %.624079.i.i, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %.3231.i.i228 = phi i64 [ %.52337277.i.i, %sort.quad_reversal.exit389.i.i ], [ %.2230.lcssa.i.i212, %.critedge2.i.i221 ], [ %.52337277.i.i, %._crit_edge.i390.i.i ], [ 0, %._crit_edge.i330.i.i ], [ %.52337277.i.i, %middle.block1523 ], [ 0, %middle.block955 ], [ %.52337277.i.i, %.lr.ph212.i.i ], [ 0, %.lr.ph164.i.i ]
  %const = bitcast i64 1048579 to i64
  %2575 = lshr i64 %1, 9
  %2576 = zext i32 %.0224.lcssa.i.i187 to i64
  %2577 = icmp ult i64 %2575, %2576
  %2578 = zext i1 %2577 to i4
  %2579 = zext i32 %.0225.lcssa.i.i186 to i64
  %2580 = icmp ult i64 %2575, %2579
  %2581 = zext i1 %2580 to i4
  %2582 = zext i32 %.0226.lcssa.i.i185 to i64
  %2583 = icmp ult i64 %2575, %2582
  %2584 = zext i1 %2583 to i4
  %2585 = zext i32 %.0227.lcssa.i.i184 to i64
  %2586 = icmp ult i64 %2575, %2585
  %2587 = zext i1 %2586 to i4
  %2588 = icmp ugt i64 %1, %const
  br i1 %2588, label %3189, label %3181

2589:                                             ; preds = %.critedge2.i.i221
  %2590 = icmp eq i64 %2558, 1
  %2591 = icmp eq i64 %2556, 1
  %2592 = icmp eq i64 %2554, 1
  %2593 = icmp eq i64 %2552, 1
  %.7.i.i230 = select i1 %2593, i1 %2592, i1 false
  %2594 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %2595 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %2596 = load ptr, ptr %2594, align 8
  %2597 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2595, ptr align 1 %2596) #15
  %2598 = icmp eq i8 %2597, 1
  %2599 = and i1 %.7.i.i230, %2598
  %2600 = zext i1 %2599 to i3
  %.8.i.i231 = select i1 %2592, i1 %2591, i1 false
  %2601 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %2602 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %2603 = load ptr, ptr %2601, align 8
  %2604 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2602, ptr align 1 %2603) #15
  %2605 = icmp eq i8 %2604, 1
  %2606 = and i1 %.8.i.i231, %2605
  %.9.i.i232 = select i1 %2591, i1 %2590, i1 false
  %2607 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %2608 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %2609 = load ptr, ptr %2607, align 8
  %2610 = tail call i8 %2(ptr align 1 %3, ptr align 1 %2608, ptr align 1 %2609) #15
  %2611 = icmp eq i8 %2610, 1
  %2612 = and i1 %.9.i.i232, %2611
  %2613 = select i1 %2606, i3 2, i3 0
  %2614 = or i3 %2613, %2600
  %2615 = select i1 %2612, i3 -4, i3 0
  %2616 = or i3 %2614, %2615
  %2617 = zext i3 %2616 to i32
  switch i32 %2617, label %2621 [
    i32 0, label %sort.quad_reversal.exit299.i.i
    i32 1, label %2622
    i32 2, label %2667
    i32 3, label %2714
    i32 4, label %2759
    i32 5, label %2806
    i32 6, label %2897
    i32 7, label %2944
  ]

sort.quad_reversal.exit299.i.i:                   ; preds = %.lr.ph152.i.i, %middle.block813, %._crit_edge.i340.i.i, %.lr.ph170.i.i, %middle.block1026, %._crit_edge.i310.i.i, %.lr.ph182.i.i, %middle.block1168, %._crit_edge.i290.i.i, %2589
  %.5253.i.i233 = phi i64 [ %.3251.lcssa.i.i209, %2589 ], [ %.3251.lcssa.i.i209, %._crit_edge.i290.i.i ], [ 0, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ %.3251.lcssa.i.i209, %middle.block1168 ], [ 0, %middle.block1026 ], [ 0, %middle.block813 ], [ %.3251.lcssa.i.i209, %.lr.ph182.i.i ], [ 0, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %.5246.i.i234 = phi i64 [ %.3244.lcssa.i.i210, %2589 ], [ 0, %._crit_edge.i290.i.i ], [ 0, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ 0, %middle.block1168 ], [ 0, %middle.block1026 ], [ 0, %middle.block813 ], [ 0, %.lr.ph182.i.i ], [ 0, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %.5239.i.i235 = phi i64 [ %.3237.lcssa.i.i211, %2589 ], [ 0, %._crit_edge.i290.i.i ], [ %.3237.lcssa.i.i211, %._crit_edge.i310.i.i ], [ 0, %._crit_edge.i340.i.i ], [ 0, %middle.block1168 ], [ %.3237.lcssa.i.i211, %middle.block1026 ], [ 0, %middle.block813 ], [ 0, %.lr.ph182.i.i ], [ %.3237.lcssa.i.i211, %.lr.ph170.i.i ], [ 0, %.lr.ph152.i.i ]
  %2618 = icmp eq i64 %2552, 1
  %2619 = icmp ne i64 %.2230.lcssa.i.i212, 0
  %2620 = and i1 %2619, %2618
  br i1 %2620, label %2992, label %sort.quad_reversal.exit369.i.i

2621:                                             ; preds = %2589
  unreachable

2622:                                             ; preds = %2589
  %2623 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %2624 = ptrtoint ptr %88 to i64
  %2625 = sub nuw i64 %2623, %2624
  %2626 = lshr i64 %2625, 4
  %2627 = shl nuw nsw i64 %2626, 3
  %2628 = getelementptr inbounds i8, ptr %88, i64 %2627
  %2629 = sub nsw i64 0, %2627
  %2630 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %2629
  %2631 = and i64 %2625, 16
  %2632 = icmp eq i64 %2631, 0
  br i1 %2632, label %2655, label %._crit_edge.i.i.i239

._crit_edge.i.i.i239:                             ; preds = %2655, %2622
  %.027.i.i.i236 = phi ptr [ %2659, %2655 ], [ %2630, %2622 ]
  %.025.i.i.i237 = phi ptr [ %2658, %2655 ], [ %2628, %2622 ]
  %.0.i.i.i238 = phi i64 [ %2660, %2655 ], [ %2626, %2622 ]
  %2633 = load i64, ptr %88, align 8
  %2634 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %2634, ptr %88, align 8
  store i64 %2633, ptr %.4.lcssa.i.i215, align 8
  %2635 = load i64, ptr %.025.i.i.i237, align 8
  %2636 = load i64, ptr %.027.i.i.i236, align 8
  store i64 %2636, ptr %.025.i.i.i237, align 8
  store i64 %2635, ptr %.027.i.i.i236, align 8
  %2637 = icmp ult i64 %.0.i.i.i238, 2
  br i1 %2637, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.preheader.i.i

.lr.ph188.preheader.i.i:                          ; preds = %._crit_edge.i.i.i239
  %2638 = lshr i64 %.0.i.i.i238, 1
  %min.iters.check1241 = icmp ult i64 %.0.i.i.i238, 48
  br i1 %min.iters.check1241, label %.lr.ph188.i.i.preheader, label %vector.scevcheck1200

vector.scevcheck1200:                             ; preds = %.lr.ph188.preheader.i.i
  %2639 = add nsw i64 %2638, -1
  %uglygep1201 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result1203.neg = mul i64 %2639, -8
  %2640 = getelementptr i8, ptr %uglygep1201, i64 %mul.result1203.neg
  %2641 = icmp ugt ptr %2640, %uglygep1201
  %uglygep1205 = getelementptr i8, ptr %.025.i.i.i237, i64 -8
  %mul.result1207.neg = mul i64 %2639, -8
  %mul.overflow1208 = icmp ugt i64 %2639, 2305843009213693951
  %2642 = getelementptr i8, ptr %uglygep1205, i64 %mul.result1207.neg
  %2643 = icmp ugt ptr %2642, %uglygep1205
  %2644 = or i1 %2643, %mul.overflow1208
  %2645 = or i1 %2641, %2644
  br i1 %2645, label %.lr.ph188.i.i.preheader, label %vector.memcheck1209

vector.memcheck1209:                              ; preds = %vector.scevcheck1200
  %uglygep1210 = getelementptr i8, ptr %88, i64 8
  %2646 = shl i64 %2638, 3
  %2647 = add i64 %2646, 8
  %uglygep1211 = getelementptr i8, ptr %88, i64 %2647
  %uglygep1212 = getelementptr i8, ptr %.027.i.i.i236, i64 8
  %uglygep1213 = getelementptr i8, ptr %.027.i.i.i236, i64 %2647
  %2648 = mul i64 %2638, -8
  %uglygep1214 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2648
  %uglygep1215 = getelementptr i8, ptr %.025.i.i.i237, i64 %2648
  %bound01216 = icmp ult ptr %uglygep1210, %uglygep1213
  %bound11217 = icmp ult ptr %uglygep1212, %uglygep1211
  %found.conflict1218 = and i1 %bound01216, %bound11217
  %bound01219 = icmp ult ptr %uglygep1210, %.4.lcssa.i.i215
  %bound11220 = icmp ult ptr %uglygep1214, %uglygep1211
  %found.conflict1221 = and i1 %bound01219, %bound11220
  %conflict.rdx1222 = or i1 %found.conflict1218, %found.conflict1221
  %bound01223 = icmp ult ptr %uglygep1210, %.025.i.i.i237
  %bound11224 = icmp ult ptr %uglygep1215, %uglygep1211
  %found.conflict1225 = and i1 %bound01223, %bound11224
  %conflict.rdx1226 = or i1 %conflict.rdx1222, %found.conflict1225
  %bound01227 = icmp ult ptr %uglygep1212, %.4.lcssa.i.i215
  %bound11228 = icmp ult ptr %uglygep1214, %uglygep1213
  %found.conflict1229 = and i1 %bound01227, %bound11228
  %conflict.rdx1230 = or i1 %conflict.rdx1226, %found.conflict1229
  %bound01231 = icmp ult ptr %uglygep1212, %.025.i.i.i237
  %bound11232 = icmp ult ptr %uglygep1215, %uglygep1213
  %found.conflict1233 = and i1 %bound01231, %bound11232
  %conflict.rdx1234 = or i1 %conflict.rdx1230, %found.conflict1233
  %bound01235 = icmp ult ptr %uglygep1214, %.025.i.i.i237
  %bound11236 = icmp ult ptr %uglygep1215, %.4.lcssa.i.i215
  %found.conflict1237 = and i1 %bound01235, %bound11236
  %conflict.rdx1238 = or i1 %conflict.rdx1234, %found.conflict1237
  br i1 %conflict.rdx1238, label %.lr.ph188.i.i.preheader, label %vector.ph1242

vector.ph1242:                                    ; preds = %vector.memcheck1209
  %2649 = lshr i64 %.0.i.i.i238, 1
  %n.vec1244 = and i64 %2638, 9223372036854775806
  %ind.end1245 = and i64 %2649, 1
  %2650 = shl i64 %n.vec1244, 3
  %ind.end1247 = getelementptr i8, ptr %88, i64 %2650
  %2651 = mul i64 %n.vec1244, -8
  %ind.end1249 = getelementptr i8, ptr %.025.i.i.i237, i64 %2651
  %2652 = shl i64 %n.vec1244, 3
  %ind.end1251 = getelementptr i8, ptr %.027.i.i.i236, i64 %2652
  %2653 = mul i64 %n.vec1244, -8
  %ind.end1253 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2653
  %next.gep12582465 = getelementptr i8, ptr %88, i64 8
  %next.gep12602462 = getelementptr i8, ptr %.027.i.i.i236, i64 8
  %uglygep3400 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -16
  %uglygep3405 = getelementptr i8, ptr %.025.i.i.i237, i64 -16
  br label %vector.body1256

vector.body1256:                                  ; preds = %vector.body1256, %vector.ph1242
  %lsr.iv3410 = phi i64 [ %lsr.iv.next3411, %vector.body1256 ], [ %n.vec1244, %vector.ph1242 ]
  %lsr.iv3408 = phi ptr [ %uglygep3409, %vector.body1256 ], [ %next.gep12582465, %vector.ph1242 ]
  %lsr.iv3406 = phi ptr [ %uglygep3407, %vector.body1256 ], [ %uglygep3405, %vector.ph1242 ]
  %lsr.iv3403 = phi ptr [ %uglygep3404, %vector.body1256 ], [ %next.gep12602462, %vector.ph1242 ]
  %lsr.iv3401 = phi ptr [ %uglygep3402, %vector.body1256 ], [ %uglygep3400, %vector.ph1242 ]
  %wide.load1262 = load <2 x i64>, ptr %lsr.iv3408, align 8, !alias.scope !172, !noalias !175
  %wide.load1263 = load <2 x i64>, ptr %lsr.iv3401, align 8, !alias.scope !179, !noalias !180
  %reverse1264 = shufflevector <2 x i64> %wide.load1263, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1264, ptr %lsr.iv3408, align 8, !alias.scope !172, !noalias !175
  %reverse1265 = shufflevector <2 x i64> %wide.load1262, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1265, ptr %lsr.iv3401, align 8, !alias.scope !179, !noalias !180
  %wide.load1266 = load <2 x i64>, ptr %lsr.iv3406, align 8, !alias.scope !180
  %reverse1267 = shufflevector <2 x i64> %wide.load1266, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1268 = load <2 x i64>, ptr %lsr.iv3403, align 8, !alias.scope !181, !noalias !182
  %reverse1269 = shufflevector <2 x i64> %wide.load1268, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1269, ptr %lsr.iv3406, align 8, !alias.scope !180
  store <2 x i64> %reverse1267, ptr %lsr.iv3403, align 8, !alias.scope !181, !noalias !182
  %uglygep3402 = getelementptr i8, ptr %lsr.iv3401, i64 -16
  %uglygep3404 = getelementptr i8, ptr %lsr.iv3403, i64 16
  %uglygep3407 = getelementptr i8, ptr %lsr.iv3406, i64 -16
  %uglygep3409 = getelementptr i8, ptr %lsr.iv3408, i64 16
  %lsr.iv.next3411 = add nsw i64 %lsr.iv3410, -2
  %2654 = icmp eq i64 %lsr.iv.next3411, 0
  br i1 %2654, label %middle.block1239, label %vector.body1256, !llvm.loop !183

middle.block1239:                                 ; preds = %vector.body1256
  %cmp.n1255 = icmp eq i64 %2638, %n.vec1244
  br i1 %cmp.n1255, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.i.i.preheader

.lr.ph188.i.i.preheader:                          ; preds = %middle.block1239, %vector.memcheck1209, %vector.scevcheck1200, %.lr.ph188.preheader.i.i
  %.1.i187.i.i.ph = phi i64 [ %ind.end1245, %middle.block1239 ], [ %2638, %.lr.ph188.preheader.i.i ], [ %2638, %vector.scevcheck1200 ], [ %2638, %vector.memcheck1209 ]
  %.024.i186.i.i.ph = phi ptr [ %ind.end1247, %middle.block1239 ], [ %88, %.lr.ph188.preheader.i.i ], [ %88, %vector.scevcheck1200 ], [ %88, %vector.memcheck1209 ]
  %.126.i185.i.i.ph = phi ptr [ %ind.end1249, %middle.block1239 ], [ %.025.i.i.i237, %.lr.ph188.preheader.i.i ], [ %.025.i.i.i237, %vector.scevcheck1200 ], [ %.025.i.i.i237, %vector.memcheck1209 ]
  %.128.i184.i.i.ph = phi ptr [ %ind.end1251, %middle.block1239 ], [ %.027.i.i.i236, %.lr.ph188.preheader.i.i ], [ %.027.i.i.i236, %vector.scevcheck1200 ], [ %.027.i.i.i236, %vector.memcheck1209 ]
  %.029.i183.i.i.ph = phi ptr [ %ind.end1253, %middle.block1239 ], [ %.4.lcssa.i.i215, %.lr.ph188.preheader.i.i ], [ %.4.lcssa.i.i215, %vector.scevcheck1200 ], [ %.4.lcssa.i.i215, %vector.memcheck1209 ]
  %uglygep3388 = getelementptr i8, ptr %.024.i186.i.i.ph, i64 8
  %uglygep3391 = getelementptr i8, ptr %.126.i185.i.i.ph, i64 -8
  %uglygep3394 = getelementptr i8, ptr %.128.i184.i.i.ph, i64 8
  %uglygep3397 = getelementptr i8, ptr %.029.i183.i.i.ph, i64 -8
  br label %.lr.ph188.i.i

2655:                                             ; preds = %2622
  %2656 = load i64, ptr %2628, align 8
  %2657 = load i64, ptr %2630, align 8
  store i64 %2657, ptr %2628, align 8
  %2658 = getelementptr inbounds i8, ptr %2628, i64 -8
  store i64 %2656, ptr %2630, align 8
  %2659 = getelementptr inbounds i8, ptr %2630, i64 8
  %2660 = add nsw i64 %2626, -1
  br label %._crit_edge.i.i.i239

.lr.ph188.i.i:                                    ; preds = %.lr.ph188.i.i, %.lr.ph188.i.i.preheader
  %lsr.iv3398 = phi ptr [ %uglygep3397, %.lr.ph188.i.i.preheader ], [ %uglygep3399, %.lr.ph188.i.i ]
  %lsr.iv3395 = phi ptr [ %uglygep3394, %.lr.ph188.i.i.preheader ], [ %uglygep3396, %.lr.ph188.i.i ]
  %lsr.iv3392 = phi ptr [ %uglygep3391, %.lr.ph188.i.i.preheader ], [ %uglygep3393, %.lr.ph188.i.i ]
  %lsr.iv3389 = phi ptr [ %uglygep3388, %.lr.ph188.i.i.preheader ], [ %uglygep3390, %.lr.ph188.i.i ]
  %.1.i187.i.i = phi i64 [ %2661, %.lr.ph188.i.i ], [ %.1.i187.i.i.ph, %.lr.ph188.i.i.preheader ]
  %2661 = add nsw i64 %.1.i187.i.i, -1
  %2662 = load i64, ptr %lsr.iv3389, align 8
  %2663 = load i64, ptr %lsr.iv3398, align 8
  store i64 %2663, ptr %lsr.iv3389, align 8
  store i64 %2662, ptr %lsr.iv3398, align 8
  %2664 = load i64, ptr %lsr.iv3392, align 8
  %2665 = load i64, ptr %lsr.iv3395, align 8
  store i64 %2665, ptr %lsr.iv3392, align 8
  store i64 %2664, ptr %lsr.iv3395, align 8
  %uglygep3390 = getelementptr i8, ptr %lsr.iv3389, i64 8
  %uglygep3393 = getelementptr i8, ptr %lsr.iv3392, i64 -8
  %uglygep3396 = getelementptr i8, ptr %lsr.iv3395, i64 8
  %uglygep3399 = getelementptr i8, ptr %lsr.iv3398, i64 -8
  %2666 = icmp eq i64 %2661, 0
  br i1 %2666, label %sort.quad_reversal.exit379.i.i, label %.lr.ph188.i.i, !llvm.loop !184

2667:                                             ; preds = %2589
  %2668 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 1
  %2669 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %2670 = ptrtoint ptr %2668 to i64
  %2671 = sub nuw i64 %2669, %2670
  %2672 = lshr i64 %2671, 4
  %2673 = shl nuw nsw i64 %2672, 3
  %2674 = getelementptr inbounds i8, ptr %2668, i64 %2673
  %2675 = sub nsw i64 0, %2673
  %2676 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %2675
  %2677 = and i64 %2671, 16
  %2678 = icmp eq i64 %2677, 0
  br i1 %2678, label %2702, label %._crit_edge.i290.i.i

._crit_edge.i290.i.i:                             ; preds = %2702, %2667
  %.027.i291.i.i = phi ptr [ %2706, %2702 ], [ %2676, %2667 ]
  %.025.i292.i.i = phi ptr [ %2705, %2702 ], [ %2674, %2667 ]
  %.0.i293.i.i = phi i64 [ %2707, %2702 ], [ %2672, %2667 ]
  %2679 = load i64, ptr %2668, align 8
  %2680 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %2680, ptr %2668, align 8
  store i64 %2679, ptr %.4218.lcssa.i.i214, align 8
  %2681 = load i64, ptr %.025.i292.i.i, align 8
  %2682 = load i64, ptr %.027.i291.i.i, align 8
  store i64 %2682, ptr %.025.i292.i.i, align 8
  store i64 %2681, ptr %.027.i291.i.i, align 8
  %2683 = icmp ult i64 %.0.i293.i.i, 2
  br i1 %2683, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.preheader.i.i

.lr.ph182.preheader.i.i:                          ; preds = %._crit_edge.i290.i.i
  %2684 = lshr i64 %.0.i293.i.i, 1
  %min.iters.check1170 = icmp ult i64 %.0.i293.i.i, 48
  br i1 %min.iters.check1170, label %.lr.ph182.i.i.preheader, label %vector.scevcheck1129

vector.scevcheck1129:                             ; preds = %.lr.ph182.preheader.i.i
  %2685 = add nsw i64 %2684, -1
  %uglygep1130 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1132.neg = mul i64 %2685, -8
  %2686 = getelementptr i8, ptr %uglygep1130, i64 %mul.result1132.neg
  %2687 = icmp ugt ptr %2686, %uglygep1130
  %uglygep1134 = getelementptr i8, ptr %.025.i292.i.i, i64 -8
  %mul.result1136.neg = mul i64 %2685, -8
  %mul.overflow1137 = icmp ugt i64 %2685, 2305843009213693951
  %2688 = getelementptr i8, ptr %uglygep1134, i64 %mul.result1136.neg
  %2689 = icmp ugt ptr %2688, %uglygep1134
  %2690 = or i1 %2689, %mul.overflow1137
  %2691 = or i1 %2687, %2690
  br i1 %2691, label %.lr.ph182.i.i.preheader, label %vector.memcheck1138

vector.memcheck1138:                              ; preds = %vector.scevcheck1129
  %uglygep1139 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %2692 = shl i64 %2684, 3
  %2693 = add i64 %2692, 9
  %uglygep1140 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %2693
  %uglygep1141 = getelementptr i8, ptr %.027.i291.i.i, i64 8
  %2694 = add i64 %2692, 8
  %uglygep1142 = getelementptr i8, ptr %.027.i291.i.i, i64 %2694
  %2695 = mul i64 %2684, -8
  %uglygep1143 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %2695
  %uglygep1144 = getelementptr i8, ptr %.025.i292.i.i, i64 %2695
  %bound01145 = icmp ult ptr %uglygep1139, %uglygep1142
  %bound11146 = icmp ult ptr %uglygep1141, %uglygep1140
  %found.conflict1147 = and i1 %bound01145, %bound11146
  %bound01148 = icmp ult ptr %uglygep1139, %.4218.lcssa.i.i214
  %bound11149 = icmp ult ptr %uglygep1143, %uglygep1140
  %found.conflict1150 = and i1 %bound01148, %bound11149
  %conflict.rdx1151 = or i1 %found.conflict1147, %found.conflict1150
  %bound01152 = icmp ult ptr %uglygep1139, %.025.i292.i.i
  %bound11153 = icmp ult ptr %uglygep1144, %uglygep1140
  %found.conflict1154 = and i1 %bound01152, %bound11153
  %conflict.rdx1155 = or i1 %conflict.rdx1151, %found.conflict1154
  %bound01156 = icmp ult ptr %uglygep1141, %.4218.lcssa.i.i214
  %bound11157 = icmp ult ptr %uglygep1143, %uglygep1142
  %found.conflict1158 = and i1 %bound01156, %bound11157
  %conflict.rdx1159 = or i1 %conflict.rdx1155, %found.conflict1158
  %bound01160 = icmp ult ptr %uglygep1141, %.025.i292.i.i
  %bound11161 = icmp ult ptr %uglygep1144, %uglygep1142
  %found.conflict1162 = and i1 %bound01160, %bound11161
  %conflict.rdx1163 = or i1 %conflict.rdx1159, %found.conflict1162
  %bound01164 = icmp ult ptr %uglygep1143, %.025.i292.i.i
  %bound11165 = icmp ult ptr %uglygep1144, %.4218.lcssa.i.i214
  %found.conflict1166 = and i1 %bound01164, %bound11165
  %conflict.rdx1167 = or i1 %conflict.rdx1163, %found.conflict1166
  br i1 %conflict.rdx1167, label %.lr.ph182.i.i.preheader, label %vector.ph1171

vector.ph1171:                                    ; preds = %vector.memcheck1138
  %2696 = lshr i64 %.0.i293.i.i, 1
  %n.vec1173 = and i64 %2684, 9223372036854775806
  %ind.end1174 = and i64 %2696, 1
  %2697 = shl i64 %n.vec1173, 3
  %ind.end1176 = getelementptr i8, ptr %2668, i64 %2697
  %2698 = mul i64 %n.vec1173, -8
  %ind.end1178 = getelementptr i8, ptr %.025.i292.i.i, i64 %2698
  %2699 = shl i64 %n.vec1173, 3
  %ind.end1180 = getelementptr i8, ptr %.027.i291.i.i, i64 %2699
  %2700 = mul i64 %n.vec1173, -8
  %ind.end1182 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %2700
  %next.gep11872461 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %next.gep11892458 = getelementptr i8, ptr %.027.i291.i.i, i64 8
  %uglygep3424 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -16
  %uglygep3429 = getelementptr i8, ptr %.025.i292.i.i, i64 -16
  br label %vector.body1185

vector.body1185:                                  ; preds = %vector.body1185, %vector.ph1171
  %lsr.iv3434 = phi i64 [ %lsr.iv.next3435, %vector.body1185 ], [ %n.vec1173, %vector.ph1171 ]
  %lsr.iv3432 = phi ptr [ %uglygep3433, %vector.body1185 ], [ %next.gep11872461, %vector.ph1171 ]
  %lsr.iv3430 = phi ptr [ %uglygep3431, %vector.body1185 ], [ %uglygep3429, %vector.ph1171 ]
  %lsr.iv3427 = phi ptr [ %uglygep3428, %vector.body1185 ], [ %next.gep11892458, %vector.ph1171 ]
  %lsr.iv3425 = phi ptr [ %uglygep3426, %vector.body1185 ], [ %uglygep3424, %vector.ph1171 ]
  %wide.load1191 = load <2 x i64>, ptr %lsr.iv3432, align 8, !alias.scope !185, !noalias !188
  %wide.load1192 = load <2 x i64>, ptr %lsr.iv3425, align 8, !alias.scope !192, !noalias !193
  %reverse1193 = shufflevector <2 x i64> %wide.load1192, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1193, ptr %lsr.iv3432, align 8, !alias.scope !185, !noalias !188
  %reverse1194 = shufflevector <2 x i64> %wide.load1191, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1194, ptr %lsr.iv3425, align 8, !alias.scope !192, !noalias !193
  %wide.load1195 = load <2 x i64>, ptr %lsr.iv3430, align 8, !alias.scope !193
  %reverse1196 = shufflevector <2 x i64> %wide.load1195, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1197 = load <2 x i64>, ptr %lsr.iv3427, align 8, !alias.scope !194, !noalias !195
  %reverse1198 = shufflevector <2 x i64> %wide.load1197, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1198, ptr %lsr.iv3430, align 8, !alias.scope !193
  store <2 x i64> %reverse1196, ptr %lsr.iv3427, align 8, !alias.scope !194, !noalias !195
  %uglygep3426 = getelementptr i8, ptr %lsr.iv3425, i64 -16
  %uglygep3428 = getelementptr i8, ptr %lsr.iv3427, i64 16
  %uglygep3431 = getelementptr i8, ptr %lsr.iv3430, i64 -16
  %uglygep3433 = getelementptr i8, ptr %lsr.iv3432, i64 16
  %lsr.iv.next3435 = add nsw i64 %lsr.iv3434, -2
  %2701 = icmp eq i64 %lsr.iv.next3435, 0
  br i1 %2701, label %middle.block1168, label %vector.body1185, !llvm.loop !196

middle.block1168:                                 ; preds = %vector.body1185
  %cmp.n1184 = icmp eq i64 %2684, %n.vec1173
  br i1 %cmp.n1184, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.i.i.preheader

.lr.ph182.i.i.preheader:                          ; preds = %middle.block1168, %vector.memcheck1138, %vector.scevcheck1129, %.lr.ph182.preheader.i.i
  %.1.i298181.i.i.ph = phi i64 [ %ind.end1174, %middle.block1168 ], [ %2684, %.lr.ph182.preheader.i.i ], [ %2684, %vector.scevcheck1129 ], [ %2684, %vector.memcheck1138 ]
  %.024.i297180.i.i.ph = phi ptr [ %ind.end1176, %middle.block1168 ], [ %2668, %.lr.ph182.preheader.i.i ], [ %2668, %vector.scevcheck1129 ], [ %2668, %vector.memcheck1138 ]
  %.126.i296179.i.i.ph = phi ptr [ %ind.end1178, %middle.block1168 ], [ %.025.i292.i.i, %.lr.ph182.preheader.i.i ], [ %.025.i292.i.i, %vector.scevcheck1129 ], [ %.025.i292.i.i, %vector.memcheck1138 ]
  %.128.i295178.i.i.ph = phi ptr [ %ind.end1180, %middle.block1168 ], [ %.027.i291.i.i, %.lr.ph182.preheader.i.i ], [ %.027.i291.i.i, %vector.scevcheck1129 ], [ %.027.i291.i.i, %vector.memcheck1138 ]
  %.029.i294177.i.i.ph = phi ptr [ %ind.end1182, %middle.block1168 ], [ %.4218.lcssa.i.i214, %.lr.ph182.preheader.i.i ], [ %.4218.lcssa.i.i214, %vector.scevcheck1129 ], [ %.4218.lcssa.i.i214, %vector.memcheck1138 ]
  %uglygep3412 = getelementptr i8, ptr %.024.i297180.i.i.ph, i64 8
  %uglygep3415 = getelementptr i8, ptr %.126.i296179.i.i.ph, i64 -8
  %uglygep3418 = getelementptr i8, ptr %.128.i295178.i.i.ph, i64 8
  %uglygep3421 = getelementptr i8, ptr %.029.i294177.i.i.ph, i64 -8
  br label %.lr.ph182.i.i

2702:                                             ; preds = %2667
  %2703 = load i64, ptr %2674, align 8
  %2704 = load i64, ptr %2676, align 8
  store i64 %2704, ptr %2674, align 8
  %2705 = getelementptr inbounds i8, ptr %2674, i64 -8
  store i64 %2703, ptr %2676, align 8
  %2706 = getelementptr inbounds i8, ptr %2676, i64 8
  %2707 = add nsw i64 %2672, -1
  br label %._crit_edge.i290.i.i

.lr.ph182.i.i:                                    ; preds = %.lr.ph182.i.i, %.lr.ph182.i.i.preheader
  %lsr.iv3422 = phi ptr [ %uglygep3421, %.lr.ph182.i.i.preheader ], [ %uglygep3423, %.lr.ph182.i.i ]
  %lsr.iv3419 = phi ptr [ %uglygep3418, %.lr.ph182.i.i.preheader ], [ %uglygep3420, %.lr.ph182.i.i ]
  %lsr.iv3416 = phi ptr [ %uglygep3415, %.lr.ph182.i.i.preheader ], [ %uglygep3417, %.lr.ph182.i.i ]
  %lsr.iv3413 = phi ptr [ %uglygep3412, %.lr.ph182.i.i.preheader ], [ %uglygep3414, %.lr.ph182.i.i ]
  %.1.i298181.i.i = phi i64 [ %2708, %.lr.ph182.i.i ], [ %.1.i298181.i.i.ph, %.lr.ph182.i.i.preheader ]
  %2708 = add nsw i64 %.1.i298181.i.i, -1
  %2709 = load i64, ptr %lsr.iv3413, align 8
  %2710 = load i64, ptr %lsr.iv3422, align 8
  store i64 %2710, ptr %lsr.iv3413, align 8
  store i64 %2709, ptr %lsr.iv3422, align 8
  %2711 = load i64, ptr %lsr.iv3416, align 8
  %2712 = load i64, ptr %lsr.iv3419, align 8
  store i64 %2712, ptr %lsr.iv3416, align 8
  store i64 %2711, ptr %lsr.iv3419, align 8
  %uglygep3414 = getelementptr i8, ptr %lsr.iv3413, i64 8
  %uglygep3417 = getelementptr i8, ptr %lsr.iv3416, i64 -8
  %uglygep3420 = getelementptr i8, ptr %lsr.iv3419, i64 8
  %uglygep3423 = getelementptr i8, ptr %lsr.iv3422, i64 -8
  %2713 = icmp eq i64 %2708, 0
  br i1 %2713, label %sort.quad_reversal.exit299.i.i, label %.lr.ph182.i.i, !llvm.loop !197

2714:                                             ; preds = %2589
  %2715 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %2716 = ptrtoint ptr %88 to i64
  %2717 = sub nuw i64 %2715, %2716
  %2718 = lshr i64 %2717, 4
  %2719 = shl nuw nsw i64 %2718, 3
  %2720 = getelementptr inbounds i8, ptr %88, i64 %2719
  %2721 = sub nsw i64 0, %2719
  %2722 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %2721
  %2723 = and i64 %2717, 16
  %2724 = icmp eq i64 %2723, 0
  br i1 %2724, label %2747, label %._crit_edge.i300.i.i

._crit_edge.i300.i.i:                             ; preds = %2747, %2714
  %.027.i301.i.i = phi ptr [ %2751, %2747 ], [ %2722, %2714 ]
  %.025.i302.i.i = phi ptr [ %2750, %2747 ], [ %2720, %2714 ]
  %.0.i303.i.i = phi i64 [ %2752, %2747 ], [ %2718, %2714 ]
  %2725 = load i64, ptr %88, align 8
  %2726 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %2726, ptr %88, align 8
  store i64 %2725, ptr %.4218.lcssa.i.i214, align 8
  %2727 = load i64, ptr %.025.i302.i.i, align 8
  %2728 = load i64, ptr %.027.i301.i.i, align 8
  store i64 %2728, ptr %.025.i302.i.i, align 8
  store i64 %2727, ptr %.027.i301.i.i, align 8
  %2729 = icmp ult i64 %.0.i303.i.i, 2
  br i1 %2729, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.preheader.i.i

.lr.ph176.preheader.i.i:                          ; preds = %._crit_edge.i300.i.i
  %2730 = lshr i64 %.0.i303.i.i, 1
  %min.iters.check1099 = icmp ult i64 %.0.i303.i.i, 48
  br i1 %min.iters.check1099, label %.lr.ph176.i.i.preheader, label %vector.scevcheck1058

vector.scevcheck1058:                             ; preds = %.lr.ph176.preheader.i.i
  %2731 = add nsw i64 %2730, -1
  %uglygep1059 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1061.neg = mul i64 %2731, -8
  %2732 = getelementptr i8, ptr %uglygep1059, i64 %mul.result1061.neg
  %2733 = icmp ugt ptr %2732, %uglygep1059
  %uglygep1063 = getelementptr i8, ptr %.025.i302.i.i, i64 -8
  %mul.result1065.neg = mul i64 %2731, -8
  %mul.overflow1066 = icmp ugt i64 %2731, 2305843009213693951
  %2734 = getelementptr i8, ptr %uglygep1063, i64 %mul.result1065.neg
  %2735 = icmp ugt ptr %2734, %uglygep1063
  %2736 = or i1 %2735, %mul.overflow1066
  %2737 = or i1 %2733, %2736
  br i1 %2737, label %.lr.ph176.i.i.preheader, label %vector.memcheck1067

vector.memcheck1067:                              ; preds = %vector.scevcheck1058
  %uglygep1068 = getelementptr i8, ptr %88, i64 8
  %2738 = shl i64 %2730, 3
  %2739 = add i64 %2738, 8
  %uglygep1069 = getelementptr i8, ptr %88, i64 %2739
  %uglygep1070 = getelementptr i8, ptr %.027.i301.i.i, i64 8
  %uglygep1071 = getelementptr i8, ptr %.027.i301.i.i, i64 %2739
  %2740 = mul i64 %2730, -8
  %uglygep1072 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %2740
  %uglygep1073 = getelementptr i8, ptr %.025.i302.i.i, i64 %2740
  %bound01074 = icmp ult ptr %uglygep1068, %uglygep1071
  %bound11075 = icmp ult ptr %uglygep1070, %uglygep1069
  %found.conflict1076 = and i1 %bound01074, %bound11075
  %bound01077 = icmp ult ptr %uglygep1068, %.4218.lcssa.i.i214
  %bound11078 = icmp ult ptr %uglygep1072, %uglygep1069
  %found.conflict1079 = and i1 %bound01077, %bound11078
  %conflict.rdx1080 = or i1 %found.conflict1076, %found.conflict1079
  %bound01081 = icmp ult ptr %uglygep1068, %.025.i302.i.i
  %bound11082 = icmp ult ptr %uglygep1073, %uglygep1069
  %found.conflict1083 = and i1 %bound01081, %bound11082
  %conflict.rdx1084 = or i1 %conflict.rdx1080, %found.conflict1083
  %bound01085 = icmp ult ptr %uglygep1070, %.4218.lcssa.i.i214
  %bound11086 = icmp ult ptr %uglygep1072, %uglygep1071
  %found.conflict1087 = and i1 %bound01085, %bound11086
  %conflict.rdx1088 = or i1 %conflict.rdx1084, %found.conflict1087
  %bound01089 = icmp ult ptr %uglygep1070, %.025.i302.i.i
  %bound11090 = icmp ult ptr %uglygep1073, %uglygep1071
  %found.conflict1091 = and i1 %bound01089, %bound11090
  %conflict.rdx1092 = or i1 %conflict.rdx1088, %found.conflict1091
  %bound01093 = icmp ult ptr %uglygep1072, %.025.i302.i.i
  %bound11094 = icmp ult ptr %uglygep1073, %.4218.lcssa.i.i214
  %found.conflict1095 = and i1 %bound01093, %bound11094
  %conflict.rdx1096 = or i1 %conflict.rdx1092, %found.conflict1095
  br i1 %conflict.rdx1096, label %.lr.ph176.i.i.preheader, label %vector.ph1100

vector.ph1100:                                    ; preds = %vector.memcheck1067
  %2741 = lshr i64 %.0.i303.i.i, 1
  %n.vec1102 = and i64 %2730, 9223372036854775806
  %ind.end1103 = and i64 %2741, 1
  %2742 = shl i64 %n.vec1102, 3
  %ind.end1105 = getelementptr i8, ptr %88, i64 %2742
  %2743 = mul i64 %n.vec1102, -8
  %ind.end1107 = getelementptr i8, ptr %.025.i302.i.i, i64 %2743
  %2744 = shl i64 %n.vec1102, 3
  %ind.end1109 = getelementptr i8, ptr %.027.i301.i.i, i64 %2744
  %2745 = mul i64 %n.vec1102, -8
  %ind.end1111 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %2745
  %next.gep11162457 = getelementptr i8, ptr %88, i64 8
  %next.gep11182454 = getelementptr i8, ptr %.027.i301.i.i, i64 8
  %uglygep3448 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -16
  %uglygep3453 = getelementptr i8, ptr %.025.i302.i.i, i64 -16
  br label %vector.body1114

vector.body1114:                                  ; preds = %vector.body1114, %vector.ph1100
  %lsr.iv3458 = phi i64 [ %lsr.iv.next3459, %vector.body1114 ], [ %n.vec1102, %vector.ph1100 ]
  %lsr.iv3456 = phi ptr [ %uglygep3457, %vector.body1114 ], [ %next.gep11162457, %vector.ph1100 ]
  %lsr.iv3454 = phi ptr [ %uglygep3455, %vector.body1114 ], [ %uglygep3453, %vector.ph1100 ]
  %lsr.iv3451 = phi ptr [ %uglygep3452, %vector.body1114 ], [ %next.gep11182454, %vector.ph1100 ]
  %lsr.iv3449 = phi ptr [ %uglygep3450, %vector.body1114 ], [ %uglygep3448, %vector.ph1100 ]
  %wide.load1120 = load <2 x i64>, ptr %lsr.iv3456, align 8, !alias.scope !198, !noalias !201
  %wide.load1121 = load <2 x i64>, ptr %lsr.iv3449, align 8, !alias.scope !205, !noalias !206
  %reverse1122 = shufflevector <2 x i64> %wide.load1121, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1122, ptr %lsr.iv3456, align 8, !alias.scope !198, !noalias !201
  %reverse1123 = shufflevector <2 x i64> %wide.load1120, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1123, ptr %lsr.iv3449, align 8, !alias.scope !205, !noalias !206
  %wide.load1124 = load <2 x i64>, ptr %lsr.iv3454, align 8, !alias.scope !206
  %reverse1125 = shufflevector <2 x i64> %wide.load1124, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1126 = load <2 x i64>, ptr %lsr.iv3451, align 8, !alias.scope !207, !noalias !208
  %reverse1127 = shufflevector <2 x i64> %wide.load1126, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1127, ptr %lsr.iv3454, align 8, !alias.scope !206
  store <2 x i64> %reverse1125, ptr %lsr.iv3451, align 8, !alias.scope !207, !noalias !208
  %uglygep3450 = getelementptr i8, ptr %lsr.iv3449, i64 -16
  %uglygep3452 = getelementptr i8, ptr %lsr.iv3451, i64 16
  %uglygep3455 = getelementptr i8, ptr %lsr.iv3454, i64 -16
  %uglygep3457 = getelementptr i8, ptr %lsr.iv3456, i64 16
  %lsr.iv.next3459 = add nsw i64 %lsr.iv3458, -2
  %2746 = icmp eq i64 %lsr.iv.next3459, 0
  br i1 %2746, label %middle.block1097, label %vector.body1114, !llvm.loop !209

middle.block1097:                                 ; preds = %vector.body1114
  %cmp.n1113 = icmp eq i64 %2730, %n.vec1102
  br i1 %cmp.n1113, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.i.i.preheader

.lr.ph176.i.i.preheader:                          ; preds = %middle.block1097, %vector.memcheck1067, %vector.scevcheck1058, %.lr.ph176.preheader.i.i
  %.1.i308175.i.i.ph = phi i64 [ %ind.end1103, %middle.block1097 ], [ %2730, %.lr.ph176.preheader.i.i ], [ %2730, %vector.scevcheck1058 ], [ %2730, %vector.memcheck1067 ]
  %.024.i307174.i.i.ph = phi ptr [ %ind.end1105, %middle.block1097 ], [ %88, %.lr.ph176.preheader.i.i ], [ %88, %vector.scevcheck1058 ], [ %88, %vector.memcheck1067 ]
  %.126.i306173.i.i.ph = phi ptr [ %ind.end1107, %middle.block1097 ], [ %.025.i302.i.i, %.lr.ph176.preheader.i.i ], [ %.025.i302.i.i, %vector.scevcheck1058 ], [ %.025.i302.i.i, %vector.memcheck1067 ]
  %.128.i305172.i.i.ph = phi ptr [ %ind.end1109, %middle.block1097 ], [ %.027.i301.i.i, %.lr.ph176.preheader.i.i ], [ %.027.i301.i.i, %vector.scevcheck1058 ], [ %.027.i301.i.i, %vector.memcheck1067 ]
  %.029.i304171.i.i.ph = phi ptr [ %ind.end1111, %middle.block1097 ], [ %.4218.lcssa.i.i214, %.lr.ph176.preheader.i.i ], [ %.4218.lcssa.i.i214, %vector.scevcheck1058 ], [ %.4218.lcssa.i.i214, %vector.memcheck1067 ]
  %uglygep3436 = getelementptr i8, ptr %.024.i307174.i.i.ph, i64 8
  %uglygep3439 = getelementptr i8, ptr %.126.i306173.i.i.ph, i64 -8
  %uglygep3442 = getelementptr i8, ptr %.128.i305172.i.i.ph, i64 8
  %uglygep3445 = getelementptr i8, ptr %.029.i304171.i.i.ph, i64 -8
  br label %.lr.ph176.i.i

2747:                                             ; preds = %2714
  %2748 = load i64, ptr %2720, align 8
  %2749 = load i64, ptr %2722, align 8
  store i64 %2749, ptr %2720, align 8
  %2750 = getelementptr inbounds i8, ptr %2720, i64 -8
  store i64 %2748, ptr %2722, align 8
  %2751 = getelementptr inbounds i8, ptr %2722, i64 8
  %2752 = add nsw i64 %2718, -1
  br label %._crit_edge.i300.i.i

.lr.ph176.i.i:                                    ; preds = %.lr.ph176.i.i, %.lr.ph176.i.i.preheader
  %lsr.iv3446 = phi ptr [ %uglygep3445, %.lr.ph176.i.i.preheader ], [ %uglygep3447, %.lr.ph176.i.i ]
  %lsr.iv3443 = phi ptr [ %uglygep3442, %.lr.ph176.i.i.preheader ], [ %uglygep3444, %.lr.ph176.i.i ]
  %lsr.iv3440 = phi ptr [ %uglygep3439, %.lr.ph176.i.i.preheader ], [ %uglygep3441, %.lr.ph176.i.i ]
  %lsr.iv3437 = phi ptr [ %uglygep3436, %.lr.ph176.i.i.preheader ], [ %uglygep3438, %.lr.ph176.i.i ]
  %.1.i308175.i.i = phi i64 [ %2753, %.lr.ph176.i.i ], [ %.1.i308175.i.i.ph, %.lr.ph176.i.i.preheader ]
  %2753 = add nsw i64 %.1.i308175.i.i, -1
  %2754 = load i64, ptr %lsr.iv3437, align 8
  %2755 = load i64, ptr %lsr.iv3446, align 8
  store i64 %2755, ptr %lsr.iv3437, align 8
  store i64 %2754, ptr %lsr.iv3446, align 8
  %2756 = load i64, ptr %lsr.iv3440, align 8
  %2757 = load i64, ptr %lsr.iv3443, align 8
  store i64 %2757, ptr %lsr.iv3440, align 8
  store i64 %2756, ptr %lsr.iv3443, align 8
  %uglygep3438 = getelementptr i8, ptr %lsr.iv3437, i64 8
  %uglygep3441 = getelementptr i8, ptr %lsr.iv3440, i64 -8
  %uglygep3444 = getelementptr i8, ptr %lsr.iv3443, i64 8
  %uglygep3447 = getelementptr i8, ptr %lsr.iv3446, i64 -8
  %2758 = icmp eq i64 %2753, 0
  br i1 %2758, label %sort.quad_reversal.exit389.i.i, label %.lr.ph176.i.i, !llvm.loop !210

2759:                                             ; preds = %2589
  %2760 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 1
  %2761 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %2762 = ptrtoint ptr %2760 to i64
  %2763 = sub nuw i64 %2761, %2762
  %2764 = lshr i64 %2763, 4
  %2765 = shl nuw nsw i64 %2764, 3
  %2766 = getelementptr inbounds i8, ptr %2760, i64 %2765
  %2767 = sub nsw i64 0, %2765
  %2768 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %2767
  %2769 = and i64 %2763, 16
  %2770 = icmp eq i64 %2769, 0
  br i1 %2770, label %2794, label %._crit_edge.i310.i.i

._crit_edge.i310.i.i:                             ; preds = %2794, %2759
  %.027.i311.i.i = phi ptr [ %2798, %2794 ], [ %2768, %2759 ]
  %.025.i312.i.i = phi ptr [ %2797, %2794 ], [ %2766, %2759 ]
  %.0.i313.i.i = phi i64 [ %2799, %2794 ], [ %2764, %2759 ]
  %2771 = load i64, ptr %2760, align 8
  %2772 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %2772, ptr %2760, align 8
  store i64 %2771, ptr %.4223.lcssa.i.i213, align 8
  %2773 = load i64, ptr %.025.i312.i.i, align 8
  %2774 = load i64, ptr %.027.i311.i.i, align 8
  store i64 %2774, ptr %.025.i312.i.i, align 8
  store i64 %2773, ptr %.027.i311.i.i, align 8
  %2775 = icmp ult i64 %.0.i313.i.i, 2
  br i1 %2775, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.preheader.i.i

.lr.ph170.preheader.i.i:                          ; preds = %._crit_edge.i310.i.i
  %2776 = lshr i64 %.0.i313.i.i, 1
  %min.iters.check1028 = icmp ult i64 %.0.i313.i.i, 48
  br i1 %min.iters.check1028, label %.lr.ph170.i.i.preheader, label %vector.scevcheck987

vector.scevcheck987:                              ; preds = %.lr.ph170.preheader.i.i
  %2777 = add nsw i64 %2776, -1
  %uglygep988 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result990.neg = mul i64 %2777, -8
  %2778 = getelementptr i8, ptr %uglygep988, i64 %mul.result990.neg
  %2779 = icmp ugt ptr %2778, %uglygep988
  %uglygep992 = getelementptr i8, ptr %.025.i312.i.i, i64 -8
  %mul.result994.neg = mul i64 %2777, -8
  %mul.overflow995 = icmp ugt i64 %2777, 2305843009213693951
  %2780 = getelementptr i8, ptr %uglygep992, i64 %mul.result994.neg
  %2781 = icmp ugt ptr %2780, %uglygep992
  %2782 = or i1 %2781, %mul.overflow995
  %2783 = or i1 %2779, %2782
  br i1 %2783, label %.lr.ph170.i.i.preheader, label %vector.memcheck996

vector.memcheck996:                               ; preds = %vector.scevcheck987
  %uglygep997 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %2784 = shl i64 %2776, 3
  %2785 = add i64 %2784, 9
  %uglygep998 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2785
  %uglygep999 = getelementptr i8, ptr %.027.i311.i.i, i64 8
  %2786 = add i64 %2784, 8
  %uglygep1000 = getelementptr i8, ptr %.027.i311.i.i, i64 %2786
  %2787 = mul i64 %2776, -8
  %uglygep1001 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2787
  %uglygep1002 = getelementptr i8, ptr %.025.i312.i.i, i64 %2787
  %bound01003 = icmp ult ptr %uglygep997, %uglygep1000
  %bound11004 = icmp ult ptr %uglygep999, %uglygep998
  %found.conflict1005 = and i1 %bound01003, %bound11004
  %bound01006 = icmp ult ptr %uglygep997, %.4223.lcssa.i.i213
  %bound11007 = icmp ult ptr %uglygep1001, %uglygep998
  %found.conflict1008 = and i1 %bound01006, %bound11007
  %conflict.rdx1009 = or i1 %found.conflict1005, %found.conflict1008
  %bound01010 = icmp ult ptr %uglygep997, %.025.i312.i.i
  %bound11011 = icmp ult ptr %uglygep1002, %uglygep998
  %found.conflict1012 = and i1 %bound01010, %bound11011
  %conflict.rdx1013 = or i1 %conflict.rdx1009, %found.conflict1012
  %bound01014 = icmp ult ptr %uglygep999, %.4223.lcssa.i.i213
  %bound11015 = icmp ult ptr %uglygep1001, %uglygep1000
  %found.conflict1016 = and i1 %bound01014, %bound11015
  %conflict.rdx1017 = or i1 %conflict.rdx1013, %found.conflict1016
  %bound01018 = icmp ult ptr %uglygep999, %.025.i312.i.i
  %bound11019 = icmp ult ptr %uglygep1002, %uglygep1000
  %found.conflict1020 = and i1 %bound01018, %bound11019
  %conflict.rdx1021 = or i1 %conflict.rdx1017, %found.conflict1020
  %bound01022 = icmp ult ptr %uglygep1001, %.025.i312.i.i
  %bound11023 = icmp ult ptr %uglygep1002, %.4223.lcssa.i.i213
  %found.conflict1024 = and i1 %bound01022, %bound11023
  %conflict.rdx1025 = or i1 %conflict.rdx1021, %found.conflict1024
  br i1 %conflict.rdx1025, label %.lr.ph170.i.i.preheader, label %vector.ph1029

vector.ph1029:                                    ; preds = %vector.memcheck996
  %2788 = lshr i64 %.0.i313.i.i, 1
  %n.vec1031 = and i64 %2776, 9223372036854775806
  %ind.end1032 = and i64 %2788, 1
  %2789 = shl i64 %n.vec1031, 3
  %ind.end1034 = getelementptr i8, ptr %2760, i64 %2789
  %2790 = mul i64 %n.vec1031, -8
  %ind.end1036 = getelementptr i8, ptr %.025.i312.i.i, i64 %2790
  %2791 = shl i64 %n.vec1031, 3
  %ind.end1038 = getelementptr i8, ptr %.027.i311.i.i, i64 %2791
  %2792 = mul i64 %n.vec1031, -8
  %ind.end1040 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2792
  %next.gep10452453 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %next.gep10472450 = getelementptr i8, ptr %.027.i311.i.i, i64 8
  %uglygep3472 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -16
  %uglygep3477 = getelementptr i8, ptr %.025.i312.i.i, i64 -16
  br label %vector.body1043

vector.body1043:                                  ; preds = %vector.body1043, %vector.ph1029
  %lsr.iv3482 = phi i64 [ %lsr.iv.next3483, %vector.body1043 ], [ %n.vec1031, %vector.ph1029 ]
  %lsr.iv3480 = phi ptr [ %uglygep3481, %vector.body1043 ], [ %next.gep10452453, %vector.ph1029 ]
  %lsr.iv3478 = phi ptr [ %uglygep3479, %vector.body1043 ], [ %uglygep3477, %vector.ph1029 ]
  %lsr.iv3475 = phi ptr [ %uglygep3476, %vector.body1043 ], [ %next.gep10472450, %vector.ph1029 ]
  %lsr.iv3473 = phi ptr [ %uglygep3474, %vector.body1043 ], [ %uglygep3472, %vector.ph1029 ]
  %wide.load1049 = load <2 x i64>, ptr %lsr.iv3480, align 8, !alias.scope !211, !noalias !214
  %wide.load1050 = load <2 x i64>, ptr %lsr.iv3473, align 8, !alias.scope !218, !noalias !219
  %reverse1051 = shufflevector <2 x i64> %wide.load1050, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1051, ptr %lsr.iv3480, align 8, !alias.scope !211, !noalias !214
  %reverse1052 = shufflevector <2 x i64> %wide.load1049, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1052, ptr %lsr.iv3473, align 8, !alias.scope !218, !noalias !219
  %wide.load1053 = load <2 x i64>, ptr %lsr.iv3478, align 8, !alias.scope !219
  %reverse1054 = shufflevector <2 x i64> %wide.load1053, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1055 = load <2 x i64>, ptr %lsr.iv3475, align 8, !alias.scope !220, !noalias !221
  %reverse1056 = shufflevector <2 x i64> %wide.load1055, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1056, ptr %lsr.iv3478, align 8, !alias.scope !219
  store <2 x i64> %reverse1054, ptr %lsr.iv3475, align 8, !alias.scope !220, !noalias !221
  %uglygep3474 = getelementptr i8, ptr %lsr.iv3473, i64 -16
  %uglygep3476 = getelementptr i8, ptr %lsr.iv3475, i64 16
  %uglygep3479 = getelementptr i8, ptr %lsr.iv3478, i64 -16
  %uglygep3481 = getelementptr i8, ptr %lsr.iv3480, i64 16
  %lsr.iv.next3483 = add nsw i64 %lsr.iv3482, -2
  %2793 = icmp eq i64 %lsr.iv.next3483, 0
  br i1 %2793, label %middle.block1026, label %vector.body1043, !llvm.loop !222

middle.block1026:                                 ; preds = %vector.body1043
  %cmp.n1042 = icmp eq i64 %2776, %n.vec1031
  br i1 %cmp.n1042, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.i.i.preheader

.lr.ph170.i.i.preheader:                          ; preds = %middle.block1026, %vector.memcheck996, %vector.scevcheck987, %.lr.ph170.preheader.i.i
  %.1.i318169.i.i.ph = phi i64 [ %ind.end1032, %middle.block1026 ], [ %2776, %.lr.ph170.preheader.i.i ], [ %2776, %vector.scevcheck987 ], [ %2776, %vector.memcheck996 ]
  %.024.i317168.i.i.ph = phi ptr [ %ind.end1034, %middle.block1026 ], [ %2760, %.lr.ph170.preheader.i.i ], [ %2760, %vector.scevcheck987 ], [ %2760, %vector.memcheck996 ]
  %.126.i316167.i.i.ph = phi ptr [ %ind.end1036, %middle.block1026 ], [ %.025.i312.i.i, %.lr.ph170.preheader.i.i ], [ %.025.i312.i.i, %vector.scevcheck987 ], [ %.025.i312.i.i, %vector.memcheck996 ]
  %.128.i315166.i.i.ph = phi ptr [ %ind.end1038, %middle.block1026 ], [ %.027.i311.i.i, %.lr.ph170.preheader.i.i ], [ %.027.i311.i.i, %vector.scevcheck987 ], [ %.027.i311.i.i, %vector.memcheck996 ]
  %.029.i314165.i.i.ph = phi ptr [ %ind.end1040, %middle.block1026 ], [ %.4223.lcssa.i.i213, %.lr.ph170.preheader.i.i ], [ %.4223.lcssa.i.i213, %vector.scevcheck987 ], [ %.4223.lcssa.i.i213, %vector.memcheck996 ]
  %uglygep3460 = getelementptr i8, ptr %.024.i317168.i.i.ph, i64 8
  %uglygep3463 = getelementptr i8, ptr %.126.i316167.i.i.ph, i64 -8
  %uglygep3466 = getelementptr i8, ptr %.128.i315166.i.i.ph, i64 8
  %uglygep3469 = getelementptr i8, ptr %.029.i314165.i.i.ph, i64 -8
  br label %.lr.ph170.i.i

2794:                                             ; preds = %2759
  %2795 = load i64, ptr %2766, align 8
  %2796 = load i64, ptr %2768, align 8
  store i64 %2796, ptr %2766, align 8
  %2797 = getelementptr inbounds i8, ptr %2766, i64 -8
  store i64 %2795, ptr %2768, align 8
  %2798 = getelementptr inbounds i8, ptr %2768, i64 8
  %2799 = add nsw i64 %2764, -1
  br label %._crit_edge.i310.i.i

.lr.ph170.i.i:                                    ; preds = %.lr.ph170.i.i, %.lr.ph170.i.i.preheader
  %lsr.iv3470 = phi ptr [ %uglygep3469, %.lr.ph170.i.i.preheader ], [ %uglygep3471, %.lr.ph170.i.i ]
  %lsr.iv3467 = phi ptr [ %uglygep3466, %.lr.ph170.i.i.preheader ], [ %uglygep3468, %.lr.ph170.i.i ]
  %lsr.iv3464 = phi ptr [ %uglygep3463, %.lr.ph170.i.i.preheader ], [ %uglygep3465, %.lr.ph170.i.i ]
  %lsr.iv3461 = phi ptr [ %uglygep3460, %.lr.ph170.i.i.preheader ], [ %uglygep3462, %.lr.ph170.i.i ]
  %.1.i318169.i.i = phi i64 [ %2800, %.lr.ph170.i.i ], [ %.1.i318169.i.i.ph, %.lr.ph170.i.i.preheader ]
  %2800 = add nsw i64 %.1.i318169.i.i, -1
  %2801 = load i64, ptr %lsr.iv3461, align 8
  %2802 = load i64, ptr %lsr.iv3470, align 8
  store i64 %2802, ptr %lsr.iv3461, align 8
  store i64 %2801, ptr %lsr.iv3470, align 8
  %2803 = load i64, ptr %lsr.iv3464, align 8
  %2804 = load i64, ptr %lsr.iv3467, align 8
  store i64 %2804, ptr %lsr.iv3464, align 8
  store i64 %2803, ptr %lsr.iv3467, align 8
  %uglygep3462 = getelementptr i8, ptr %lsr.iv3461, i64 8
  %uglygep3465 = getelementptr i8, ptr %lsr.iv3464, i64 -8
  %uglygep3468 = getelementptr i8, ptr %lsr.iv3467, i64 8
  %uglygep3471 = getelementptr i8, ptr %lsr.iv3470, i64 -8
  %2805 = icmp eq i64 %2800, 0
  br i1 %2805, label %sort.quad_reversal.exit299.i.i, label %.lr.ph170.i.i, !llvm.loop !223

2806:                                             ; preds = %2589
  %2807 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %2808 = ptrtoint ptr %88 to i64
  %2809 = sub nuw i64 %2807, %2808
  %2810 = lshr i64 %2809, 4
  %2811 = shl nuw nsw i64 %2810, 3
  %2812 = getelementptr inbounds i8, ptr %88, i64 %2811
  %2813 = sub nsw i64 0, %2811
  %2814 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %2813
  %2815 = and i64 %2809, 16
  %2816 = icmp eq i64 %2815, 0
  br i1 %2816, label %2839, label %._crit_edge.i320.i.i

._crit_edge.i320.i.i:                             ; preds = %2839, %2806
  %.027.i321.i.i = phi ptr [ %2843, %2839 ], [ %2814, %2806 ]
  %.025.i322.i.i = phi ptr [ %2842, %2839 ], [ %2812, %2806 ]
  %.0.i323.i.i = phi i64 [ %2844, %2839 ], [ %2810, %2806 ]
  %2817 = load i64, ptr %88, align 8
  %2818 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %2818, ptr %88, align 8
  store i64 %2817, ptr %.4.lcssa.i.i215, align 8
  %2819 = load i64, ptr %.025.i322.i.i, align 8
  %2820 = load i64, ptr %.027.i321.i.i, align 8
  store i64 %2820, ptr %.025.i322.i.i, align 8
  store i64 %2819, ptr %.027.i321.i.i, align 8
  %2821 = icmp ult i64 %.0.i323.i.i, 2
  br i1 %2821, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.preheader.i.i

.lr.ph158.preheader.i.i:                          ; preds = %._crit_edge.i320.i.i
  %2822 = lshr i64 %.0.i323.i.i, 1
  %min.iters.check886 = icmp ult i64 %.0.i323.i.i, 48
  br i1 %min.iters.check886, label %.lr.ph158.i.i.preheader, label %vector.scevcheck845

vector.scevcheck845:                              ; preds = %.lr.ph158.preheader.i.i
  %2823 = add nsw i64 %2822, -1
  %uglygep846 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result848.neg = mul i64 %2823, -8
  %2824 = getelementptr i8, ptr %uglygep846, i64 %mul.result848.neg
  %2825 = icmp ugt ptr %2824, %uglygep846
  %uglygep850 = getelementptr i8, ptr %.025.i322.i.i, i64 -8
  %mul.result852.neg = mul i64 %2823, -8
  %mul.overflow853 = icmp ugt i64 %2823, 2305843009213693951
  %2826 = getelementptr i8, ptr %uglygep850, i64 %mul.result852.neg
  %2827 = icmp ugt ptr %2826, %uglygep850
  %2828 = or i1 %2827, %mul.overflow853
  %2829 = or i1 %2825, %2828
  br i1 %2829, label %.lr.ph158.i.i.preheader, label %vector.memcheck854

vector.memcheck854:                               ; preds = %vector.scevcheck845
  %uglygep855 = getelementptr i8, ptr %88, i64 8
  %2830 = shl i64 %2822, 3
  %2831 = add i64 %2830, 8
  %uglygep856 = getelementptr i8, ptr %88, i64 %2831
  %uglygep857 = getelementptr i8, ptr %.027.i321.i.i, i64 8
  %uglygep858 = getelementptr i8, ptr %.027.i321.i.i, i64 %2831
  %2832 = mul i64 %2822, -8
  %uglygep859 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2832
  %uglygep860 = getelementptr i8, ptr %.025.i322.i.i, i64 %2832
  %bound0861 = icmp ult ptr %uglygep855, %uglygep858
  %bound1862 = icmp ult ptr %uglygep857, %uglygep856
  %found.conflict863 = and i1 %bound0861, %bound1862
  %bound0864 = icmp ult ptr %uglygep855, %.4.lcssa.i.i215
  %bound1865 = icmp ult ptr %uglygep859, %uglygep856
  %found.conflict866 = and i1 %bound0864, %bound1865
  %conflict.rdx867 = or i1 %found.conflict863, %found.conflict866
  %bound0868 = icmp ult ptr %uglygep855, %.025.i322.i.i
  %bound1869 = icmp ult ptr %uglygep860, %uglygep856
  %found.conflict870 = and i1 %bound0868, %bound1869
  %conflict.rdx871 = or i1 %conflict.rdx867, %found.conflict870
  %bound0872 = icmp ult ptr %uglygep857, %.4.lcssa.i.i215
  %bound1873 = icmp ult ptr %uglygep859, %uglygep858
  %found.conflict874 = and i1 %bound0872, %bound1873
  %conflict.rdx875 = or i1 %conflict.rdx871, %found.conflict874
  %bound0876 = icmp ult ptr %uglygep857, %.025.i322.i.i
  %bound1877 = icmp ult ptr %uglygep860, %uglygep858
  %found.conflict878 = and i1 %bound0876, %bound1877
  %conflict.rdx879 = or i1 %conflict.rdx875, %found.conflict878
  %bound0880 = icmp ult ptr %uglygep859, %.025.i322.i.i
  %bound1881 = icmp ult ptr %uglygep860, %.4.lcssa.i.i215
  %found.conflict882 = and i1 %bound0880, %bound1881
  %conflict.rdx883 = or i1 %conflict.rdx879, %found.conflict882
  br i1 %conflict.rdx883, label %.lr.ph158.i.i.preheader, label %vector.ph887

vector.ph887:                                     ; preds = %vector.memcheck854
  %2833 = lshr i64 %.0.i323.i.i, 1
  %n.vec889 = and i64 %2822, 9223372036854775806
  %ind.end890 = and i64 %2833, 1
  %2834 = shl i64 %n.vec889, 3
  %ind.end892 = getelementptr i8, ptr %88, i64 %2834
  %2835 = mul i64 %n.vec889, -8
  %ind.end894 = getelementptr i8, ptr %.025.i322.i.i, i64 %2835
  %2836 = shl i64 %n.vec889, 3
  %ind.end896 = getelementptr i8, ptr %.027.i321.i.i, i64 %2836
  %2837 = mul i64 %n.vec889, -8
  %ind.end898 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2837
  %next.gep9032445 = getelementptr i8, ptr %88, i64 8
  %next.gep9052442 = getelementptr i8, ptr %.027.i321.i.i, i64 8
  %uglygep3520 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -16
  %uglygep3525 = getelementptr i8, ptr %.025.i322.i.i, i64 -16
  br label %vector.body901

vector.body901:                                   ; preds = %vector.body901, %vector.ph887
  %lsr.iv3530 = phi i64 [ %lsr.iv.next3531, %vector.body901 ], [ %n.vec889, %vector.ph887 ]
  %lsr.iv3528 = phi ptr [ %uglygep3529, %vector.body901 ], [ %next.gep9032445, %vector.ph887 ]
  %lsr.iv3526 = phi ptr [ %uglygep3527, %vector.body901 ], [ %uglygep3525, %vector.ph887 ]
  %lsr.iv3523 = phi ptr [ %uglygep3524, %vector.body901 ], [ %next.gep9052442, %vector.ph887 ]
  %lsr.iv3521 = phi ptr [ %uglygep3522, %vector.body901 ], [ %uglygep3520, %vector.ph887 ]
  %wide.load907 = load <2 x i64>, ptr %lsr.iv3528, align 8, !alias.scope !224, !noalias !227
  %wide.load908 = load <2 x i64>, ptr %lsr.iv3521, align 8, !alias.scope !231, !noalias !232
  %reverse909 = shufflevector <2 x i64> %wide.load908, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse909, ptr %lsr.iv3528, align 8, !alias.scope !224, !noalias !227
  %reverse910 = shufflevector <2 x i64> %wide.load907, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse910, ptr %lsr.iv3521, align 8, !alias.scope !231, !noalias !232
  %wide.load911 = load <2 x i64>, ptr %lsr.iv3526, align 8, !alias.scope !232
  %reverse912 = shufflevector <2 x i64> %wide.load911, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load913 = load <2 x i64>, ptr %lsr.iv3523, align 8, !alias.scope !233, !noalias !234
  %reverse914 = shufflevector <2 x i64> %wide.load913, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse914, ptr %lsr.iv3526, align 8, !alias.scope !232
  store <2 x i64> %reverse912, ptr %lsr.iv3523, align 8, !alias.scope !233, !noalias !234
  %uglygep3522 = getelementptr i8, ptr %lsr.iv3521, i64 -16
  %uglygep3524 = getelementptr i8, ptr %lsr.iv3523, i64 16
  %uglygep3527 = getelementptr i8, ptr %lsr.iv3526, i64 -16
  %uglygep3529 = getelementptr i8, ptr %lsr.iv3528, i64 16
  %lsr.iv.next3531 = add nsw i64 %lsr.iv3530, -2
  %2838 = icmp eq i64 %lsr.iv.next3531, 0
  br i1 %2838, label %middle.block884, label %vector.body901, !llvm.loop !235

middle.block884:                                  ; preds = %vector.body901
  %cmp.n900 = icmp eq i64 %2822, %n.vec889
  br i1 %cmp.n900, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.i.i.preheader

.lr.ph158.i.i.preheader:                          ; preds = %middle.block884, %vector.memcheck854, %vector.scevcheck845, %.lr.ph158.preheader.i.i
  %.1.i328157.i.i.ph = phi i64 [ %ind.end890, %middle.block884 ], [ %2822, %.lr.ph158.preheader.i.i ], [ %2822, %vector.scevcheck845 ], [ %2822, %vector.memcheck854 ]
  %.024.i327156.i.i.ph = phi ptr [ %ind.end892, %middle.block884 ], [ %88, %.lr.ph158.preheader.i.i ], [ %88, %vector.scevcheck845 ], [ %88, %vector.memcheck854 ]
  %.126.i326155.i.i.ph = phi ptr [ %ind.end894, %middle.block884 ], [ %.025.i322.i.i, %.lr.ph158.preheader.i.i ], [ %.025.i322.i.i, %vector.scevcheck845 ], [ %.025.i322.i.i, %vector.memcheck854 ]
  %.128.i325154.i.i.ph = phi ptr [ %ind.end896, %middle.block884 ], [ %.027.i321.i.i, %.lr.ph158.preheader.i.i ], [ %.027.i321.i.i, %vector.scevcheck845 ], [ %.027.i321.i.i, %vector.memcheck854 ]
  %.029.i324153.i.i.ph = phi ptr [ %ind.end898, %middle.block884 ], [ %.4.lcssa.i.i215, %.lr.ph158.preheader.i.i ], [ %.4.lcssa.i.i215, %vector.scevcheck845 ], [ %.4.lcssa.i.i215, %vector.memcheck854 ]
  %uglygep3508 = getelementptr i8, ptr %.024.i327156.i.i.ph, i64 8
  %uglygep3511 = getelementptr i8, ptr %.126.i326155.i.i.ph, i64 -8
  %uglygep3514 = getelementptr i8, ptr %.128.i325154.i.i.ph, i64 8
  %uglygep3517 = getelementptr i8, ptr %.029.i324153.i.i.ph, i64 -8
  br label %.lr.ph158.i.i

2839:                                             ; preds = %2806
  %2840 = load i64, ptr %2812, align 8
  %2841 = load i64, ptr %2814, align 8
  store i64 %2841, ptr %2812, align 8
  %2842 = getelementptr inbounds i8, ptr %2812, i64 -8
  store i64 %2840, ptr %2814, align 8
  %2843 = getelementptr inbounds i8, ptr %2814, i64 8
  %2844 = add nsw i64 %2810, -1
  br label %._crit_edge.i320.i.i

.lr.ph158.i.i:                                    ; preds = %.lr.ph158.i.i, %.lr.ph158.i.i.preheader
  %lsr.iv3518 = phi ptr [ %uglygep3517, %.lr.ph158.i.i.preheader ], [ %uglygep3519, %.lr.ph158.i.i ]
  %lsr.iv3515 = phi ptr [ %uglygep3514, %.lr.ph158.i.i.preheader ], [ %uglygep3516, %.lr.ph158.i.i ]
  %lsr.iv3512 = phi ptr [ %uglygep3511, %.lr.ph158.i.i.preheader ], [ %uglygep3513, %.lr.ph158.i.i ]
  %lsr.iv3509 = phi ptr [ %uglygep3508, %.lr.ph158.i.i.preheader ], [ %uglygep3510, %.lr.ph158.i.i ]
  %.1.i328157.i.i = phi i64 [ %2845, %.lr.ph158.i.i ], [ %.1.i328157.i.i.ph, %.lr.ph158.i.i.preheader ]
  %2845 = add nsw i64 %.1.i328157.i.i, -1
  %2846 = load i64, ptr %lsr.iv3509, align 8
  %2847 = load i64, ptr %lsr.iv3518, align 8
  store i64 %2847, ptr %lsr.iv3509, align 8
  store i64 %2846, ptr %lsr.iv3518, align 8
  %2848 = load i64, ptr %lsr.iv3512, align 8
  %2849 = load i64, ptr %lsr.iv3515, align 8
  store i64 %2849, ptr %lsr.iv3512, align 8
  store i64 %2848, ptr %lsr.iv3515, align 8
  %uglygep3510 = getelementptr i8, ptr %lsr.iv3509, i64 8
  %uglygep3513 = getelementptr i8, ptr %lsr.iv3512, i64 -8
  %uglygep3516 = getelementptr i8, ptr %lsr.iv3515, i64 8
  %uglygep3519 = getelementptr i8, ptr %lsr.iv3518, i64 -8
  %2850 = icmp eq i64 %2845, 0
  br i1 %2850, label %sort.quad_reversal.exit329.i.i, label %.lr.ph158.i.i, !llvm.loop !236

sort.quad_reversal.exit329.i.i:                   ; preds = %.lr.ph158.i.i, %middle.block884, %._crit_edge.i320.i.i
  %2851 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 1
  %2852 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %2853 = ptrtoint ptr %2851 to i64
  %2854 = sub nuw i64 %2852, %2853
  %2855 = lshr i64 %2854, 4
  %2856 = shl nuw nsw i64 %2855, 3
  %2857 = getelementptr inbounds i8, ptr %2851, i64 %2856
  %2858 = sub nsw i64 0, %2856
  %2859 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %2858
  %2860 = and i64 %2854, 16
  %2861 = icmp eq i64 %2860, 0
  br i1 %2861, label %2885, label %._crit_edge.i330.i.i

._crit_edge.i330.i.i:                             ; preds = %2885, %sort.quad_reversal.exit329.i.i
  %.027.i331.i.i240 = phi ptr [ %2889, %2885 ], [ %2859, %sort.quad_reversal.exit329.i.i ]
  %.025.i332.i.i241 = phi ptr [ %2888, %2885 ], [ %2857, %sort.quad_reversal.exit329.i.i ]
  %.0.i333.i.i242 = phi i64 [ %2890, %2885 ], [ %2855, %sort.quad_reversal.exit329.i.i ]
  %2862 = load i64, ptr %2851, align 8
  %2863 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %2863, ptr %2851, align 8
  store i64 %2862, ptr %.4223.lcssa.i.i213, align 8
  %2864 = load i64, ptr %.025.i332.i.i241, align 8
  %2865 = load i64, ptr %.027.i331.i.i240, align 8
  store i64 %2865, ptr %.025.i332.i.i241, align 8
  store i64 %2864, ptr %.027.i331.i.i240, align 8
  %2866 = icmp ult i64 %.0.i333.i.i242, 2
  br i1 %2866, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.preheader.i.i

.lr.ph164.preheader.i.i:                          ; preds = %._crit_edge.i330.i.i
  %2867 = lshr i64 %.0.i333.i.i242, 1
  %min.iters.check957 = icmp ult i64 %.0.i333.i.i242, 48
  br i1 %min.iters.check957, label %.lr.ph164.i.i.preheader, label %vector.scevcheck916

vector.scevcheck916:                              ; preds = %.lr.ph164.preheader.i.i
  %2868 = add nsw i64 %2867, -1
  %uglygep917 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result919.neg = mul i64 %2868, -8
  %2869 = getelementptr i8, ptr %uglygep917, i64 %mul.result919.neg
  %2870 = icmp ugt ptr %2869, %uglygep917
  %uglygep921 = getelementptr i8, ptr %.025.i332.i.i241, i64 -8
  %mul.result923.neg = mul i64 %2868, -8
  %mul.overflow924 = icmp ugt i64 %2868, 2305843009213693951
  %2871 = getelementptr i8, ptr %uglygep921, i64 %mul.result923.neg
  %2872 = icmp ugt ptr %2871, %uglygep921
  %2873 = or i1 %2872, %mul.overflow924
  %2874 = or i1 %2870, %2873
  br i1 %2874, label %.lr.ph164.i.i.preheader, label %vector.memcheck925

vector.memcheck925:                               ; preds = %vector.scevcheck916
  %uglygep926 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %2875 = shl i64 %2867, 3
  %2876 = add i64 %2875, 9
  %uglygep927 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %2876
  %uglygep928 = getelementptr i8, ptr %.027.i331.i.i240, i64 8
  %2877 = add i64 %2875, 8
  %uglygep929 = getelementptr i8, ptr %.027.i331.i.i240, i64 %2877
  %2878 = mul i64 %2867, -8
  %uglygep930 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2878
  %uglygep931 = getelementptr i8, ptr %.025.i332.i.i241, i64 %2878
  %bound0932 = icmp ult ptr %uglygep926, %uglygep929
  %bound1933 = icmp ult ptr %uglygep928, %uglygep927
  %found.conflict934 = and i1 %bound0932, %bound1933
  %bound0935 = icmp ult ptr %uglygep926, %.4223.lcssa.i.i213
  %bound1936 = icmp ult ptr %uglygep930, %uglygep927
  %found.conflict937 = and i1 %bound0935, %bound1936
  %conflict.rdx938 = or i1 %found.conflict934, %found.conflict937
  %bound0939 = icmp ult ptr %uglygep926, %.025.i332.i.i241
  %bound1940 = icmp ult ptr %uglygep931, %uglygep927
  %found.conflict941 = and i1 %bound0939, %bound1940
  %conflict.rdx942 = or i1 %conflict.rdx938, %found.conflict941
  %bound0943 = icmp ult ptr %uglygep928, %.4223.lcssa.i.i213
  %bound1944 = icmp ult ptr %uglygep930, %uglygep929
  %found.conflict945 = and i1 %bound0943, %bound1944
  %conflict.rdx946 = or i1 %conflict.rdx942, %found.conflict945
  %bound0947 = icmp ult ptr %uglygep928, %.025.i332.i.i241
  %bound1948 = icmp ult ptr %uglygep931, %uglygep929
  %found.conflict949 = and i1 %bound0947, %bound1948
  %conflict.rdx950 = or i1 %conflict.rdx946, %found.conflict949
  %bound0951 = icmp ult ptr %uglygep930, %.025.i332.i.i241
  %bound1952 = icmp ult ptr %uglygep931, %.4223.lcssa.i.i213
  %found.conflict953 = and i1 %bound0951, %bound1952
  %conflict.rdx954 = or i1 %conflict.rdx950, %found.conflict953
  br i1 %conflict.rdx954, label %.lr.ph164.i.i.preheader, label %vector.ph958

vector.ph958:                                     ; preds = %vector.memcheck925
  %2879 = lshr i64 %.0.i333.i.i242, 1
  %n.vec960 = and i64 %2867, 9223372036854775806
  %ind.end961 = and i64 %2879, 1
  %2880 = shl i64 %n.vec960, 3
  %ind.end963 = getelementptr i8, ptr %2851, i64 %2880
  %2881 = mul i64 %n.vec960, -8
  %ind.end965 = getelementptr i8, ptr %.025.i332.i.i241, i64 %2881
  %2882 = shl i64 %n.vec960, 3
  %ind.end967 = getelementptr i8, ptr %.027.i331.i.i240, i64 %2882
  %2883 = mul i64 %n.vec960, -8
  %ind.end969 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2883
  %next.gep9742449 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 9
  %next.gep9762446 = getelementptr i8, ptr %.027.i331.i.i240, i64 8
  %uglygep3496 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -16
  %uglygep3501 = getelementptr i8, ptr %.025.i332.i.i241, i64 -16
  br label %vector.body972

vector.body972:                                   ; preds = %vector.body972, %vector.ph958
  %lsr.iv3506 = phi i64 [ %lsr.iv.next3507, %vector.body972 ], [ %n.vec960, %vector.ph958 ]
  %lsr.iv3504 = phi ptr [ %uglygep3505, %vector.body972 ], [ %next.gep9742449, %vector.ph958 ]
  %lsr.iv3502 = phi ptr [ %uglygep3503, %vector.body972 ], [ %uglygep3501, %vector.ph958 ]
  %lsr.iv3499 = phi ptr [ %uglygep3500, %vector.body972 ], [ %next.gep9762446, %vector.ph958 ]
  %lsr.iv3497 = phi ptr [ %uglygep3498, %vector.body972 ], [ %uglygep3496, %vector.ph958 ]
  %wide.load978 = load <2 x i64>, ptr %lsr.iv3504, align 8, !alias.scope !237, !noalias !240
  %wide.load979 = load <2 x i64>, ptr %lsr.iv3497, align 8, !alias.scope !244, !noalias !245
  %reverse980 = shufflevector <2 x i64> %wide.load979, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse980, ptr %lsr.iv3504, align 8, !alias.scope !237, !noalias !240
  %reverse981 = shufflevector <2 x i64> %wide.load978, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse981, ptr %lsr.iv3497, align 8, !alias.scope !244, !noalias !245
  %wide.load982 = load <2 x i64>, ptr %lsr.iv3502, align 8, !alias.scope !245
  %reverse983 = shufflevector <2 x i64> %wide.load982, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load984 = load <2 x i64>, ptr %lsr.iv3499, align 8, !alias.scope !246, !noalias !247
  %reverse985 = shufflevector <2 x i64> %wide.load984, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse985, ptr %lsr.iv3502, align 8, !alias.scope !245
  store <2 x i64> %reverse983, ptr %lsr.iv3499, align 8, !alias.scope !246, !noalias !247
  %uglygep3498 = getelementptr i8, ptr %lsr.iv3497, i64 -16
  %uglygep3500 = getelementptr i8, ptr %lsr.iv3499, i64 16
  %uglygep3503 = getelementptr i8, ptr %lsr.iv3502, i64 -16
  %uglygep3505 = getelementptr i8, ptr %lsr.iv3504, i64 16
  %lsr.iv.next3507 = add nsw i64 %lsr.iv3506, -2
  %2884 = icmp eq i64 %lsr.iv.next3507, 0
  br i1 %2884, label %middle.block955, label %vector.body972, !llvm.loop !248

middle.block955:                                  ; preds = %vector.body972
  %cmp.n971 = icmp eq i64 %2867, %n.vec960
  br i1 %cmp.n971, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.i.i.preheader

.lr.ph164.i.i.preheader:                          ; preds = %middle.block955, %vector.memcheck925, %vector.scevcheck916, %.lr.ph164.preheader.i.i
  %.1.i338163.i.i.ph = phi i64 [ %ind.end961, %middle.block955 ], [ %2867, %.lr.ph164.preheader.i.i ], [ %2867, %vector.scevcheck916 ], [ %2867, %vector.memcheck925 ]
  %.024.i337162.i.i.ph = phi ptr [ %ind.end963, %middle.block955 ], [ %2851, %.lr.ph164.preheader.i.i ], [ %2851, %vector.scevcheck916 ], [ %2851, %vector.memcheck925 ]
  %.126.i336161.i.i.ph = phi ptr [ %ind.end965, %middle.block955 ], [ %.025.i332.i.i241, %.lr.ph164.preheader.i.i ], [ %.025.i332.i.i241, %vector.scevcheck916 ], [ %.025.i332.i.i241, %vector.memcheck925 ]
  %.128.i335160.i.i.ph = phi ptr [ %ind.end967, %middle.block955 ], [ %.027.i331.i.i240, %.lr.ph164.preheader.i.i ], [ %.027.i331.i.i240, %vector.scevcheck916 ], [ %.027.i331.i.i240, %vector.memcheck925 ]
  %.029.i334159.i.i.ph = phi ptr [ %ind.end969, %middle.block955 ], [ %.4223.lcssa.i.i213, %.lr.ph164.preheader.i.i ], [ %.4223.lcssa.i.i213, %vector.scevcheck916 ], [ %.4223.lcssa.i.i213, %vector.memcheck925 ]
  %uglygep3484 = getelementptr i8, ptr %.024.i337162.i.i.ph, i64 8
  %uglygep3487 = getelementptr i8, ptr %.126.i336161.i.i.ph, i64 -8
  %uglygep3490 = getelementptr i8, ptr %.128.i335160.i.i.ph, i64 8
  %uglygep3493 = getelementptr i8, ptr %.029.i334159.i.i.ph, i64 -8
  br label %.lr.ph164.i.i

2885:                                             ; preds = %sort.quad_reversal.exit329.i.i
  %2886 = load i64, ptr %2857, align 8
  %2887 = load i64, ptr %2859, align 8
  store i64 %2887, ptr %2857, align 8
  %2888 = getelementptr inbounds i8, ptr %2857, i64 -8
  store i64 %2886, ptr %2859, align 8
  %2889 = getelementptr inbounds i8, ptr %2859, i64 8
  %2890 = add nsw i64 %2855, -1
  br label %._crit_edge.i330.i.i

.lr.ph164.i.i:                                    ; preds = %.lr.ph164.i.i, %.lr.ph164.i.i.preheader
  %lsr.iv3494 = phi ptr [ %uglygep3493, %.lr.ph164.i.i.preheader ], [ %uglygep3495, %.lr.ph164.i.i ]
  %lsr.iv3491 = phi ptr [ %uglygep3490, %.lr.ph164.i.i.preheader ], [ %uglygep3492, %.lr.ph164.i.i ]
  %lsr.iv3488 = phi ptr [ %uglygep3487, %.lr.ph164.i.i.preheader ], [ %uglygep3489, %.lr.ph164.i.i ]
  %lsr.iv3485 = phi ptr [ %uglygep3484, %.lr.ph164.i.i.preheader ], [ %uglygep3486, %.lr.ph164.i.i ]
  %.1.i338163.i.i = phi i64 [ %2891, %.lr.ph164.i.i ], [ %.1.i338163.i.i.ph, %.lr.ph164.i.i.preheader ]
  %2891 = add nsw i64 %.1.i338163.i.i, -1
  %2892 = load i64, ptr %lsr.iv3485, align 8
  %2893 = load i64, ptr %lsr.iv3494, align 8
  store i64 %2893, ptr %lsr.iv3485, align 8
  store i64 %2892, ptr %lsr.iv3494, align 8
  %2894 = load i64, ptr %lsr.iv3488, align 8
  %2895 = load i64, ptr %lsr.iv3491, align 8
  store i64 %2895, ptr %lsr.iv3488, align 8
  store i64 %2894, ptr %lsr.iv3491, align 8
  %uglygep3486 = getelementptr i8, ptr %lsr.iv3485, i64 8
  %uglygep3489 = getelementptr i8, ptr %lsr.iv3488, i64 -8
  %uglygep3492 = getelementptr i8, ptr %lsr.iv3491, i64 8
  %uglygep3495 = getelementptr i8, ptr %lsr.iv3494, i64 -8
  %2896 = icmp eq i64 %2891, 0
  br i1 %2896, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph164.i.i, !llvm.loop !249

2897:                                             ; preds = %2589
  %2898 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 1
  %2899 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %2900 = ptrtoint ptr %2898 to i64
  %2901 = sub nuw i64 %2899, %2900
  %2902 = lshr i64 %2901, 4
  %2903 = shl nuw nsw i64 %2902, 3
  %2904 = getelementptr inbounds i8, ptr %2898, i64 %2903
  %2905 = sub nsw i64 0, %2903
  %2906 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %2905
  %2907 = and i64 %2901, 16
  %2908 = icmp eq i64 %2907, 0
  br i1 %2908, label %2932, label %._crit_edge.i340.i.i

._crit_edge.i340.i.i:                             ; preds = %2932, %2897
  %.027.i341.i.i243 = phi ptr [ %2936, %2932 ], [ %2906, %2897 ]
  %.025.i342.i.i244 = phi ptr [ %2935, %2932 ], [ %2904, %2897 ]
  %.0.i343.i.i245 = phi i64 [ %2937, %2932 ], [ %2902, %2897 ]
  %2909 = load i64, ptr %2898, align 8
  %2910 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %2910, ptr %2898, align 8
  store i64 %2909, ptr %.4223.lcssa.i.i213, align 8
  %2911 = load i64, ptr %.025.i342.i.i244, align 8
  %2912 = load i64, ptr %.027.i341.i.i243, align 8
  store i64 %2912, ptr %.025.i342.i.i244, align 8
  store i64 %2911, ptr %.027.i341.i.i243, align 8
  %2913 = icmp ult i64 %.0.i343.i.i245, 2
  br i1 %2913, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.preheader.i.i

.lr.ph152.preheader.i.i:                          ; preds = %._crit_edge.i340.i.i
  %2914 = lshr i64 %.0.i343.i.i245, 1
  %min.iters.check815 = icmp ult i64 %.0.i343.i.i245, 48
  br i1 %min.iters.check815, label %.lr.ph152.i.i.preheader, label %vector.scevcheck774

vector.scevcheck774:                              ; preds = %.lr.ph152.preheader.i.i
  %2915 = add nsw i64 %2914, -1
  %uglygep775 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result777.neg = mul i64 %2915, -8
  %2916 = getelementptr i8, ptr %uglygep775, i64 %mul.result777.neg
  %2917 = icmp ugt ptr %2916, %uglygep775
  %uglygep779 = getelementptr i8, ptr %.025.i342.i.i244, i64 -8
  %mul.result781.neg = mul i64 %2915, -8
  %mul.overflow782 = icmp ugt i64 %2915, 2305843009213693951
  %2918 = getelementptr i8, ptr %uglygep779, i64 %mul.result781.neg
  %2919 = icmp ugt ptr %2918, %uglygep779
  %2920 = or i1 %2919, %mul.overflow782
  %2921 = or i1 %2917, %2920
  br i1 %2921, label %.lr.ph152.i.i.preheader, label %vector.memcheck783

vector.memcheck783:                               ; preds = %vector.scevcheck774
  %uglygep784 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %2922 = shl i64 %2914, 3
  %2923 = add i64 %2922, 9
  %uglygep785 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %2923
  %uglygep786 = getelementptr i8, ptr %.027.i341.i.i243, i64 8
  %2924 = add i64 %2922, 8
  %uglygep787 = getelementptr i8, ptr %.027.i341.i.i243, i64 %2924
  %2925 = mul i64 %2914, -8
  %uglygep788 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2925
  %uglygep789 = getelementptr i8, ptr %.025.i342.i.i244, i64 %2925
  %bound0790 = icmp ult ptr %uglygep784, %uglygep787
  %bound1791 = icmp ult ptr %uglygep786, %uglygep785
  %found.conflict792 = and i1 %bound0790, %bound1791
  %bound0793 = icmp ult ptr %uglygep784, %.4223.lcssa.i.i213
  %bound1794 = icmp ult ptr %uglygep788, %uglygep785
  %found.conflict795 = and i1 %bound0793, %bound1794
  %conflict.rdx796 = or i1 %found.conflict792, %found.conflict795
  %bound0797 = icmp ult ptr %uglygep784, %.025.i342.i.i244
  %bound1798 = icmp ult ptr %uglygep789, %uglygep785
  %found.conflict799 = and i1 %bound0797, %bound1798
  %conflict.rdx800 = or i1 %conflict.rdx796, %found.conflict799
  %bound0801 = icmp ult ptr %uglygep786, %.4223.lcssa.i.i213
  %bound1802 = icmp ult ptr %uglygep788, %uglygep787
  %found.conflict803 = and i1 %bound0801, %bound1802
  %conflict.rdx804 = or i1 %conflict.rdx800, %found.conflict803
  %bound0805 = icmp ult ptr %uglygep786, %.025.i342.i.i244
  %bound1806 = icmp ult ptr %uglygep789, %uglygep787
  %found.conflict807 = and i1 %bound0805, %bound1806
  %conflict.rdx808 = or i1 %conflict.rdx804, %found.conflict807
  %bound0809 = icmp ult ptr %uglygep788, %.025.i342.i.i244
  %bound1810 = icmp ult ptr %uglygep789, %.4223.lcssa.i.i213
  %found.conflict811 = and i1 %bound0809, %bound1810
  %conflict.rdx812 = or i1 %conflict.rdx808, %found.conflict811
  br i1 %conflict.rdx812, label %.lr.ph152.i.i.preheader, label %vector.ph816

vector.ph816:                                     ; preds = %vector.memcheck783
  %2926 = lshr i64 %.0.i343.i.i245, 1
  %n.vec818 = and i64 %2914, 9223372036854775806
  %ind.end819 = and i64 %2926, 1
  %2927 = shl i64 %n.vec818, 3
  %ind.end821 = getelementptr i8, ptr %2898, i64 %2927
  %2928 = mul i64 %n.vec818, -8
  %ind.end823 = getelementptr i8, ptr %.025.i342.i.i244, i64 %2928
  %2929 = shl i64 %n.vec818, 3
  %ind.end825 = getelementptr i8, ptr %.027.i341.i.i243, i64 %2929
  %2930 = mul i64 %n.vec818, -8
  %ind.end827 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2930
  %next.gep8322425 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 9
  %next.gep8342422 = getelementptr i8, ptr %.027.i341.i.i243, i64 8
  %uglygep3544 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -16
  %uglygep3549 = getelementptr i8, ptr %.025.i342.i.i244, i64 -16
  br label %vector.body830

vector.body830:                                   ; preds = %vector.body830, %vector.ph816
  %lsr.iv3554 = phi i64 [ %lsr.iv.next3555, %vector.body830 ], [ %n.vec818, %vector.ph816 ]
  %lsr.iv3552 = phi ptr [ %uglygep3553, %vector.body830 ], [ %next.gep8322425, %vector.ph816 ]
  %lsr.iv3550 = phi ptr [ %uglygep3551, %vector.body830 ], [ %uglygep3549, %vector.ph816 ]
  %lsr.iv3547 = phi ptr [ %uglygep3548, %vector.body830 ], [ %next.gep8342422, %vector.ph816 ]
  %lsr.iv3545 = phi ptr [ %uglygep3546, %vector.body830 ], [ %uglygep3544, %vector.ph816 ]
  %wide.load836 = load <2 x i64>, ptr %lsr.iv3552, align 8, !alias.scope !250, !noalias !253
  %wide.load837 = load <2 x i64>, ptr %lsr.iv3545, align 8, !alias.scope !257, !noalias !258
  %reverse838 = shufflevector <2 x i64> %wide.load837, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse838, ptr %lsr.iv3552, align 8, !alias.scope !250, !noalias !253
  %reverse839 = shufflevector <2 x i64> %wide.load836, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse839, ptr %lsr.iv3545, align 8, !alias.scope !257, !noalias !258
  %wide.load840 = load <2 x i64>, ptr %lsr.iv3550, align 8, !alias.scope !258
  %reverse841 = shufflevector <2 x i64> %wide.load840, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load842 = load <2 x i64>, ptr %lsr.iv3547, align 8, !alias.scope !259, !noalias !260
  %reverse843 = shufflevector <2 x i64> %wide.load842, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse843, ptr %lsr.iv3550, align 8, !alias.scope !258
  store <2 x i64> %reverse841, ptr %lsr.iv3547, align 8, !alias.scope !259, !noalias !260
  %uglygep3546 = getelementptr i8, ptr %lsr.iv3545, i64 -16
  %uglygep3548 = getelementptr i8, ptr %lsr.iv3547, i64 16
  %uglygep3551 = getelementptr i8, ptr %lsr.iv3550, i64 -16
  %uglygep3553 = getelementptr i8, ptr %lsr.iv3552, i64 16
  %lsr.iv.next3555 = add nsw i64 %lsr.iv3554, -2
  %2931 = icmp eq i64 %lsr.iv.next3555, 0
  br i1 %2931, label %middle.block813, label %vector.body830, !llvm.loop !261

middle.block813:                                  ; preds = %vector.body830
  %cmp.n829 = icmp eq i64 %2914, %n.vec818
  br i1 %cmp.n829, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.i.i.preheader

.lr.ph152.i.i.preheader:                          ; preds = %middle.block813, %vector.memcheck783, %vector.scevcheck774, %.lr.ph152.preheader.i.i
  %.1.i348151.i.i.ph = phi i64 [ %ind.end819, %middle.block813 ], [ %2914, %.lr.ph152.preheader.i.i ], [ %2914, %vector.scevcheck774 ], [ %2914, %vector.memcheck783 ]
  %.024.i347150.i.i.ph = phi ptr [ %ind.end821, %middle.block813 ], [ %2898, %.lr.ph152.preheader.i.i ], [ %2898, %vector.scevcheck774 ], [ %2898, %vector.memcheck783 ]
  %.126.i346149.i.i.ph = phi ptr [ %ind.end823, %middle.block813 ], [ %.025.i342.i.i244, %.lr.ph152.preheader.i.i ], [ %.025.i342.i.i244, %vector.scevcheck774 ], [ %.025.i342.i.i244, %vector.memcheck783 ]
  %.128.i345148.i.i.ph = phi ptr [ %ind.end825, %middle.block813 ], [ %.027.i341.i.i243, %.lr.ph152.preheader.i.i ], [ %.027.i341.i.i243, %vector.scevcheck774 ], [ %.027.i341.i.i243, %vector.memcheck783 ]
  %.029.i344147.i.i.ph = phi ptr [ %ind.end827, %middle.block813 ], [ %.4223.lcssa.i.i213, %.lr.ph152.preheader.i.i ], [ %.4223.lcssa.i.i213, %vector.scevcheck774 ], [ %.4223.lcssa.i.i213, %vector.memcheck783 ]
  %uglygep3532 = getelementptr i8, ptr %.024.i347150.i.i.ph, i64 8
  %uglygep3535 = getelementptr i8, ptr %.126.i346149.i.i.ph, i64 -8
  %uglygep3538 = getelementptr i8, ptr %.128.i345148.i.i.ph, i64 8
  %uglygep3541 = getelementptr i8, ptr %.029.i344147.i.i.ph, i64 -8
  br label %.lr.ph152.i.i

2932:                                             ; preds = %2897
  %2933 = load i64, ptr %2904, align 8
  %2934 = load i64, ptr %2906, align 8
  store i64 %2934, ptr %2904, align 8
  %2935 = getelementptr inbounds i8, ptr %2904, i64 -8
  store i64 %2933, ptr %2906, align 8
  %2936 = getelementptr inbounds i8, ptr %2906, i64 8
  %2937 = add nsw i64 %2902, -1
  br label %._crit_edge.i340.i.i

.lr.ph152.i.i:                                    ; preds = %.lr.ph152.i.i, %.lr.ph152.i.i.preheader
  %lsr.iv3542 = phi ptr [ %uglygep3541, %.lr.ph152.i.i.preheader ], [ %uglygep3543, %.lr.ph152.i.i ]
  %lsr.iv3539 = phi ptr [ %uglygep3538, %.lr.ph152.i.i.preheader ], [ %uglygep3540, %.lr.ph152.i.i ]
  %lsr.iv3536 = phi ptr [ %uglygep3535, %.lr.ph152.i.i.preheader ], [ %uglygep3537, %.lr.ph152.i.i ]
  %lsr.iv3533 = phi ptr [ %uglygep3532, %.lr.ph152.i.i.preheader ], [ %uglygep3534, %.lr.ph152.i.i ]
  %.1.i348151.i.i = phi i64 [ %2938, %.lr.ph152.i.i ], [ %.1.i348151.i.i.ph, %.lr.ph152.i.i.preheader ]
  %2938 = add nsw i64 %.1.i348151.i.i, -1
  %2939 = load i64, ptr %lsr.iv3533, align 8
  %2940 = load i64, ptr %lsr.iv3542, align 8
  store i64 %2940, ptr %lsr.iv3533, align 8
  store i64 %2939, ptr %lsr.iv3542, align 8
  %2941 = load i64, ptr %lsr.iv3536, align 8
  %2942 = load i64, ptr %lsr.iv3539, align 8
  store i64 %2942, ptr %lsr.iv3536, align 8
  store i64 %2941, ptr %lsr.iv3539, align 8
  %uglygep3534 = getelementptr i8, ptr %lsr.iv3533, i64 8
  %uglygep3537 = getelementptr i8, ptr %lsr.iv3536, i64 -8
  %uglygep3540 = getelementptr i8, ptr %lsr.iv3539, i64 8
  %uglygep3543 = getelementptr i8, ptr %lsr.iv3542, i64 -8
  %2943 = icmp eq i64 %2938, 0
  br i1 %2943, label %sort.quad_reversal.exit299.i.i, label %.lr.ph152.i.i, !llvm.loop !262

2944:                                             ; preds = %2589
  %2945 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %2946 = ptrtoint ptr %88 to i64
  %2947 = sub nuw i64 %2945, %2946
  %2948 = lshr i64 %2947, 4
  %2949 = shl nuw nsw i64 %2948, 3
  %2950 = getelementptr inbounds i8, ptr %88, i64 %2949
  %2951 = sub nsw i64 0, %2949
  %2952 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %2951
  %2953 = and i64 %2947, 16
  %2954 = icmp eq i64 %2953, 0
  br i1 %2954, label %2977, label %._crit_edge.i350.i.i

._crit_edge.i350.i.i:                             ; preds = %2977, %2944
  %.027.i351.i.i = phi ptr [ %2981, %2977 ], [ %2952, %2944 ]
  %.025.i352.i.i = phi ptr [ %2980, %2977 ], [ %2950, %2944 ]
  %.0.i353.i.i = phi i64 [ %2982, %2977 ], [ %2948, %2944 ]
  %2955 = load i64, ptr %88, align 8
  %2956 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %2956, ptr %88, align 8
  store i64 %2955, ptr %.4223.lcssa.i.i213, align 8
  %2957 = load i64, ptr %.025.i352.i.i, align 8
  %2958 = load i64, ptr %.027.i351.i.i, align 8
  store i64 %2958, ptr %.025.i352.i.i, align 8
  store i64 %2957, ptr %.027.i351.i.i, align 8
  %2959 = icmp ult i64 %.0.i353.i.i, 2
  br i1 %2959, label %sort.flux_analyze__anon_14348.exit.i, label %.lr.ph146.preheader.i.i

.lr.ph146.preheader.i.i:                          ; preds = %._crit_edge.i350.i.i
  %2960 = lshr i64 %.0.i353.i.i, 1
  %min.iters.check748 = icmp ult i64 %.0.i353.i.i, 48
  br i1 %min.iters.check748, label %.lr.ph146.i.i.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph146.preheader.i.i
  %2961 = add nsw i64 %2960, -1
  %uglygep = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result.neg = mul i64 %2961, -8
  %2962 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %2963 = icmp ugt ptr %2962, %uglygep
  %uglygep717 = getelementptr i8, ptr %.025.i352.i.i, i64 -8
  %mul.result719.neg = mul i64 %2961, -8
  %mul.overflow720 = icmp ugt i64 %2961, 2305843009213693951
  %2964 = getelementptr i8, ptr %uglygep717, i64 %mul.result719.neg
  %2965 = icmp ugt ptr %2964, %uglygep717
  %2966 = or i1 %2965, %mul.overflow720
  %2967 = or i1 %2963, %2966
  br i1 %2967, label %.lr.ph146.i.i.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %uglygep721 = getelementptr i8, ptr %88, i64 8
  %2968 = shl i64 %2960, 3
  %2969 = add i64 %2968, 8
  %uglygep722 = getelementptr i8, ptr %88, i64 %2969
  %uglygep723 = getelementptr i8, ptr %.027.i351.i.i, i64 8
  %uglygep724 = getelementptr i8, ptr %.027.i351.i.i, i64 %2969
  %2970 = mul i64 %2960, -8
  %uglygep725 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2970
  %uglygep726 = getelementptr i8, ptr %.025.i352.i.i, i64 %2970
  %bound0 = icmp ult ptr %uglygep721, %uglygep724
  %bound1 = icmp ult ptr %uglygep723, %uglygep722
  %found.conflict = and i1 %bound0, %bound1
  %bound0727 = icmp ult ptr %uglygep721, %.4223.lcssa.i.i213
  %bound1728 = icmp ult ptr %uglygep725, %uglygep722
  %found.conflict729 = and i1 %bound0727, %bound1728
  %conflict.rdx = or i1 %found.conflict, %found.conflict729
  %bound0730 = icmp ult ptr %uglygep721, %.025.i352.i.i
  %bound1731 = icmp ult ptr %uglygep726, %uglygep722
  %found.conflict732 = and i1 %bound0730, %bound1731
  %conflict.rdx733 = or i1 %conflict.rdx, %found.conflict732
  %bound0734 = icmp ult ptr %uglygep723, %.4223.lcssa.i.i213
  %bound1735 = icmp ult ptr %uglygep725, %uglygep724
  %found.conflict736 = and i1 %bound0734, %bound1735
  %conflict.rdx737 = or i1 %conflict.rdx733, %found.conflict736
  %bound0738 = icmp ult ptr %uglygep723, %.025.i352.i.i
  %bound1739 = icmp ult ptr %uglygep726, %uglygep724
  %found.conflict740 = and i1 %bound0738, %bound1739
  %conflict.rdx741 = or i1 %conflict.rdx737, %found.conflict740
  %bound0742 = icmp ult ptr %uglygep725, %.025.i352.i.i
  %bound1743 = icmp ult ptr %uglygep726, %.4223.lcssa.i.i213
  %found.conflict744 = and i1 %bound0742, %bound1743
  %conflict.rdx745 = or i1 %conflict.rdx741, %found.conflict744
  br i1 %conflict.rdx745, label %.lr.ph146.i.i.preheader, label %vector.ph749

vector.ph749:                                     ; preds = %vector.memcheck
  %2971 = lshr i64 %.0.i353.i.i, 1
  %n.vec751 = and i64 %2960, 9223372036854775806
  %ind.end = and i64 %2971, 1
  %2972 = shl i64 %n.vec751, 3
  %ind.end753 = getelementptr i8, ptr %88, i64 %2972
  %2973 = mul i64 %n.vec751, -8
  %ind.end755 = getelementptr i8, ptr %.025.i352.i.i, i64 %2973
  %2974 = shl i64 %n.vec751, 3
  %ind.end757 = getelementptr i8, ptr %.027.i351.i.i, i64 %2974
  %2975 = mul i64 %n.vec751, -8
  %ind.end759 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %2975
  %next.gep2421 = getelementptr i8, ptr %88, i64 8
  %next.gep7652418 = getelementptr i8, ptr %.027.i351.i.i, i64 8
  %uglygep3568 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -16
  %uglygep3573 = getelementptr i8, ptr %.025.i352.i.i, i64 -16
  br label %vector.body762

vector.body762:                                   ; preds = %vector.body762, %vector.ph749
  %lsr.iv3578 = phi i64 [ %lsr.iv.next3579, %vector.body762 ], [ %n.vec751, %vector.ph749 ]
  %lsr.iv3576 = phi ptr [ %uglygep3577, %vector.body762 ], [ %next.gep2421, %vector.ph749 ]
  %lsr.iv3574 = phi ptr [ %uglygep3575, %vector.body762 ], [ %uglygep3573, %vector.ph749 ]
  %lsr.iv3571 = phi ptr [ %uglygep3572, %vector.body762 ], [ %next.gep7652418, %vector.ph749 ]
  %lsr.iv3569 = phi ptr [ %uglygep3570, %vector.body762 ], [ %uglygep3568, %vector.ph749 ]
  %wide.load = load <2 x i64>, ptr %lsr.iv3576, align 8, !alias.scope !263, !noalias !266
  %wide.load767 = load <2 x i64>, ptr %lsr.iv3569, align 8, !alias.scope !270, !noalias !271
  %reverse = shufflevector <2 x i64> %wide.load767, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %lsr.iv3576, align 8, !alias.scope !263, !noalias !266
  %reverse768 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse768, ptr %lsr.iv3569, align 8, !alias.scope !270, !noalias !271
  %wide.load769 = load <2 x i64>, ptr %lsr.iv3574, align 8, !alias.scope !271
  %reverse770 = shufflevector <2 x i64> %wide.load769, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load771 = load <2 x i64>, ptr %lsr.iv3571, align 8, !alias.scope !272, !noalias !273
  %reverse772 = shufflevector <2 x i64> %wide.load771, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse772, ptr %lsr.iv3574, align 8, !alias.scope !271
  store <2 x i64> %reverse770, ptr %lsr.iv3571, align 8, !alias.scope !272, !noalias !273
  %uglygep3570 = getelementptr i8, ptr %lsr.iv3569, i64 -16
  %uglygep3572 = getelementptr i8, ptr %lsr.iv3571, i64 16
  %uglygep3575 = getelementptr i8, ptr %lsr.iv3574, i64 -16
  %uglygep3577 = getelementptr i8, ptr %lsr.iv3576, i64 16
  %lsr.iv.next3579 = add nsw i64 %lsr.iv3578, -2
  %2976 = icmp eq i64 %lsr.iv.next3579, 0
  br i1 %2976, label %middle.block746, label %vector.body762, !llvm.loop !274

middle.block746:                                  ; preds = %vector.body762
  %cmp.n761 = icmp eq i64 %2960, %n.vec751
  br i1 %cmp.n761, label %sort.flux_analyze__anon_14348.exit.i, label %.lr.ph146.i.i.preheader

.lr.ph146.i.i.preheader:                          ; preds = %middle.block746, %vector.memcheck, %vector.scevcheck, %.lr.ph146.preheader.i.i
  %.1.i358145.i.i.ph = phi i64 [ %ind.end, %middle.block746 ], [ %2960, %.lr.ph146.preheader.i.i ], [ %2960, %vector.scevcheck ], [ %2960, %vector.memcheck ]
  %.024.i357144.i.i.ph = phi ptr [ %ind.end753, %middle.block746 ], [ %88, %.lr.ph146.preheader.i.i ], [ %88, %vector.scevcheck ], [ %88, %vector.memcheck ]
  %.126.i356143.i.i.ph = phi ptr [ %ind.end755, %middle.block746 ], [ %.025.i352.i.i, %.lr.ph146.preheader.i.i ], [ %.025.i352.i.i, %vector.scevcheck ], [ %.025.i352.i.i, %vector.memcheck ]
  %.128.i355142.i.i.ph = phi ptr [ %ind.end757, %middle.block746 ], [ %.027.i351.i.i, %.lr.ph146.preheader.i.i ], [ %.027.i351.i.i, %vector.scevcheck ], [ %.027.i351.i.i, %vector.memcheck ]
  %.029.i354141.i.i.ph = phi ptr [ %ind.end759, %middle.block746 ], [ %.4223.lcssa.i.i213, %.lr.ph146.preheader.i.i ], [ %.4223.lcssa.i.i213, %vector.scevcheck ], [ %.4223.lcssa.i.i213, %vector.memcheck ]
  %uglygep3556 = getelementptr i8, ptr %.024.i357144.i.i.ph, i64 8
  %uglygep3559 = getelementptr i8, ptr %.126.i356143.i.i.ph, i64 -8
  %uglygep3562 = getelementptr i8, ptr %.128.i355142.i.i.ph, i64 8
  %uglygep3565 = getelementptr i8, ptr %.029.i354141.i.i.ph, i64 -8
  br label %.lr.ph146.i.i

2977:                                             ; preds = %2944
  %2978 = load i64, ptr %2950, align 8
  %2979 = load i64, ptr %2952, align 8
  store i64 %2979, ptr %2950, align 8
  %2980 = getelementptr inbounds i8, ptr %2950, i64 -8
  store i64 %2978, ptr %2952, align 8
  %2981 = getelementptr inbounds i8, ptr %2952, i64 8
  %2982 = add nsw i64 %2948, -1
  br label %._crit_edge.i350.i.i

.lr.ph146.i.i:                                    ; preds = %.lr.ph146.i.i, %.lr.ph146.i.i.preheader
  %lsr.iv3566 = phi ptr [ %uglygep3565, %.lr.ph146.i.i.preheader ], [ %uglygep3567, %.lr.ph146.i.i ]
  %lsr.iv3563 = phi ptr [ %uglygep3562, %.lr.ph146.i.i.preheader ], [ %uglygep3564, %.lr.ph146.i.i ]
  %lsr.iv3560 = phi ptr [ %uglygep3559, %.lr.ph146.i.i.preheader ], [ %uglygep3561, %.lr.ph146.i.i ]
  %lsr.iv3557 = phi ptr [ %uglygep3556, %.lr.ph146.i.i.preheader ], [ %uglygep3558, %.lr.ph146.i.i ]
  %.1.i358145.i.i = phi i64 [ %2983, %.lr.ph146.i.i ], [ %.1.i358145.i.i.ph, %.lr.ph146.i.i.preheader ]
  %2983 = add nsw i64 %.1.i358145.i.i, -1
  %2984 = load i64, ptr %lsr.iv3557, align 8
  %2985 = load i64, ptr %lsr.iv3566, align 8
  store i64 %2985, ptr %lsr.iv3557, align 8
  store i64 %2984, ptr %lsr.iv3566, align 8
  %2986 = load i64, ptr %lsr.iv3560, align 8
  %2987 = load i64, ptr %lsr.iv3563, align 8
  store i64 %2987, ptr %lsr.iv3560, align 8
  store i64 %2986, ptr %lsr.iv3563, align 8
  %uglygep3558 = getelementptr i8, ptr %lsr.iv3557, i64 8
  %uglygep3561 = getelementptr i8, ptr %lsr.iv3560, i64 -8
  %uglygep3564 = getelementptr i8, ptr %lsr.iv3563, i64 8
  %uglygep3567 = getelementptr i8, ptr %lsr.iv3566, i64 -8
  %2988 = icmp eq i64 %2983, 0
  br i1 %2988, label %sort.flux_analyze__anon_14348.exit.i, label %.lr.ph146.i.i, !llvm.loop !275

sort.quad_reversal.exit369.i.i:                   ; preds = %.lr.ph194.i.i, %middle.block1310, %._crit_edge.i360.i.i, %sort.quad_reversal.exit299.i.i
  %.5233.i.i246 = phi i64 [ %.2230.lcssa.i.i212, %sort.quad_reversal.exit299.i.i ], [ 0, %._crit_edge.i360.i.i ], [ 0, %middle.block1310 ], [ 0, %.lr.ph194.i.i ]
  %2989 = icmp eq i64 %2554, 1
  %2990 = icmp ne i64 %.5239.i.i235, 0
  %2991 = and i1 %2989, %2990
  br i1 %2991, label %3040, label %sort.quad_reversal.exit379.i.i

2992:                                             ; preds = %sort.quad_reversal.exit299.i.i
  %2993 = ptrtoint ptr %.3.lcssa.i.i216 to i64
  %2994 = ptrtoint ptr %88 to i64
  %2995 = sub nuw i64 %2993, %2994
  %2996 = lshr i64 %2995, 4
  %2997 = shl nuw nsw i64 %2996, 3
  %2998 = getelementptr inbounds i8, ptr %88, i64 %2997
  %2999 = sub nsw i64 0, %2997
  %3000 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 %2999
  %3001 = and i64 %2995, 16
  %3002 = icmp eq i64 %3001, 0
  br i1 %3002, label %3025, label %._crit_edge.i360.i.i

._crit_edge.i360.i.i:                             ; preds = %3025, %2992
  %.027.i361.i.i = phi ptr [ %3029, %3025 ], [ %3000, %2992 ]
  %.025.i362.i.i = phi ptr [ %3028, %3025 ], [ %2998, %2992 ]
  %.0.i363.i.i = phi i64 [ %3030, %3025 ], [ %2996, %2992 ]
  %3003 = load i64, ptr %88, align 8
  %3004 = load i64, ptr %.3.lcssa.i.i216, align 8
  store i64 %3004, ptr %88, align 8
  store i64 %3003, ptr %.3.lcssa.i.i216, align 8
  %3005 = load i64, ptr %.025.i362.i.i, align 8
  %3006 = load i64, ptr %.027.i361.i.i, align 8
  store i64 %3006, ptr %.025.i362.i.i, align 8
  store i64 %3005, ptr %.027.i361.i.i, align 8
  %3007 = icmp ult i64 %.0.i363.i.i, 2
  br i1 %3007, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.preheader.i.i

.lr.ph194.preheader.i.i:                          ; preds = %._crit_edge.i360.i.i
  %3008 = lshr i64 %.0.i363.i.i, 1
  %min.iters.check1312 = icmp ult i64 %.0.i363.i.i, 48
  br i1 %min.iters.check1312, label %.lr.ph194.i.i.preheader, label %vector.scevcheck1271

vector.scevcheck1271:                             ; preds = %.lr.ph194.preheader.i.i
  %3009 = add nsw i64 %3008, -1
  %uglygep1272 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 -8
  %mul.result1274.neg = mul i64 %3009, -8
  %3010 = getelementptr i8, ptr %uglygep1272, i64 %mul.result1274.neg
  %3011 = icmp ugt ptr %3010, %uglygep1272
  %uglygep1276 = getelementptr i8, ptr %.025.i362.i.i, i64 -8
  %mul.result1278.neg = mul i64 %3009, -8
  %mul.overflow1279 = icmp ugt i64 %3009, 2305843009213693951
  %3012 = getelementptr i8, ptr %uglygep1276, i64 %mul.result1278.neg
  %3013 = icmp ugt ptr %3012, %uglygep1276
  %3014 = or i1 %3013, %mul.overflow1279
  %3015 = or i1 %3011, %3014
  br i1 %3015, label %.lr.ph194.i.i.preheader, label %vector.memcheck1280

vector.memcheck1280:                              ; preds = %vector.scevcheck1271
  %uglygep1281 = getelementptr i8, ptr %88, i64 8
  %3016 = shl i64 %3008, 3
  %3017 = add i64 %3016, 8
  %uglygep1282 = getelementptr i8, ptr %88, i64 %3017
  %uglygep1283 = getelementptr i8, ptr %.027.i361.i.i, i64 8
  %uglygep1284 = getelementptr i8, ptr %.027.i361.i.i, i64 %3017
  %3018 = mul i64 %3008, -8
  %uglygep1285 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3018
  %uglygep1286 = getelementptr i8, ptr %.025.i362.i.i, i64 %3018
  %bound01287 = icmp ult ptr %uglygep1281, %uglygep1284
  %bound11288 = icmp ult ptr %uglygep1283, %uglygep1282
  %found.conflict1289 = and i1 %bound01287, %bound11288
  %bound01290 = icmp ult ptr %uglygep1281, %.3.lcssa.i.i216
  %bound11291 = icmp ult ptr %uglygep1285, %uglygep1282
  %found.conflict1292 = and i1 %bound01290, %bound11291
  %conflict.rdx1293 = or i1 %found.conflict1289, %found.conflict1292
  %bound01294 = icmp ult ptr %uglygep1281, %.025.i362.i.i
  %bound11295 = icmp ult ptr %uglygep1286, %uglygep1282
  %found.conflict1296 = and i1 %bound01294, %bound11295
  %conflict.rdx1297 = or i1 %conflict.rdx1293, %found.conflict1296
  %bound01298 = icmp ult ptr %uglygep1283, %.3.lcssa.i.i216
  %bound11299 = icmp ult ptr %uglygep1285, %uglygep1284
  %found.conflict1300 = and i1 %bound01298, %bound11299
  %conflict.rdx1301 = or i1 %conflict.rdx1297, %found.conflict1300
  %bound01302 = icmp ult ptr %uglygep1283, %.025.i362.i.i
  %bound11303 = icmp ult ptr %uglygep1286, %uglygep1284
  %found.conflict1304 = and i1 %bound01302, %bound11303
  %conflict.rdx1305 = or i1 %conflict.rdx1301, %found.conflict1304
  %bound01306 = icmp ult ptr %uglygep1285, %.025.i362.i.i
  %bound11307 = icmp ult ptr %uglygep1286, %.3.lcssa.i.i216
  %found.conflict1308 = and i1 %bound01306, %bound11307
  %conflict.rdx1309 = or i1 %conflict.rdx1305, %found.conflict1308
  br i1 %conflict.rdx1309, label %.lr.ph194.i.i.preheader, label %vector.ph1313

vector.ph1313:                                    ; preds = %vector.memcheck1280
  %3019 = lshr i64 %.0.i363.i.i, 1
  %n.vec1315 = and i64 %3008, 9223372036854775806
  %ind.end1316 = and i64 %3019, 1
  %3020 = shl i64 %n.vec1315, 3
  %ind.end1318 = getelementptr i8, ptr %88, i64 %3020
  %3021 = mul i64 %n.vec1315, -8
  %ind.end1320 = getelementptr i8, ptr %.025.i362.i.i, i64 %3021
  %3022 = shl i64 %n.vec1315, 3
  %ind.end1322 = getelementptr i8, ptr %.027.i361.i.i, i64 %3022
  %3023 = mul i64 %n.vec1315, -8
  %ind.end1324 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3023
  %next.gep13292441 = getelementptr i8, ptr %88, i64 8
  %next.gep13312438 = getelementptr i8, ptr %.027.i361.i.i, i64 8
  %uglygep3376 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 -16
  %uglygep3381 = getelementptr i8, ptr %.025.i362.i.i, i64 -16
  br label %vector.body1327

vector.body1327:                                  ; preds = %vector.body1327, %vector.ph1313
  %lsr.iv3386 = phi i64 [ %lsr.iv.next3387, %vector.body1327 ], [ %n.vec1315, %vector.ph1313 ]
  %lsr.iv3384 = phi ptr [ %uglygep3385, %vector.body1327 ], [ %next.gep13292441, %vector.ph1313 ]
  %lsr.iv3382 = phi ptr [ %uglygep3383, %vector.body1327 ], [ %uglygep3381, %vector.ph1313 ]
  %lsr.iv3379 = phi ptr [ %uglygep3380, %vector.body1327 ], [ %next.gep13312438, %vector.ph1313 ]
  %lsr.iv3377 = phi ptr [ %uglygep3378, %vector.body1327 ], [ %uglygep3376, %vector.ph1313 ]
  %wide.load1333 = load <2 x i64>, ptr %lsr.iv3384, align 8, !alias.scope !276, !noalias !279
  %wide.load1334 = load <2 x i64>, ptr %lsr.iv3377, align 8, !alias.scope !283, !noalias !284
  %reverse1335 = shufflevector <2 x i64> %wide.load1334, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1335, ptr %lsr.iv3384, align 8, !alias.scope !276, !noalias !279
  %reverse1336 = shufflevector <2 x i64> %wide.load1333, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1336, ptr %lsr.iv3377, align 8, !alias.scope !283, !noalias !284
  %wide.load1337 = load <2 x i64>, ptr %lsr.iv3382, align 8, !alias.scope !284
  %reverse1338 = shufflevector <2 x i64> %wide.load1337, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1339 = load <2 x i64>, ptr %lsr.iv3379, align 8, !alias.scope !285, !noalias !286
  %reverse1340 = shufflevector <2 x i64> %wide.load1339, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1340, ptr %lsr.iv3382, align 8, !alias.scope !284
  store <2 x i64> %reverse1338, ptr %lsr.iv3379, align 8, !alias.scope !285, !noalias !286
  %uglygep3378 = getelementptr i8, ptr %lsr.iv3377, i64 -16
  %uglygep3380 = getelementptr i8, ptr %lsr.iv3379, i64 16
  %uglygep3383 = getelementptr i8, ptr %lsr.iv3382, i64 -16
  %uglygep3385 = getelementptr i8, ptr %lsr.iv3384, i64 16
  %lsr.iv.next3387 = add nsw i64 %lsr.iv3386, -2
  %3024 = icmp eq i64 %lsr.iv.next3387, 0
  br i1 %3024, label %middle.block1310, label %vector.body1327, !llvm.loop !287

middle.block1310:                                 ; preds = %vector.body1327
  %cmp.n1326 = icmp eq i64 %3008, %n.vec1315
  br i1 %cmp.n1326, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.i.i.preheader

.lr.ph194.i.i.preheader:                          ; preds = %middle.block1310, %vector.memcheck1280, %vector.scevcheck1271, %.lr.ph194.preheader.i.i
  %.1.i368193.i.i.ph = phi i64 [ %ind.end1316, %middle.block1310 ], [ %3008, %.lr.ph194.preheader.i.i ], [ %3008, %vector.scevcheck1271 ], [ %3008, %vector.memcheck1280 ]
  %.024.i367192.i.i.ph = phi ptr [ %ind.end1318, %middle.block1310 ], [ %88, %.lr.ph194.preheader.i.i ], [ %88, %vector.scevcheck1271 ], [ %88, %vector.memcheck1280 ]
  %.126.i366191.i.i.ph = phi ptr [ %ind.end1320, %middle.block1310 ], [ %.025.i362.i.i, %.lr.ph194.preheader.i.i ], [ %.025.i362.i.i, %vector.scevcheck1271 ], [ %.025.i362.i.i, %vector.memcheck1280 ]
  %.128.i365190.i.i.ph = phi ptr [ %ind.end1322, %middle.block1310 ], [ %.027.i361.i.i, %.lr.ph194.preheader.i.i ], [ %.027.i361.i.i, %vector.scevcheck1271 ], [ %.027.i361.i.i, %vector.memcheck1280 ]
  %.029.i364189.i.i.ph = phi ptr [ %ind.end1324, %middle.block1310 ], [ %.3.lcssa.i.i216, %.lr.ph194.preheader.i.i ], [ %.3.lcssa.i.i216, %vector.scevcheck1271 ], [ %.3.lcssa.i.i216, %vector.memcheck1280 ]
  %uglygep3364 = getelementptr i8, ptr %.024.i367192.i.i.ph, i64 8
  %uglygep3367 = getelementptr i8, ptr %.126.i366191.i.i.ph, i64 -8
  %uglygep3370 = getelementptr i8, ptr %.128.i365190.i.i.ph, i64 8
  %uglygep3373 = getelementptr i8, ptr %.029.i364189.i.i.ph, i64 -8
  br label %.lr.ph194.i.i

3025:                                             ; preds = %2992
  %3026 = load i64, ptr %2998, align 8
  %3027 = load i64, ptr %3000, align 8
  store i64 %3027, ptr %2998, align 8
  %3028 = getelementptr inbounds i8, ptr %2998, i64 -8
  store i64 %3026, ptr %3000, align 8
  %3029 = getelementptr inbounds i8, ptr %3000, i64 8
  %3030 = add nsw i64 %2996, -1
  br label %._crit_edge.i360.i.i

.lr.ph194.i.i:                                    ; preds = %.lr.ph194.i.i, %.lr.ph194.i.i.preheader
  %lsr.iv3374 = phi ptr [ %uglygep3373, %.lr.ph194.i.i.preheader ], [ %uglygep3375, %.lr.ph194.i.i ]
  %lsr.iv3371 = phi ptr [ %uglygep3370, %.lr.ph194.i.i.preheader ], [ %uglygep3372, %.lr.ph194.i.i ]
  %lsr.iv3368 = phi ptr [ %uglygep3367, %.lr.ph194.i.i.preheader ], [ %uglygep3369, %.lr.ph194.i.i ]
  %lsr.iv3365 = phi ptr [ %uglygep3364, %.lr.ph194.i.i.preheader ], [ %uglygep3366, %.lr.ph194.i.i ]
  %.1.i368193.i.i = phi i64 [ %3031, %.lr.ph194.i.i ], [ %.1.i368193.i.i.ph, %.lr.ph194.i.i.preheader ]
  %3031 = add nsw i64 %.1.i368193.i.i, -1
  %3032 = load i64, ptr %lsr.iv3365, align 8
  %3033 = load i64, ptr %lsr.iv3374, align 8
  store i64 %3033, ptr %lsr.iv3365, align 8
  store i64 %3032, ptr %lsr.iv3374, align 8
  %3034 = load i64, ptr %lsr.iv3368, align 8
  %3035 = load i64, ptr %lsr.iv3371, align 8
  store i64 %3035, ptr %lsr.iv3368, align 8
  store i64 %3034, ptr %lsr.iv3371, align 8
  %uglygep3366 = getelementptr i8, ptr %lsr.iv3365, i64 8
  %uglygep3369 = getelementptr i8, ptr %lsr.iv3368, i64 -8
  %uglygep3372 = getelementptr i8, ptr %lsr.iv3371, i64 8
  %uglygep3375 = getelementptr i8, ptr %lsr.iv3374, i64 -8
  %3036 = icmp eq i64 %3031, 0
  br i1 %3036, label %sort.quad_reversal.exit369.i.i, label %.lr.ph194.i.i, !llvm.loop !288

sort.quad_reversal.exit379.i.i:                   ; preds = %.lr.ph200.i.i, %middle.block1381, %._crit_edge.i370.i.i, %sort.quad_reversal.exit369.i.i, %.lr.ph188.i.i, %middle.block1239, %._crit_edge.i.i.i239
  %.523372.i.i = phi i64 [ %.5233.i.i246, %sort.quad_reversal.exit369.i.i ], [ %.5233.i.i246, %._crit_edge.i370.i.i ], [ 0, %._crit_edge.i.i.i239 ], [ %.5233.i.i246, %middle.block1381 ], [ 0, %middle.block1239 ], [ %.5233.i.i246, %.lr.ph200.i.i ], [ 0, %.lr.ph188.i.i ]
  %.52536271.i.i = phi i64 [ %.5253.i.i233, %sort.quad_reversal.exit369.i.i ], [ %.5253.i.i233, %._crit_edge.i370.i.i ], [ %.3251.lcssa.i.i209, %._crit_edge.i.i.i239 ], [ %.5253.i.i233, %middle.block1381 ], [ %.3251.lcssa.i.i209, %middle.block1239 ], [ %.5253.i.i233, %.lr.ph200.i.i ], [ %.3251.lcssa.i.i209, %.lr.ph188.i.i ]
  %.52466370.i.i = phi i64 [ %.5246.i.i234, %sort.quad_reversal.exit369.i.i ], [ %.5246.i.i234, %._crit_edge.i370.i.i ], [ %.3244.lcssa.i.i210, %._crit_edge.i.i.i239 ], [ %.5246.i.i234, %middle.block1381 ], [ %.3244.lcssa.i.i210, %middle.block1239 ], [ %.5246.i.i234, %.lr.ph200.i.i ], [ %.3244.lcssa.i.i210, %.lr.ph188.i.i ]
  %.6240.i.i247 = phi i64 [ %.5239.i.i235, %sort.quad_reversal.exit369.i.i ], [ 0, %._crit_edge.i370.i.i ], [ 0, %._crit_edge.i.i.i239 ], [ 0, %middle.block1381 ], [ 0, %middle.block1239 ], [ 0, %.lr.ph200.i.i ], [ 0, %.lr.ph188.i.i ]
  %3037 = icmp eq i64 %2556, 1
  %3038 = icmp ne i64 %.52466370.i.i, 0
  %3039 = and i1 %3037, %3038
  br i1 %3039, label %3089, label %sort.quad_reversal.exit389.i.i

3040:                                             ; preds = %sort.quad_reversal.exit369.i.i
  %3041 = ptrtoint ptr %.4.lcssa.i.i215 to i64
  %3042 = ptrtoint ptr %2594 to i64
  %3043 = sub nuw i64 %3041, %3042
  %3044 = lshr i64 %3043, 4
  %3045 = shl nuw nsw i64 %3044, 3
  %3046 = getelementptr inbounds i8, ptr %2594, i64 %3045
  %3047 = sub nsw i64 0, %3045
  %3048 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 %3047
  %3049 = and i64 %3043, 16
  %3050 = icmp eq i64 %3049, 0
  br i1 %3050, label %3074, label %._crit_edge.i370.i.i

._crit_edge.i370.i.i:                             ; preds = %3074, %3040
  %.027.i371.i.i = phi ptr [ %3078, %3074 ], [ %3048, %3040 ]
  %.025.i372.i.i = phi ptr [ %3077, %3074 ], [ %3046, %3040 ]
  %.0.i373.i.i = phi i64 [ %3079, %3074 ], [ %3044, %3040 ]
  %3051 = load i64, ptr %2594, align 8
  %3052 = load i64, ptr %.4.lcssa.i.i215, align 8
  store i64 %3052, ptr %2594, align 8
  store i64 %3051, ptr %.4.lcssa.i.i215, align 8
  %3053 = load i64, ptr %.025.i372.i.i, align 8
  %3054 = load i64, ptr %.027.i371.i.i, align 8
  store i64 %3054, ptr %.025.i372.i.i, align 8
  store i64 %3053, ptr %.027.i371.i.i, align 8
  %3055 = icmp ult i64 %.0.i373.i.i, 2
  br i1 %3055, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.preheader.i.i

.lr.ph200.preheader.i.i:                          ; preds = %._crit_edge.i370.i.i
  %3056 = lshr i64 %.0.i373.i.i, 1
  %min.iters.check1383 = icmp ult i64 %.0.i373.i.i, 48
  br i1 %min.iters.check1383, label %.lr.ph200.i.i.preheader, label %vector.scevcheck1342

vector.scevcheck1342:                             ; preds = %.lr.ph200.preheader.i.i
  %3057 = add nsw i64 %3056, -1
  %uglygep1343 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -8
  %mul.result1345.neg = mul i64 %3057, -8
  %3058 = getelementptr i8, ptr %uglygep1343, i64 %mul.result1345.neg
  %3059 = icmp ugt ptr %3058, %uglygep1343
  %uglygep1347 = getelementptr i8, ptr %.025.i372.i.i, i64 -8
  %mul.result1349.neg = mul i64 %3057, -8
  %mul.overflow1350 = icmp ugt i64 %3057, 2305843009213693951
  %3060 = getelementptr i8, ptr %uglygep1347, i64 %mul.result1349.neg
  %3061 = icmp ugt ptr %3060, %uglygep1347
  %3062 = or i1 %3061, %mul.overflow1350
  %3063 = or i1 %3059, %3062
  br i1 %3063, label %.lr.ph200.i.i.preheader, label %vector.memcheck1351

vector.memcheck1351:                              ; preds = %vector.scevcheck1342
  %uglygep1352 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 16
  %3064 = shl i64 %3056, 3
  %3065 = add i64 %3064, 16
  %uglygep1353 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 %3065
  %uglygep1354 = getelementptr i8, ptr %.027.i371.i.i, i64 8
  %3066 = add i64 %3064, 8
  %uglygep1355 = getelementptr i8, ptr %.027.i371.i.i, i64 %3066
  %3067 = mul i64 %3056, -8
  %uglygep1356 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3067
  %uglygep1357 = getelementptr i8, ptr %.025.i372.i.i, i64 %3067
  %bound01358 = icmp ult ptr %uglygep1352, %uglygep1355
  %bound11359 = icmp ult ptr %uglygep1354, %uglygep1353
  %found.conflict1360 = and i1 %bound01358, %bound11359
  %bound01361 = icmp ult ptr %uglygep1352, %.4.lcssa.i.i215
  %bound11362 = icmp ult ptr %uglygep1356, %uglygep1353
  %found.conflict1363 = and i1 %bound01361, %bound11362
  %conflict.rdx1364 = or i1 %found.conflict1360, %found.conflict1363
  %bound01365 = icmp ult ptr %uglygep1352, %.025.i372.i.i
  %bound11366 = icmp ult ptr %uglygep1357, %uglygep1353
  %found.conflict1367 = and i1 %bound01365, %bound11366
  %conflict.rdx1368 = or i1 %conflict.rdx1364, %found.conflict1367
  %bound01369 = icmp ult ptr %uglygep1354, %.4.lcssa.i.i215
  %bound11370 = icmp ult ptr %uglygep1356, %uglygep1355
  %found.conflict1371 = and i1 %bound01369, %bound11370
  %conflict.rdx1372 = or i1 %conflict.rdx1368, %found.conflict1371
  %bound01373 = icmp ult ptr %uglygep1354, %.025.i372.i.i
  %bound11374 = icmp ult ptr %uglygep1357, %uglygep1355
  %found.conflict1375 = and i1 %bound01373, %bound11374
  %conflict.rdx1376 = or i1 %conflict.rdx1372, %found.conflict1375
  %bound01377 = icmp ult ptr %uglygep1356, %.025.i372.i.i
  %bound11378 = icmp ult ptr %uglygep1357, %.4.lcssa.i.i215
  %found.conflict1379 = and i1 %bound01377, %bound11378
  %conflict.rdx1380 = or i1 %conflict.rdx1376, %found.conflict1379
  br i1 %conflict.rdx1380, label %.lr.ph200.i.i.preheader, label %vector.ph1384

vector.ph1384:                                    ; preds = %vector.memcheck1351
  %3068 = lshr i64 %.0.i373.i.i, 1
  %n.vec1386 = and i64 %3056, 9223372036854775806
  %ind.end1387 = and i64 %3068, 1
  %3069 = shl i64 %n.vec1386, 3
  %ind.end1389 = getelementptr i8, ptr %2594, i64 %3069
  %3070 = mul i64 %n.vec1386, -8
  %ind.end1391 = getelementptr i8, ptr %.025.i372.i.i, i64 %3070
  %3071 = shl i64 %n.vec1386, 3
  %ind.end1393 = getelementptr i8, ptr %.027.i371.i.i, i64 %3071
  %3072 = mul i64 %n.vec1386, -8
  %ind.end1395 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3072
  %next.gep14002437 = getelementptr i8, ptr %.3.lcssa.i.i216, i64 16
  %next.gep14022434 = getelementptr i8, ptr %.027.i371.i.i, i64 8
  %uglygep3352 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 -16
  %uglygep3357 = getelementptr i8, ptr %.025.i372.i.i, i64 -16
  br label %vector.body1398

vector.body1398:                                  ; preds = %vector.body1398, %vector.ph1384
  %lsr.iv3362 = phi i64 [ %lsr.iv.next3363, %vector.body1398 ], [ %n.vec1386, %vector.ph1384 ]
  %lsr.iv3360 = phi ptr [ %uglygep3361, %vector.body1398 ], [ %next.gep14002437, %vector.ph1384 ]
  %lsr.iv3358 = phi ptr [ %uglygep3359, %vector.body1398 ], [ %uglygep3357, %vector.ph1384 ]
  %lsr.iv3355 = phi ptr [ %uglygep3356, %vector.body1398 ], [ %next.gep14022434, %vector.ph1384 ]
  %lsr.iv3353 = phi ptr [ %uglygep3354, %vector.body1398 ], [ %uglygep3352, %vector.ph1384 ]
  %wide.load1404 = load <2 x i64>, ptr %lsr.iv3360, align 8, !alias.scope !289, !noalias !292
  %wide.load1405 = load <2 x i64>, ptr %lsr.iv3353, align 8, !alias.scope !296, !noalias !297
  %reverse1406 = shufflevector <2 x i64> %wide.load1405, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1406, ptr %lsr.iv3360, align 8, !alias.scope !289, !noalias !292
  %reverse1407 = shufflevector <2 x i64> %wide.load1404, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1407, ptr %lsr.iv3353, align 8, !alias.scope !296, !noalias !297
  %wide.load1408 = load <2 x i64>, ptr %lsr.iv3358, align 8, !alias.scope !297
  %reverse1409 = shufflevector <2 x i64> %wide.load1408, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1410 = load <2 x i64>, ptr %lsr.iv3355, align 8, !alias.scope !298, !noalias !299
  %reverse1411 = shufflevector <2 x i64> %wide.load1410, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1411, ptr %lsr.iv3358, align 8, !alias.scope !297
  store <2 x i64> %reverse1409, ptr %lsr.iv3355, align 8, !alias.scope !298, !noalias !299
  %uglygep3354 = getelementptr i8, ptr %lsr.iv3353, i64 -16
  %uglygep3356 = getelementptr i8, ptr %lsr.iv3355, i64 16
  %uglygep3359 = getelementptr i8, ptr %lsr.iv3358, i64 -16
  %uglygep3361 = getelementptr i8, ptr %lsr.iv3360, i64 16
  %lsr.iv.next3363 = add nsw i64 %lsr.iv3362, -2
  %3073 = icmp eq i64 %lsr.iv.next3363, 0
  br i1 %3073, label %middle.block1381, label %vector.body1398, !llvm.loop !300

middle.block1381:                                 ; preds = %vector.body1398
  %cmp.n1397 = icmp eq i64 %3056, %n.vec1386
  br i1 %cmp.n1397, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.i.i.preheader

.lr.ph200.i.i.preheader:                          ; preds = %middle.block1381, %vector.memcheck1351, %vector.scevcheck1342, %.lr.ph200.preheader.i.i
  %.1.i378199.i.i.ph = phi i64 [ %ind.end1387, %middle.block1381 ], [ %3056, %.lr.ph200.preheader.i.i ], [ %3056, %vector.scevcheck1342 ], [ %3056, %vector.memcheck1351 ]
  %.024.i377198.i.i.ph = phi ptr [ %ind.end1389, %middle.block1381 ], [ %2594, %.lr.ph200.preheader.i.i ], [ %2594, %vector.scevcheck1342 ], [ %2594, %vector.memcheck1351 ]
  %.126.i376197.i.i.ph = phi ptr [ %ind.end1391, %middle.block1381 ], [ %.025.i372.i.i, %.lr.ph200.preheader.i.i ], [ %.025.i372.i.i, %vector.scevcheck1342 ], [ %.025.i372.i.i, %vector.memcheck1351 ]
  %.128.i375196.i.i.ph = phi ptr [ %ind.end1393, %middle.block1381 ], [ %.027.i371.i.i, %.lr.ph200.preheader.i.i ], [ %.027.i371.i.i, %vector.scevcheck1342 ], [ %.027.i371.i.i, %vector.memcheck1351 ]
  %.029.i374195.i.i.ph = phi ptr [ %ind.end1395, %middle.block1381 ], [ %.4.lcssa.i.i215, %.lr.ph200.preheader.i.i ], [ %.4.lcssa.i.i215, %vector.scevcheck1342 ], [ %.4.lcssa.i.i215, %vector.memcheck1351 ]
  %uglygep3340 = getelementptr i8, ptr %.024.i377198.i.i.ph, i64 8
  %uglygep3343 = getelementptr i8, ptr %.126.i376197.i.i.ph, i64 -8
  %uglygep3346 = getelementptr i8, ptr %.128.i375196.i.i.ph, i64 8
  %uglygep3349 = getelementptr i8, ptr %.029.i374195.i.i.ph, i64 -8
  br label %.lr.ph200.i.i

3074:                                             ; preds = %3040
  %3075 = load i64, ptr %3046, align 8
  %3076 = load i64, ptr %3048, align 8
  store i64 %3076, ptr %3046, align 8
  %3077 = getelementptr inbounds i8, ptr %3046, i64 -8
  store i64 %3075, ptr %3048, align 8
  %3078 = getelementptr inbounds i8, ptr %3048, i64 8
  %3079 = add nsw i64 %3044, -1
  br label %._crit_edge.i370.i.i

.lr.ph200.i.i:                                    ; preds = %.lr.ph200.i.i, %.lr.ph200.i.i.preheader
  %lsr.iv3350 = phi ptr [ %uglygep3349, %.lr.ph200.i.i.preheader ], [ %uglygep3351, %.lr.ph200.i.i ]
  %lsr.iv3347 = phi ptr [ %uglygep3346, %.lr.ph200.i.i.preheader ], [ %uglygep3348, %.lr.ph200.i.i ]
  %lsr.iv3344 = phi ptr [ %uglygep3343, %.lr.ph200.i.i.preheader ], [ %uglygep3345, %.lr.ph200.i.i ]
  %lsr.iv3341 = phi ptr [ %uglygep3340, %.lr.ph200.i.i.preheader ], [ %uglygep3342, %.lr.ph200.i.i ]
  %.1.i378199.i.i = phi i64 [ %3080, %.lr.ph200.i.i ], [ %.1.i378199.i.i.ph, %.lr.ph200.i.i.preheader ]
  %3080 = add nsw i64 %.1.i378199.i.i, -1
  %3081 = load i64, ptr %lsr.iv3341, align 8
  %3082 = load i64, ptr %lsr.iv3350, align 8
  store i64 %3082, ptr %lsr.iv3341, align 8
  store i64 %3081, ptr %lsr.iv3350, align 8
  %3083 = load i64, ptr %lsr.iv3344, align 8
  %3084 = load i64, ptr %lsr.iv3347, align 8
  store i64 %3084, ptr %lsr.iv3344, align 8
  store i64 %3083, ptr %lsr.iv3347, align 8
  %uglygep3342 = getelementptr i8, ptr %lsr.iv3341, i64 8
  %uglygep3345 = getelementptr i8, ptr %lsr.iv3344, i64 -8
  %uglygep3348 = getelementptr i8, ptr %lsr.iv3347, i64 8
  %uglygep3351 = getelementptr i8, ptr %lsr.iv3350, i64 -8
  %3085 = icmp eq i64 %3080, 0
  br i1 %3085, label %sort.quad_reversal.exit379.i.i, label %.lr.ph200.i.i, !llvm.loop !301

sort.quad_reversal.exit389.i.i:                   ; preds = %.lr.ph206.i.i, %middle.block1452, %._crit_edge.i380.i.i, %sort.quad_reversal.exit379.i.i, %.lr.ph176.i.i, %middle.block1097, %._crit_edge.i300.i.i
  %.624079.i.i = phi i64 [ %.6240.i.i247, %sort.quad_reversal.exit379.i.i ], [ %.6240.i.i247, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ %.6240.i.i247, %middle.block1452 ], [ 0, %middle.block1097 ], [ %.6240.i.i247, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %.5253627178.i.i = phi i64 [ %.52536271.i.i, %sort.quad_reversal.exit379.i.i ], [ %.52536271.i.i, %._crit_edge.i380.i.i ], [ %.3251.lcssa.i.i209, %._crit_edge.i300.i.i ], [ %.52536271.i.i, %middle.block1452 ], [ %.3251.lcssa.i.i209, %middle.block1097 ], [ %.52536271.i.i, %.lr.ph206.i.i ], [ %.3251.lcssa.i.i209, %.lr.ph176.i.i ]
  %.52337277.i.i = phi i64 [ %.523372.i.i, %sort.quad_reversal.exit379.i.i ], [ %.523372.i.i, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ %.523372.i.i, %middle.block1452 ], [ 0, %middle.block1097 ], [ %.523372.i.i, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %.6247.i.i248 = phi i64 [ %.52466370.i.i, %sort.quad_reversal.exit379.i.i ], [ 0, %._crit_edge.i380.i.i ], [ 0, %._crit_edge.i300.i.i ], [ 0, %middle.block1452 ], [ 0, %middle.block1097 ], [ 0, %.lr.ph206.i.i ], [ 0, %.lr.ph176.i.i ]
  %3086 = icmp eq i64 %2558, 1
  %3087 = icmp ne i64 %.5253627178.i.i, 0
  %3088 = and i1 %3086, %3087
  br i1 %3088, label %3135, label %sort.quad_reversal.exit399.i.i229

3089:                                             ; preds = %sort.quad_reversal.exit379.i.i
  %3090 = ptrtoint ptr %.4218.lcssa.i.i214 to i64
  %3091 = ptrtoint ptr %2601 to i64
  %3092 = sub nuw i64 %3090, %3091
  %3093 = lshr i64 %3092, 4
  %3094 = shl nuw nsw i64 %3093, 3
  %3095 = getelementptr inbounds i8, ptr %2601, i64 %3094
  %3096 = sub nsw i64 0, %3094
  %3097 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 %3096
  %3098 = and i64 %3092, 16
  %3099 = icmp eq i64 %3098, 0
  br i1 %3099, label %3123, label %._crit_edge.i380.i.i

._crit_edge.i380.i.i:                             ; preds = %3123, %3089
  %.027.i381.i.i = phi ptr [ %3127, %3123 ], [ %3097, %3089 ]
  %.025.i382.i.i = phi ptr [ %3126, %3123 ], [ %3095, %3089 ]
  %.0.i383.i.i = phi i64 [ %3128, %3123 ], [ %3093, %3089 ]
  %3100 = load i64, ptr %2601, align 8
  %3101 = load i64, ptr %.4218.lcssa.i.i214, align 8
  store i64 %3101, ptr %2601, align 8
  store i64 %3100, ptr %.4218.lcssa.i.i214, align 8
  %3102 = load i64, ptr %.025.i382.i.i, align 8
  %3103 = load i64, ptr %.027.i381.i.i, align 8
  store i64 %3103, ptr %.025.i382.i.i, align 8
  store i64 %3102, ptr %.027.i381.i.i, align 8
  %3104 = icmp ult i64 %.0.i383.i.i, 2
  br i1 %3104, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.preheader.i.i

.lr.ph206.preheader.i.i:                          ; preds = %._crit_edge.i380.i.i
  %3105 = lshr i64 %.0.i383.i.i, 1
  %min.iters.check1454 = icmp ult i64 %.0.i383.i.i, 48
  br i1 %min.iters.check1454, label %.lr.ph206.i.i.preheader, label %vector.scevcheck1413

vector.scevcheck1413:                             ; preds = %.lr.ph206.preheader.i.i
  %3106 = add nsw i64 %3105, -1
  %uglygep1414 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -8
  %mul.result1416.neg = mul i64 %3106, -8
  %3107 = getelementptr i8, ptr %uglygep1414, i64 %mul.result1416.neg
  %3108 = icmp ugt ptr %3107, %uglygep1414
  %uglygep1418 = getelementptr i8, ptr %.025.i382.i.i, i64 -8
  %mul.result1420.neg = mul i64 %3106, -8
  %mul.overflow1421 = icmp ugt i64 %3106, 2305843009213693951
  %3109 = getelementptr i8, ptr %uglygep1418, i64 %mul.result1420.neg
  %3110 = icmp ugt ptr %3109, %uglygep1418
  %3111 = or i1 %3110, %mul.overflow1421
  %3112 = or i1 %3108, %3111
  br i1 %3112, label %.lr.ph206.i.i.preheader, label %vector.memcheck1422

vector.memcheck1422:                              ; preds = %vector.scevcheck1413
  %uglygep1423 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 16
  %3113 = shl i64 %3105, 3
  %3114 = add i64 %3113, 16
  %uglygep1424 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 %3114
  %uglygep1425 = getelementptr i8, ptr %.027.i381.i.i, i64 8
  %3115 = add i64 %3113, 8
  %uglygep1426 = getelementptr i8, ptr %.027.i381.i.i, i64 %3115
  %3116 = mul i64 %3105, -8
  %uglygep1427 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3116
  %uglygep1428 = getelementptr i8, ptr %.025.i382.i.i, i64 %3116
  %bound01429 = icmp ult ptr %uglygep1423, %uglygep1426
  %bound11430 = icmp ult ptr %uglygep1425, %uglygep1424
  %found.conflict1431 = and i1 %bound01429, %bound11430
  %bound01432 = icmp ult ptr %uglygep1423, %.4218.lcssa.i.i214
  %bound11433 = icmp ult ptr %uglygep1427, %uglygep1424
  %found.conflict1434 = and i1 %bound01432, %bound11433
  %conflict.rdx1435 = or i1 %found.conflict1431, %found.conflict1434
  %bound01436 = icmp ult ptr %uglygep1423, %.025.i382.i.i
  %bound11437 = icmp ult ptr %uglygep1428, %uglygep1424
  %found.conflict1438 = and i1 %bound01436, %bound11437
  %conflict.rdx1439 = or i1 %conflict.rdx1435, %found.conflict1438
  %bound01440 = icmp ult ptr %uglygep1425, %.4218.lcssa.i.i214
  %bound11441 = icmp ult ptr %uglygep1427, %uglygep1426
  %found.conflict1442 = and i1 %bound01440, %bound11441
  %conflict.rdx1443 = or i1 %conflict.rdx1439, %found.conflict1442
  %bound01444 = icmp ult ptr %uglygep1425, %.025.i382.i.i
  %bound11445 = icmp ult ptr %uglygep1428, %uglygep1426
  %found.conflict1446 = and i1 %bound01444, %bound11445
  %conflict.rdx1447 = or i1 %conflict.rdx1443, %found.conflict1446
  %bound01448 = icmp ult ptr %uglygep1427, %.025.i382.i.i
  %bound11449 = icmp ult ptr %uglygep1428, %.4218.lcssa.i.i214
  %found.conflict1450 = and i1 %bound01448, %bound11449
  %conflict.rdx1451 = or i1 %conflict.rdx1447, %found.conflict1450
  br i1 %conflict.rdx1451, label %.lr.ph206.i.i.preheader, label %vector.ph1455

vector.ph1455:                                    ; preds = %vector.memcheck1422
  %3117 = lshr i64 %.0.i383.i.i, 1
  %n.vec1457 = and i64 %3105, 9223372036854775806
  %ind.end1458 = and i64 %3117, 1
  %3118 = shl i64 %n.vec1457, 3
  %ind.end1460 = getelementptr i8, ptr %2601, i64 %3118
  %3119 = mul i64 %n.vec1457, -8
  %ind.end1462 = getelementptr i8, ptr %.025.i382.i.i, i64 %3119
  %3120 = shl i64 %n.vec1457, 3
  %ind.end1464 = getelementptr i8, ptr %.027.i381.i.i, i64 %3120
  %3121 = mul i64 %n.vec1457, -8
  %ind.end1466 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3121
  %next.gep14712433 = getelementptr i8, ptr %.4.lcssa.i.i215, i64 16
  %next.gep14732430 = getelementptr i8, ptr %.027.i381.i.i, i64 8
  %uglygep3328 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 -16
  %uglygep3333 = getelementptr i8, ptr %.025.i382.i.i, i64 -16
  br label %vector.body1469

vector.body1469:                                  ; preds = %vector.body1469, %vector.ph1455
  %lsr.iv3338 = phi i64 [ %lsr.iv.next3339, %vector.body1469 ], [ %n.vec1457, %vector.ph1455 ]
  %lsr.iv3336 = phi ptr [ %uglygep3337, %vector.body1469 ], [ %next.gep14712433, %vector.ph1455 ]
  %lsr.iv3334 = phi ptr [ %uglygep3335, %vector.body1469 ], [ %uglygep3333, %vector.ph1455 ]
  %lsr.iv3331 = phi ptr [ %uglygep3332, %vector.body1469 ], [ %next.gep14732430, %vector.ph1455 ]
  %lsr.iv3329 = phi ptr [ %uglygep3330, %vector.body1469 ], [ %uglygep3328, %vector.ph1455 ]
  %wide.load1475 = load <2 x i64>, ptr %lsr.iv3336, align 8, !alias.scope !302, !noalias !305
  %wide.load1476 = load <2 x i64>, ptr %lsr.iv3329, align 8, !alias.scope !309, !noalias !310
  %reverse1477 = shufflevector <2 x i64> %wide.load1476, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1477, ptr %lsr.iv3336, align 8, !alias.scope !302, !noalias !305
  %reverse1478 = shufflevector <2 x i64> %wide.load1475, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1478, ptr %lsr.iv3329, align 8, !alias.scope !309, !noalias !310
  %wide.load1479 = load <2 x i64>, ptr %lsr.iv3334, align 8, !alias.scope !310
  %reverse1480 = shufflevector <2 x i64> %wide.load1479, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1481 = load <2 x i64>, ptr %lsr.iv3331, align 8, !alias.scope !311, !noalias !312
  %reverse1482 = shufflevector <2 x i64> %wide.load1481, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1482, ptr %lsr.iv3334, align 8, !alias.scope !310
  store <2 x i64> %reverse1480, ptr %lsr.iv3331, align 8, !alias.scope !311, !noalias !312
  %uglygep3330 = getelementptr i8, ptr %lsr.iv3329, i64 -16
  %uglygep3332 = getelementptr i8, ptr %lsr.iv3331, i64 16
  %uglygep3335 = getelementptr i8, ptr %lsr.iv3334, i64 -16
  %uglygep3337 = getelementptr i8, ptr %lsr.iv3336, i64 16
  %lsr.iv.next3339 = add nsw i64 %lsr.iv3338, -2
  %3122 = icmp eq i64 %lsr.iv.next3339, 0
  br i1 %3122, label %middle.block1452, label %vector.body1469, !llvm.loop !313

middle.block1452:                                 ; preds = %vector.body1469
  %cmp.n1468 = icmp eq i64 %3105, %n.vec1457
  br i1 %cmp.n1468, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.i.i.preheader

.lr.ph206.i.i.preheader:                          ; preds = %middle.block1452, %vector.memcheck1422, %vector.scevcheck1413, %.lr.ph206.preheader.i.i
  %.1.i388205.i.i.ph = phi i64 [ %ind.end1458, %middle.block1452 ], [ %3105, %.lr.ph206.preheader.i.i ], [ %3105, %vector.scevcheck1413 ], [ %3105, %vector.memcheck1422 ]
  %.024.i387204.i.i.ph = phi ptr [ %ind.end1460, %middle.block1452 ], [ %2601, %.lr.ph206.preheader.i.i ], [ %2601, %vector.scevcheck1413 ], [ %2601, %vector.memcheck1422 ]
  %.126.i386203.i.i.ph = phi ptr [ %ind.end1462, %middle.block1452 ], [ %.025.i382.i.i, %.lr.ph206.preheader.i.i ], [ %.025.i382.i.i, %vector.scevcheck1413 ], [ %.025.i382.i.i, %vector.memcheck1422 ]
  %.128.i385202.i.i.ph = phi ptr [ %ind.end1464, %middle.block1452 ], [ %.027.i381.i.i, %.lr.ph206.preheader.i.i ], [ %.027.i381.i.i, %vector.scevcheck1413 ], [ %.027.i381.i.i, %vector.memcheck1422 ]
  %.029.i384201.i.i.ph = phi ptr [ %ind.end1466, %middle.block1452 ], [ %.4218.lcssa.i.i214, %.lr.ph206.preheader.i.i ], [ %.4218.lcssa.i.i214, %vector.scevcheck1413 ], [ %.4218.lcssa.i.i214, %vector.memcheck1422 ]
  %uglygep3316 = getelementptr i8, ptr %.024.i387204.i.i.ph, i64 8
  %uglygep3319 = getelementptr i8, ptr %.126.i386203.i.i.ph, i64 -8
  %uglygep3322 = getelementptr i8, ptr %.128.i385202.i.i.ph, i64 8
  %uglygep3325 = getelementptr i8, ptr %.029.i384201.i.i.ph, i64 -8
  br label %.lr.ph206.i.i

3123:                                             ; preds = %3089
  %3124 = load i64, ptr %3095, align 8
  %3125 = load i64, ptr %3097, align 8
  store i64 %3125, ptr %3095, align 8
  %3126 = getelementptr inbounds i8, ptr %3095, i64 -8
  store i64 %3124, ptr %3097, align 8
  %3127 = getelementptr inbounds i8, ptr %3097, i64 8
  %3128 = add nsw i64 %3093, -1
  br label %._crit_edge.i380.i.i

.lr.ph206.i.i:                                    ; preds = %.lr.ph206.i.i, %.lr.ph206.i.i.preheader
  %lsr.iv3326 = phi ptr [ %uglygep3325, %.lr.ph206.i.i.preheader ], [ %uglygep3327, %.lr.ph206.i.i ]
  %lsr.iv3323 = phi ptr [ %uglygep3322, %.lr.ph206.i.i.preheader ], [ %uglygep3324, %.lr.ph206.i.i ]
  %lsr.iv3320 = phi ptr [ %uglygep3319, %.lr.ph206.i.i.preheader ], [ %uglygep3321, %.lr.ph206.i.i ]
  %lsr.iv3317 = phi ptr [ %uglygep3316, %.lr.ph206.i.i.preheader ], [ %uglygep3318, %.lr.ph206.i.i ]
  %.1.i388205.i.i = phi i64 [ %3129, %.lr.ph206.i.i ], [ %.1.i388205.i.i.ph, %.lr.ph206.i.i.preheader ]
  %3129 = add nsw i64 %.1.i388205.i.i, -1
  %3130 = load i64, ptr %lsr.iv3317, align 8
  %3131 = load i64, ptr %lsr.iv3326, align 8
  store i64 %3131, ptr %lsr.iv3317, align 8
  store i64 %3130, ptr %lsr.iv3326, align 8
  %3132 = load i64, ptr %lsr.iv3320, align 8
  %3133 = load i64, ptr %lsr.iv3323, align 8
  store i64 %3133, ptr %lsr.iv3320, align 8
  store i64 %3132, ptr %lsr.iv3323, align 8
  %uglygep3318 = getelementptr i8, ptr %lsr.iv3317, i64 8
  %uglygep3321 = getelementptr i8, ptr %lsr.iv3320, i64 -8
  %uglygep3324 = getelementptr i8, ptr %lsr.iv3323, i64 8
  %uglygep3327 = getelementptr i8, ptr %lsr.iv3326, i64 -8
  %3134 = icmp eq i64 %3129, 0
  br i1 %3134, label %sort.quad_reversal.exit389.i.i, label %.lr.ph206.i.i, !llvm.loop !314

3135:                                             ; preds = %sort.quad_reversal.exit389.i.i
  %3136 = ptrtoint ptr %.4223.lcssa.i.i213 to i64
  %3137 = ptrtoint ptr %2607 to i64
  %3138 = sub nuw i64 %3136, %3137
  %3139 = lshr i64 %3138, 4
  %3140 = shl nuw nsw i64 %3139, 3
  %3141 = getelementptr inbounds i8, ptr %2607, i64 %3140
  %3142 = sub nsw i64 0, %3140
  %3143 = getelementptr inbounds i8, ptr %.4223.lcssa.i.i213, i64 %3142
  %3144 = and i64 %3138, 16
  %3145 = icmp eq i64 %3144, 0
  br i1 %3145, label %3169, label %._crit_edge.i390.i.i

._crit_edge.i390.i.i:                             ; preds = %3169, %3135
  %.027.i391.i.i249 = phi ptr [ %3173, %3169 ], [ %3143, %3135 ]
  %.025.i392.i.i250 = phi ptr [ %3172, %3169 ], [ %3141, %3135 ]
  %.0.i393.i.i251 = phi i64 [ %3174, %3169 ], [ %3139, %3135 ]
  %3146 = load i64, ptr %2607, align 8
  %3147 = load i64, ptr %.4223.lcssa.i.i213, align 8
  store i64 %3147, ptr %2607, align 8
  store i64 %3146, ptr %.4223.lcssa.i.i213, align 8
  %3148 = load i64, ptr %.025.i392.i.i250, align 8
  %3149 = load i64, ptr %.027.i391.i.i249, align 8
  store i64 %3149, ptr %.025.i392.i.i250, align 8
  store i64 %3148, ptr %.027.i391.i.i249, align 8
  %3150 = icmp ult i64 %.0.i393.i.i251, 2
  br i1 %3150, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.preheader.i.i

.lr.ph212.preheader.i.i:                          ; preds = %._crit_edge.i390.i.i
  %3151 = lshr i64 %.0.i393.i.i251, 1
  %min.iters.check1525 = icmp ult i64 %.0.i393.i.i251, 48
  br i1 %min.iters.check1525, label %.lr.ph212.i.i.preheader, label %vector.scevcheck1484

vector.scevcheck1484:                             ; preds = %.lr.ph212.preheader.i.i
  %3152 = add nsw i64 %3151, -1
  %uglygep1485 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -8
  %mul.result1487.neg = mul i64 %3152, -8
  %3153 = getelementptr i8, ptr %uglygep1485, i64 %mul.result1487.neg
  %3154 = icmp ugt ptr %3153, %uglygep1485
  %uglygep1489 = getelementptr i8, ptr %.025.i392.i.i250, i64 -8
  %mul.result1491.neg = mul i64 %3152, -8
  %mul.overflow1492 = icmp ugt i64 %3152, 2305843009213693951
  %3155 = getelementptr i8, ptr %uglygep1489, i64 %mul.result1491.neg
  %3156 = icmp ugt ptr %3155, %uglygep1489
  %3157 = or i1 %3156, %mul.overflow1492
  %3158 = or i1 %3154, %3157
  br i1 %3158, label %.lr.ph212.i.i.preheader, label %vector.memcheck1493

vector.memcheck1493:                              ; preds = %vector.scevcheck1484
  %uglygep1494 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 16
  %3159 = shl i64 %3151, 3
  %3160 = add i64 %3159, 16
  %uglygep1495 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 %3160
  %uglygep1496 = getelementptr i8, ptr %.027.i391.i.i249, i64 8
  %3161 = add i64 %3159, 8
  %uglygep1497 = getelementptr i8, ptr %.027.i391.i.i249, i64 %3161
  %3162 = mul i64 %3151, -8
  %uglygep1498 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3162
  %uglygep1499 = getelementptr i8, ptr %.025.i392.i.i250, i64 %3162
  %bound01500 = icmp ult ptr %uglygep1494, %uglygep1497
  %bound11501 = icmp ult ptr %uglygep1496, %uglygep1495
  %found.conflict1502 = and i1 %bound01500, %bound11501
  %bound01503 = icmp ult ptr %uglygep1494, %.4223.lcssa.i.i213
  %bound11504 = icmp ult ptr %uglygep1498, %uglygep1495
  %found.conflict1505 = and i1 %bound01503, %bound11504
  %conflict.rdx1506 = or i1 %found.conflict1502, %found.conflict1505
  %bound01507 = icmp ult ptr %uglygep1494, %.025.i392.i.i250
  %bound11508 = icmp ult ptr %uglygep1499, %uglygep1495
  %found.conflict1509 = and i1 %bound01507, %bound11508
  %conflict.rdx1510 = or i1 %conflict.rdx1506, %found.conflict1509
  %bound01511 = icmp ult ptr %uglygep1496, %.4223.lcssa.i.i213
  %bound11512 = icmp ult ptr %uglygep1498, %uglygep1497
  %found.conflict1513 = and i1 %bound01511, %bound11512
  %conflict.rdx1514 = or i1 %conflict.rdx1510, %found.conflict1513
  %bound01515 = icmp ult ptr %uglygep1496, %.025.i392.i.i250
  %bound11516 = icmp ult ptr %uglygep1499, %uglygep1497
  %found.conflict1517 = and i1 %bound01515, %bound11516
  %conflict.rdx1518 = or i1 %conflict.rdx1514, %found.conflict1517
  %bound01519 = icmp ult ptr %uglygep1498, %.025.i392.i.i250
  %bound11520 = icmp ult ptr %uglygep1499, %.4223.lcssa.i.i213
  %found.conflict1521 = and i1 %bound01519, %bound11520
  %conflict.rdx1522 = or i1 %conflict.rdx1518, %found.conflict1521
  br i1 %conflict.rdx1522, label %.lr.ph212.i.i.preheader, label %vector.ph1526

vector.ph1526:                                    ; preds = %vector.memcheck1493
  %3163 = lshr i64 %.0.i393.i.i251, 1
  %n.vec1528 = and i64 %3151, 9223372036854775806
  %ind.end1529 = and i64 %3163, 1
  %3164 = shl i64 %n.vec1528, 3
  %ind.end1531 = getelementptr i8, ptr %2607, i64 %3164
  %3165 = mul i64 %n.vec1528, -8
  %ind.end1533 = getelementptr i8, ptr %.025.i392.i.i250, i64 %3165
  %3166 = shl i64 %n.vec1528, 3
  %ind.end1535 = getelementptr i8, ptr %.027.i391.i.i249, i64 %3166
  %3167 = mul i64 %n.vec1528, -8
  %ind.end1537 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 %3167
  %next.gep15422429 = getelementptr i8, ptr %.4218.lcssa.i.i214, i64 16
  %next.gep15442426 = getelementptr i8, ptr %.027.i391.i.i249, i64 8
  %uglygep3304 = getelementptr i8, ptr %.4223.lcssa.i.i213, i64 -16
  %uglygep3309 = getelementptr i8, ptr %.025.i392.i.i250, i64 -16
  br label %vector.body1540

vector.body1540:                                  ; preds = %vector.body1540, %vector.ph1526
  %lsr.iv3314 = phi i64 [ %lsr.iv.next3315, %vector.body1540 ], [ %n.vec1528, %vector.ph1526 ]
  %lsr.iv3312 = phi ptr [ %uglygep3313, %vector.body1540 ], [ %next.gep15422429, %vector.ph1526 ]
  %lsr.iv3310 = phi ptr [ %uglygep3311, %vector.body1540 ], [ %uglygep3309, %vector.ph1526 ]
  %lsr.iv3307 = phi ptr [ %uglygep3308, %vector.body1540 ], [ %next.gep15442426, %vector.ph1526 ]
  %lsr.iv3305 = phi ptr [ %uglygep3306, %vector.body1540 ], [ %uglygep3304, %vector.ph1526 ]
  %wide.load1546 = load <2 x i64>, ptr %lsr.iv3312, align 8, !alias.scope !315, !noalias !318
  %wide.load1547 = load <2 x i64>, ptr %lsr.iv3305, align 8, !alias.scope !322, !noalias !323
  %reverse1548 = shufflevector <2 x i64> %wide.load1547, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1548, ptr %lsr.iv3312, align 8, !alias.scope !315, !noalias !318
  %reverse1549 = shufflevector <2 x i64> %wide.load1546, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1549, ptr %lsr.iv3305, align 8, !alias.scope !322, !noalias !323
  %wide.load1550 = load <2 x i64>, ptr %lsr.iv3310, align 8, !alias.scope !323
  %reverse1551 = shufflevector <2 x i64> %wide.load1550, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load1552 = load <2 x i64>, ptr %lsr.iv3307, align 8, !alias.scope !324, !noalias !325
  %reverse1553 = shufflevector <2 x i64> %wide.load1552, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse1553, ptr %lsr.iv3310, align 8, !alias.scope !323
  store <2 x i64> %reverse1551, ptr %lsr.iv3307, align 8, !alias.scope !324, !noalias !325
  %uglygep3306 = getelementptr i8, ptr %lsr.iv3305, i64 -16
  %uglygep3308 = getelementptr i8, ptr %lsr.iv3307, i64 16
  %uglygep3311 = getelementptr i8, ptr %lsr.iv3310, i64 -16
  %uglygep3313 = getelementptr i8, ptr %lsr.iv3312, i64 16
  %lsr.iv.next3315 = add nsw i64 %lsr.iv3314, -2
  %3168 = icmp eq i64 %lsr.iv.next3315, 0
  br i1 %3168, label %middle.block1523, label %vector.body1540, !llvm.loop !326

middle.block1523:                                 ; preds = %vector.body1540
  %cmp.n1539 = icmp eq i64 %3151, %n.vec1528
  br i1 %cmp.n1539, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.i.i.preheader

.lr.ph212.i.i.preheader:                          ; preds = %middle.block1523, %vector.memcheck1493, %vector.scevcheck1484, %.lr.ph212.preheader.i.i
  %.1.i398211.i.i.ph = phi i64 [ %ind.end1529, %middle.block1523 ], [ %3151, %.lr.ph212.preheader.i.i ], [ %3151, %vector.scevcheck1484 ], [ %3151, %vector.memcheck1493 ]
  %.024.i397210.i.i.ph = phi ptr [ %ind.end1531, %middle.block1523 ], [ %2607, %.lr.ph212.preheader.i.i ], [ %2607, %vector.scevcheck1484 ], [ %2607, %vector.memcheck1493 ]
  %.126.i396209.i.i.ph = phi ptr [ %ind.end1533, %middle.block1523 ], [ %.025.i392.i.i250, %.lr.ph212.preheader.i.i ], [ %.025.i392.i.i250, %vector.scevcheck1484 ], [ %.025.i392.i.i250, %vector.memcheck1493 ]
  %.128.i395208.i.i.ph = phi ptr [ %ind.end1535, %middle.block1523 ], [ %.027.i391.i.i249, %.lr.ph212.preheader.i.i ], [ %.027.i391.i.i249, %vector.scevcheck1484 ], [ %.027.i391.i.i249, %vector.memcheck1493 ]
  %.029.i394207.i.i.ph = phi ptr [ %ind.end1537, %middle.block1523 ], [ %.4223.lcssa.i.i213, %.lr.ph212.preheader.i.i ], [ %.4223.lcssa.i.i213, %vector.scevcheck1484 ], [ %.4223.lcssa.i.i213, %vector.memcheck1493 ]
  %uglygep3292 = getelementptr i8, ptr %.024.i397210.i.i.ph, i64 8
  %uglygep3295 = getelementptr i8, ptr %.126.i396209.i.i.ph, i64 -8
  %uglygep3298 = getelementptr i8, ptr %.128.i395208.i.i.ph, i64 8
  %uglygep3301 = getelementptr i8, ptr %.029.i394207.i.i.ph, i64 -8
  br label %.lr.ph212.i.i

3169:                                             ; preds = %3135
  %3170 = load i64, ptr %3141, align 8
  %3171 = load i64, ptr %3143, align 8
  store i64 %3171, ptr %3141, align 8
  %3172 = getelementptr inbounds i8, ptr %3141, i64 -8
  store i64 %3170, ptr %3143, align 8
  %3173 = getelementptr inbounds i8, ptr %3143, i64 8
  %3174 = add nsw i64 %3139, -1
  br label %._crit_edge.i390.i.i

.lr.ph212.i.i:                                    ; preds = %.lr.ph212.i.i, %.lr.ph212.i.i.preheader
  %lsr.iv3302 = phi ptr [ %uglygep3301, %.lr.ph212.i.i.preheader ], [ %uglygep3303, %.lr.ph212.i.i ]
  %lsr.iv3299 = phi ptr [ %uglygep3298, %.lr.ph212.i.i.preheader ], [ %uglygep3300, %.lr.ph212.i.i ]
  %lsr.iv3296 = phi ptr [ %uglygep3295, %.lr.ph212.i.i.preheader ], [ %uglygep3297, %.lr.ph212.i.i ]
  %lsr.iv3293 = phi ptr [ %uglygep3292, %.lr.ph212.i.i.preheader ], [ %uglygep3294, %.lr.ph212.i.i ]
  %.1.i398211.i.i = phi i64 [ %3175, %.lr.ph212.i.i ], [ %.1.i398211.i.i.ph, %.lr.ph212.i.i.preheader ]
  %3175 = add nsw i64 %.1.i398211.i.i, -1
  %3176 = load i64, ptr %lsr.iv3293, align 8
  %3177 = load i64, ptr %lsr.iv3302, align 8
  store i64 %3177, ptr %lsr.iv3293, align 8
  store i64 %3176, ptr %lsr.iv3302, align 8
  %3178 = load i64, ptr %lsr.iv3296, align 8
  %3179 = load i64, ptr %lsr.iv3299, align 8
  store i64 %3179, ptr %lsr.iv3296, align 8
  store i64 %3178, ptr %lsr.iv3299, align 8
  %uglygep3294 = getelementptr i8, ptr %lsr.iv3293, i64 8
  %uglygep3297 = getelementptr i8, ptr %lsr.iv3296, i64 -8
  %uglygep3300 = getelementptr i8, ptr %lsr.iv3299, i64 8
  %uglygep3303 = getelementptr i8, ptr %lsr.iv3302, i64 -8
  %3180 = icmp eq i64 %3175, 0
  br i1 %3180, label %sort.quad_reversal.exit399.i.i229, label %.lr.ph212.i.i, !llvm.loop !327

3181:                                             ; preds = %3189, %sort.quad_reversal.exit399.i.i229
  %.0265.i.i252 = phi i4 [ 1, %3189 ], [ %2587, %sort.quad_reversal.exit399.i.i229 ]
  %.0264.i.i253 = phi i4 [ 1, %3189 ], [ %2584, %sort.quad_reversal.exit399.i.i229 ]
  %.0263.i.i254 = phi i4 [ 1, %3189 ], [ %2581, %sort.quad_reversal.exit399.i.i229 ]
  %.0262.i.i255 = phi i4 [ 1, %3189 ], [ %2578, %sort.quad_reversal.exit399.i.i229 ]
  %3182 = shl nuw nsw i4 %.0263.i.i254, 1
  %3183 = shl nuw nsw i4 %.0264.i.i253, 2
  %3184 = or i4 %3182, %3183
  %3185 = shl nuw i4 %.0265.i.i252, 3
  %3186 = or i4 %3184, %3185
  %3187 = or i4 %3186, %.0262.i.i255
  %3188 = zext i4 %3187 to i32
  switch i32 %3188, label %3198 [
    i32 0, label %3199
    i32 1, label %3201
    i32 2, label %3213
    i32 3, label %3226
    i32 4, label %3245
    i32 8, label %3258
    i32 9, label %3268
    i32 12, label %3288
    i32 5, label %3306
    i32 6, label %3306
    i32 7, label %3306
    i32 10, label %3306
    i32 11, label %3306
    i32 13, label %3306
    i32 14, label %3306
    i32 15, label %3306
  ]

3189:                                             ; preds = %sort.quad_reversal.exit399.i.i229
  br label %3181

sort.quadsort_swap__anon_14864.exit404.i.i:       ; preds = %3354, %3352, %3351, %3344, %3343, %3304, %3302, %3301, %sort.quadsort_swap__anon_14864.exit407.i.i, %3286, %3284, %3283, %sort.quadsort_swap__anon_14864.exit405.i.i, %3266, %3264, %3263, %3258, %sort.quadsort_swap__anon_14864.exit403.i.i, %sort.quadsort_swap__anon_14864.exit402.i.i, %sort.quadsort_swap__anon_14864.exit400.i.i, %sort.quadsort_swap__anon_14864.exit.i.i
  %3190 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3191 = load ptr, ptr %.3.lcssa.i.i216, align 8
  %3192 = load ptr, ptr %3190, align 8
  %3193 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3191, ptr align 1 %3192) #15
  %.not269.i.i256 = icmp eq i8 %3193, 1
  %3194 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3195 = load ptr, ptr %.4218.lcssa.i.i214, align 8
  %3196 = load ptr, ptr %3194, align 8
  %3197 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3195, ptr align 1 %3196) #15
  br i1 %.not269.i.i256, label %3359, label %3357

3198:                                             ; preds = %3181
  unreachable

3199:                                             ; preds = %3181
  %3200 = getelementptr inbounds i8, ptr %1426, i64 %87
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3200, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.flux_analyze__anon_14348.exit.i

3201:                                             ; preds = %3181
  %.not286.i.i258 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not286.i.i258, label %sort.quadsort_swap__anon_14864.exit.i.i, label %3206

sort.quadsort_swap__anon_14864.exit.i.i:          ; preds = %3211, %3209, %3208, %3201
  %3202 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3203 = add nuw i64 %2408, %2409
  %3204 = shl nuw i64 %3203, 3
  %3205 = getelementptr inbounds i8, ptr %1426, i64 %3204
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3202, ptr nonnull align 1 %1426, ptr nonnull align 1 %3202, ptr nonnull align 1 %3205, i64 %3203, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3206:                                             ; preds = %3201
  %3207 = icmp ult i64 %1, 384
  br i1 %3207, label %3208, label %3209

3208:                                             ; preds = %3206
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit.i.i

3209:                                             ; preds = %3206
  %3210 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %88, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3210, label %3211, label %sort.quadsort_swap__anon_14864.exit.i.i

3211:                                             ; preds = %3209
  %3212 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, i64 %3212, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit.i.i

3213:                                             ; preds = %3181
  %3214 = getelementptr inbounds i8, ptr %1426, i64 %2412
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3214, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %.not285.i.i259 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not285.i.i259, label %sort.quadsort_swap__anon_14864.exit400.i.i, label %3218

sort.quadsort_swap__anon_14864.exit400.i.i:       ; preds = %3224, %3222, %3221, %3213
  %3215 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3216 = shl nuw i64 %2409, 3
  %3217 = getelementptr inbounds i8, ptr %1426, i64 %3216
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3215, ptr nonnull align 1 %1426, ptr nonnull align 1 %3215, ptr nonnull align 1 %3217, i64 %2409, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3218:                                             ; preds = %3213
  %3219 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3220 = icmp ult i64 %2408, 96
  br i1 %3220, label %3221, label %3222

3221:                                             ; preds = %3218
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3219, i64 %2408, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit400.i.i

3222:                                             ; preds = %3218
  %3223 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3219, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3223, label %3224, label %sort.quadsort_swap__anon_14864.exit400.i.i

3224:                                             ; preds = %3222
  %3225 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3219, i64 %2408, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3219, i64 %2408, ptr nonnull align 1 %1426, i64 %1, i64 %3225, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit400.i.i

3226:                                             ; preds = %3181
  %.not283.i.i260 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not283.i.i260, label %sort.quadsort_swap__anon_14864.exit401.i.i, label %3227

sort.quadsort_swap__anon_14864.exit401.i.i:       ; preds = %3232, %3230, %3229, %3226
  %.not284.i.i261 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not284.i.i261, label %sort.quadsort_swap__anon_14864.exit402.i.i, label %3237

3227:                                             ; preds = %3226
  %3228 = icmp ult i64 %1, 384
  br i1 %3228, label %3229, label %3230

3229:                                             ; preds = %3227
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit401.i.i

3230:                                             ; preds = %3227
  %3231 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %88, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3231, label %3232, label %sort.quadsort_swap__anon_14864.exit401.i.i

3232:                                             ; preds = %3230
  %3233 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, i64 %3233, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit401.i.i

sort.quadsort_swap__anon_14864.exit402.i.i:       ; preds = %3243, %3241, %3240, %sort.quadsort_swap__anon_14864.exit401.i.i
  %3234 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3235 = shl nuw i64 %2409, 3
  %3236 = getelementptr inbounds i8, ptr %1426, i64 %3235
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3234, ptr nonnull align 1 %1426, ptr nonnull align 1 %3234, ptr nonnull align 1 %3236, i64 %2409, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3237:                                             ; preds = %sort.quadsort_swap__anon_14864.exit401.i.i
  %3238 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3239 = icmp ult i64 %2408, 96
  br i1 %3239, label %3240, label %3241

3240:                                             ; preds = %3237
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3238, i64 %2408, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit402.i.i

3241:                                             ; preds = %3237
  %3242 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3238, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3242, label %3243, label %sort.quadsort_swap__anon_14864.exit402.i.i

3243:                                             ; preds = %3241
  %3244 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3238, i64 %2408, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3238, i64 %2408, ptr nonnull align 1 %1426, i64 %1, i64 %3244, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit402.i.i

3245:                                             ; preds = %3181
  %3246 = getelementptr inbounds i8, ptr %1426, i64 %2414
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3246, i64 %2406, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %.not282.i.i262 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not282.i.i262, label %sort.quadsort_swap__anon_14864.exit403.i.i, label %3250

sort.quadsort_swap__anon_14864.exit403.i.i:       ; preds = %3256, %3254, %3253, %3245
  %3247 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3248 = shl nuw i64 %2411, 3
  %3249 = getelementptr inbounds i8, ptr %1426, i64 %3248
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3247, ptr nonnull align 1 %1426, ptr nonnull align 1 %3247, ptr nonnull align 1 %3249, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3250:                                             ; preds = %3245
  %3251 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3252 = icmp ult i64 %2409, 192
  br i1 %3252, label %3253, label %3254

3253:                                             ; preds = %3250
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3251, i64 %2410, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit403.i.i

3254:                                             ; preds = %3250
  %3255 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3251, i64 %2410, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3255, label %3256, label %sort.quadsort_swap__anon_14864.exit403.i.i

3256:                                             ; preds = %3254
  %3257 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3251, i64 %2410, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3251, i64 %2410, ptr nonnull align 1 %1426, i64 %1, i64 %3257, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit403.i.i

3258:                                             ; preds = %3181
  %3259 = getelementptr inbounds i8, ptr %1426, i64 %2417
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3259, i64 %2416, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %.not281.i.i263 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not281.i.i263, label %sort.quadsort_swap__anon_14864.exit404.i.i, label %3260

3260:                                             ; preds = %3258
  %3261 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3262 = icmp ult i64 %2411, 96
  br i1 %3262, label %3263, label %3264

3263:                                             ; preds = %3260
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3261, i64 %2411, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3264:                                             ; preds = %3260
  %3265 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3261, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3265, label %3266, label %sort.quadsort_swap__anon_14864.exit404.i.i

3266:                                             ; preds = %3264
  %3267 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3261, i64 %2411, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3261, i64 %2411, ptr nonnull align 1 %1426, i64 %1, i64 %3267, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3268:                                             ; preds = %3181
  %.not279.i.i264 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not279.i.i264, label %sort.quadsort_swap__anon_14864.exit405.i.i, label %3273

sort.quadsort_swap__anon_14864.exit405.i.i:       ; preds = %3278, %3276, %3275, %3268
  %3269 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3270 = add nuw i64 %2410, %2408
  %3271 = shl nuw i64 %3270, 3
  %3272 = getelementptr inbounds i8, ptr %1426, i64 %3271
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3269, ptr nonnull align 1 %1426, ptr nonnull align 1 %3269, ptr nonnull align 1 %3272, i64 %3270, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %.not280.i.i265 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not280.i.i265, label %sort.quadsort_swap__anon_14864.exit404.i.i, label %3280

3273:                                             ; preds = %3268
  %3274 = icmp ult i64 %1, 384
  br i1 %3274, label %3275, label %3276

3275:                                             ; preds = %3273
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit405.i.i

3276:                                             ; preds = %3273
  %3277 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %88, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3277, label %3278, label %sort.quadsort_swap__anon_14864.exit405.i.i

3278:                                             ; preds = %3276
  %3279 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, i64 %3279, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit405.i.i

3280:                                             ; preds = %sort.quadsort_swap__anon_14864.exit405.i.i
  %3281 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3282 = icmp ult i64 %2411, 96
  br i1 %3282, label %3283, label %3284

3283:                                             ; preds = %3280
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3281, i64 %2411, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3284:                                             ; preds = %3280
  %3285 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3281, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3285, label %3286, label %sort.quadsort_swap__anon_14864.exit404.i.i

3286:                                             ; preds = %3284
  %3287 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3281, i64 %2411, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3281, i64 %2411, ptr nonnull align 1 %1426, i64 %1, i64 %3287, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3288:                                             ; preds = %3181
  %3289 = getelementptr inbounds i8, ptr %1426, i64 %2414
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3289, i64 %2406, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %.not277.i.i266 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not277.i.i266, label %sort.quadsort_swap__anon_14864.exit407.i.i, label %3290

sort.quadsort_swap__anon_14864.exit407.i.i:       ; preds = %3296, %3294, %3293, %3288
  %.not278.i.i267 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not278.i.i267, label %sort.quadsort_swap__anon_14864.exit404.i.i, label %3298

3290:                                             ; preds = %3288
  %3291 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3292 = icmp ult i64 %2409, 192
  br i1 %3292, label %3293, label %3294

3293:                                             ; preds = %3290
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3291, i64 %2410, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit407.i.i

3294:                                             ; preds = %3290
  %3295 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3291, i64 %2410, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3295, label %3296, label %sort.quadsort_swap__anon_14864.exit407.i.i

3296:                                             ; preds = %3294
  %3297 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3291, i64 %2410, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3291, i64 %2410, ptr nonnull align 1 %1426, i64 %1, i64 %3297, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit407.i.i

3298:                                             ; preds = %sort.quadsort_swap__anon_14864.exit407.i.i
  %3299 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3300 = icmp ult i64 %2411, 96
  br i1 %3300, label %3301, label %3302

3301:                                             ; preds = %3298
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3299, i64 %2411, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3302:                                             ; preds = %3298
  %3303 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3299, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3303, label %3304, label %sort.quadsort_swap__anon_14864.exit404.i.i

3304:                                             ; preds = %3302
  %3305 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3299, i64 %2411, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3299, i64 %2411, ptr nonnull align 1 %1426, i64 %1, i64 %3305, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3306:                                             ; preds = %3181, %3181, %3181, %3181, %3181, %3181, %3181, %3181
  %.not.i.i268 = icmp eq i4 %.0262.i.i255, 0
  br i1 %.not.i.i268, label %3308, label %3307

sort.quadsort_swap__anon_14864.exit409.i.i:       ; preds = %3315, %3313, %3312, %3308, %3307
  %.not266.i.i269 = icmp eq i4 %.0263.i.i254, 0
  br i1 %.not266.i.i269, label %3318, label %3317

3307:                                             ; preds = %3306
  %.not276.i.i270 = icmp eq i64 %.3231.i.i228, 0
  br i1 %.not276.i.i270, label %sort.quadsort_swap__anon_14864.exit409.i.i, label %3310

3308:                                             ; preds = %3306
  %3309 = getelementptr inbounds i8, ptr %1426, i64 %2412
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, ptr nonnull align 1 %88, ptr nonnull align 1 %3309, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit409.i.i

3310:                                             ; preds = %3307
  %3311 = icmp ult i64 %1, 384
  br i1 %3311, label %3312, label %3313

3312:                                             ; preds = %3310
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit409.i.i

3313:                                             ; preds = %3310
  %3314 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %88, i64 %2407, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3314, label %3315, label %sort.quadsort_swap__anon_14864.exit409.i.i

3315:                                             ; preds = %3313
  %3316 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %88, i64 %2407, ptr nonnull align 1 %1426, i64 %1, i64 %3316, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit409.i.i

sort.quadsort_swap__anon_14864.exit410.i.i:       ; preds = %3328, %3326, %3325, %3318, %3317
  %.not267.i.i271 = icmp eq i4 %.0264.i.i253, 0
  br i1 %.not267.i.i271, label %3331, label %3330

3317:                                             ; preds = %sort.quadsort_swap__anon_14864.exit409.i.i
  %.not275.i.i272 = icmp eq i64 %.4238.i.i227, 0
  br i1 %.not275.i.i272, label %sort.quadsort_swap__anon_14864.exit410.i.i, label %3322

3318:                                             ; preds = %sort.quadsort_swap__anon_14864.exit409.i.i
  %3319 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3320 = shl nuw i64 %2408, 3
  %3321 = getelementptr inbounds i8, ptr %1426, i64 %3320
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3319, ptr nonnull align 1 %1426, ptr nonnull align 1 %3319, ptr nonnull align 1 %3321, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit410.i.i

3322:                                             ; preds = %3317
  %3323 = getelementptr inbounds i8, ptr %.3.lcssa.i.i216, i64 8
  %3324 = icmp ult i64 %2408, 96
  br i1 %3324, label %3325, label %3326

3325:                                             ; preds = %3322
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3323, i64 %2408, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit410.i.i

3326:                                             ; preds = %3322
  %3327 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3323, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3327, label %3328, label %sort.quadsort_swap__anon_14864.exit410.i.i

3328:                                             ; preds = %3326
  %3329 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3323, i64 %2408, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3323, i64 %2408, ptr nonnull align 1 %1426, i64 %1, i64 %3329, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit410.i.i

sort.quadsort_swap__anon_14864.exit411.i.i:       ; preds = %3341, %3339, %3338, %3331, %3330
  %.not268.i.i273 = icmp eq i4 %.0265.i.i252, 0
  br i1 %.not268.i.i273, label %3344, label %3343

3330:                                             ; preds = %sort.quadsort_swap__anon_14864.exit410.i.i
  %.not274.i.i274 = icmp eq i64 %.4245.i.i226, 0
  br i1 %.not274.i.i274, label %sort.quadsort_swap__anon_14864.exit411.i.i, label %3335

3331:                                             ; preds = %sort.quadsort_swap__anon_14864.exit410.i.i
  %3332 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3333 = shl nuw i64 %2410, 3
  %3334 = getelementptr inbounds i8, ptr %1426, i64 %3333
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3332, ptr nonnull align 1 %1426, ptr nonnull align 1 %3332, ptr nonnull align 1 %3334, i64 %2410, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit411.i.i

3335:                                             ; preds = %3330
  %3336 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3337 = icmp ult i64 %2409, 192
  br i1 %3337, label %3338, label %3339

3338:                                             ; preds = %3335
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3336, i64 %2410, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit411.i.i

3339:                                             ; preds = %3335
  %3340 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3336, i64 %2410, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3340, label %3341, label %sort.quadsort_swap__anon_14864.exit411.i.i

3341:                                             ; preds = %3339
  %3342 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3336, i64 %2410, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3336, i64 %2410, ptr nonnull align 1 %1426, i64 %1, i64 %3342, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit411.i.i

3343:                                             ; preds = %sort.quadsort_swap__anon_14864.exit411.i.i
  %.not273.i.i275 = icmp eq i64 %.4252.i.i225, 0
  br i1 %.not273.i.i275, label %sort.quadsort_swap__anon_14864.exit404.i.i, label %3348

3344:                                             ; preds = %sort.quadsort_swap__anon_14864.exit411.i.i
  %3345 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3346 = shl nuw i64 %2411, 3
  %3347 = getelementptr inbounds i8, ptr %1426, i64 %3346
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %3345, ptr nonnull align 1 %1426, ptr nonnull align 1 %3345, ptr nonnull align 1 %3347, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3348:                                             ; preds = %3343
  %3349 = getelementptr inbounds i8, ptr %.4218.lcssa.i.i214, i64 8
  %3350 = icmp ult i64 %2411, 96
  br i1 %3350, label %3351, label %3352

3351:                                             ; preds = %3348
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %3349, i64 %2411, ptr nonnull align 1 %1426, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3352:                                             ; preds = %3348
  %3353 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %3349, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %3353, label %3354, label %sort.quadsort_swap__anon_14864.exit404.i.i

3354:                                             ; preds = %3352
  %3355 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %3349, i64 %2411, ptr nonnull align 1 %1426, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %3349, i64 %2411, ptr nonnull align 1 %1426, i64 %1, i64 %3355, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.quadsort_swap__anon_14864.exit404.i.i

3356:                                             ; preds = %3372, %3370, %3369, %3367
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %88, ptr nonnull align 1 %1426, i64 %2406, i64 %2409, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.flux_analyze__anon_14348.exit.i

3357:                                             ; preds = %sort.quadsort_swap__anon_14864.exit404.i.i
  %3358 = icmp eq i8 %3197, 1
  br i1 %3358, label %3367, label %3362

3359:                                             ; preds = %sort.quadsort_swap__anon_14864.exit404.i.i
  %3360 = icmp eq i8 %3197, 1
  %3361 = getelementptr inbounds i8, ptr %1426, i64 %2414
  br i1 %3360, label %3372, label %3370

3362:                                             ; preds = %3357
  %3363 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  %3364 = load ptr, ptr %.4.lcssa.i.i215, align 8
  %3365 = load ptr, ptr %3363, align 8
  %3366 = tail call i8 %2(ptr align 1 %3, ptr align 1 %3364, ptr align 1 %3365) #15
  %.not272.i.i276 = icmp eq i8 %3366, 1
  br i1 %.not272.i.i276, label %3369, label %sort.flux_analyze__anon_14348.exit.i

3367:                                             ; preds = %3357
  %3368 = getelementptr inbounds i8, ptr %1426, i64 %2414
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %3368, ptr nonnull align 1 %2415, i64 %2410, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %2414, i1 false)
  br label %3356

3369:                                             ; preds = %3362
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %87, i1 false)
  br label %3356

3370:                                             ; preds = %3359
  %3371 = shl nuw i64 %2409, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %3361, ptr nonnull align 1 %2415, i64 %3371, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %2407, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %3356

3372:                                             ; preds = %3359
  %3373 = getelementptr inbounds i8, ptr %.4.lcssa.i.i215, i64 8
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %3361, ptr nonnull align 1 %3373, i64 %2410, i64 %2411, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %1426, ptr nonnull align 1 %88, i64 %2407, i64 %2408, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %3356

sort.flux_analyze__anon_14348.exit.i:             ; preds = %3362, %3356, %3199, %.lr.ph146.i.i, %middle.block746, %._crit_edge.i350.i.i, %2570
  tail call void @roc_dealloc(ptr nonnull align 1 %1426, i32 8)
  br label %sort.fluxsort_direct__anon_13350.exit

3374:                                             ; preds = %2403
  tail call fastcc void @sort.quadsort_direct__anon_14344(ptr nonnull align 1 %88, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %sort.fluxsort_direct__anon_13350.exit

3375:                                             ; preds = %sort.fluxsort_direct__anon_13350.exit
  tail call fastcc void @panic.panic_help(ptr nonnull readonly align 1 @sort.fluxsort__anon_13352, i64 50)
  unreachable

.lr.ph403:                                        ; preds = %.lr.ph403, %.lr.ph403.preheader
  %lsr.iv2976 = phi ptr [ %1428, %.lr.ph403.preheader ], [ %uglygep2977, %.lr.ph403 ]
  %.0402 = phi i64 [ %3378, %.lr.ph403 ], [ 0, %.lr.ph403.preheader ]
  %3376 = shl i64 %.0402, 3
  %uglygep2975 = getelementptr i8, ptr %88, i64 %3376
  %3377 = load ptr, ptr %uglygep2975, align 8
  tail call void %8(ptr nonnull align 1 %lsr.iv2976, ptr align 1 %3377) #15
  %3378 = add i64 %.0402, 1
  %uglygep2977 = getelementptr i8, ptr %lsr.iv2976, i64 %6
  %exitcond500.not = icmp eq i64 %1, %3378
  br i1 %exitcond500.not, label %._crit_edge404, label %.lr.ph403

._crit_edge404:                                   ; preds = %.lr.ph403
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1428, i64 %1427, i1 false)
  tail call void @roc_dealloc(ptr nonnull align 1 %1428, i32 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %88, i32 8)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal i64 @roc_builtins.str.count_utf8_bytes(ptr nocapture noundef readonly %0) local_unnamed_addr #5 {
str.RocStr.len.exit:
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %1 = icmp slt i64 %.sroa.2.0.copyload, 0
  %2 = lshr i64 %.sroa.2.0.copyload, 56
  %3 = xor i64 %2, 128
  %4 = and i64 %.sroa.1.0.copyload, 9223372036854775807
  %common.ret.op.i = select i1 %1, i64 %3, i64 %4
  ret i64 %common.ret.op.i
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.concat(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) local_unnamed_addr #4 {
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %7 = alloca %str.RocStr, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %.sroa.2.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %2, i64 8
  %.sroa.2.sroa.2.0.copyload = load i64, ptr %.sroa.2.sroa.2.0..sroa_idx, align 8
  %.sroa.2.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %2, i64 16
  %.sroa.2.sroa.3.0.copyload = load i64, ptr %.sroa.2.sroa.3.0..sroa_idx, align 8
  %8 = icmp slt i64 %.sroa.2.sroa.3.0.copyload, 0
  %9 = lshr i64 %.sroa.2.sroa.3.0.copyload, 56
  %10 = xor i64 %9, 128
  %11 = and i64 %.sroa.2.sroa.2.0.copyload, 9223372036854775807
  %common.ret.op.i.i = select i1 %8, i64 %10, i64 %11
  %12 = icmp eq i64 %common.ret.op.i.i, 0
  br i1 %12, label %13, label %str.RocStr.len.exit

13:                                               ; preds = %str.RocStr.len.exit, %3
  %14 = phi ptr [ %6, %str.RocStr.len.exit ], [ %7, %3 ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %14, i64 24, i1 false)
  ret void

str.RocStr.len.exit:                              ; preds = %3
  %15 = icmp slt i64 %.sroa.2.sroa.3.0.copyload, 0
  %.sroa.2.sroa.0.0.copyload = load ptr, ptr %2, align 8
  %.sroa.136.0..sroa_idx = getelementptr inbounds i8, ptr %7, i64 8
  %.sroa.136.0.copyload = load i64, ptr %.sroa.136.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %7, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %16 = icmp slt i64 %.sroa.2.0.copyload, 0
  %17 = lshr i64 %.sroa.2.0.copyload, 56
  %18 = xor i64 %17, 128
  %19 = and i64 %.sroa.136.0.copyload, 9223372036854775807
  %common.ret.op.i = select i1 %16, i64 %18, i64 %19
  %20 = add nuw i64 %common.ret.op.i, %common.ret.op.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocate(ptr noalias %6, ptr nonnull readonly align 8 %5, i64 %20)
  %21 = getelementptr inbounds i8, ptr %6, i64 16
  %.val.i = load i64, ptr %21, align 8
  %22 = icmp slt i64 %.val.i, 0
  %23 = load ptr, ptr %6, align 8
  %common.ret.op.i8 = select i1 %22, ptr %6, ptr %23
  %24 = getelementptr inbounds i8, ptr %common.ret.op.i8, i64 %common.ret.op.i
  store ptr %.sroa.2.sroa.0.0.copyload, ptr %4, align 8
  %.sroa.5.0..sroa_idx25 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sroa.2.sroa.2.0.copyload, ptr %.sroa.5.0..sroa_idx25, align 8
  %.sroa.6.0..sroa_idx30 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.2.sroa.3.0.copyload, ptr %.sroa.6.0..sroa_idx30, align 8
  %common.ret.op.i1446 = select i1 %15, ptr %4, ptr %.sroa.2.sroa.0.0.copyload
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %24, ptr align 1 %common.ret.op.i1446, i64 %common.ret.op.i.i, i1 false)
  br label %13
}

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.reallocate(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 8 %1, i64 %2) unnamed_addr #4 {
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %7 = alloca %str.RocStr, align 8
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %8 = icmp slt i64 %.sroa.2.0.copyload, 0
  br i1 %8, label %.critedge, label %str.RocStr.isSeamlessSlice.exit

str.RocStr.isSeamlessSlice.exit:                  ; preds = %3
  %9 = icmp slt i64 %.sroa.1.0.copyload, 0
  %10 = and i64 %.sroa.1.0.copyload, 9223372036854775807
  %spec.select.i = select i1 %9, i64 %10, i64 %.sroa.2.0.copyload
  br i1 %9, label %.critedge, label %str.RocStr.getCapacity.exit.i.i

str.RocStr.getCapacity.exit.i.i:                  ; preds = %str.RocStr.isSeamlessSlice.exit
  %.sroa.017.0.copyload = load ptr, ptr %1, align 8
  %.not29 = icmp eq i64 %.sroa.2.0.copyload, 0
  br i1 %.not29, label %14, label %str.RocStr.isUnique.exit

str.RocStr.isUnique.exit:                         ; preds = %str.RocStr.getCapacity.exit.i.i
  %11 = getelementptr inbounds i64, ptr %.sroa.017.0.copyload, i64 -1
  %12 = load i64, ptr %11, align 8
  %13 = icmp eq i64 %12, -9223372036854775808
  br i1 %13, label %.thread, label %.critedge

common.ret:                                       ; preds = %utils.unsafeReallocate.exit, %str.RocStr.setLen.exit, %16, %.critedge
  ret void

.critedge:                                        ; preds = %str.RocStr.isUnique.exit, %str.RocStr.isSeamlessSlice.exit, %3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocateFresh(ptr noalias %6, ptr nonnull readonly align 8 %7, i64 %2)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false)
  br label %common.ret

14:                                               ; preds = %str.RocStr.getCapacity.exit.i.i
  %.not = icmp eq ptr %.sroa.017.0.copyload, null
  br i1 %.not, label %16, label %.thread

.thread:                                          ; preds = %14, %str.RocStr.isUnique.exit
  %15 = icmp ugt i64 %spec.select.i, %2
  br i1 %15, label %str.RocStr.setLen.exit, label %19

16:                                               ; preds = %14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  call fastcc void @str.RocStr.reallocateFresh(ptr noalias %4, ptr nonnull readonly align 8 %5, i64 %2)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %4, i64 24, i1 false)
  br label %common.ret

str.RocStr.setLen.exit:                           ; preds = %.thread
  %17 = and i64 %.sroa.1.0.copyload, -9223372036854775808
  %18 = or i64 %17, %2
  store ptr %.sroa.017.0.copyload, ptr %0, align 8
  %.sroa.221.0..sroa_idx22 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %18, ptr %.sroa.221.0..sroa_idx22, align 8
  %.sroa.4.0..sroa_idx24 = getelementptr inbounds i8, ptr %0, i64 16
  store i64 %.sroa.2.0.copyload, ptr %.sroa.4.0..sroa_idx24, align 8
  br label %common.ret

19:                                               ; preds = %.thread
  %20 = icmp eq i64 %spec.select.i, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %39, %37, %33, %19
  %.0 = phi i64 [ %34, %33 ], [ %38, %37 ], [ %42, %39 ], [ 64, %19 ]
  %22 = tail call i64 @llvm.umax.i64(i64 %.0, i64 %2)
  %.not.i = icmp ult i64 %spec.select.i, %22
  br i1 %.not.i, label %23, label %utils.unsafeReallocate.exit

23:                                               ; preds = %21
  %24 = add nuw i64 %22, 8
  %25 = add nuw i64 %spec.select.i, 8
  %26 = getelementptr inbounds i8, ptr %.sroa.017.0.copyload, i64 -8
  %27 = tail call ptr @roc_realloc(ptr nonnull align 1 %26, i64 %24, i64 %25, i32 8)
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  br label %utils.unsafeReallocate.exit

utils.unsafeReallocate.exit:                      ; preds = %23, %21
  %common.ret.op.i11 = phi ptr [ %28, %23 ], [ %.sroa.017.0.copyload, %21 ]
  store ptr %common.ret.op.i11, ptr %0, align 8
  %29 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 1
  store i64 %2, ptr %29, align 8
  %30 = getelementptr inbounds %str.RocStr, ptr %0, i64 0, i32 2
  store i64 %22, ptr %30, align 8
  br label %common.ret

31:                                               ; preds = %19
  %32 = icmp ult i64 %spec.select.i, 4096
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = shl nuw nsw i64 %spec.select.i, 1
  br label %21

35:                                               ; preds = %31
  %36 = icmp ugt i64 %spec.select.i, 131072
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = shl nuw i64 %spec.select.i, 1
  br label %21

39:                                               ; preds = %35
  %40 = mul nuw nsw i64 %spec.select.i, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = lshr i64 %41, 1
  br label %21
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define internal zeroext i1 @roc_builtins.str.equal(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #6 {
  %3 = alloca %str.RocStr, align 8
  %4 = alloca %str.RocStr, align 8
  %.sroa.0.0.copyload = load ptr, ptr %0, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.3.0.copyload = load i64, ptr %.sroa.3.0..sroa_idx, align 8
  %.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.5.0.copyload = load i64, ptr %.sroa.5.0..sroa_idx, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4)
  %5 = load ptr, ptr %1, align 8
  %6 = icmp eq ptr %.sroa.0.0.copyload, %5
  br i1 %6, label %7, label %..critedge_crit_edge.i

..critedge_crit_edge.i:                           ; preds = %2
  %.sroa.117.0..sroa_idx.phi.trans.insert.i = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.117.0.copyload.pre.i = load i64, ptr %.sroa.117.0..sroa_idx.phi.trans.insert.i, align 8
  br label %.critedge.i

7:                                                ; preds = %2
  %8 = getelementptr inbounds %str.RocStr, ptr %1, i64 0, i32 1
  %9 = load i64, ptr %8, align 8
  %10 = icmp eq i64 %.sroa.3.0.copyload, %9
  br i1 %10, label %11, label %.critedge.i

11:                                               ; preds = %7
  %12 = getelementptr inbounds %str.RocStr, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %12, align 8
  %14 = icmp eq i64 %.sroa.5.0.copyload, %13
  br i1 %14, label %str.RocStr.eq.exit, label %.critedge.i

.critedge.i:                                      ; preds = %11, %7, %..critedge_crit_edge.i
  %.sroa.117.0.copyload.i = phi i64 [ %.sroa.117.0.copyload.pre.i, %..critedge_crit_edge.i ], [ %9, %7 ], [ %.sroa.3.0.copyload, %11 ]
  %15 = icmp slt i64 %.sroa.5.0.copyload, 0
  %16 = lshr i64 %.sroa.5.0.copyload, 56
  %17 = xor i64 %16, 128
  %18 = and i64 %.sroa.3.0.copyload, 9223372036854775807
  %common.ret.op.i.i = select i1 %15, i64 %17, i64 %18
  %.sroa.218.0..sroa_idx.i = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.218.0.copyload.i = load i64, ptr %.sroa.218.0..sroa_idx.i, align 8
  %19 = icmp slt i64 %.sroa.218.0.copyload.i, 0
  %20 = lshr i64 %.sroa.218.0.copyload.i, 56
  %21 = xor i64 %20, 128
  %22 = and i64 %.sroa.117.0.copyload.i, 9223372036854775807
  %common.ret.op.i10.i = select i1 %19, i64 %21, i64 %22
  %.not.i = icmp eq i64 %common.ret.op.i.i, %common.ret.op.i10.i
  br i1 %.not.i, label %str.RocStr.asU8ptr.exit.i, label %str.RocStr.eq.exit

str.RocStr.asU8ptr.exit.i:                        ; preds = %.critedge.i
  %23 = icmp slt i64 %.sroa.5.0.copyload, 0
  store ptr %.sroa.0.0.copyload, ptr %4, align 8
  %.sroa.3.0..sroa_idx2 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %.sroa.3.0.copyload, ptr %.sroa.3.0..sroa_idx2, align 8
  %.sroa.5.0..sroa_idx4 = getelementptr inbounds i8, ptr %4, i64 16
  store i64 %.sroa.5.0.copyload, ptr %.sroa.5.0..sroa_idx4, align 8
  %spec.select.i = select i1 %23, ptr %4, ptr %.sroa.0.0.copyload
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %24 = getelementptr inbounds i8, ptr %3, i64 16
  %.val.i13.i = load i64, ptr %24, align 8
  %25 = icmp slt i64 %.val.i13.i, 0
  %26 = load ptr, ptr %3, align 8
  %common.ret.op.i14.i = select i1 %25, ptr %3, ptr %26
  %.not22.i = icmp eq i64 %common.ret.op.i.i, 0
  br i1 %.not22.i, label %str.RocStr.eq.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %str.RocStr.asU8ptr.exit.i
  %27 = add nsw i64 %common.ret.op.i.i, -1
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %lsr.iv8 = phi ptr [ %spec.select.i, %.lr.ph.i.preheader ], [ %uglygep9, %.lr.ph.i ]
  %lsr.iv7 = phi ptr [ %common.ret.op.i14.i, %.lr.ph.i.preheader ], [ %uglygep, %.lr.ph.i ]
  %lsr.iv = phi i64 [ %27, %.lr.ph.i.preheader ], [ %math, %.lr.ph.i ]
  %28 = load i8, ptr %lsr.iv8, align 1
  %29 = load i8, ptr %lsr.iv7, align 1
  %.not7.i = icmp eq i8 %28, %29
  %30 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv, i64 -1)
  %math = extractvalue { i64, i1 } %30, 0
  %ov = extractvalue { i64, i1 } %30, 1
  %or.cond.not = select i1 %.not7.i, i1 %ov, i1 false
  %uglygep = getelementptr i8, ptr %lsr.iv7, i64 1
  %uglygep9 = getelementptr i8, ptr %lsr.iv8, i64 1
  br i1 %or.cond.not, label %.lr.ph.i, label %str.RocStr.eq.exit

str.RocStr.eq.exit:                               ; preds = %.lr.ph.i, %str.RocStr.asU8ptr.exit.i, %.critedge.i, %11
  %common.ret.op.i = phi i1 [ true, %11 ], [ false, %.critedge.i ], [ true, %str.RocStr.asU8ptr.exit.i ], [ %.not7.i, %.lr.ph.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4)
  ret i1 %common.ret.op.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal ptr @roc_builtins.str.allocation_ptr(ptr nocapture noundef readonly %0) local_unnamed_addr #5 {
  %.sroa.0.0.copyload = load ptr, ptr %0, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 16
  %.sroa.3.0.copyload = load i64, ptr %.sroa.3.0..sroa_idx, align 8
  %2 = ptrtoint ptr %.sroa.0.0.copyload to i64
  %3 = shl i64 %.sroa.3.0.copyload, 1
  %isneg.i = icmp slt i64 %.sroa.2.0.copyload, 0
  %4 = select i1 %isneg.i, i64 %3, i64 %2
  %5 = inttoptr i64 %4 to ptr
  ret ptr %5
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.from_int.i32(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, i32 %1) local_unnamed_addr #4 {
  %3 = alloca [33 x i8], align 1
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %6 = alloca %"io.fixed_buffer_stream.FixedBufferStream([]u8)", align 8
  %7 = alloca [11 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  store ptr %7, ptr %6, align 8, !noalias !328
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %6, i64 8
  store <2 x i64> <i64 11, i64 0>, ptr %.sroa.2.0..sroa_idx.i, align 8, !noalias !328
  store ptr %6, ptr %5, align 8, !alias.scope !331, !noalias !328
  call void @llvm.lifetime.start.p0(i64 33, ptr nonnull %3), !noalias !328
  %common.ret.op.i.i.i.i.i.i.i = call i32 @llvm.abs.i32(i32 %1, i1 false)
  %8 = icmp ugt i32 %common.ret.op.i.i.i.i.i.i.i, 99
  br i1 %8, label %.lr.ph.i.i.i.i.i.i.preheader, label %._crit_edge.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i.preheader:                     ; preds = %2
  br label %.lr.ph.i.i.i.i.i.i

9:                                                ; preds = %25, %20
  %.024.i.i.i.i.i.i = phi i64 [ %21, %20 ], [ %26, %25 ]
  %10 = icmp slt i32 %1, 0
  br i1 %10, label %32, label %fmt.format__anon_13410.exit.i

.lr.ph.i.i.i.i.i.i:                               ; preds = %.lr.ph.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader
  %lsr.iv = phi i64 [ 31, %.lr.ph.i.i.i.i.i.i.preheader ], [ %lsr.iv.next, %.lr.ph.i.i.i.i.i.i ]
  %.03.i.i.i.i.i.i = phi i32 [ %11, %.lr.ph.i.i.i.i.i.i ], [ %common.ret.op.i.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader ]
  %uglygep = getelementptr i8, ptr %3, i64 %lsr.iv
  %.03.i.i.i.i.i.i.frozen = freeze i32 %.03.i.i.i.i.i.i
  %11 = udiv i32 %.03.i.i.i.i.i.i.frozen, 100
  %12 = mul i32 %11, 100
  %.decomposed = sub i32 %.03.i.i.i.i.i.i.frozen, %12
  %13 = zext i32 %.decomposed to i64
  %14 = shl nuw nsw i64 %13, 1
  %15 = getelementptr inbounds i8, ptr @fmt.digits2__anon_14339, i64 %14
  %16 = load i16, ptr %15, align 1, !noalias !334
  store i16 %16, ptr %uglygep, align 1, !noalias !328
  %17 = icmp ugt i32 %.03.i.i.i.i.i.i, 9999
  %lsr.iv.next = add i64 %lsr.iv, -2
  br i1 %17, label %.lr.ph.i.i.i.i.i.i, label %._crit_edge.i.i.i.i.i.i.loopexit

._crit_edge.i.i.i.i.i.i.loopexit:                 ; preds = %.lr.ph.i.i.i.i.i.i
  %18 = add i64 %lsr.iv.next, 2
  br label %._crit_edge.i.i.i.i.i.i

._crit_edge.i.i.i.i.i.i:                          ; preds = %._crit_edge.i.i.i.i.i.i.loopexit, %2
  %.125.lcssa.i.i.i.i.i.i = phi i64 [ 33, %2 ], [ %18, %._crit_edge.i.i.i.i.i.i.loopexit ]
  %.0.lcssa.i.i.i.i.i.i = phi i32 [ %common.ret.op.i.i.i.i.i.i.i, %2 ], [ %11, %._crit_edge.i.i.i.i.i.i.loopexit ]
  %19 = icmp ult i32 %.0.lcssa.i.i.i.i.i.i, 10
  br i1 %19, label %20, label %25

20:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %21 = add i64 %.125.lcssa.i.i.i.i.i.i, -1
  %22 = getelementptr inbounds [33 x i8], ptr %3, i64 0, i64 %21
  %23 = trunc i32 %.0.lcssa.i.i.i.i.i.i to i8
  %24 = add nuw nsw i8 %23, 48
  store i8 %24, ptr %22, align 1, !noalias !328
  br label %9

25:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %26 = add i64 %.125.lcssa.i.i.i.i.i.i, -2
  %27 = getelementptr inbounds i8, ptr %3, i64 %26
  %28 = zext i32 %.0.lcssa.i.i.i.i.i.i to i64
  %29 = shl nuw nsw i64 %28, 1
  %30 = getelementptr inbounds i8, ptr @fmt.digits2__anon_14339, i64 %29
  %31 = load i16, ptr %30, align 1, !noalias !337
  store i16 %31, ptr %27, align 1, !noalias !328
  br label %9

32:                                               ; preds = %9
  %33 = add i64 %.024.i.i.i.i.i.i, -1
  %34 = getelementptr inbounds [33 x i8], ptr %3, i64 0, i64 %33
  store i8 45, ptr %34, align 1, !noalias !328
  br label %fmt.format__anon_13410.exit.i

fmt.format__anon_13410.exit.i:                    ; preds = %32, %9
  %.3.i.i.i.i.i.i = phi i64 [ %33, %32 ], [ %.024.i.i.i.i.i.i, %9 ]
  %35 = getelementptr inbounds i8, ptr %3, i64 %.3.i.i.i.i.i.i
  %36 = sub nuw i64 33, %.3.i.i.i.i.i.i
  %37 = call fastcc i16 @fmt.formatBuf__anon_13251(ptr nonnull readonly align 1 %35, i64 %36, ptr nonnull readonly align 8 @6, ptr nonnull readonly align 8 %5), !noalias !328
  call void @llvm.lifetime.end.p0(i64 33, ptr nonnull %3), !noalias !328
  %sunkaddr = getelementptr inbounds i8, ptr %6, i64 16
  %.val3.i = load i64, ptr %sunkaddr, align 8, !noalias !328
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  %38 = icmp ugt i64 %.val3.i, 23
  br i1 %38, label %str.RocStr.allocate.exit.i, label %str.RocStr.allocate.exit.thread.i

str.RocStr.allocate.exit.thread.i:                ; preds = %fmt.format__anon_13410.exit.i
  %39 = shl nuw nsw i64 %.val3.i, 56
  %.sroa.3.23.insert.shift.i = or i64 %39, -9223372036854775808
  br label %str.RocStr.init.exit

str.RocStr.allocate.exit.i:                       ; preds = %fmt.format__anon_13410.exit.i
  %40 = call i64 @llvm.umax.i64(i64 %.val3.i, i64 64)
  %41 = add nuw i64 %40, 8
  %42 = call ptr @roc_alloc(i64 %41, i32 8), !noalias !340
  %43 = getelementptr inbounds i8, ptr %42, i64 8
  store i64 -9223372036854775808, ptr %42, align 8, !noalias !340
  %44 = icmp slt i64 %40, 0
  %spec.select.i = select i1 %44, ptr %3, ptr %43
  br label %str.RocStr.init.exit

str.RocStr.init.exit:                             ; preds = %str.RocStr.allocate.exit.i, %str.RocStr.allocate.exit.thread.i
  %.sink7.i = phi ptr [ %43, %str.RocStr.allocate.exit.i ], [ null, %str.RocStr.allocate.exit.thread.i ]
  %.sink.i = phi i64 [ %.val3.i, %str.RocStr.allocate.exit.i ], [ 0, %str.RocStr.allocate.exit.thread.i ]
  %.sroa.3.23.insert.shift.sink.i = phi i64 [ %40, %str.RocStr.allocate.exit.i ], [ %.sroa.3.23.insert.shift.i, %str.RocStr.allocate.exit.thread.i ]
  %common.ret.op.i.i = phi ptr [ %spec.select.i, %str.RocStr.allocate.exit.i ], [ %3, %str.RocStr.allocate.exit.thread.i ]
  store ptr %.sink7.i, ptr %3, align 8, !noalias !347
  %45 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %.sink.i, ptr %45, align 8, !noalias !347
  %46 = getelementptr inbounds i8, ptr %3, i64 16
  store i64 %.sroa.3.23.insert.shift.sink.i, ptr %46, align 8, !noalias !347
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i.i, ptr nonnull align 1 %7, i64 %.val3.i, i1 false), !noalias !347
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @roc_builtins.str.from_int.u64(ptr noalias nocapture nonnull writeonly sret(%str.RocStr) %0, i64 %1) local_unnamed_addr #4 {
  %3 = alloca [65 x i8], align 1
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %6 = alloca %"io.fixed_buffer_stream.FixedBufferStream([]u8)", align 8
  %7 = alloca [20 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6)
  store ptr %7, ptr %6, align 8, !noalias !348
  %.sroa.2.0..sroa_idx.i = getelementptr inbounds i8, ptr %6, i64 8
  store <2 x i64> <i64 20, i64 0>, ptr %.sroa.2.0..sroa_idx.i, align 8, !noalias !348
  store ptr %6, ptr %5, align 8, !alias.scope !351, !noalias !348
  call void @llvm.lifetime.start.p0(i64 65, ptr nonnull %3), !noalias !348
  %8 = icmp ugt i64 %1, 99
  br i1 %8, label %.lr.ph.i.i.i.i.i.i.preheader, label %._crit_edge.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i.preheader:                     ; preds = %2
  br label %.lr.ph.i.i.i.i.i.i

.lr.ph.i.i.i.i.i.i:                               ; preds = %.lr.ph.i.i.i.i.i.i, %.lr.ph.i.i.i.i.i.i.preheader
  %lsr.iv = phi i64 [ 63, %.lr.ph.i.i.i.i.i.i.preheader ], [ %lsr.iv.next, %.lr.ph.i.i.i.i.i.i ]
  %.03.i.i.i.i.i.i = phi i64 [ %9, %.lr.ph.i.i.i.i.i.i ], [ %1, %.lr.ph.i.i.i.i.i.i.preheader ]
  %uglygep = getelementptr i8, ptr %3, i64 %lsr.iv
  %.03.i.i.i.i.i.i.frozen = freeze i64 %.03.i.i.i.i.i.i
  %9 = udiv i64 %.03.i.i.i.i.i.i.frozen, 100
  %10 = mul i64 %9, 100
  %.decomposed = sub i64 %.03.i.i.i.i.i.i.frozen, %10
  %11 = shl nuw nsw i64 %.decomposed, 1
  %12 = getelementptr inbounds i8, ptr @fmt.digits2__anon_14339, i64 %11
  %13 = load i16, ptr %12, align 1, !noalias !354
  store i16 %13, ptr %uglygep, align 1, !noalias !348
  %14 = icmp ugt i64 %.03.i.i.i.i.i.i, 9999
  %lsr.iv.next = add i64 %lsr.iv, -2
  br i1 %14, label %.lr.ph.i.i.i.i.i.i, label %._crit_edge.i.i.i.i.i.i.loopexit

._crit_edge.i.i.i.i.i.i.loopexit:                 ; preds = %.lr.ph.i.i.i.i.i.i
  %15 = add i64 %lsr.iv.next, 2
  br label %._crit_edge.i.i.i.i.i.i

._crit_edge.i.i.i.i.i.i:                          ; preds = %._crit_edge.i.i.i.i.i.i.loopexit, %2
  %.121.lcssa.i.i.i.i.i.i = phi i64 [ 65, %2 ], [ %15, %._crit_edge.i.i.i.i.i.i.loopexit ]
  %.0.lcssa.i.i.i.i.i.i = phi i64 [ %1, %2 ], [ %9, %._crit_edge.i.i.i.i.i.i.loopexit ]
  %16 = icmp ult i64 %.0.lcssa.i.i.i.i.i.i, 10
  br i1 %16, label %17, label %22

17:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %18 = add i64 %.121.lcssa.i.i.i.i.i.i, -1
  %19 = getelementptr inbounds [65 x i8], ptr %3, i64 0, i64 %18
  %20 = trunc i64 %.0.lcssa.i.i.i.i.i.i to i8
  %21 = add nuw nsw i8 %20, 48
  store i8 %21, ptr %19, align 1, !noalias !348
  br label %fmt.format__anon_13518.exit.i

22:                                               ; preds = %._crit_edge.i.i.i.i.i.i
  %23 = add i64 %.121.lcssa.i.i.i.i.i.i, -2
  %24 = getelementptr inbounds i8, ptr %3, i64 %23
  %25 = shl nuw nsw i64 %.0.lcssa.i.i.i.i.i.i, 1
  %26 = getelementptr inbounds i8, ptr @fmt.digits2__anon_14339, i64 %25
  %27 = load i16, ptr %26, align 1, !noalias !357
  store i16 %27, ptr %24, align 1, !noalias !348
  br label %fmt.format__anon_13518.exit.i

fmt.format__anon_13518.exit.i:                    ; preds = %22, %17
  %.020.i.i.i.i.i.i = phi i64 [ %18, %17 ], [ %23, %22 ]
  %28 = getelementptr inbounds i8, ptr %3, i64 %.020.i.i.i.i.i.i
  %29 = sub nuw i64 65, %.020.i.i.i.i.i.i
  %30 = call fastcc i16 @fmt.formatBuf__anon_13251(ptr nonnull readonly align 1 %28, i64 %29, ptr nonnull readonly align 8 @6, ptr nonnull readonly align 8 %5), !noalias !348
  call void @llvm.lifetime.end.p0(i64 65, ptr nonnull %3), !noalias !348
  %sunkaddr = getelementptr inbounds i8, ptr %6, i64 16
  %.val3.i = load i64, ptr %sunkaddr, align 8, !noalias !348
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  %31 = icmp ugt i64 %.val3.i, 23
  br i1 %31, label %str.RocStr.allocate.exit.i, label %str.RocStr.allocate.exit.thread.i

str.RocStr.allocate.exit.thread.i:                ; preds = %fmt.format__anon_13518.exit.i
  %32 = shl nuw nsw i64 %.val3.i, 56
  %.sroa.3.23.insert.shift.i = or i64 %32, -9223372036854775808
  br label %str.RocStr.init.exit

str.RocStr.allocate.exit.i:                       ; preds = %fmt.format__anon_13518.exit.i
  %33 = call i64 @llvm.umax.i64(i64 %.val3.i, i64 64)
  %34 = add nuw i64 %33, 8
  %35 = call ptr @roc_alloc(i64 %34, i32 8), !noalias !360
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  store i64 -9223372036854775808, ptr %35, align 8, !noalias !360
  %37 = icmp slt i64 %33, 0
  %spec.select.i = select i1 %37, ptr %3, ptr %36
  br label %str.RocStr.init.exit

str.RocStr.init.exit:                             ; preds = %str.RocStr.allocate.exit.i, %str.RocStr.allocate.exit.thread.i
  %.sink7.i = phi ptr [ %36, %str.RocStr.allocate.exit.i ], [ null, %str.RocStr.allocate.exit.thread.i ]
  %.sink.i = phi i64 [ %.val3.i, %str.RocStr.allocate.exit.i ], [ 0, %str.RocStr.allocate.exit.thread.i ]
  %.sroa.3.23.insert.shift.sink.i = phi i64 [ %33, %str.RocStr.allocate.exit.i ], [ %.sroa.3.23.insert.shift.i, %str.RocStr.allocate.exit.thread.i ]
  %common.ret.op.i.i = phi ptr [ %spec.select.i, %str.RocStr.allocate.exit.i ], [ %3, %str.RocStr.allocate.exit.thread.i ]
  store ptr %.sink7.i, ptr %3, align 8, !noalias !367
  %38 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %.sink.i, ptr %38, align 8, !noalias !367
  %39 = getelementptr inbounds i8, ptr %3, i64 16
  store i64 %.sroa.3.23.insert.shift.sink.i, ptr %39, align 8, !noalias !367
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %common.ret.op.i.i, ptr nonnull align 1 %7, i64 %.val3.i, i1 false), !noalias !367
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #3

; Function Attrs: nounwind uwtable
define internal ptr @roc_builtins.utils.allocate_with_refcount(i64 %0, i32 %1, i1 zeroext %2) local_unnamed_addr #4 {
  %4 = tail call i32 @llvm.umax.i32(i32 %1, i32 8)
  %..i = select i1 %2, i64 16, i64 8
  %5 = zext i32 %1 to i64
  %6 = tail call i64 @llvm.umax.i64(i64 %..i, i64 %5)
  %7 = add nuw i64 %6, %0
  %8 = tail call ptr @roc_alloc(i64 %7, i32 %4)
  %9 = getelementptr inbounds i8, ptr %8, i64 %6
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  store i64 -9223372036854775808, ptr %10, align 8
  ret ptr %9
}

; Function Attrs: noreturn nounwind uwtable
declare void @roc_panic(ptr nonnull readonly align 8, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define weak_odr dso_local i32 @__roc_force_setjmp(ptr align 4 %0) local_unnamed_addr #4 {
  %2 = tail call i32 @setjmp(ptr align 4 %0)
  ret i32 %2
}

; Function Attrs: nounwind uwtable
declare i32 @setjmp(ptr align 4) local_unnamed_addr #4

; Function Attrs: noreturn nounwind uwtable
define weak_odr dso_local void @__roc_force_longjmp(ptr align 4 %0, i32 %1) local_unnamed_addr #1 {
  tail call void @longjmp(ptr align 4 %0, i32 %1)
  unreachable
}

; Function Attrs: noreturn nounwind uwtable
declare void @longjmp(ptr align 4, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__divti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = ashr i128 %0, 127
  %4 = ashr i128 %1, 127
  %5 = xor i128 %3, %0
  %6 = sub i128 %5, %3
  %7 = xor i128 %4, %1
  %8 = sub i128 %7, %4
  %9 = tail call fastcc i128 @compiler_rt.udivmod.udivmod__anon_12862(i128 %6, i128 %8, ptr align 16 null)
  %10 = xor i128 %4, %3
  %11 = xor i128 %9, %10
  %12 = sub i128 %11, %10
  ret i128 %12
}

; Function Attrs: nofree nosync nounwind memory(argmem: write) uwtable
define private fastcc i128 @compiler_rt.udivmod.udivmod__anon_12862(i128 %0, i128 %1, ptr writeonly align 16 %2) unnamed_addr #7 {
  %4 = icmp ugt i128 %1, %0
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  %.not47 = icmp eq ptr %2, null
  br i1 %.not47, label %common.ret, label %8

6:                                                ; preds = %3
  %.sroa.07.0.extract.trunc = trunc i128 %0 to i64
  %.sroa.2.0.extract.shift = lshr i128 %0, 64
  %.sroa.2.0.extract.trunc = trunc i128 %.sroa.2.0.extract.shift to i64
  %.sroa.015.0.extract.trunc = trunc i128 %1 to i64
  %.sroa.216.0.extract.shift = lshr i128 %1, 64
  %.sroa.216.0.extract.trunc = trunc i128 %.sroa.216.0.extract.shift to i64
  %7 = icmp eq i64 %.sroa.216.0.extract.trunc, 0
  br i1 %7, label %9, label %11

common.ret:                                       ; preds = %142, %129, %8, %5
  %common.ret.op = phi i128 [ %.sroa.017.0.insert.insert, %129 ], [ %.sroa.017.0.insert.ext21, %142 ], [ 0, %8 ], [ 0, %5 ]
  ret i128 %common.ret.op

8:                                                ; preds = %5
  store i128 %0, ptr %2, align 16
  br label %common.ret

9:                                                ; preds = %6
  %10 = icmp ult i64 %.sroa.2.0.extract.trunc, %.sroa.015.0.extract.trunc
  br i1 %10, label %24, label %75

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.216.0.extract.trunc, i1 true), !range !368
  %13 = trunc i64 %12 to i7
  %14 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.2.0.extract.trunc, i1 false), !range !368
  %15 = trunc i64 %14 to i7
  %16 = sub nuw i7 %13, %15
  %17 = zext i7 %16 to i128
  %18 = shl i128 %1, %17
  %19 = add nuw i7 %16, 1
  %20 = zext i7 %19 to i64
  br label %131

21:                                               ; preds = %compiler_rt.udivmod.divwide__anon_14184.exit60, %compiler_rt.udivmod.divwide__anon_14184.exit
  %.037.i.i52.sink = phi i64 [ %.037.i.i52, %compiler_rt.udivmod.divwide__anon_14184.exit60 ], [ %.037.i.i, %compiler_rt.udivmod.divwide__anon_14184.exit ]
  %.040.i.i59.sink = phi i64 [ %.040.i.i59, %compiler_rt.udivmod.divwide__anon_14184.exit60 ], [ %.040.i.i, %compiler_rt.udivmod.divwide__anon_14184.exit ]
  %.sroa.0.0 = phi i64 [ %128, %compiler_rt.udivmod.divwide__anon_14184.exit60 ], [ %74, %compiler_rt.udivmod.divwide__anon_14184.exit ]
  %.sroa.10.0 = phi i64 [ %76, %compiler_rt.udivmod.divwide__anon_14184.exit60 ], [ 0, %compiler_rt.udivmod.divwide__anon_14184.exit ]
  %22 = shl i64 %.037.i.i52.sink, 32
  %23 = add i64 %.040.i.i59.sink, %22
  %.not46 = icmp eq ptr %2, null
  br i1 %.not46, label %129, label %130

24:                                               ; preds = %9
  %25 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.015.0.extract.trunc, i1 true), !range !368
  %.not.i.i = icmp eq i64 %25, 0
  br i1 %.not.i.i, label %26, label %34

26:                                               ; preds = %34, %24
  %.036.i.i = phi i64 [ %41, %34 ], [ %.sroa.07.0.extract.trunc, %24 ]
  %.035.i.i = phi i64 [ %40, %34 ], [ %.sroa.2.0.extract.trunc, %24 ]
  %.0.i.i = phi i64 [ %35, %34 ], [ %.sroa.015.0.extract.trunc, %24 ]
  %27 = lshr i64 %.0.i.i, 32
  %28 = and i64 %.0.i.i, 4294967295
  %29 = lshr i64 %.036.i.i, 32
  %30 = and i64 %.036.i.i, 4294967295
  %31 = udiv i64 %.035.i.i, %27
  %32 = mul i64 %31, %27
  %33 = sub i64 %.035.i.i, %32
  br label %50

34:                                               ; preds = %24
  %35 = shl i64 %.sroa.015.0.extract.trunc, %25
  %36 = shl i64 %.sroa.2.0.extract.trunc, %25
  %37 = sub nsw i64 0, %25
  %38 = and i64 %37, 63
  %39 = lshr i64 %.sroa.07.0.extract.trunc, %38
  %40 = or i64 %39, %36
  %41 = shl i64 %.sroa.07.0.extract.trunc, %25
  br label %26

42:                                               ; preds = %.critedge.i.i, %52
  %.037.i.i = phi i64 [ %57, %.critedge.i.i ], [ %.1.i.i, %52 ]
  %43 = shl i64 %.035.i.i, 32
  %44 = or i64 %43, %29
  %45 = mul i64 %.037.i.i, %.0.i.i
  %46 = sub i64 %44, %45
  %47 = udiv i64 %46, %27
  %48 = mul i64 %47, %27
  %49 = sub i64 %46, %48
  br label %60

50:                                               ; preds = %.critedge.i.i, %26
  %.038.i.i = phi i64 [ %33, %26 ], [ %58, %.critedge.i.i ]
  %.1.i.i = phi i64 [ %31, %26 ], [ %57, %.critedge.i.i ]
  %51 = icmp ugt i64 %.1.i.i, 4294967295
  br i1 %51, label %.critedge.i.i, label %52

52:                                               ; preds = %50
  %53 = mul nuw i64 %.1.i.i, %28
  %54 = shl nuw i64 %.038.i.i, 32
  %55 = or i64 %54, %29
  %56 = icmp ugt i64 %53, %55
  br i1 %56, label %.critedge.i.i, label %42

.critedge.i.i:                                    ; preds = %52, %50
  %57 = add i64 %.1.i.i, -1
  %58 = add nuw i64 %.038.i.i, %27
  %59 = icmp ugt i64 %58, 4294967295
  br i1 %59, label %42, label %50

60:                                               ; preds = %.critedge2.i.i, %42
  %.141.i.i = phi i64 [ %47, %42 ], [ %67, %.critedge2.i.i ]
  %.139.i.i = phi i64 [ %49, %42 ], [ %68, %.critedge2.i.i ]
  %61 = icmp ugt i64 %.141.i.i, 4294967295
  br i1 %61, label %.critedge2.i.i, label %62

62:                                               ; preds = %60
  %63 = mul nuw i64 %.141.i.i, %28
  %64 = shl nuw i64 %.139.i.i, 32
  %65 = or i64 %64, %30
  %66 = icmp ugt i64 %63, %65
  br i1 %66, label %.critedge2.i.i, label %compiler_rt.udivmod.divwide__anon_14184.exit

.critedge2.i.i:                                   ; preds = %62, %60
  %67 = add i64 %.141.i.i, -1
  %68 = add nuw i64 %.139.i.i, %27
  %69 = icmp ugt i64 %68, 4294967295
  br i1 %69, label %compiler_rt.udivmod.divwide__anon_14184.exit, label %60

compiler_rt.udivmod.divwide__anon_14184.exit:     ; preds = %.critedge2.i.i, %62
  %.040.i.i = phi i64 [ %67, %.critedge2.i.i ], [ %.141.i.i, %62 ]
  %70 = shl i64 %46, 32
  %71 = or i64 %70, %30
  %72 = mul i64 %.040.i.i, %.0.i.i
  %73 = sub i64 %71, %72
  %74 = lshr i64 %73, %25
  br label %21

75:                                               ; preds = %9
  %.sroa.2.0.extract.trunc.frozen = freeze i64 %.sroa.2.0.extract.trunc
  %.sroa.015.0.extract.trunc.frozen = freeze i64 %.sroa.015.0.extract.trunc
  %76 = udiv i64 %.sroa.2.0.extract.trunc.frozen, %.sroa.015.0.extract.trunc.frozen
  %77 = mul i64 %76, %.sroa.015.0.extract.trunc.frozen
  %.decomposed = sub i64 %.sroa.2.0.extract.trunc.frozen, %77
  %78 = tail call i64 @llvm.ctlz.i64(i64 %.sroa.015.0.extract.trunc, i1 false), !range !368
  %79 = and i64 %78, 63
  %.not.i.i48 = icmp eq i64 %79, 0
  br i1 %.not.i.i48, label %80, label %88

80:                                               ; preds = %88, %75
  %.036.i.i49 = phi i64 [ %95, %88 ], [ %.sroa.07.0.extract.trunc, %75 ]
  %.035.i.i50 = phi i64 [ %94, %88 ], [ %.decomposed, %75 ]
  %.0.i.i51 = phi i64 [ %89, %88 ], [ %.sroa.015.0.extract.trunc, %75 ]
  %81 = lshr i64 %.0.i.i51, 32
  %82 = and i64 %.0.i.i51, 4294967295
  %83 = lshr i64 %.036.i.i49, 32
  %84 = and i64 %.036.i.i49, 4294967295
  %85 = udiv i64 %.035.i.i50, %81
  %86 = mul i64 %85, %81
  %87 = sub i64 %.035.i.i50, %86
  br label %104

88:                                               ; preds = %75
  %89 = shl i64 %.sroa.015.0.extract.trunc, %79
  %90 = shl i64 %.decomposed, %79
  %91 = sub nsw i64 0, %78
  %92 = and i64 %91, 63
  %93 = lshr i64 %.sroa.07.0.extract.trunc, %92
  %94 = or i64 %90, %93
  %95 = shl i64 %.sroa.07.0.extract.trunc, %79
  br label %80

96:                                               ; preds = %.critedge.i.i55, %106
  %.037.i.i52 = phi i64 [ %111, %.critedge.i.i55 ], [ %.1.i.i54, %106 ]
  %97 = shl i64 %.035.i.i50, 32
  %98 = or i64 %97, %83
  %99 = mul i64 %.037.i.i52, %.0.i.i51
  %100 = sub i64 %98, %99
  %101 = udiv i64 %100, %81
  %102 = mul i64 %101, %81
  %103 = sub i64 %100, %102
  br label %114

104:                                              ; preds = %.critedge.i.i55, %80
  %.038.i.i53 = phi i64 [ %87, %80 ], [ %112, %.critedge.i.i55 ]
  %.1.i.i54 = phi i64 [ %85, %80 ], [ %111, %.critedge.i.i55 ]
  %105 = icmp ugt i64 %.1.i.i54, 4294967295
  br i1 %105, label %.critedge.i.i55, label %106

106:                                              ; preds = %104
  %107 = mul nuw i64 %.1.i.i54, %82
  %108 = shl nuw i64 %.038.i.i53, 32
  %109 = or i64 %108, %83
  %110 = icmp ugt i64 %107, %109
  br i1 %110, label %.critedge.i.i55, label %96

.critedge.i.i55:                                  ; preds = %106, %104
  %111 = add i64 %.1.i.i54, -1
  %112 = add nuw i64 %.038.i.i53, %81
  %113 = icmp ugt i64 %112, 4294967295
  br i1 %113, label %96, label %104

114:                                              ; preds = %.critedge2.i.i58, %96
  %.141.i.i56 = phi i64 [ %101, %96 ], [ %121, %.critedge2.i.i58 ]
  %.139.i.i57 = phi i64 [ %103, %96 ], [ %122, %.critedge2.i.i58 ]
  %115 = icmp ugt i64 %.141.i.i56, 4294967295
  br i1 %115, label %.critedge2.i.i58, label %116

116:                                              ; preds = %114
  %117 = mul nuw i64 %.141.i.i56, %82
  %118 = shl nuw i64 %.139.i.i57, 32
  %119 = or i64 %118, %84
  %120 = icmp ugt i64 %117, %119
  br i1 %120, label %.critedge2.i.i58, label %compiler_rt.udivmod.divwide__anon_14184.exit60

.critedge2.i.i58:                                 ; preds = %116, %114
  %121 = add i64 %.141.i.i56, -1
  %122 = add nuw i64 %.139.i.i57, %81
  %123 = icmp ugt i64 %122, 4294967295
  br i1 %123, label %compiler_rt.udivmod.divwide__anon_14184.exit60, label %114

compiler_rt.udivmod.divwide__anon_14184.exit60:   ; preds = %.critedge2.i.i58, %116
  %.040.i.i59 = phi i64 [ %121, %.critedge2.i.i58 ], [ %.141.i.i56, %116 ]
  %124 = shl i64 %100, 32
  %125 = or i64 %124, %84
  %126 = mul i64 %.040.i.i59, %.0.i.i51
  %127 = sub i64 %125, %126
  %128 = lshr i64 %127, %79
  br label %21

129:                                              ; preds = %130, %21
  %.sroa.10.0.insert.ext = zext i64 %.sroa.10.0 to i128
  %.sroa.10.0.insert.shift = shl nuw i128 %.sroa.10.0.insert.ext, 64
  %.sroa.017.0.insert.ext = zext i64 %23 to i128
  %.sroa.017.0.insert.insert = or i128 %.sroa.10.0.insert.shift, %.sroa.017.0.insert.ext
  br label %common.ret

130:                                              ; preds = %21
  %.sroa.0.0.insert.ext = zext i64 %.sroa.0.0 to i128
  store i128 %.sroa.0.0.insert.ext, ptr %2, align 16
  br label %129

131:                                              ; preds = %131, %11
  %lsr.iv = phi i64 [ %20, %11 ], [ %lsr.iv.next, %131 ]
  %.04066 = phi i128 [ %18, %11 ], [ %140, %131 ]
  %.04165 = phi i128 [ %0, %11 ], [ %139, %131 ]
  %.sroa.017.164 = phi i64 [ 0, %11 ], [ %137, %131 ]
  %132 = shl i64 %.sroa.017.164, 1
  %133 = xor i128 %.04165, -1
  %134 = add i128 %.04066, %133
  %135 = lshr i128 %134, 127
  %136 = trunc i128 %135 to i64
  %137 = or i64 %132, %136
  %isneg = icmp slt i128 %134, 0
  %138 = select i1 %isneg, i128 %.04066, i128 0
  %139 = sub nuw i128 %.04165, %138
  %140 = lshr i128 %.04066, 1
  %lsr.iv.next = add i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %141, label %131

141:                                              ; preds = %131
  %.not = icmp eq ptr %2, null
  br i1 %.not, label %142, label %143

142:                                              ; preds = %143, %141
  %.sroa.017.0.insert.ext21 = zext i64 %137 to i128
  br label %common.ret

143:                                              ; preds = %141
  store i128 %139, ptr %2, align 16
  br label %142
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__udivti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = tail call fastcc i128 @compiler_rt.udivmod.udivmod__anon_12862(i128 %0, i128 %1, ptr align 16 null)
  ret i128 %3
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__modti3(i128 %0, i128 %1) local_unnamed_addr #4 {
  %3 = alloca i128, align 16
  %4 = ashr i128 %0, 127
  %5 = xor i128 %4, %0
  %6 = sub i128 %5, %4
  %7 = tail call i128 @llvm.abs.i128(i128 %1, i1 false)
  %8 = call fastcc i128 @compiler_rt.udivmod.udivmod__anon_12862(i128 %6, i128 %7, ptr nonnull align 16 %3)
  %9 = load i128, ptr %3, align 16
  %10 = xor i128 %9, %4
  %11 = sub i128 %10, %4
  ret i128 %11
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local i128 @__muloti4(i128 %0, i128 %1, ptr nonnull align 4 %2) local_unnamed_addr #4 {
  %.fr = freeze i128 %1
  store i32 0, ptr %2, align 4
  %mul = tail call { i128, i1 } @llvm.smul.with.overflow.i128(i128 %0, i128 %.fr)
  %4 = icmp slt i128 %0, 0
  %5 = icmp eq i128 %.fr, -170141183460469231731687303715884105728
  %6 = and i1 %4, %5
  br i1 %6, label %.critedge, label %7

.critedge2:                                       ; preds = %.critedge, %7
  %mul.val = extractvalue { i128, i1 } %mul, 0
  ret i128 %mul.val

7:                                                ; preds = %3
  %mul.ov = extractvalue { i128, i1 } %mul, 1
  br i1 %mul.ov, label %.critedge, label %.critedge2

.critedge:                                        ; preds = %7, %3
  store i32 1, ptr %2, align 4
  br label %.critedge2
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local float @floorf(float %0) local_unnamed_addr #4 {
  %2 = bitcast float %0 to i32
  %3 = lshr i32 %2, 23
  %4 = and i32 %3, 255
  %5 = add nuw nsw i32 %3, 1
  %6 = fcmp oeq float %0, 0.000000e+00
  %7 = icmp ugt i32 %4, 149
  %or.cond = select i1 %6, i1 true, i1 %7
  br i1 %or.cond, label %common.ret, label %8

common.ret:                                       ; preds = %18, %15, %10, %1
  %common.ret.op = phi float [ %23, %18 ], [ %0, %1 ], [ %., %15 ], [ %0, %10 ]
  ret float %common.ret.op

8:                                                ; preds = %1
  %9 = icmp ugt i32 %4, 126
  br i1 %9, label %10, label %15

10:                                               ; preds = %8
  %11 = and i32 %5, 31
  %12 = lshr i32 8388607, %11
  %13 = and i32 %12, %2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %common.ret, label %18

15:                                               ; preds = %8
  %16 = fadd float %0, 0x4770000000000000
  tail call void asm sideeffect "", "rm"(float %16) #15
  %17 = icmp sgt i32 %2, -1
  %. = select i1 %17, float 0.000000e+00, float -1.000000e+00
  br label %common.ret

18:                                               ; preds = %10
  %19 = fadd float %0, 0x4770000000000000
  tail call void asm sideeffect "", "rm"(float %19) #15
  %.not11 = icmp slt i32 %2, 0
  %20 = select i1 %.not11, i32 %12, i32 0
  %spec.select = add nuw i32 %20, %2
  %21 = ashr i32 -8388608, %11
  %22 = and i32 %spec.select, %21
  %23 = bitcast i32 %22 to float
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local ptr @memcpy(ptr noalias align 1 %0, ptr noalias readonly align 1 %1, i64 %2) local_unnamed_addr #4 {
  %.not = icmp eq i64 %2, 0
  br i1 %.not, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %3
  %4 = load i8, ptr %1, align 1
  store i8 %4, ptr %0, align 1
  %5 = add i64 %2, -1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %.loopexit, label %iter.check

iter.check:                                       ; preds = %.preheader
  %min.iters.check = icmp ult i64 %2, 9
  br i1 %min.iters.check, label %.lr.ph.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check11 = icmp ult i64 %2, 33
  br i1 %min.iters.check11, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %5, -32
  %uglygep50 = getelementptr i8, ptr %1, i64 17
  %uglygep54 = getelementptr i8, ptr %0, i64 17
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv58 = phi i64 [ %lsr.iv.next59, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv55 = phi ptr [ %uglygep56, %vector.body ], [ %uglygep54, %vector.ph ]
  %lsr.iv51 = phi ptr [ %uglygep52, %vector.body ], [ %uglygep50, %vector.ph ]
  %uglygep57 = getelementptr i8, ptr %lsr.iv55, i64 -16
  %uglygep53 = getelementptr i8, ptr %lsr.iv51, i64 -16
  %wide.load = load <16 x i8>, ptr %uglygep53, align 1
  %wide.load15 = load <16 x i8>, ptr %lsr.iv51, align 1
  store <16 x i8> %wide.load, ptr %uglygep57, align 1
  store <16 x i8> %wide.load15, ptr %lsr.iv55, align 1
  %uglygep52 = getelementptr i8, ptr %lsr.iv51, i64 32
  %uglygep56 = getelementptr i8, ptr %lsr.iv55, i64 32
  %lsr.iv.next59 = add i64 %lsr.iv58, -32
  %7 = icmp eq i64 %lsr.iv.next59, 0
  br i1 %7, label %middle.block, label %vector.body, !llvm.loop !369

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %5, %n.vec
  br i1 %cmp.n, label %.loopexit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end27 = getelementptr i8, ptr %1, i64 %n.vec
  %ind.end24 = getelementptr i8, ptr %0, i64 %n.vec
  %ind.end21 = and i64 %5, 31
  %n.vec.remaining = and i64 %5, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec19 = and i64 %5, -8
  %ind.end20 = and i64 %5, 7
  %ind.end23 = getelementptr i8, ptr %0, i64 %n.vec19
  %ind.end26 = getelementptr i8, ptr %1, i64 %n.vec19
  %8 = add nuw nsw i64 %vec.epilog.resume.val, 1
  %uglygep43 = getelementptr i8, ptr %1, i64 %8
  %uglygep46 = getelementptr i8, ptr %0, i64 %8
  %9 = sub i64 %vec.epilog.resume.val, %n.vec19
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv49 = phi i64 [ %lsr.iv.next, %vec.epilog.vector.body ], [ %9, %vec.epilog.ph ]
  %lsr.iv47 = phi ptr [ %uglygep48, %vec.epilog.vector.body ], [ %uglygep46, %vec.epilog.ph ]
  %lsr.iv44 = phi ptr [ %uglygep45, %vec.epilog.vector.body ], [ %uglygep43, %vec.epilog.ph ]
  %wide.load33 = load <8 x i8>, ptr %lsr.iv44, align 1
  store <8 x i8> %wide.load33, ptr %lsr.iv47, align 1
  %uglygep45 = getelementptr i8, ptr %lsr.iv44, i64 8
  %uglygep48 = getelementptr i8, ptr %lsr.iv47, i64 8
  %lsr.iv.next = add i64 %lsr.iv49, 8
  %10 = icmp eq i64 %lsr.iv.next, 0
  br i1 %10, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !370

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n29 = icmp eq i64 %5, %n.vec19
  br i1 %cmp.n29, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.ph = phi i64 [ %ind.end20, %vec.epilog.middle.block ], [ %ind.end21, %vec.epilog.iter.check ], [ %5, %iter.check ]
  %.010.ph = phi ptr [ %ind.end23, %vec.epilog.middle.block ], [ %ind.end24, %vec.epilog.iter.check ], [ %0, %iter.check ]
  %.059.ph = phi ptr [ %ind.end26, %vec.epilog.middle.block ], [ %ind.end27, %vec.epilog.iter.check ], [ %1, %iter.check ]
  %uglygep = getelementptr i8, ptr %.010.ph, i64 1
  %uglygep40 = getelementptr i8, ptr %.059.ph, i64 1
  br label %.lr.ph

.loopexit:                                        ; preds = %.lr.ph, %vec.epilog.middle.block, %middle.block, %.preheader, %3
  ret ptr %0

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv41 = phi ptr [ %uglygep40, %.lr.ph.preheader ], [ %uglygep42, %.lr.ph ]
  %lsr.iv = phi ptr [ %uglygep, %.lr.ph.preheader ], [ %uglygep39, %.lr.ph ]
  %11 = phi i64 [ %13, %.lr.ph ], [ %.ph, %.lr.ph.preheader ]
  %12 = load i8, ptr %lsr.iv41, align 1
  store i8 %12, ptr %lsr.iv, align 1
  %13 = add i64 %11, -1
  %uglygep39 = getelementptr i8, ptr %lsr.iv, i64 1
  %uglygep42 = getelementptr i8, ptr %lsr.iv41, i64 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %.loopexit, label %.lr.ph, !llvm.loop !371
}

; Function Attrs: nounwind uwtable
define weak_odr dso_local ptr @memset(ptr align 1 %0, i8 zeroext %1, i64 %2) local_unnamed_addr #4 {
  %.not = icmp eq i64 %2, 0
  br i1 %.not, label %.loopexit, label %iter.check

iter.check:                                       ; preds = %3
  %min.iters.check = icmp ult i64 %2, 8
  br i1 %min.iters.check, label %.preheader.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check6 = icmp ult i64 %2, 32
  br i1 %min.iters.check6, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %2, -32
  %broadcast.splatinsert = insertelement <16 x i8> poison, i8 %1, i64 0
  %broadcast.splat = shufflevector <16 x i8> %broadcast.splatinsert, <16 x i8> poison, <16 x i32> zeroinitializer
  %broadcast.splatinsert8 = insertelement <16 x i8> poison, i8 %1, i64 0
  %broadcast.splat9 = shufflevector <16 x i8> %broadcast.splatinsert8, <16 x i8> poison, <16 x i32> zeroinitializer
  %uglygep26 = getelementptr i8, ptr %0, i64 16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv30 = phi i64 [ %lsr.iv.next31, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv27 = phi ptr [ %uglygep28, %vector.body ], [ %uglygep26, %vector.ph ]
  %uglygep29 = getelementptr i8, ptr %lsr.iv27, i64 -16
  store <16 x i8> %broadcast.splat, ptr %uglygep29, align 1
  store <16 x i8> %broadcast.splat9, ptr %lsr.iv27, align 1
  %uglygep28 = getelementptr i8, ptr %lsr.iv27, i64 32
  %lsr.iv.next31 = add i64 %lsr.iv30, -32
  %4 = icmp eq i64 %lsr.iv.next31, 0
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !372

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %2
  br i1 %cmp.n, label %.loopexit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end16 = getelementptr i8, ptr %0, i64 %n.vec
  %ind.end13 = and i64 %2, 31
  %n.vec.remaining = and i64 %2, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.preheader.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec11 = and i64 %2, -8
  %ind.end12 = and i64 %2, 7
  %ind.end15 = getelementptr i8, ptr %0, i64 %n.vec11
  %broadcast.splatinsert21 = insertelement <8 x i8> poison, i8 %1, i64 0
  %broadcast.splat22 = shufflevector <8 x i8> %broadcast.splatinsert21, <8 x i8> poison, <8 x i32> zeroinitializer
  %uglygep = getelementptr i8, ptr %0, i64 %vec.epilog.resume.val
  %5 = sub i64 %vec.epilog.resume.val, %n.vec11
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv25 = phi i64 [ %lsr.iv.next, %vec.epilog.vector.body ], [ %5, %vec.epilog.ph ]
  %lsr.iv = phi ptr [ %uglygep24, %vec.epilog.vector.body ], [ %uglygep, %vec.epilog.ph ]
  store <8 x i8> %broadcast.splat22, ptr %lsr.iv, align 1
  %uglygep24 = getelementptr i8, ptr %lsr.iv, i64 8
  %lsr.iv.next = add i64 %lsr.iv25, 8
  %6 = icmp eq i64 %lsr.iv.next, 0
  br i1 %6, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !373

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n18 = icmp eq i64 %n.vec11, %2
  br i1 %cmp.n18, label %.loopexit, label %.preheader.preheader

.preheader.preheader:                             ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.03.ph = phi i64 [ %ind.end12, %vec.epilog.middle.block ], [ %ind.end13, %vec.epilog.iter.check ], [ %2, %iter.check ]
  %.0.ph = phi ptr [ %ind.end15, %vec.epilog.middle.block ], [ %ind.end16, %vec.epilog.iter.check ], [ %0, %iter.check ]
  br label %.preheader

.loopexit:                                        ; preds = %.preheader, %vec.epilog.middle.block, %middle.block, %3
  ret ptr %0

.preheader:                                       ; preds = %.preheader, %.preheader.preheader
  %.03 = phi i64 [ %7, %.preheader ], [ %.03.ph, %.preheader.preheader ]
  %.0 = phi ptr [ %8, %.preheader ], [ %.0.ph, %.preheader.preheader ]
  store i8 %1, ptr %.0, align 1
  %7 = add i64 %.03, -1
  %8 = getelementptr inbounds i8, ptr %.0, i64 1
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %.loopexit, label %.preheader, !llvm.loop !374
}

; Function Attrs: nofree nosync nounwind memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define private fastcc void @unicode.utf8CountCodepoints(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #8 {
  %4 = alloca { i21, i16, [2 x i8] }, align 4
  %.not56 = icmp eq i64 %2, 0
  br i1 %.not56, label %._crit_edge54, label %.preheader.lr.ph

.preheader.lr.ph:                                 ; preds = %3
  %5 = load i32, ptr @0, align 4
  %6 = load i32, ptr @4, align 4
  %7 = load i32, ptr @3, align 4
  %8 = load i32, ptr @2, align 4
  br label %.preheader

common.ret:                                       ; preds = %45, %33, %._crit_edge54
  ret void

.preheader:                                       ; preds = %15, %.preheader.lr.ph
  %.053 = phi i64 [ 0, %.preheader.lr.ph ], [ %.2, %15 ]
  %.02952 = phi i64 [ 0, %.preheader.lr.ph ], [ %.231, %15 ]
  %9 = add nuw i64 %.02952, 8
  %.not45 = icmp ugt i64 %9, %2
  br i1 %.not45, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

._crit_edge54:                                    ; preds = %15, %3
  %.0.lcssa = phi i64 [ 0, %3 ], [ %.2, %15 ]
  store i64 %.0.lcssa, ptr %0, align 8
  %.sroa.228.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 0, ptr %.sroa.228.0..sroa_idx, align 8
  br label %common.ret

._crit_edge:                                      ; preds = %12, %.lr.ph, %.preheader
  %.130.lcssa = phi i64 [ %.02952, %.preheader ], [ %lsr.iv, %.lr.ph ], [ %lsr.iv.next, %12 ]
  %.1.lcssa = phi i64 [ %.053, %.preheader ], [ %.147, %.lr.ph ], [ %13, %12 ]
  %10 = icmp ult i64 %.130.lcssa, %2
  br i1 %10, label %17, label %15

.lr.ph:                                           ; preds = %12, %.lr.ph.preheader
  %lsr.iv = phi i64 [ %.02952, %.lr.ph.preheader ], [ %lsr.iv.next, %12 ]
  %.147 = phi i64 [ %13, %12 ], [ %.053, %.lr.ph.preheader ]
  %uglygep = getelementptr i8, ptr %1, i64 %lsr.iv
  %.val = load i64, ptr %uglygep, align 1
  %11 = and i64 %.val, -9187201950435737472
  %.not39 = icmp eq i64 %11, 0
  br i1 %.not39, label %12, label %._crit_edge

12:                                               ; preds = %.lr.ph
  %13 = add i64 %.147, 8
  %lsr.iv.next = add i64 %lsr.iv, 8
  %14 = add i64 %lsr.iv.next, 8
  %.not = icmp ugt i64 %14, %2
  br i1 %.not, label %._crit_edge, label %.lr.ph

15:                                               ; preds = %41, %._crit_edge
  %.231 = phi i64 [ %36, %41 ], [ %.130.lcssa, %._crit_edge ]
  %.2 = phi i64 [ %42, %41 ], [ %.1.lcssa, %._crit_edge ]
  %16 = icmp ult i64 %.231, %2
  br i1 %16, label %.preheader, label %._crit_edge54

17:                                               ; preds = %._crit_edge
  %18 = getelementptr inbounds i8, ptr %1, i64 %.130.lcssa
  %19 = load i8, ptr %18, align 1
  %20 = zext i8 %19 to i32
  %21 = trunc i32 %20 to i8
  %22 = icmp sgt i8 %21, -1
  br i1 %22, label %unicode.utf8ByteSequenceLength.exit, label %23

23:                                               ; preds = %17
  %24 = and i32 %20, 224
  %25 = icmp eq i32 %24, 192
  br i1 %25, label %unicode.utf8ByteSequenceLength.exit, label %26

26:                                               ; preds = %23
  %27 = and i32 %20, 240
  %28 = icmp eq i32 %27, 224
  br i1 %28, label %unicode.utf8ByteSequenceLength.exit, label %29

29:                                               ; preds = %26
  %30 = and i32 %20, 248
  %31 = icmp eq i32 %30, 240
  %spec.select.i = select i1 %31, i32 %5, i32 20
  br label %unicode.utf8ByteSequenceLength.exit

unicode.utf8ByteSequenceLength.exit:              ; preds = %29, %26, %23, %17
  %.sink.i = phi i32 [ %spec.select.i, %29 ], [ %8, %17 ], [ %7, %23 ], [ %6, %26 ]
  %32 = and i32 %.sink.i, 65535
  %.not37 = icmp eq i32 %32, 0
  br i1 %.not37, label %34, label %33

33:                                               ; preds = %unicode.utf8ByteSequenceLength.exit
  %.sroa.0.0.extract.trunc.le = trunc i32 %.sink.i to i16
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 %.sroa.0.0.extract.trunc.le, ptr %.sroa.1.0..sroa_idx, align 8
  br label %common.ret

34:                                               ; preds = %unicode.utf8ByteSequenceLength.exit
  %.sroa.2.0.extract.shift = lshr i32 %.sink.i, 16
  %.mask = and i32 %.sroa.2.0.extract.shift, 7
  %35 = zext i32 %.mask to i64
  %36 = add nuw i64 %.130.lcssa, %35
  %37 = icmp ugt i64 %36, %2
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %0, ptr noundef nonnull align 8 dereferenceable(16) @1, i64 16, i1 false)
  ret void

39:                                               ; preds = %34
  %40 = and i32 %.sink.i, 458752
  %cond = icmp eq i32 %40, 65536
  br i1 %cond, label %41, label %43

41:                                               ; preds = %43, %39
  %42 = add nuw i64 %.1.lcssa, 1
  br label %15

43:                                               ; preds = %39
  call fastcc void @unicode.utf8Decode(ptr noalias %4, ptr nonnull readonly align 1 %18, i64 %35)
  %sunkaddr = getelementptr inbounds i8, ptr %4, i64 4
  %44 = load i16, ptr %sunkaddr, align 4
  %.not38 = icmp eq i16 %44, 0
  br i1 %.not38, label %41, label %45

45:                                               ; preds = %43
  %.sroa.125.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 8
  store i16 %44, ptr %.sroa.125.0..sroa_idx, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define private fastcc void @unicode.utf8Decode(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 1 %1, i64 %2) unnamed_addr #9 {
  %.sroa.09.i.sroa.0 = alloca i24, align 4
  %.sroa.08.i.sroa.0 = alloca i24, align 4
  %.sroa.04.i.sroa.0 = alloca i24, align 4
  %.sroa.0 = alloca [3 x i8], align 4
  switch i64 %2, label %5 [
    i64 1, label %6
    i64 2, label %9
    i64 3, label %26
    i64 4, label %58
  ]

4:                                                ; preds = %unicode.utf8Decode4.exit, %unicode.utf8Decode3.exit, %unicode.utf8Decode2.exit, %6
  ret void

5:                                                ; preds = %3
  unreachable

6:                                                ; preds = %3
  %7 = load i8, ptr %1, align 1
  %8 = zext i8 %7 to i21
  store i21 %8, ptr %.sroa.0, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(3) %0, ptr noundef nonnull align 4 dereferenceable(3) %.sroa.0, i64 3, i1 false)
  %.sroa.21.0..sroa_idx = getelementptr inbounds i8, ptr %0, i64 4
  store i16 0, ptr %.sroa.21.0..sroa_idx, align 4
  br label %4

9:                                                ; preds = %3
  %.val = load i8, ptr %1, align 1
  %10 = zext i8 %.val to i32
  %11 = getelementptr i8, ptr %1, i64 1
  %.val2 = load i8, ptr %11, align 1
  %12 = zext i8 %.val2 to i32
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.04.i.sroa.0)
  %13 = and i32 %12, 192
  %.not.i = icmp eq i32 %13, 128
  br i1 %.not.i, label %14, label %unicode.utf8Decode2.exit

14:                                               ; preds = %9
  %15 = and i32 %10, 31
  %16 = trunc i32 %15 to i8
  %17 = zext i8 %16 to i21
  %18 = shl nuw nsw i21 %17, 6
  %19 = and i32 %12, 63
  %20 = trunc i32 %19 to i8
  %21 = zext i8 %20 to i21
  %22 = or i21 %18, %21
  %23 = icmp ult i21 %22, 128
  br i1 %23, label %unicode.utf8Decode2.exit, label %24

24:                                               ; preds = %14
  store i21 %22, ptr %.sroa.04.i.sroa.0, align 4, !noalias !375
  %.sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.05.sroa.0.0.copyload = load i24, ptr %.sroa.04.i.sroa.0, align 4
  %25 = zext i24 %.sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.04.i.sroa.0.0..sroa.05.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode2.exit

unicode.utf8Decode2.exit:                         ; preds = %24, %14, %9
  %.sroa.05.sroa.0.0 = phi i64 [ %25, %24 ], [ 0, %9 ], [ 0, %14 ]
  %.sroa.4.0 = phi i64 [ 0, %24 ], [ 94489280512, %9 ], [ 98784247808, %14 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.04.i.sroa.0)
  %.sroa.05.0.insert.insert = or i64 %.sroa.4.0, %.sroa.05.sroa.0.0
  store i64 %.sroa.05.0.insert.insert, ptr %0, align 4
  br label %4

26:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.08.i.sroa.0)
  %27 = load i8, ptr %1, align 1, !noalias !378
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, ptr %1, i64 1
  %30 = load i8, ptr %29, align 1, !noalias !378
  %31 = zext i8 %30 to i32
  %32 = and i32 %31, 192
  %.not.i3 = icmp eq i32 %32, 128
  br i1 %.not.i3, label %33, label %unicode.utf8Decode3.exit

33:                                               ; preds = %26
  %34 = getelementptr inbounds i8, ptr %1, i64 2
  %35 = load i8, ptr %34, align 1, !noalias !378
  %36 = zext i8 %35 to i32
  %37 = and i32 %36, 192
  %.not10.i = icmp eq i32 %37, 128
  br i1 %.not10.i, label %38, label %unicode.utf8Decode3.exit

38:                                               ; preds = %33
  %39 = and i32 %28, 15
  %40 = trunc i32 %39 to i8
  %41 = zext i8 %40 to i21
  %42 = and i32 %31, 63
  %43 = trunc i32 %42 to i8
  %44 = zext i8 %43 to i21
  %45 = shl nuw nsw i21 %41, 12
  %46 = shl nuw nsw i21 %44, 6
  %47 = or i21 %46, %45
  %48 = and i32 %36, 63
  %49 = trunc i32 %48 to i8
  %50 = zext i8 %49 to i21
  %51 = or i21 %47, %50
  %52 = icmp ult i21 %51, 2048
  br i1 %52, label %unicode.utf8Decode3.exit, label %53

53:                                               ; preds = %38
  %54 = and i21 %47, 63488
  %55 = icmp eq i21 %54, 55296
  br i1 %55, label %unicode.utf8Decode3.exit, label %56

56:                                               ; preds = %53
  store i21 %51, ptr %.sroa.08.i.sroa.0, align 4, !noalias !378
  %.sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.06.sroa.0.0.copyload = load i24, ptr %.sroa.08.i.sroa.0, align 4
  %57 = zext i24 %.sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.08.i.sroa.0.0..sroa.06.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode3.exit

unicode.utf8Decode3.exit:                         ; preds = %56, %53, %38, %33, %26
  %.sroa.06.sroa.0.0 = phi i64 [ %57, %56 ], [ 0, %26 ], [ 0, %33 ], [ 0, %38 ], [ 0, %53 ]
  %.sroa.6.0 = phi i64 [ 0, %56 ], [ 94489280512, %26 ], [ 94489280512, %33 ], [ 98784247808, %38 ], [ 103079215104, %53 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.08.i.sroa.0)
  %.sroa.06.0.insert.insert = or i64 %.sroa.6.0, %.sroa.06.sroa.0.0
  store i64 %.sroa.06.0.insert.insert, ptr %0, align 4
  br label %4

58:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %.sroa.09.i.sroa.0)
  %59 = load i8, ptr %1, align 1, !noalias !381
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds i8, ptr %1, i64 1
  %62 = load i8, ptr %61, align 1, !noalias !381
  %63 = zext i8 %62 to i32
  %64 = and i32 %63, 192
  %.not.i4 = icmp eq i32 %64, 128
  br i1 %.not.i4, label %65, label %unicode.utf8Decode4.exit

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, ptr %1, i64 2
  %67 = load i8, ptr %66, align 1, !noalias !381
  %68 = zext i8 %67 to i32
  %69 = and i32 %68, 192
  %.not11.i = icmp eq i32 %69, 128
  br i1 %.not11.i, label %70, label %unicode.utf8Decode4.exit

70:                                               ; preds = %65
  %71 = getelementptr inbounds i8, ptr %1, i64 3
  %72 = load i8, ptr %71, align 1, !noalias !381
  %73 = zext i8 %72 to i32
  %74 = and i32 %73, 192
  %.not12.i = icmp eq i32 %74, 128
  br i1 %.not12.i, label %75, label %unicode.utf8Decode4.exit

75:                                               ; preds = %70
  %76 = trunc i32 %60 to i8
  %77 = zext i8 %76 to i21
  %78 = shl nuw nsw i21 %77, 12
  %79 = and i32 %63, 63
  %80 = trunc i32 %79 to i8
  %81 = zext i8 %80 to i21
  %82 = shl nuw nsw i21 %81, 6
  %83 = or i21 %82, %78
  %84 = and i32 %68, 63
  %85 = trunc i32 %84 to i8
  %86 = zext i8 %85 to i21
  %87 = or i21 %83, %86
  %88 = shl i21 %87, 6
  %89 = and i32 %73, 63
  %90 = trunc i32 %89 to i8
  %91 = zext i8 %90 to i21
  %92 = or i21 %88, %91
  %93 = icmp ult i21 %92, 65536
  br i1 %93, label %unicode.utf8Decode4.exit, label %94

94:                                               ; preds = %75
  %95 = icmp ugt i21 %92, -983041
  br i1 %95, label %unicode.utf8Decode4.exit, label %96

96:                                               ; preds = %94
  store i21 %92, ptr %.sroa.09.i.sroa.0, align 4, !noalias !381
  %.sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.07.sroa.0.0.copyload = load i24, ptr %.sroa.09.i.sroa.0, align 4
  %97 = zext i24 %.sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.09.i.sroa.0.0..sroa.07.sroa.0.0.copyload to i64
  br label %unicode.utf8Decode4.exit

unicode.utf8Decode4.exit:                         ; preds = %96, %94, %75, %70, %65, %58
  %.sroa.07.sroa.0.0 = phi i64 [ %97, %96 ], [ 0, %58 ], [ 0, %65 ], [ 0, %70 ], [ 0, %75 ], [ 0, %94 ]
  %.sroa.7.0 = phi i64 [ 0, %96 ], [ 94489280512, %58 ], [ 94489280512, %65 ], [ 94489280512, %70 ], [ 98784247808, %75 ], [ 107374182400, %94 ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %.sroa.09.i.sroa.0)
  %.sroa.07.0.insert.insert = or i64 %.sroa.7.0, %.sroa.07.sroa.0.0
  store i64 %.sroa.07.0.insert.insert, ptr %0, align 4
  br label %4
}

; Function Attrs: nofree nosync nounwind uwtable
define private fastcc i16 @fmt.formatBuf__anon_13251(ptr nocapture nonnull readonly align 1 %0, i64 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull readonly align 8 %3) unnamed_addr #10 {
  %5 = alloca [256 x i8], align 1
  %6 = alloca [256 x i8], align 1
  %7 = alloca [256 x i8], align 1
  %8 = alloca %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write'))", align 8
  %9 = alloca { i64, i16, [6 x i8] }, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 1, i32 1
  %.sroa.2.0.copyload = load i8, ptr %.sroa.2.0..sroa_idx, align 8
  %.not = icmp eq i8 %.sroa.2.0.copyload, 0
  br i1 %.not, label %18, label %10

common.ret:                                       ; preds = %172, %.lr.ph.i90, %169, %.loopexit116, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81", %.loopexit112, %131, %.lr.ph.i63, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54", %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", %66, %.lr.ph.i33, %43, %.lr.ph.i21, %40, %36, %25, %.lr.ph.i, %22, %18
  %common.ret.op = phi i16 [ %common.ret.op.i37, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit" ], [ 5, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54" ], [ %144, %.loopexit112 ], [ 5, %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81" ], [ 0, %18 ], [ 0, %36 ], [ 0, %.loopexit116 ], [ 5, %.lr.ph.i ], [ 5, %25 ], [ 0, %22 ], [ 5, %.lr.ph.i33 ], [ 5, %66 ], [ 5, %.lr.ph.i63 ], [ 5, %131 ], [ 5, %.lr.ph.i90 ], [ 5, %172 ], [ 0, %169 ], [ 5, %.lr.ph.i21 ], [ 5, %43 ], [ 0, %40 ]
  ret i16 %common.ret.op

10:                                               ; preds = %4
  %11 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 1
  %.sroa.0.0.copyload = load i64, ptr %11, align 8
  call fastcc void @unicode.utf8CountCodepoints(ptr noalias %9, ptr nonnull readonly align 1 %0, i64 %1)
  %12 = getelementptr inbounds { i64, i16, [6 x i8] }, ptr %9, i64 0, i32 1
  %13 = load i16, ptr %12, align 8
  %14 = icmp eq i16 %13, 0
  %15 = load i64, ptr %9, align 8
  %16 = select i1 %14, i64 %15, i64 %1
  %17 = tail call i64 @llvm.usub.sat.i64(i64 %.sroa.0.0.copyload, i64 %16)
  %.not8 = icmp ugt i64 %.sroa.0.0.copyload, %16
  br i1 %.not8, label %54, label %36

18:                                               ; preds = %4
  %19 = load i64, ptr %3, align 8
  %.not15.i = icmp eq i64 %1, 0
  br i1 %.not15.i, label %common.ret, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %18
  %20 = inttoptr i64 %19 to ptr
  %21 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %20, i64 0, i32 1
  %.pre136 = load i64, ptr %21, align 8, !noalias !384
  br label %.lr.ph.i

22:                                               ; preds = %25
  %23 = add nuw i64 %31, %.016.i
  %.not.i = icmp eq i64 %23, %1
  br i1 %.not.i, label %common.ret, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %22, %.lr.ph.i.preheader
  %24 = phi i64 [ %34, %22 ], [ %.pre136, %.lr.ph.i.preheader ]
  %.016.i = phi i64 [ %23, %22 ], [ 0, %.lr.ph.i.preheader ]
  %sunkaddr = inttoptr i64 %19 to ptr
  %sunkaddr173 = getelementptr inbounds i8, ptr %sunkaddr, i64 8
  %.unpack10.i.i.i = load i64, ptr %sunkaddr173, align 8, !noalias !384
  %.not.i.i.i = icmp ugt i64 %.unpack10.i.i.i, %24
  br i1 %.not.i.i.i, label %25, label %common.ret

25:                                               ; preds = %.lr.ph.i
  %26 = inttoptr i64 %19 to ptr
  %27 = sub nuw i64 %1, %.016.i
  %28 = getelementptr inbounds i8, ptr %0, i64 %.016.i
  %29 = add nuw i64 %24, %27
  %.not11.i.i.i = icmp ugt i64 %29, %.unpack10.i.i.i
  %30 = sub nuw i64 %.unpack10.i.i.i, %24
  %31 = select i1 %.not11.i.i.i, i64 %30, i64 %27
  %.unpack.i.i.i = load ptr, ptr %26, align 8, !noalias !384
  %32 = getelementptr inbounds i8, ptr %.unpack.i.i.i, i64 %24
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %32, ptr nonnull align 1 %28, i64 %31, i1 false), !noalias !384
  %sunkaddr174 = inttoptr i64 %19 to ptr
  %sunkaddr175 = getelementptr inbounds i8, ptr %sunkaddr174, i64 16
  %33 = load i64, ptr %sunkaddr175, align 8, !noalias !384
  %34 = add nuw i64 %33, %31
  store i64 %34, ptr %sunkaddr175, align 8, !noalias !384
  %35 = icmp eq i64 %31, 0
  br i1 %35, label %common.ret, label %22

36:                                               ; preds = %10
  %37 = load i64, ptr %3, align 8
  %.not15.i13 = icmp eq i64 %1, 0
  br i1 %.not15.i13, label %common.ret, label %.lr.ph.i21.preheader

.lr.ph.i21.preheader:                             ; preds = %36
  %38 = inttoptr i64 %37 to ptr
  %39 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %38, i64 0, i32 1
  %.pre = load i64, ptr %39, align 8, !noalias !389
  br label %.lr.ph.i21

40:                                               ; preds = %43
  %41 = add nuw i64 %49, %.016.i16
  %.not.i15 = icmp eq i64 %41, %1
  br i1 %.not.i15, label %common.ret, label %.lr.ph.i21

.lr.ph.i21:                                       ; preds = %40, %.lr.ph.i21.preheader
  %42 = phi i64 [ %52, %40 ], [ %.pre, %.lr.ph.i21.preheader ]
  %.016.i16 = phi i64 [ %41, %40 ], [ 0, %.lr.ph.i21.preheader ]
  %sunkaddr176 = inttoptr i64 %37 to ptr
  %sunkaddr177 = getelementptr inbounds i8, ptr %sunkaddr176, i64 8
  %.unpack10.i.i.i19 = load i64, ptr %sunkaddr177, align 8, !noalias !389
  %.not.i.i.i20 = icmp ugt i64 %.unpack10.i.i.i19, %42
  br i1 %.not.i.i.i20, label %43, label %common.ret

43:                                               ; preds = %.lr.ph.i21
  %44 = inttoptr i64 %37 to ptr
  %45 = sub nuw i64 %1, %.016.i16
  %46 = getelementptr inbounds i8, ptr %0, i64 %.016.i16
  %47 = add nuw i64 %42, %45
  %.not11.i.i.i22 = icmp ugt i64 %47, %.unpack10.i.i.i19
  %48 = sub nuw i64 %.unpack10.i.i.i19, %42
  %49 = select i1 %.not11.i.i.i22, i64 %48, i64 %45
  %.unpack.i.i.i23 = load ptr, ptr %44, align 8, !noalias !389
  %50 = getelementptr inbounds i8, ptr %.unpack.i.i.i23, i64 %42
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %50, ptr nonnull align 1 %46, i64 %49, i1 false), !noalias !389
  %sunkaddr178 = inttoptr i64 %37 to ptr
  %sunkaddr179 = getelementptr inbounds i8, ptr %sunkaddr178, i64 16
  %51 = load i64, ptr %sunkaddr179, align 8, !noalias !389
  %52 = add nuw i64 %51, %49
  store i64 %52, ptr %sunkaddr179, align 8, !noalias !389
  %53 = icmp eq i64 %49, 0
  br i1 %53, label %common.ret, label %40

54:                                               ; preds = %10
  %55 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 2
  %56 = load i2, ptr %55, align 8
  %57 = zext i2 %56 to i32
  switch i32 %57, label %58 [
    i32 0, label %59
    i32 1, label %99
    i32 2, label %.lr.ph.i72.preheader
  ]

58:                                               ; preds = %54
  unreachable

59:                                               ; preds = %54
  %60 = load i64, ptr %3, align 8
  %.not15.i25 = icmp eq i64 %1, 0
  br i1 %.not15.i25, label %.lr.ph.i38.preheader, label %.lr.ph.i33.preheader

.lr.ph.i33.preheader:                             ; preds = %59
  %61 = inttoptr i64 %60 to ptr
  %62 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %61, i64 0, i32 1
  %.pre133 = load i64, ptr %62, align 8, !noalias !394
  br label %.lr.ph.i33

63:                                               ; preds = %66
  %64 = add nuw i64 %72, %.016.i28
  %.not.i27 = icmp eq i64 %64, %1
  br i1 %.not.i27, label %.loopexit.loopexit, label %.lr.ph.i33

.lr.ph.i33:                                       ; preds = %63, %.lr.ph.i33.preheader
  %65 = phi i64 [ %75, %63 ], [ %.pre133, %.lr.ph.i33.preheader ]
  %.016.i28 = phi i64 [ %64, %63 ], [ 0, %.lr.ph.i33.preheader ]
  %sunkaddr180 = inttoptr i64 %60 to ptr
  %sunkaddr181 = getelementptr inbounds i8, ptr %sunkaddr180, i64 8
  %.unpack10.i.i.i31 = load i64, ptr %sunkaddr181, align 8, !noalias !394
  %.not.i.i.i32 = icmp ugt i64 %.unpack10.i.i.i31, %65
  br i1 %.not.i.i.i32, label %66, label %common.ret

66:                                               ; preds = %.lr.ph.i33
  %67 = inttoptr i64 %60 to ptr
  %68 = sub nuw i64 %1, %.016.i28
  %69 = getelementptr inbounds i8, ptr %0, i64 %.016.i28
  %70 = add nuw i64 %65, %68
  %.not11.i.i.i34 = icmp ugt i64 %70, %.unpack10.i.i.i31
  %71 = sub nuw i64 %.unpack10.i.i.i31, %65
  %72 = select i1 %.not11.i.i.i34, i64 %71, i64 %68
  %.unpack.i.i.i35 = load ptr, ptr %67, align 8, !noalias !394
  %73 = getelementptr inbounds i8, ptr %.unpack.i.i.i35, i64 %65
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %73, ptr nonnull align 1 %69, i64 %72, i1 false), !noalias !394
  %sunkaddr182 = inttoptr i64 %60 to ptr
  %sunkaddr183 = getelementptr inbounds i8, ptr %sunkaddr182, i64 16
  %74 = load i64, ptr %sunkaddr183, align 8, !noalias !394
  %75 = add nuw i64 %74, %72
  store i64 %75, ptr %sunkaddr183, align 8, !noalias !394
  %76 = icmp eq i64 %72, 0
  br i1 %76, label %common.ret, label %63

.loopexit.loopexit:                               ; preds = %63
  %.pre134 = load i64, ptr %3, align 8
  br label %.lr.ph.i38.preheader

.lr.ph.i38.preheader:                             ; preds = %.loopexit.loopexit, %59
  %77 = phi i64 [ %.pre134, %.loopexit.loopexit ], [ %60, %59 ]
  %78 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %79 = load i8, ptr %78, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %79, i64 256, i1 false)
  %80 = inttoptr i64 %77 to ptr
  %81 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %80, i64 0, i32 1
  %.pre.i.pre = load i64, ptr %81, align 8, !noalias !399
  br label %.lr.ph.i38

.lr.ph.i38:                                       ; preds = %97, %.lr.ph.i38.preheader
  %.pre.i = phi i64 [ %95, %97 ], [ %.pre.i.pre, %.lr.ph.i38.preheader ]
  %.011.i = phi i64 [ %98, %97 ], [ %17, %.lr.ph.i38.preheader ]
  %82 = tail call i64 @llvm.umin.i64(i64 %.011.i, i64 256)
  br label %.lr.ph.i.i

83:                                               ; preds = %86
  %84 = add nuw i64 %92, %.016.i.i
  %.not.i.i = icmp eq i64 %84, %82
  br i1 %.not.i.i, label %97, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %83, %.lr.ph.i38
  %85 = phi i64 [ %95, %83 ], [ %.pre.i, %.lr.ph.i38 ]
  %.016.i.i = phi i64 [ %84, %83 ], [ 0, %.lr.ph.i38 ]
  %sunkaddr184 = inttoptr i64 %77 to ptr
  %sunkaddr185 = getelementptr inbounds i8, ptr %sunkaddr184, i64 8
  %.unpack10.i.i.i.i = load i64, ptr %sunkaddr185, align 8, !noalias !399
  %.not.i.i.i.i = icmp ugt i64 %.unpack10.i.i.i.i, %85
  br i1 %.not.i.i.i.i, label %86, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit"

86:                                               ; preds = %.lr.ph.i.i
  %87 = inttoptr i64 %77 to ptr
  %88 = sub nuw i64 %82, %.016.i.i
  %89 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i
  %90 = add nuw i64 %88, %85
  %.not11.i.i.i.i = icmp ugt i64 %90, %.unpack10.i.i.i.i
  %91 = sub nuw i64 %.unpack10.i.i.i.i, %85
  %92 = select i1 %.not11.i.i.i.i, i64 %91, i64 %88
  %.unpack.i.i.i.i = load ptr, ptr %87, align 8, !noalias !399
  %93 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i, i64 %85
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %93, ptr nonnull align 1 %89, i64 %92, i1 false), !noalias !399
  %sunkaddr186 = inttoptr i64 %77 to ptr
  %sunkaddr187 = getelementptr inbounds i8, ptr %sunkaddr186, i64 16
  %94 = load i64, ptr %sunkaddr187, align 8, !noalias !399
  %95 = add nuw i64 %94, %92
  store i64 %95, ptr %sunkaddr187, align 8, !noalias !399
  %96 = icmp eq i64 %92, 0
  br i1 %96, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", label %83

97:                                               ; preds = %83
  %98 = sub nuw i64 %.011.i, %82
  %.not.i39 = icmp eq i64 %98, 0
  br i1 %.not.i39, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit", label %.lr.ph.i38

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit": ; preds = %97, %86, %.lr.ph.i.i
  %common.ret.op.i37 = phi i16 [ 5, %86 ], [ 5, %.lr.ph.i.i ], [ 0, %97 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

99:                                               ; preds = %54
  %100 = add nuw i64 %17, 1
  %101 = lshr i64 %100, 1
  %102 = load i64, ptr %3, align 8
  %103 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %104 = load i8, ptr %103, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %104, i64 256, i1 false)
  %.not10.i40 = icmp ult i64 %17, 2
  br i1 %.not10.i40, label %.loopexit113, label %.lr.ph.i45.preheader

.lr.ph.i45.preheader:                             ; preds = %99
  %105 = lshr i64 %17, 1
  %106 = inttoptr i64 %102 to ptr
  %107 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %106, i64 0, i32 1
  %.pre.i44.pre = load i64, ptr %107, align 8, !noalias !404
  br label %.lr.ph.i45

.lr.ph.i45:                                       ; preds = %123, %.lr.ph.i45.preheader
  %.pre.i44 = phi i64 [ %121, %123 ], [ %.pre.i44.pre, %.lr.ph.i45.preheader ]
  %.011.i42 = phi i64 [ %124, %123 ], [ %105, %.lr.ph.i45.preheader ]
  %108 = tail call i64 @llvm.umin.i64(i64 %.011.i42, i64 256)
  br label %.lr.ph.i.i50

109:                                              ; preds = %112
  %110 = add nuw i64 %118, %.016.i.i47
  %.not.i.i46 = icmp eq i64 %110, %108
  br i1 %.not.i.i46, label %123, label %.lr.ph.i.i50

.lr.ph.i.i50:                                     ; preds = %109, %.lr.ph.i45
  %111 = phi i64 [ %121, %109 ], [ %.pre.i44, %.lr.ph.i45 ]
  %.016.i.i47 = phi i64 [ %110, %109 ], [ 0, %.lr.ph.i45 ]
  %sunkaddr188 = inttoptr i64 %102 to ptr
  %sunkaddr189 = getelementptr inbounds i8, ptr %sunkaddr188, i64 8
  %.unpack10.i.i.i.i48 = load i64, ptr %sunkaddr189, align 8, !noalias !404
  %.not.i.i.i.i49 = icmp ugt i64 %.unpack10.i.i.i.i48, %111
  br i1 %.not.i.i.i.i49, label %112, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54"

112:                                              ; preds = %.lr.ph.i.i50
  %113 = inttoptr i64 %102 to ptr
  %114 = sub nuw i64 %108, %.016.i.i47
  %115 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i47
  %116 = add nuw i64 %114, %111
  %.not11.i.i.i.i51 = icmp ugt i64 %116, %.unpack10.i.i.i.i48
  %117 = sub nuw i64 %.unpack10.i.i.i.i48, %111
  %118 = select i1 %.not11.i.i.i.i51, i64 %117, i64 %114
  %.unpack.i.i.i.i52 = load ptr, ptr %113, align 8, !noalias !404
  %119 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i52, i64 %111
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %119, ptr nonnull align 1 %115, i64 %118, i1 false), !noalias !404
  %sunkaddr190 = inttoptr i64 %102 to ptr
  %sunkaddr191 = getelementptr inbounds i8, ptr %sunkaddr190, i64 16
  %120 = load i64, ptr %sunkaddr191, align 8, !noalias !404
  %121 = add nuw i64 %120, %118
  store i64 %121, ptr %sunkaddr191, align 8, !noalias !404
  %122 = icmp eq i64 %118, 0
  br i1 %122, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54", label %109

123:                                              ; preds = %109
  %124 = sub nuw i64 %.011.i42, %108
  %.not.i53 = icmp eq i64 %124, 0
  br i1 %.not.i53, label %.loopexit113.loopexit, label %.lr.ph.i45

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit54": ; preds = %112, %.lr.ph.i.i50
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

.loopexit113.loopexit:                            ; preds = %123
  %.pre130 = load i64, ptr %3, align 8
  br label %.loopexit113

.loopexit113:                                     ; preds = %.loopexit113.loopexit, %99
  %125 = phi i64 [ %.pre130, %.loopexit113.loopexit ], [ %102, %99 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  %.not15.i55 = icmp eq i64 %1, 0
  br i1 %.not15.i55, label %.loopexit112, label %.lr.ph.i63.preheader

.lr.ph.i63.preheader:                             ; preds = %.loopexit113
  %126 = inttoptr i64 %125 to ptr
  %127 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %126, i64 0, i32 1
  %.pre131 = load i64, ptr %127, align 8, !noalias !409
  br label %.lr.ph.i63

128:                                              ; preds = %131
  %129 = add nuw i64 %137, %.016.i58
  %.not.i57 = icmp eq i64 %129, %1
  br i1 %.not.i57, label %.loopexit112.loopexit, label %.lr.ph.i63

.lr.ph.i63:                                       ; preds = %128, %.lr.ph.i63.preheader
  %130 = phi i64 [ %140, %128 ], [ %.pre131, %.lr.ph.i63.preheader ]
  %.016.i58 = phi i64 [ %129, %128 ], [ 0, %.lr.ph.i63.preheader ]
  %sunkaddr192 = inttoptr i64 %125 to ptr
  %sunkaddr193 = getelementptr inbounds i8, ptr %sunkaddr192, i64 8
  %.unpack10.i.i.i61 = load i64, ptr %sunkaddr193, align 8, !noalias !409
  %.not.i.i.i62 = icmp ugt i64 %.unpack10.i.i.i61, %130
  br i1 %.not.i.i.i62, label %131, label %common.ret

131:                                              ; preds = %.lr.ph.i63
  %132 = inttoptr i64 %125 to ptr
  %133 = sub nuw i64 %1, %.016.i58
  %134 = getelementptr inbounds i8, ptr %0, i64 %.016.i58
  %135 = add nuw i64 %130, %133
  %.not11.i.i.i64 = icmp ugt i64 %135, %.unpack10.i.i.i61
  %136 = sub nuw i64 %.unpack10.i.i.i61, %130
  %137 = select i1 %.not11.i.i.i64, i64 %136, i64 %133
  %.unpack.i.i.i65 = load ptr, ptr %132, align 8, !noalias !409
  %138 = getelementptr inbounds i8, ptr %.unpack.i.i.i65, i64 %130
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %138, ptr nonnull align 1 %134, i64 %137, i1 false), !noalias !409
  %sunkaddr194 = inttoptr i64 %125 to ptr
  %sunkaddr195 = getelementptr inbounds i8, ptr %sunkaddr194, i64 16
  %139 = load i64, ptr %sunkaddr195, align 8, !noalias !409
  %140 = add nuw i64 %139, %137
  store i64 %140, ptr %sunkaddr195, align 8, !noalias !409
  %141 = icmp eq i64 %137, 0
  br i1 %141, label %common.ret, label %128

.loopexit112.loopexit:                            ; preds = %128
  %.pre132 = load i64, ptr %3, align 8
  br label %.loopexit112

.loopexit112:                                     ; preds = %.loopexit112.loopexit, %.loopexit113
  %142 = phi i64 [ %.pre132, %.loopexit112.loopexit ], [ %125, %.loopexit113 ]
  store i64 %142, ptr %8, align 8
  %sunkaddr196 = getelementptr inbounds i8, ptr %2, i64 33
  %143 = load i8, ptr %sunkaddr196, align 1
  %144 = call fastcc i16 @"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes"(ptr nonnull readonly align 8 %8, i8 %143, i64 %101)
  br label %common.ret

.lr.ph.i72.preheader:                             ; preds = %54
  %145 = load i64, ptr %3, align 8
  %146 = getelementptr inbounds %fmt.FormatOptions, ptr %2, i64 0, i32 3
  %147 = load i8, ptr %146, align 1
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %5)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %5, i8 %147, i64 256, i1 false)
  %148 = inttoptr i64 %145 to ptr
  %149 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %148, i64 0, i32 1
  %.pre.i71.pre = load i64, ptr %149, align 8, !noalias !414
  br label %.lr.ph.i72

.lr.ph.i72:                                       ; preds = %165, %.lr.ph.i72.preheader
  %.pre.i71 = phi i64 [ %163, %165 ], [ %.pre.i71.pre, %.lr.ph.i72.preheader ]
  %.011.i69 = phi i64 [ %166, %165 ], [ %17, %.lr.ph.i72.preheader ]
  %150 = tail call i64 @llvm.umin.i64(i64 %.011.i69, i64 256)
  br label %.lr.ph.i.i77

151:                                              ; preds = %154
  %152 = add nuw i64 %160, %.016.i.i74
  %.not.i.i73 = icmp eq i64 %152, %150
  br i1 %.not.i.i73, label %165, label %.lr.ph.i.i77

.lr.ph.i.i77:                                     ; preds = %151, %.lr.ph.i72
  %153 = phi i64 [ %163, %151 ], [ %.pre.i71, %.lr.ph.i72 ]
  %.016.i.i74 = phi i64 [ %152, %151 ], [ 0, %.lr.ph.i72 ]
  %sunkaddr197 = inttoptr i64 %145 to ptr
  %sunkaddr198 = getelementptr inbounds i8, ptr %sunkaddr197, i64 8
  %.unpack10.i.i.i.i75 = load i64, ptr %sunkaddr198, align 8, !noalias !414
  %.not.i.i.i.i76 = icmp ugt i64 %.unpack10.i.i.i.i75, %153
  br i1 %.not.i.i.i.i76, label %154, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81"

154:                                              ; preds = %.lr.ph.i.i77
  %155 = inttoptr i64 %145 to ptr
  %156 = sub nuw i64 %150, %.016.i.i74
  %157 = getelementptr inbounds i8, ptr %5, i64 %.016.i.i74
  %158 = add nuw i64 %156, %153
  %.not11.i.i.i.i78 = icmp ugt i64 %158, %.unpack10.i.i.i.i75
  %159 = sub nuw i64 %.unpack10.i.i.i.i75, %153
  %160 = select i1 %.not11.i.i.i.i78, i64 %159, i64 %156
  %.unpack.i.i.i.i79 = load ptr, ptr %155, align 8, !noalias !414
  %161 = getelementptr inbounds i8, ptr %.unpack.i.i.i.i79, i64 %153
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %161, ptr nonnull align 1 %157, i64 %160, i1 false), !noalias !414
  %sunkaddr199 = inttoptr i64 %145 to ptr
  %sunkaddr200 = getelementptr inbounds i8, ptr %sunkaddr199, i64 16
  %162 = load i64, ptr %sunkaddr200, align 8, !noalias !414
  %163 = add nuw i64 %162, %160
  store i64 %163, ptr %sunkaddr200, align 8, !noalias !414
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81", label %151

165:                                              ; preds = %151
  %166 = sub nuw i64 %.011.i69, %150
  %.not.i80 = icmp eq i64 %166, 0
  br i1 %.not.i80, label %.loopexit116, label %.lr.ph.i72

"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes.exit81": ; preds = %154, %.lr.ph.i.i77
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  br label %common.ret

.loopexit116:                                     ; preds = %165
  %.pre127 = load i64, ptr %3, align 8
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %5)
  %.not15.i82 = icmp eq i64 %1, 0
  br i1 %.not15.i82, label %common.ret, label %.lr.ph.i90.preheader

.lr.ph.i90.preheader:                             ; preds = %.loopexit116
  %167 = inttoptr i64 %.pre127 to ptr
  %168 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %167, i64 0, i32 1
  %.pre128 = load i64, ptr %168, align 8, !noalias !419
  br label %.lr.ph.i90

169:                                              ; preds = %172
  %170 = add nuw i64 %178, %.016.i85
  %.not.i84 = icmp eq i64 %170, %1
  br i1 %.not.i84, label %common.ret, label %.lr.ph.i90

.lr.ph.i90:                                       ; preds = %169, %.lr.ph.i90.preheader
  %171 = phi i64 [ %181, %169 ], [ %.pre128, %.lr.ph.i90.preheader ]
  %.016.i85 = phi i64 [ %170, %169 ], [ 0, %.lr.ph.i90.preheader ]
  %sunkaddr201 = inttoptr i64 %.pre127 to ptr
  %sunkaddr202 = getelementptr inbounds i8, ptr %sunkaddr201, i64 8
  %.unpack10.i.i.i88 = load i64, ptr %sunkaddr202, align 8, !noalias !419
  %.not.i.i.i89 = icmp ugt i64 %.unpack10.i.i.i88, %171
  br i1 %.not.i.i.i89, label %172, label %common.ret

172:                                              ; preds = %.lr.ph.i90
  %173 = inttoptr i64 %.pre127 to ptr
  %174 = sub nuw i64 %1, %.016.i85
  %175 = getelementptr inbounds i8, ptr %0, i64 %.016.i85
  %176 = add nuw i64 %171, %174
  %.not11.i.i.i91 = icmp ugt i64 %176, %.unpack10.i.i.i88
  %177 = sub nuw i64 %.unpack10.i.i.i88, %171
  %178 = select i1 %.not11.i.i.i91, i64 %177, i64 %174
  %.unpack.i.i.i92 = load ptr, ptr %173, align 8, !noalias !419
  %179 = getelementptr inbounds i8, ptr %.unpack.i.i.i92, i64 %171
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %179, ptr nonnull align 1 %175, i64 %178, i1 false), !noalias !419
  %sunkaddr203 = inttoptr i64 %.pre127 to ptr
  %sunkaddr204 = getelementptr inbounds i8, ptr %sunkaddr203, i64 16
  %180 = load i64, ptr %sunkaddr204, align 8, !noalias !419
  %181 = add nuw i64 %180, %178
  store i64 %181, ptr %sunkaddr204, align 8, !noalias !419
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %common.ret, label %169
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define private fastcc i16 @"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).writeByteNTimes"(ptr nocapture nonnull readonly align 8 %0, i8 %1, i64 %2) unnamed_addr #11 {
  %4 = alloca [256 x i8], align 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(256) %4, i8 %1, i64 256, i1 false)
  %.not10 = icmp eq i64 %2, 0
  br i1 %.not10, label %common.ret, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

common.ret:                                       ; preds = %23, %12, %.lr.ph.i, %3
  %common.ret.op = phi i16 [ 0, %3 ], [ 5, %.lr.ph.i ], [ 5, %12 ], [ 0, %23 ]
  ret i16 %common.ret.op

.lr.ph:                                           ; preds = %23, %.lr.ph.preheader
  %.011 = phi i64 [ %24, %23 ], [ %2, %.lr.ph.preheader ]
  %5 = tail call i64 @llvm.umin.i64(i64 %.011, i64 256)
  %6 = load i64, ptr %0, align 8
  %7 = inttoptr i64 %6 to ptr
  %8 = getelementptr inbounds %"io.fixed_buffer_stream.FixedBufferStream([]u8)", ptr %7, i64 0, i32 1
  %.pre = load i64, ptr %8, align 8, !noalias !424
  br label %.lr.ph.i

9:                                                ; preds = %12
  %10 = add nuw i64 %18, %.016.i
  %.not.i = icmp eq i64 %10, %5
  br i1 %.not.i, label %23, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %9, %.lr.ph
  %11 = phi i64 [ %21, %9 ], [ %.pre, %.lr.ph ]
  %.016.i = phi i64 [ %10, %9 ], [ 0, %.lr.ph ]
  %sunkaddr = inttoptr i64 %6 to ptr
  %sunkaddr17 = getelementptr inbounds i8, ptr %sunkaddr, i64 8
  %.unpack10.i.i.i = load i64, ptr %sunkaddr17, align 8, !noalias !424
  %.not.i.i.i = icmp ugt i64 %.unpack10.i.i.i, %11
  br i1 %.not.i.i.i, label %12, label %common.ret

12:                                               ; preds = %.lr.ph.i
  %13 = inttoptr i64 %6 to ptr
  %14 = sub nuw i64 %5, %.016.i
  %15 = getelementptr inbounds i8, ptr %4, i64 %.016.i
  %16 = add nuw i64 %11, %14
  %.not11.i.i.i = icmp ugt i64 %16, %.unpack10.i.i.i
  %17 = sub nuw i64 %.unpack10.i.i.i, %11
  %18 = select i1 %.not11.i.i.i, i64 %17, i64 %14
  %.unpack.i.i.i = load ptr, ptr %13, align 8, !noalias !424
  %19 = getelementptr inbounds i8, ptr %.unpack.i.i.i, i64 %11
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %19, ptr nonnull align 1 %15, i64 %18, i1 false), !noalias !424
  %sunkaddr18 = inttoptr i64 %6 to ptr
  %sunkaddr19 = getelementptr inbounds i8, ptr %sunkaddr18, i64 16
  %20 = load i64, ptr %sunkaddr19, align 8, !noalias !424
  %21 = add nuw i64 %20, %18
  store i64 %21, ptr %sunkaddr19, align 8, !noalias !424
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %common.ret, label %9

23:                                               ; preds = %9
  %24 = sub nuw i64 %.011, %5
  %.not = icmp eq i64 %24, 0
  br i1 %.not, label %common.ret, label %.lr.ph
}

; Function Attrs: nounwind uwtable
define private fastcc void @str.RocStr.reallocateFresh(ptr noalias nocapture nonnull writeonly %0, ptr nocapture nonnull readonly align 8 %1, i64 %2) unnamed_addr #4 {
str.RocStr.len.exit:
  %3 = alloca %str.RocStr, align 8
  %4 = alloca %str.RocStr, align 8
  %5 = alloca %str.RocStr, align 8
  %6 = alloca %str.RocStr, align 8
  %.sroa.1.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.1.0.copyload = load i64, ptr %.sroa.1.0..sroa_idx, align 8
  %.sroa.2.0..sroa_idx = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.2.0.copyload = load i64, ptr %.sroa.2.0..sroa_idx, align 8
  %7 = icmp slt i64 %.sroa.2.0.copyload, 0
  %8 = lshr i64 %.sroa.2.0.copyload, 56
  %9 = xor i64 %8, 128
  %10 = and i64 %.sroa.1.0.copyload, 9223372036854775807
  %common.ret.op.i = select i1 %7, i64 %9, i64 %10
  %11 = icmp ugt i64 %2, 23
  br i1 %11, label %str.RocStr.asU8ptr.exit, label %str.RocStr.asU8ptr.exit14

common.ret.sink.split:                            ; preds = %61, %39
  %.sink38 = phi ptr [ %37, %39 ], [ %59, %61 ]
  %.sink.ph = phi ptr [ %6, %39 ], [ %4, %61 ]
  tail call void @roc_dealloc(ptr nonnull align 1 %.sink38, i32 8)
  br label %common.ret

common.ret:                                       ; preds = %61, %57, %51, %mem.copyForwards__anon_9882.exit19, %39, %35, %29, %mem.copyForwards__anon_9882.exit, %common.ret.sink.split
  %.sink = phi ptr [ %6, %mem.copyForwards__anon_9882.exit ], [ %6, %29 ], [ %6, %35 ], [ %6, %39 ], [ %4, %mem.copyForwards__anon_9882.exit19 ], [ %4, %51 ], [ %4, %57 ], [ %4, %61 ], [ %.sink.ph, %common.ret.sink.split ]
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %.sink, i64 24, i1 false)
  ret void

str.RocStr.asU8ptr.exit:                          ; preds = %str.RocStr.len.exit
  %12 = tail call i64 @llvm.umax.i64(i64 %2, i64 64)
  %13 = add nuw i64 %12, 8
  %14 = tail call ptr @roc_alloc(i64 %13, i32 8), !noalias !429
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 -9223372036854775808, ptr %14, align 8, !noalias !429
  store ptr %15, ptr %6, align 8
  %.sroa.230.0..sroa_idx = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %2, ptr %.sroa.230.0..sroa_idx, align 8
  %.sroa.3.0..sroa_idx = getelementptr inbounds i8, ptr %6, i64 16
  store i64 %12, ptr %.sroa.3.0..sroa_idx, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %16 = getelementptr inbounds i8, ptr %5, i64 16
  %.val.i = load i64, ptr %16, align 8
  %17 = icmp slt i64 %.val.i, 0
  %18 = load ptr, ptr %5, align 8
  %spec.select = select i1 %17, ptr %5, ptr %18
  %19 = icmp slt i64 %12, 0
  %common.ret.op.i9 = select i1 %19, ptr %6, ptr %15
  %.not.i = icmp eq i64 %common.ret.op.i, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9882.exit, label %iter.check

iter.check:                                       ; preds = %str.RocStr.asU8ptr.exit
  %common.ret.op.i939 = ptrtoint ptr %common.ret.op.i9 to i64
  %spec.select40 = ptrtoint ptr %spec.select to i64
  %min.iters.check = icmp ult i64 %common.ret.op.i, 8
  %20 = sub i64 %common.ret.op.i939, %spec.select40
  %diff.check = icmp ult i64 %20, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check41 = icmp ult i64 %common.ret.op.i, 32
  br i1 %min.iters.check41, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %common.ret.op.i, 9223372036854775776
  %uglygep62 = getelementptr i8, ptr %common.ret.op.i9, i64 16
  %uglygep66 = getelementptr i8, ptr %spec.select, i64 16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv70 = phi i64 [ %lsr.iv.next71, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv67 = phi ptr [ %uglygep68, %vector.body ], [ %uglygep66, %vector.ph ]
  %lsr.iv63 = phi ptr [ %uglygep64, %vector.body ], [ %uglygep62, %vector.ph ]
  %uglygep65 = getelementptr i8, ptr %lsr.iv63, i64 -16
  %uglygep69 = getelementptr i8, ptr %lsr.iv67, i64 -16
  %wide.load = load <16 x i8>, ptr %uglygep69, align 1
  %wide.load42 = load <16 x i8>, ptr %lsr.iv67, align 1
  store <16 x i8> %wide.load, ptr %uglygep65, align 1
  store <16 x i8> %wide.load42, ptr %lsr.iv63, align 1
  %uglygep64 = getelementptr i8, ptr %lsr.iv63, i64 32
  %uglygep68 = getelementptr i8, ptr %lsr.iv67, i64 32
  %lsr.iv.next71 = add nsw i64 %lsr.iv70, -32
  %21 = icmp eq i64 %lsr.iv.next71, 0
  br i1 %21, label %middle.block, label %vector.body, !llvm.loop !432

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %common.ret.op.i, %n.vec
  br i1 %cmp.n, label %mem.copyForwards__anon_9882.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %n.vec.remaining = and i64 %common.ret.op.i, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec44 = and i64 %common.ret.op.i, 9223372036854775800
  %uglygep54 = getelementptr i8, ptr %common.ret.op.i9, i64 %vec.epilog.resume.val
  %uglygep57 = getelementptr i8, ptr %spec.select, i64 %vec.epilog.resume.val
  %22 = sub i64 %vec.epilog.resume.val, %n.vec44
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv60 = phi i64 [ %lsr.iv.next61, %vec.epilog.vector.body ], [ %22, %vec.epilog.ph ]
  %lsr.iv58 = phi ptr [ %uglygep59, %vec.epilog.vector.body ], [ %uglygep57, %vec.epilog.ph ]
  %lsr.iv55 = phi ptr [ %uglygep56, %vec.epilog.vector.body ], [ %uglygep54, %vec.epilog.ph ]
  %wide.load47 = load <8 x i8>, ptr %lsr.iv58, align 1
  store <8 x i8> %wide.load47, ptr %lsr.iv55, align 1
  %uglygep56 = getelementptr i8, ptr %lsr.iv55, i64 8
  %uglygep59 = getelementptr i8, ptr %lsr.iv58, i64 8
  %lsr.iv.next61 = add i64 %lsr.iv60, 8
  %23 = icmp eq i64 %lsr.iv.next61, 0
  br i1 %23, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !433

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n45 = icmp eq i64 %common.ret.op.i, %n.vec44
  br i1 %cmp.n45, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %iter.check
  %.03.i.ph = phi i64 [ %n.vec44, %vec.epilog.middle.block ], [ %n.vec, %vec.epilog.iter.check ], [ 0, %iter.check ]
  %24 = sub i64 %common.ret.op.i, %.03.i.ph
  %uglygep = getelementptr i8, ptr %spec.select, i64 %.03.i.ph
  %uglygep51 = getelementptr i8, ptr %common.ret.op.i9, i64 %.03.i.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %lsr.iv52 = phi ptr [ %uglygep51, %.lr.ph.i.preheader ], [ %uglygep53, %.lr.ph.i ]
  %lsr.iv49 = phi ptr [ %uglygep, %.lr.ph.i.preheader ], [ %uglygep50, %.lr.ph.i ]
  %lsr.iv = phi i64 [ %24, %.lr.ph.i.preheader ], [ %lsr.iv.next, %.lr.ph.i ]
  %25 = load i8, ptr %lsr.iv49, align 1
  store i8 %25, ptr %lsr.iv52, align 1
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep50 = getelementptr i8, ptr %lsr.iv49, i64 1
  %uglygep53 = getelementptr i8, ptr %lsr.iv52, i64 1
  %exitcond.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not.i, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i, !llvm.loop !434

mem.copyForwards__anon_9882.exit:                 ; preds = %.lr.ph.i, %vec.epilog.middle.block, %middle.block, %str.RocStr.asU8ptr.exit
  %26 = getelementptr inbounds i8, ptr %common.ret.op.i9, i64 %common.ret.op.i
  %27 = sub nuw i64 %2, %common.ret.op.i
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %26, i8 0, i64 %27, i1 false)
  %sunkaddr = getelementptr inbounds i8, ptr %1, i64 16
  %.sroa.333.0.copyload = load i64, ptr %sunkaddr, align 8
  %28 = icmp slt i64 %.sroa.333.0.copyload, 0
  br i1 %28, label %common.ret, label %29

29:                                               ; preds = %mem.copyForwards__anon_9882.exit
  %sunkaddr72 = getelementptr inbounds i8, ptr %1, i64 8
  %.sroa.232.0.copyload = load i64, ptr %sunkaddr72, align 8
  %.sroa.031.0.copyload = load ptr, ptr %1, align 8
  %30 = ptrtoint ptr %.sroa.031.0.copyload to i64
  %31 = shl nuw i64 %.sroa.333.0.copyload, 1
  %isneg.i.i = icmp slt i64 %.sroa.232.0.copyload, 0
  %32 = select i1 %isneg.i.i, i64 %31, i64 %30
  %33 = icmp ne i64 %.sroa.333.0.copyload, 0
  %34 = icmp ne i64 %32, 0
  %or.cond.i.i = select i1 %33, i1 %34, i1 false
  br i1 %or.cond.i.i, label %35, label %common.ret

35:                                               ; preds = %29
  %36 = inttoptr i64 %32 to ptr
  %37 = getelementptr inbounds i64, ptr %36, i64 -1
  %38 = load i64, ptr %37, align 8
  %.not.i.i = icmp eq i64 %38, 0
  br i1 %.not.i.i, label %common.ret, label %39

39:                                               ; preds = %35
  %40 = add i64 %38, -1
  store i64 %40, ptr %37, align 8
  %41 = icmp eq i64 %38, -9223372036854775808
  br i1 %41, label %common.ret.sink.split, label %common.ret

str.RocStr.asU8ptr.exit14:                        ; preds = %str.RocStr.len.exit
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) @5, i64 24, i1 false)
  %42 = getelementptr inbounds i8, ptr %4, i64 23
  %43 = trunc i64 %2 to i8
  %44 = or i8 %43, -128
  store i8 %44, ptr %42, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false)
  %.not.i15 = icmp eq i64 %common.ret.op.i, 0
  br i1 %.not.i15, label %mem.copyForwards__anon_9882.exit19, label %.lr.ph.i18.preheader

.lr.ph.i18.preheader:                             ; preds = %str.RocStr.asU8ptr.exit14
  %45 = getelementptr inbounds i8, ptr %3, i64 16
  %.val.i12 = load i64, ptr %45, align 8
  %46 = icmp slt i64 %.val.i12, 0
  %47 = load ptr, ptr %3, align 8
  %spec.select37 = select i1 %46, ptr %3, ptr %47
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %4, ptr align 1 %spec.select37, i64 %common.ret.op.i, i1 false)
  br label %mem.copyForwards__anon_9882.exit19

mem.copyForwards__anon_9882.exit19:               ; preds = %.lr.ph.i18.preheader, %str.RocStr.asU8ptr.exit14
  %48 = icmp slt i64 %.sroa.2.0.copyload, 0
  %49 = getelementptr inbounds i8, ptr %4, i64 %common.ret.op.i
  %50 = sub nuw nsw i64 %2, %common.ret.op.i
  call void @llvm.memset.p0.i64(ptr nonnull align 1 %49, i8 0, i64 %50, i1 false)
  br i1 %48, label %common.ret, label %51

51:                                               ; preds = %mem.copyForwards__anon_9882.exit19
  %.sroa.034.0.copyload = load ptr, ptr %1, align 8
  %52 = ptrtoint ptr %.sroa.034.0.copyload to i64
  %53 = shl nuw i64 %.sroa.2.0.copyload, 1
  %isneg.i.i25 = icmp slt i64 %.sroa.1.0.copyload, 0
  %54 = select i1 %isneg.i.i25, i64 %53, i64 %52
  %55 = icmp ne i64 %.sroa.2.0.copyload, 0
  %56 = icmp ne i64 %54, 0
  %or.cond.i.i26 = select i1 %55, i1 %56, i1 false
  br i1 %or.cond.i.i26, label %57, label %common.ret

57:                                               ; preds = %51
  %58 = inttoptr i64 %54 to ptr
  %59 = getelementptr inbounds i64, ptr %58, i64 -1
  %60 = load i64, ptr %59, align 8
  %.not.i.i27 = icmp eq i64 %60, 0
  br i1 %.not.i.i27, label %common.ret, label %61

61:                                               ; preds = %57
  %62 = add i64 %60, -1
  store i64 %62, ptr %59, align 8
  %63 = icmp eq i64 %60, -9223372036854775808
  br i1 %63, label %common.ret.sink.split, label %common.ret
}

; Function Attrs: nounwind uwtable
declare void @roc_dealloc(ptr nonnull align 1, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_14341(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, i32 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = alloca [3072 x i8], align 16
  %10 = icmp ult i64 %1, 32
  br i1 %10, label %12, label %13

11:                                               ; preds = %13, %12
  ret void

12:                                               ; preds = %8
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %9, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  br label %11

13:                                               ; preds = %8
  %14 = tail call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  br i1 %14, label %15, label %11

15:                                               ; preds = %13
  %16 = mul nuw i64 %4, %1
  %17 = tail call ptr @roc_alloc(i64 %16, i32 %5)
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %17, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  tail call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %17, i64 %1, i64 %19, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  tail call void @roc_dealloc(ptr nonnull align 1 %17, i32 %5)
  ret void

20:                                               ; preds = %15
  tail call fastcc void @sort.quadsort_stack_swap__anon_14837(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %7, i64 %4, ptr nonnull readonly align 4 %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_14342(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, i32 %5, ptr nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = alloca [3072 x i8], align 16
  %9 = icmp ult i64 %1, 32
  br i1 %9, label %11, label %12

10:                                               ; preds = %12, %11
  ret void

11:                                               ; preds = %7
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6)
  br label %10

12:                                               ; preds = %7
  %13 = tail call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6)
  br i1 %13, label %14, label %10

14:                                               ; preds = %12
  %15 = mul nuw i64 %4, %1
  %16 = tail call ptr @roc_alloc(i64 %15, i32 %5)
  %.not = icmp eq ptr %16, null
  br i1 %.not, label %19, label %17

17:                                               ; preds = %14
  %18 = tail call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %16, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6)
  tail call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %16, i64 %1, i64 %18, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6)
  tail call void @roc_dealloc(ptr nonnull align 1 %16, i32 %5)
  ret void

19:                                               ; preds = %14
  tail call fastcc void @sort.quadsort_stack_swap__anon_14842(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_14343(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4) unnamed_addr #4 {
  %6 = alloca [3072 x i8], align 16
  %7 = icmp ult i64 %1, 32
  br i1 %7, label %9, label %10

8:                                                ; preds = %10, %9
  ret void

9:                                                ; preds = %5
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  br label %8

10:                                               ; preds = %5
  %11 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  br i1 %11, label %12, label %8

12:                                               ; preds = %10
  %13 = shl nuw i64 %1, 3
  %14 = tail call ptr @roc_alloc(i64 %13, i32 8)
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %14, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %14, i64 %1, i64 %16, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  tail call void @roc_dealloc(ptr nonnull align 1 %14, i32 8)
  ret void

17:                                               ; preds = %12
  tail call fastcc void @sort.quadsort_stack_swap__anon_14847(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4) #16
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_direct__anon_14344(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [3072 x i8], align 16
  %6 = icmp ult i64 %1, 32
  br i1 %6, label %8, label %9

7:                                                ; preds = %9, %8
  ret void

8:                                                ; preds = %4
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %7

9:                                                ; preds = %4
  %10 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br i1 %10, label %11, label %7

11:                                               ; preds = %9
  %12 = shl nuw i64 %1, 3
  %13 = tail call ptr @roc_alloc(i64 %12, i32 8)
  %.not = icmp eq ptr %13, null
  br i1 %.not, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %13, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %13, i64 %1, i64 %15, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  tail call void @roc_dealloc(ptr nonnull align 1 %13, i32 8)
  ret void

16:                                               ; preds = %11
  tail call fastcc void @sort.quadsort_stack_swap__anon_14852(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3) #16
  ret void
}

; Function Attrs: nounwind uwtable
declare ptr @roc_alloc(i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
declare ptr @roc_realloc(ptr nonnull align 1, i64, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = alloca [96 x i8], align 16
  %10 = icmp ult i64 %1, 8
  br i1 %10, label %11, label %319

common.ret:                                       ; preds = %343, %sort.tiny_sort__anon_16475.exit
  ret void

11:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  switch i64 %1, label %12 [
    i64 2, label %13
    i64 3, label %19
    i64 4, label %36
    i64 5, label %76
    i64 6, label %136
    i64 7, label %214
    i64 1, label %sort.tiny_sort__anon_16475.exit
    i64 0, label %sort.tiny_sort__anon_16475.exit
  ]

12:                                               ; preds = %11
  unreachable

13:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 1) #15
  %14 = getelementptr inbounds i8, ptr %0, i64 %5
  %15 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %14) #15
  %16 = icmp eq i8 %15, 1
  %..i = select i1 %16, i64 %5, i64 0
  %17 = select i1 %16, ptr %0, ptr %14
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %17) #15
  %18 = getelementptr inbounds i8, ptr %0, i64 %..i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %18) #15
  call void %6(ptr nonnull align 1 %14, ptr nonnull align 1 %9) #15
  br label %sort.tiny_sort__anon_16475.exit

19:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 3) #15
  %20 = getelementptr inbounds i8, ptr %0, i64 %5
  %21 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %20) #15
  %22 = icmp eq i8 %21, 1
  %.1.i = select i1 %22, i64 %5, i64 0
  %23 = select i1 %22, ptr %0, ptr %20
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %23) #15
  %24 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %24) #15
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %9) #15
  %25 = getelementptr inbounds i8, ptr %20, i64 %5
  %26 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %20, ptr nonnull align 1 %25) #15
  %27 = icmp eq i8 %26, 1
  %28 = select i1 %27, i64 %5, i64 0
  %29 = select i1 %27, ptr %20, ptr %25
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %29) #15
  %30 = getelementptr inbounds i8, ptr %20, i64 %28
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %30) #15
  call void %6(ptr nonnull align 1 %25, ptr nonnull align 1 %9) #15
  %31 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %20) #15
  %32 = icmp eq i8 %31, 1
  %33 = select i1 %32, i64 %5, i64 0
  %34 = select i1 %32, ptr %0, ptr %20
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %34) #15
  %35 = getelementptr inbounds i8, ptr %0, i64 %33
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %35) #15
  call void %6(ptr nonnull align 1 %20, ptr nonnull align 1 %9) #15
  br label %sort.tiny_sort__anon_16475.exit

36:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 3) #15
  %37 = getelementptr inbounds i8, ptr %0, i64 %5
  %38 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %37) #15
  %39 = icmp eq i8 %38, 1
  %..i.i = select i1 %39, i64 %5, i64 0
  %40 = select i1 %39, ptr %0, ptr %37
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %40) #15
  %41 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %41) #15
  call void %6(ptr nonnull align 1 %37, ptr nonnull align 1 %9) #15
  %42 = shl nuw i64 %5, 1
  %43 = getelementptr inbounds i8, ptr %0, i64 %42
  %44 = getelementptr inbounds i8, ptr %43, i64 %5
  %45 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %43, ptr nonnull align 1 %44) #15
  %46 = icmp eq i8 %45, 1
  %47 = select i1 %46, i64 %5, i64 0
  %48 = select i1 %46, ptr %43, ptr %44
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %48) #15
  %49 = getelementptr inbounds i8, ptr %43, i64 %47
  call void %6(ptr nonnull align 1 %43, ptr nonnull align 1 %49) #15
  call void %6(ptr nonnull align 1 %44, ptr nonnull align 1 %9) #15
  %50 = sub i64 0, %5
  %51 = getelementptr inbounds i8, ptr %43, i64 %50
  %52 = getelementptr inbounds i8, ptr %51, i64 %5
  %53 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %51, ptr nonnull align 1 %52) #15
  %54 = icmp eq i8 %53, 1
  br i1 %54, label %55, label %sort.tiny_sort__anon_16475.exit

55:                                               ; preds = %36
  call void %7(ptr align 1 %4, i64 3) #15
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %51) #15
  call void %6(ptr nonnull align 1 %51, ptr nonnull align 1 %52) #15
  call void %6(ptr nonnull align 1 %52, ptr nonnull align 1 %9) #15
  %56 = getelementptr inbounds i8, ptr %51, i64 %50
  %57 = getelementptr inbounds i8, ptr %56, i64 %5
  %58 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %56, ptr nonnull align 1 %57) #15
  %59 = icmp eq i8 %58, 1
  %.1.i.i = select i1 %59, i64 %5, i64 0
  %60 = select i1 %59, ptr %56, ptr %57
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %60) #15
  %61 = getelementptr inbounds i8, ptr %56, i64 %.1.i.i
  call void %6(ptr nonnull align 1 %56, ptr nonnull align 1 %61) #15
  call void %6(ptr nonnull align 1 %57, ptr nonnull align 1 %9) #15
  %62 = getelementptr inbounds i8, ptr %56, i64 %42
  %63 = getelementptr inbounds i8, ptr %62, i64 %5
  %64 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %62, ptr nonnull align 1 %63) #15
  %65 = icmp eq i8 %64, 1
  %66 = select i1 %65, i64 %5, i64 0
  %67 = select i1 %65, ptr %62, ptr %63
  call void %6(ptr nonnull align 1 %9, ptr align 1 %67) #15
  %68 = getelementptr inbounds i8, ptr %62, i64 %66
  call void %6(ptr nonnull align 1 %62, ptr nonnull align 1 %68) #15
  call void %6(ptr nonnull align 1 %63, ptr nonnull align 1 %9) #15
  %69 = getelementptr inbounds i8, ptr %62, i64 %50
  %70 = getelementptr inbounds i8, ptr %69, i64 %5
  %71 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %69, ptr align 1 %70) #15
  %72 = icmp eq i8 %71, 1
  %73 = select i1 %72, i64 %5, i64 0
  %74 = select i1 %72, ptr %69, ptr %70
  call void %6(ptr nonnull align 1 %9, ptr align 1 %74) #15
  %75 = getelementptr inbounds i8, ptr %69, i64 %73
  call void %6(ptr nonnull align 1 %69, ptr align 1 %75) #15
  call void %6(ptr align 1 %70, ptr nonnull align 1 %9) #15
  br label %sort.tiny_sort__anon_16475.exit

76:                                               ; preds = %11
  tail call void %7(ptr align 1 %4, i64 4) #15
  %77 = getelementptr inbounds i8, ptr %0, i64 %5
  %78 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #15
  %79 = icmp eq i8 %78, 1
  %..i9.i = select i1 %79, i64 %5, i64 0
  %80 = select i1 %79, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %80) #15
  %81 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %81) #15
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #15
  %82 = shl nuw i64 %5, 1
  %83 = getelementptr inbounds i8, ptr %0, i64 %82
  %84 = getelementptr inbounds i8, ptr %83, i64 %5
  %85 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #15
  %86 = icmp eq i8 %85, 1
  %87 = select i1 %86, i64 %5, i64 0
  %88 = select i1 %86, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %88) #15
  %89 = getelementptr inbounds i8, ptr %83, i64 %87
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %89) #15
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #15
  %90 = sub i64 0, %5
  %91 = getelementptr inbounds i8, ptr %83, i64 %90
  %92 = getelementptr inbounds i8, ptr %91, i64 %5
  %93 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %91, ptr nonnull align 1 %92) #15
  %94 = icmp eq i8 %93, 1
  %95 = select i1 %94, i64 %5, i64 0
  %96 = select i1 %94, ptr %91, ptr %92
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %96) #15
  %97 = getelementptr inbounds i8, ptr %91, i64 %95
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %97) #15
  call void %6(ptr nonnull align 1 %92, ptr nonnull align 1 %9) #15
  %98 = zext i1 %94 to i8
  %99 = getelementptr inbounds i8, ptr %91, i64 %82
  %100 = getelementptr inbounds i8, ptr %99, i64 %5
  %101 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %99, ptr nonnull align 1 %100) #15
  %102 = icmp eq i8 %101, 1
  %103 = select i1 %102, i64 %5, i64 0
  %104 = select i1 %102, ptr %99, ptr %100
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %104) #15
  %105 = getelementptr inbounds i8, ptr %99, i64 %103
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %105) #15
  call void %6(ptr nonnull align 1 %100, ptr nonnull align 1 %9) #15
  %.neg.i.i = sext i1 %102 to i8
  %.not.i.i = icmp eq i8 %98, %.neg.i.i
  br i1 %.not.i.i, label %sort.tiny_sort__anon_16475.exit, label %106

106:                                              ; preds = %76
  call void %7(ptr align 1 %4, i64 6) #15
  %107 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #15
  %108 = icmp eq i8 %107, 1
  %.1.i10.i = select i1 %108, i64 %5, i64 0
  %109 = select i1 %108, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %109) #15
  %110 = getelementptr inbounds i8, ptr %0, i64 %.1.i10.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %110) #15
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #15
  %111 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #15
  %112 = icmp eq i8 %111, 1
  %113 = select i1 %112, i64 %5, i64 0
  %114 = select i1 %112, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %114) #15
  %115 = getelementptr inbounds i8, ptr %83, i64 %113
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %115) #15
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #15
  %116 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %91, ptr nonnull align 1 %92) #15
  %117 = icmp eq i8 %116, 1
  %118 = select i1 %117, i64 %5, i64 0
  %119 = select i1 %117, ptr %91, ptr %92
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %119) #15
  %120 = getelementptr inbounds i8, ptr %91, i64 %118
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %120) #15
  call void %6(ptr nonnull align 1 %92, ptr nonnull align 1 %9) #15
  %121 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %99, ptr nonnull align 1 %100) #15
  %122 = icmp eq i8 %121, 1
  %123 = select i1 %122, i64 %5, i64 0
  %124 = select i1 %122, ptr %99, ptr %100
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %124) #15
  %125 = getelementptr inbounds i8, ptr %99, i64 %123
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %125) #15
  call void %6(ptr nonnull align 1 %100, ptr nonnull align 1 %9) #15
  %126 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %77) #15
  %127 = icmp eq i8 %126, 1
  %128 = select i1 %127, i64 %5, i64 0
  %129 = select i1 %127, ptr %0, ptr %77
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %129) #15
  %130 = getelementptr inbounds i8, ptr %0, i64 %128
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %130) #15
  call void %6(ptr nonnull align 1 %77, ptr nonnull align 1 %9) #15
  %131 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %83, ptr nonnull align 1 %84) #15
  %132 = icmp eq i8 %131, 1
  %133 = select i1 %132, i64 %5, i64 0
  %134 = select i1 %132, ptr %83, ptr %84
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %134) #15
  %135 = getelementptr inbounds i8, ptr %83, i64 %133
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %135) #15
  call void %6(ptr nonnull align 1 %84, ptr nonnull align 1 %9) #15
  br label %sort.tiny_sort__anon_16475.exit

136:                                              ; preds = %11
  tail call void %7(ptr align 1 %4, i64 5) #15
  %137 = getelementptr inbounds i8, ptr %0, i64 %5
  %138 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #15
  %139 = icmp eq i8 %138, 1
  %..i11.i = select i1 %139, i64 %5, i64 0
  %140 = select i1 %139, ptr %0, ptr %137
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %140) #15
  %141 = getelementptr inbounds i8, ptr %0, i64 %..i11.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %141) #15
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %9) #15
  %142 = getelementptr inbounds i8, ptr %137, i64 %5
  %143 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %137, ptr nonnull align 1 %142) #15
  %144 = icmp eq i8 %143, 1
  %145 = select i1 %144, i64 %5, i64 0
  %146 = select i1 %144, ptr %137, ptr %142
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %146) #15
  %147 = getelementptr inbounds i8, ptr %137, i64 %145
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %147) #15
  call void %6(ptr nonnull align 1 %142, ptr nonnull align 1 %9) #15
  %148 = mul nuw i64 %5, 3
  %149 = getelementptr inbounds i8, ptr %137, i64 %148
  %150 = getelementptr inbounds i8, ptr %149, i64 %5
  %151 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %149, ptr nonnull align 1 %150) #15
  %152 = icmp eq i8 %151, 1
  %153 = select i1 %152, i64 %5, i64 0
  %154 = select i1 %152, ptr %149, ptr %150
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %154) #15
  %155 = getelementptr inbounds i8, ptr %149, i64 %153
  call void %6(ptr nonnull align 1 %149, ptr nonnull align 1 %155) #15
  call void %6(ptr nonnull align 1 %150, ptr nonnull align 1 %9) #15
  %156 = sub i64 0, %5
  %157 = getelementptr inbounds i8, ptr %149, i64 %156
  %158 = getelementptr inbounds i8, ptr %157, i64 %5
  %159 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %157, ptr nonnull align 1 %158) #15
  %160 = icmp eq i8 %159, 1
  %161 = select i1 %160, i64 %5, i64 0
  %162 = select i1 %160, ptr %157, ptr %158
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %162) #15
  %163 = getelementptr inbounds i8, ptr %157, i64 %161
  call void %6(ptr nonnull align 1 %157, ptr nonnull align 1 %163) #15
  call void %6(ptr nonnull align 1 %158, ptr nonnull align 1 %9) #15
  %164 = shl nuw i64 %5, 1
  %165 = getelementptr inbounds i8, ptr %0, i64 %164
  %166 = getelementptr inbounds i8, ptr %0, i64 %148
  %167 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %165, ptr nonnull align 1 %166) #15
  %.not.i12.i = icmp eq i8 %167, 1
  br i1 %.not.i12.i, label %.cont96.i.i, label %168

168:                                              ; preds = %136
  call void %7(ptr align 1 %4, i64 2) #15
  %169 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #15
  %170 = icmp eq i8 %169, 1
  %.1.i13.i = select i1 %170, i64 %5, i64 0
  %171 = select i1 %170, ptr %0, ptr %137
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %171) #15
  %172 = getelementptr inbounds i8, ptr %0, i64 %.1.i13.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %172) #15
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %9) #15
  %173 = shl nuw i64 %5, 2
  %174 = getelementptr inbounds i8, ptr %0, i64 %173
  %175 = getelementptr inbounds i8, ptr %174, i64 %5
  %176 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %174, ptr nonnull align 1 %175) #15
  %177 = icmp eq i8 %176, 1
  %178 = select i1 %177, i64 %5, i64 0
  %179 = select i1 %177, ptr %174, ptr %175
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %179) #15
  %180 = getelementptr inbounds i8, ptr %174, i64 %178
  call void %6(ptr nonnull align 1 %174, ptr nonnull align 1 %180) #15
  call void %6(ptr nonnull align 1 %175, ptr nonnull align 1 %9) #15
  br label %sort.tiny_sort__anon_16475.exit

.cont96.i.i:                                      ; preds = %136
  call void %7(ptr align 1 %4, i64 8) #15
  %181 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %137) #15
  %.not113.i.i = icmp eq i8 %181, 1
  %.2.i.i = select i1 %.not113.i.i, i64 %5, i64 0
  %.3.i.i = select i1 %.not113.i.i, i64 0, i64 %5
  %182 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %182) #15
  %183 = getelementptr inbounds i8, ptr %2, i64 %5
  %184 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  call void %6(ptr nonnull align 1 %183, ptr nonnull align 1 %184) #15
  %185 = getelementptr inbounds i8, ptr %2, i64 %164
  call void %6(ptr nonnull align 1 %185, ptr nonnull align 1 %165) #15
  %186 = shl nuw i64 %5, 2
  %187 = getelementptr inbounds i8, ptr %0, i64 %186
  %188 = getelementptr inbounds i8, ptr %187, i64 %5
  %189 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %187, ptr nonnull align 1 %188) #15
  %.not114.i.i = icmp eq i8 %189, 1
  %.4.i.i = select i1 %.not114.i.i, i64 %5, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 %5
  %190 = getelementptr inbounds i8, ptr %2, i64 %186
  %191 = getelementptr inbounds i8, ptr %187, i64 %.4.i.i
  call void %6(ptr nonnull align 1 %190, ptr nonnull align 1 %191) #15
  %192 = mul nuw i64 %5, 5
  %193 = getelementptr inbounds i8, ptr %2, i64 %192
  %194 = getelementptr inbounds i8, ptr %187, i64 %.5.i.i
  call void %6(ptr nonnull align 1 %193, ptr nonnull align 1 %194) #15
  %195 = getelementptr inbounds i8, ptr %2, i64 %148
  %196 = getelementptr inbounds i8, ptr %187, i64 %156
  call void %6(ptr nonnull align 1 %195, ptr nonnull align 1 %196) #15
  %197 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %195) #15
  %.not115.i.i = icmp eq i8 %197, 1
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %195, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated92.i.i) #15
  %198 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 %5
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %198
  %.119.i.i = select i1 %.not115.i.i, ptr %198, ptr %195
  %199 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.118.i.i, ptr nonnull align 1 %.119.i.i) #15
  %.not116.i.i = icmp eq i8 %199, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  call void %6(ptr nonnull align 1 %137, ptr nonnull align 1 %.sroa.speculated83.i.i) #15
  %200 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 %5
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %200
  %.1106.i.i = select i1 %.not116.i.i, ptr %200, ptr %.119.i.i
  %201 = call i8 %3(ptr align 1 %4, ptr align 1 %.1110.i.i, ptr align 1 %.1106.i.i) #15
  %.not117.i.i = icmp eq i8 %201, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  call void %6(ptr nonnull align 1 %142, ptr align 1 %.sroa.speculated74.i.i) #15
  %202 = getelementptr inbounds i8, ptr %0, i64 %192
  %203 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %185, ptr nonnull align 1 %193) #15
  %204 = icmp eq i8 %203, 1
  %.sroa.speculated65.i.i = select i1 %204, ptr %185, ptr %193
  call void %6(ptr nonnull align 1 %202, ptr nonnull align 1 %.sroa.speculated65.i.i) #15
  %205 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 %156
  %.2111.i.i = select i1 %204, ptr %205, ptr %185
  %.2107.i.i = select i1 %204, ptr %193, ptr %205
  %206 = getelementptr inbounds i8, ptr %202, i64 %156
  %207 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2111.i.i, ptr nonnull align 1 %.2107.i.i) #15
  %208 = icmp eq i8 %207, 1
  %.sroa.speculated.i.i = select i1 %208, ptr %.2111.i.i, ptr %.2107.i.i
  call void %6(ptr nonnull align 1 %206, ptr nonnull align 1 %.sroa.speculated.i.i) #15
  %209 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 %156
  %.3112.i.i = select i1 %208, ptr %209, ptr %.2111.i.i
  %.3108.i.i = select i1 %208, ptr %.2107.i.i, ptr %209
  %210 = getelementptr inbounds i8, ptr %206, i64 %156
  %211 = call i8 %3(ptr align 1 %4, ptr align 1 %.3112.i.i, ptr align 1 %.3108.i.i) #15
  %212 = icmp eq i8 %211, 1
  %213 = select i1 %212, ptr %.3112.i.i, ptr %.3108.i.i
  call void %6(ptr nonnull align 1 %210, ptr align 1 %213) #15
  br label %sort.tiny_sort__anon_16475.exit

214:                                              ; preds = %11
  tail call void %7(ptr align 1 %4, i64 6) #15
  %215 = getelementptr inbounds i8, ptr %0, i64 %5
  %216 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %215) #15
  %217 = icmp eq i8 %216, 1
  %..i14.i = select i1 %217, i64 %5, i64 0
  %218 = select i1 %217, ptr %0, ptr %215
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %218) #15
  %219 = getelementptr inbounds i8, ptr %0, i64 %..i14.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %219) #15
  call void %6(ptr nonnull align 1 %215, ptr nonnull align 1 %9) #15
  %220 = shl nuw i64 %5, 1
  %221 = getelementptr inbounds i8, ptr %0, i64 %220
  %222 = getelementptr inbounds i8, ptr %221, i64 %5
  %223 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %221, ptr nonnull align 1 %222) #15
  %224 = icmp eq i8 %223, 1
  %225 = select i1 %224, i64 %5, i64 0
  %226 = select i1 %224, ptr %221, ptr %222
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %226) #15
  %227 = getelementptr inbounds i8, ptr %221, i64 %225
  call void %6(ptr nonnull align 1 %221, ptr nonnull align 1 %227) #15
  call void %6(ptr nonnull align 1 %222, ptr nonnull align 1 %9) #15
  %228 = getelementptr inbounds i8, ptr %221, i64 %220
  %229 = getelementptr inbounds i8, ptr %228, i64 %5
  %230 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %228, ptr nonnull align 1 %229) #15
  %231 = icmp eq i8 %230, 1
  %232 = select i1 %231, i64 %5, i64 0
  %233 = select i1 %231, ptr %228, ptr %229
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %233) #15
  %234 = getelementptr inbounds i8, ptr %228, i64 %232
  call void %6(ptr nonnull align 1 %228, ptr nonnull align 1 %234) #15
  call void %6(ptr nonnull align 1 %229, ptr nonnull align 1 %9) #15
  %235 = mul nuw i64 %5, 3
  %236 = sub i64 0, %235
  %237 = getelementptr inbounds i8, ptr %228, i64 %236
  %238 = getelementptr inbounds i8, ptr %237, i64 %5
  %239 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %237, ptr nonnull align 1 %238) #15
  %240 = icmp eq i8 %239, 1
  %241 = select i1 %240, i64 %5, i64 0
  %242 = select i1 %240, ptr %237, ptr %238
  call void %6(ptr nonnull align 1 %9, ptr nonnull align 1 %242) #15
  %243 = getelementptr inbounds i8, ptr %237, i64 %241
  call void %6(ptr nonnull align 1 %237, ptr nonnull align 1 %243) #15
  call void %6(ptr nonnull align 1 %238, ptr nonnull align 1 %9) #15
  %244 = zext i1 %240 to i8
  %245 = getelementptr inbounds i8, ptr %237, i64 %220
  %246 = getelementptr inbounds i8, ptr %245, i64 %5
  %247 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %245, ptr nonnull align 1 %246) #15
  %248 = icmp eq i8 %247, 1
  %249 = select i1 %248, i64 %5, i64 0
  %250 = select i1 %248, ptr %245, ptr %246
  call void %6(ptr nonnull align 1 %9, ptr align 1 %250) #15
  %251 = getelementptr inbounds i8, ptr %245, i64 %249
  call void %6(ptr nonnull align 1 %245, ptr nonnull align 1 %251) #15
  call void %6(ptr nonnull align 1 %246, ptr nonnull align 1 %9) #15
  %252 = zext i1 %248 to i8
  %253 = add nuw nsw i8 %252, %244
  %254 = getelementptr inbounds i8, ptr %245, i64 %220
  %255 = getelementptr inbounds i8, ptr %254, i64 %5
  %256 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %254, ptr align 1 %255) #15
  %257 = icmp eq i8 %256, 1
  %258 = select i1 %257, i64 %5, i64 0
  %259 = select i1 %257, ptr %254, ptr %255
  call void %6(ptr nonnull align 1 %9, ptr align 1 %259) #15
  %260 = getelementptr inbounds i8, ptr %254, i64 %258
  call void %6(ptr nonnull align 1 %254, ptr align 1 %260) #15
  call void %6(ptr align 1 %255, ptr nonnull align 1 %9) #15
  %.neg.i15.i = sext i1 %257 to i8
  %261 = icmp eq i8 %253, %.neg.i15.i
  br i1 %261, label %sort.tiny_sort__anon_16475.exit, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %214
  %262 = sub i64 0, %5
  %263 = getelementptr inbounds i8, ptr %254, i64 %262
  call void %7(ptr align 1 %4, i64 11) #15
  %264 = getelementptr inbounds i8, ptr %263, i64 %5
  %265 = call i8 %3(ptr align 1 %4, ptr align 1 %263, ptr align 1 %264) #15
  %266 = icmp eq i8 %265, 1
  %.1.i16.i = select i1 %266, i64 %5, i64 0
  %267 = select i1 %266, ptr %263, ptr %264
  call void %6(ptr nonnull align 1 %9, ptr align 1 %267) #15
  %268 = getelementptr inbounds i8, ptr %263, i64 %.1.i16.i
  call void %6(ptr align 1 %263, ptr align 1 %268) #15
  call void %6(ptr align 1 %264, ptr nonnull align 1 %9) #15
  %269 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %215) #15
  %.not.i17.i = icmp eq i8 %269, 1
  %270 = select i1 %.not.i17.i, i64 %5, i64 0
  %271 = select i1 %.not.i17.i, i64 0, i64 %5
  %272 = getelementptr inbounds i8, ptr %0, i64 %270
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %272) #15
  %273 = getelementptr inbounds i8, ptr %2, i64 %5
  %274 = getelementptr inbounds i8, ptr %0, i64 %271
  call void %6(ptr nonnull align 1 %273, ptr nonnull align 1 %274) #15
  %275 = getelementptr inbounds i8, ptr %2, i64 %220
  call void %6(ptr nonnull align 1 %275, ptr nonnull align 1 %221) #15
  %276 = getelementptr inbounds i8, ptr %0, i64 %235
  %277 = getelementptr inbounds i8, ptr %276, i64 %5
  %278 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %276, ptr nonnull align 1 %277) #15
  %.not127.i.i = icmp eq i8 %278, 1
  %279 = select i1 %.not127.i.i, i64 %5, i64 0
  %280 = select i1 %.not127.i.i, i64 0, i64 %5
  %281 = getelementptr inbounds i8, ptr %2, i64 %235
  %282 = getelementptr inbounds i8, ptr %276, i64 %279
  call void %6(ptr nonnull align 1 %281, ptr nonnull align 1 %282) #15
  %283 = shl nuw i64 %5, 2
  %284 = getelementptr inbounds i8, ptr %2, i64 %283
  %285 = getelementptr inbounds i8, ptr %276, i64 %280
  call void %6(ptr nonnull align 1 %284, ptr nonnull align 1 %285) #15
  %286 = getelementptr inbounds i8, ptr %276, i64 %220
  %287 = getelementptr inbounds i8, ptr %286, i64 %5
  %288 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %286, ptr nonnull align 1 %287) #15
  %.not128.i.i = icmp eq i8 %288, 1
  %289 = select i1 %.not128.i.i, i64 %5, i64 0
  %290 = select i1 %.not128.i.i, i64 0, i64 %5
  %291 = mul nuw i64 %5, 5
  %292 = getelementptr inbounds i8, ptr %2, i64 %291
  %293 = getelementptr inbounds i8, ptr %286, i64 %289
  call void %6(ptr nonnull align 1 %292, ptr nonnull align 1 %293) #15
  %294 = mul nuw i64 %5, 6
  %295 = getelementptr inbounds i8, ptr %2, i64 %294
  %296 = getelementptr inbounds i8, ptr %286, i64 %290
  call void %6(ptr nonnull align 1 %295, ptr nonnull align 1 %296) #15
  %297 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %281) #15
  %.not129.i.i = icmp eq i8 %297, 1
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %281, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated106.i.i) #15
  %298 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 %5
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %298
  %.133.i.i = select i1 %.not129.i.i, ptr %298, ptr %281
  %299 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.132.i.i, ptr nonnull align 1 %.133.i.i) #15
  %.not130.i.i = icmp eq i8 %299, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  call void %6(ptr nonnull align 1 %215, ptr nonnull align 1 %.sroa.speculated97.i.i) #15
  %300 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 %5
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %300
  %.1121.i.i = select i1 %.not130.i.i, ptr %300, ptr %.133.i.i
  %301 = getelementptr inbounds i8, ptr %215, i64 %5
  %302 = call i8 %3(ptr align 1 %4, ptr align 1 %.1123.i.i, ptr align 1 %.1121.i.i) #15
  %.not131.i.i = icmp eq i8 %302, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  call void %6(ptr nonnull align 1 %301, ptr align 1 %.sroa.speculated88.i.i) #15
  %303 = getelementptr inbounds i8, ptr %0, i64 %294
  %304 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %275, ptr nonnull align 1 %295) #15
  %305 = icmp eq i8 %304, 1
  %.sroa.speculated79.i.i = select i1 %305, ptr %275, ptr %295
  call void %6(ptr nonnull align 1 %303, ptr nonnull align 1 %.sroa.speculated79.i.i) #15
  %306 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 %262
  %.2124.i.i = select i1 %305, ptr %306, ptr %275
  %.2.i18.i = select i1 %305, ptr %295, ptr %306
  %307 = getelementptr inbounds i8, ptr %303, i64 %262
  %308 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2124.i.i, ptr nonnull align 1 %.2.i18.i) #15
  %309 = icmp eq i8 %308, 1
  %.sroa.speculated70.i.i = select i1 %309, ptr %.2124.i.i, ptr %.2.i18.i
  call void %6(ptr nonnull align 1 %307, ptr nonnull align 1 %.sroa.speculated70.i.i) #15
  %310 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 %262
  %.3125.i.i = select i1 %309, ptr %310, ptr %.2124.i.i
  %.3.i19.i = select i1 %309, ptr %.2.i18.i, ptr %310
  %311 = getelementptr inbounds i8, ptr %307, i64 %262
  %312 = call i8 %3(ptr align 1 %4, ptr align 1 %.3125.i.i, ptr align 1 %.3.i19.i) #15
  %313 = icmp eq i8 %312, 1
  %.sroa.speculated.i20.i = select i1 %313, ptr %.3125.i.i, ptr %.3.i19.i
  call void %6(ptr nonnull align 1 %311, ptr align 1 %.sroa.speculated.i20.i) #15
  %314 = getelementptr inbounds i8, ptr %.sroa.speculated.i20.i, i64 %262
  %.4126.i.i = select i1 %313, ptr %314, ptr %.3125.i.i
  %.4.i21.i = select i1 %313, ptr %.3.i19.i, ptr %314
  %315 = getelementptr inbounds i8, ptr %311, i64 %262
  %316 = call i8 %3(ptr align 1 %4, ptr align 1 %.4126.i.i, ptr align 1 %.4.i21.i) #15
  %317 = icmp eq i8 %316, 1
  %318 = select i1 %317, ptr %.4126.i.i, ptr %.4.i21.i
  call void %6(ptr nonnull align 1 %315, ptr align 1 %318) #15
  br label %sort.tiny_sort__anon_16475.exit

sort.tiny_sort__anon_16475.exit:                  ; preds = %.cont110.i.i, %214, %.cont96.i.i, %168, %106, %76, %55, %36, %19, %13, %11, %11
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  br label %common.ret

319:                                              ; preds = %8
  %320 = lshr i64 %1, 1
  %321 = lshr i64 %1, 2
  %322 = sub nuw nsw i64 %320, %321
  %323 = sub nuw i64 %1, %320
  %324 = lshr i64 %323, 1
  %325 = sub nuw i64 %323, %324
  tail call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %321, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  %326 = mul nuw i64 %321, %5
  %327 = getelementptr inbounds i8, ptr %0, i64 %326
  tail call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %327, i64 %322, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  %328 = mul nuw i64 %322, %5
  %329 = getelementptr inbounds i8, ptr %327, i64 %328
  tail call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %329, i64 %324, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  %330 = mul nuw i64 %324, %5
  %331 = getelementptr inbounds i8, ptr %329, i64 %330
  tail call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %331, i64 %325, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  %332 = add nsw i64 %321, -1
  %333 = mul nuw i64 %332, %5
  %334 = getelementptr inbounds i8, ptr %0, i64 %333
  tail call void %7(ptr align 1 %4, i64 1) #15
  %335 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %334, ptr nonnull align 1 %327) #15
  %.not = icmp eq i8 %335, 1
  br i1 %.not, label %..critedge_crit_edge, label %336

..critedge_crit_edge:                             ; preds = %319
  %.pre = mul nuw i64 %320, %5
  br label %.critedge

336:                                              ; preds = %319
  %337 = add nsw i64 %320, -1
  %338 = mul nuw i64 %337, %5
  %339 = getelementptr inbounds i8, ptr %0, i64 %338
  %340 = mul nuw i64 %320, %5
  %341 = getelementptr inbounds i8, ptr %0, i64 %340
  tail call void %7(ptr align 1 %4, i64 1) #15
  %342 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %339, ptr nonnull align 1 %341) #15
  %.not11 = icmp eq i8 %342, 1
  br i1 %.not11, label %.critedge, label %343

343:                                              ; preds = %336
  %344 = sub i64 0, %5
  %345 = getelementptr inbounds i8, ptr %331, i64 %344
  tail call void %7(ptr align 1 %4, i64 1) #15
  %346 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %345, ptr nonnull align 1 %331) #15
  %.not12 = icmp eq i8 %346, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %343, %336, %..critedge_crit_edge
  %.pre-phi = phi i64 [ %.pre, %..critedge_crit_edge ], [ %340, %336 ], [ %340, %343 ]
  tail call fastcc void @sort.parity_merge__anon_16476(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %321, i64 %322, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  %347 = getelementptr inbounds i8, ptr %2, i64 %.pre-phi
  %348 = getelementptr inbounds i8, ptr %0, i64 %.pre-phi
  tail call fastcc void @sort.parity_merge__anon_16476(ptr nonnull align 1 %347, ptr nonnull align 1 %348, i64 %324, i64 %325, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  tail call fastcc void @sort.parity_merge__anon_16476(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %320, i64 %323, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %7)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 16
  %9 = alloca [96 x i8], align 16
  %10 = alloca [96 x i8], align 16
  %11 = alloca [96 x i8], align 16
  %12 = alloca [96 x i8], align 16
  %13 = alloca [96 x i8], align 16
  %14 = alloca [96 x i8], align 16
  %15 = alloca [3072 x i8], align 16
  %.not485 = icmp ult i64 %1, 8
  br i1 %.not485, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %7
  %16 = lshr i64 %1, 3
  %17 = shl nuw i64 %4, 1
  %18 = mul nuw i64 %4, 3
  %19 = shl nuw i64 %4, 2
  %20 = mul nuw i64 %4, 5
  %21 = mul nuw i64 %4, 6
  %22 = mul nuw i64 %4, 7
  %23 = shl nuw i64 %4, 3
  %24 = sub i64 0, %4
  %25 = sub i64 0, %23
  br label %26

26:                                               ; preds = %54, %.lr.ph
  %.1488 = phi ptr [ %0, %.lr.ph ], [ %55, %54 ]
  %.0279487 = phi ptr [ %0, %.lr.ph ], [ %.1280, %54 ]
  %.0284486 = phi i64 [ %16, %.lr.ph ], [ %.1285, %54 ]
  %27 = add i64 %.0284486, -1
  call void %6(ptr align 1 %3, i64 4) #15
  %28 = getelementptr inbounds i8, ptr %.1488, i64 %4
  %29 = call i8 %2(ptr align 1 %3, ptr align 1 %.1488, ptr align 1 %28) #15
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i4
  %32 = getelementptr inbounds i8, ptr %.1488, i64 %17
  %33 = getelementptr inbounds i8, ptr %.1488, i64 %18
  %34 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %33) #15
  %35 = icmp eq i8 %34, 1
  %36 = zext i1 %35 to i4
  %37 = getelementptr inbounds i8, ptr %.1488, i64 %19
  %38 = getelementptr inbounds i8, ptr %.1488, i64 %20
  %39 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %38) #15
  %40 = icmp eq i8 %39, 1
  %41 = zext i1 %40 to i4
  %42 = getelementptr inbounds i8, ptr %.1488, i64 %21
  %43 = getelementptr inbounds i8, ptr %.1488, i64 %22
  %44 = call i8 %2(ptr align 1 %3, ptr align 1 %42, ptr align 1 %43) #15
  %45 = icmp eq i8 %44, 1
  %46 = zext i1 %45 to i4
  %47 = select i1 %35, i4 2, i4 0
  %48 = select i1 %40, i4 4, i4 0
  %49 = select i1 %45, i4 -8, i4 0
  %50 = or i4 %47, %48
  %51 = or i4 %50, %49
  %52 = or i4 %51, %31
  %53 = zext i4 %52 to i32
  switch i32 %53, label %.outer.preheader [
    i32 0, label %56
    i32 15, label %62
  ]

.sink.split:                                      ; preds = %250, %245, %.critedge37, %139, %137, %126, %73, %60, %58, %56
  %.sink597 = phi ptr [ %94, %73 ], [ %.1488, %58 ], [ %.1488, %56 ], [ %.1488, %60 ], [ %240, %245 ], [ %240, %.critedge37 ], [ %240, %250 ], [ %96, %137 ], [ %96, %126 ], [ %96, %139 ]
  %.1285.ph = phi i64 [ %.2286, %73 ], [ %27, %58 ], [ %27, %56 ], [ %27, %60 ], [ %144, %245 ], [ %144, %.critedge37 ], [ %144, %250 ], [ %98, %137 ], [ %98, %126 ], [ %98, %139 ]
  %.1280.ph = phi ptr [ %.3282.ph652, %73 ], [ %.0279487, %58 ], [ %.0279487, %56 ], [ %.0279487, %60 ], [ %.3282.ph652, %245 ], [ %.3282.ph652, %.critedge37 ], [ %.3282.ph652, %250 ], [ %.3282.ph652, %137 ], [ %.3282.ph652, %126 ], [ %.3282.ph652, %139 ]
  call void %6(ptr align 1 %3, i64 16) #15
  call fastcc void @sort.quad_swap_merge__anon_16478(ptr nonnull align 1 %.sink597, ptr nonnull align 1 %15, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  br label %54

54:                                               ; preds = %250, %.sink.split
  %.sink = phi ptr [ %.sink597, %.sink.split ], [ %240, %250 ]
  %.1285 = phi i64 [ %.1285.ph, %.sink.split ], [ %144, %250 ]
  %.1280 = phi ptr [ %.1280.ph, %.sink.split ], [ %.3282.ph652, %250 ]
  %55 = getelementptr inbounds i8, ptr %.sink, i64 %23
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %26

56:                                               ; preds = %26
  call void %6(ptr align 1 %3, i64 1) #15
  %57 = call i8 %2(ptr align 1 %3, ptr align 1 %28, ptr align 1 %32) #15
  %.not328 = icmp eq i8 %57, 1
  br i1 %.not328, label %.sink.split, label %58

58:                                               ; preds = %56
  call void %6(ptr align 1 %3, i64 1) #15
  %59 = call i8 %2(ptr align 1 %3, ptr align 1 %33, ptr align 1 %37) #15
  %.not329 = icmp eq i8 %59, 1
  br i1 %.not329, label %.sink.split, label %60

60:                                               ; preds = %58
  call void %6(ptr align 1 %3, i64 1) #15
  %61 = call i8 %2(ptr align 1 %3, ptr align 1 %38, ptr align 1 %42) #15
  %.not330 = icmp eq i8 %61, 1
  br i1 %.not330, label %.sink.split, label %.outer.preheader

62:                                               ; preds = %26
  call void %6(ptr align 1 %3, i64 1) #15
  %63 = call i8 %2(ptr align 1 %3, ptr align 1 %28, ptr align 1 %32) #15
  %64 = icmp eq i8 %63, 1
  br i1 %64, label %65, label %.critedge4

65:                                               ; preds = %62
  call void %6(ptr align 1 %3, i64 1) #15
  %66 = call i8 %2(ptr align 1 %3, ptr align 1 %33, ptr align 1 %37) #15
  %67 = icmp eq i8 %66, 1
  br i1 %67, label %68, label %.critedge4

68:                                               ; preds = %65
  call void %6(ptr align 1 %3, i64 1) #15
  %69 = call i8 %2(ptr align 1 %3, ptr align 1 %38, ptr align 1 %42) #15
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %.outer.preheader, label %.critedge4

.critedge4:                                       ; preds = %68, %65, %62
  br label %.outer.preheader

.outer.preheader:                                 ; preds = %.critedge4, %68, %60, %26
  %.1299.ph651.ph = phi i2 [ -2, %.critedge4 ], [ -2, %26 ], [ 0, %60 ], [ 1, %68 ]
  %.3282.ph652.ph = phi ptr [ %.0279487, %.critedge4 ], [ %.0279487, %26 ], [ %.0279487, %60 ], [ %.1488, %68 ]
  br label %.outer

.outer:                                           ; preds = %219, %134, %.outer.preheader
  %.1299.ph651 = phi i2 [ %.1299.ph651.ph, %.outer.preheader ], [ 1, %219 ], [ 1, %134 ]
  %.0296.ph = phi i4 [ %46, %.outer.preheader ], [ %163, %219 ], [ %117, %134 ]
  %.0294.ph = phi i4 [ %41, %.outer.preheader ], [ %158, %219 ], [ %112, %134 ]
  %.0292.ph = phi i4 [ %36, %.outer.preheader ], [ %153, %219 ], [ %107, %134 ]
  %.0290.ph = phi i4 [ %31, %.outer.preheader ], [ %148, %219 ], [ %102, %134 ]
  %.2286.ph = phi i64 [ %27, %.outer.preheader ], [ %144, %219 ], [ %98, %134 ]
  %.3282.ph652 = phi ptr [ %.3282.ph652.ph, %.outer.preheader ], [ %142, %219 ], [ %96, %134 ]
  %.3.ph = phi ptr [ %.1488, %.outer.preheader ], [ %142, %219 ], [ %96, %134 ]
  br label %.backedge

.backedge:                                        ; preds = %211, %204, %139, %134, %131, %128, %121, %.outer
  %.1299 = phi i2 [ %.1299.ph651, %.outer ], [ 0, %139 ], [ 1, %204 ], [ 0, %211 ], [ -2, %131 ], [ -2, %121 ], [ -2, %128 ], [ -2, %134 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %117, %139 ], [ %163, %204 ], [ %163, %211 ], [ %117, %131 ], [ %117, %121 ], [ %117, %128 ], [ %117, %134 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %112, %139 ], [ %158, %204 ], [ %158, %211 ], [ %112, %131 ], [ %112, %121 ], [ %112, %128 ], [ %112, %134 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %107, %139 ], [ %153, %204 ], [ %153, %211 ], [ %107, %131 ], [ %107, %121 ], [ %107, %128 ], [ %107, %134 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %102, %139 ], [ %148, %204 ], [ %148, %211 ], [ %102, %131 ], [ %102, %121 ], [ %102, %128 ], [ %102, %134 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %98, %139 ], [ %144, %204 ], [ %144, %211 ], [ %98, %131 ], [ %98, %121 ], [ %98, %128 ], [ %98, %134 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %96, %139 ], [ %142, %204 ], [ %142, %211 ], [ %96, %131 ], [ %96, %121 ], [ %96, %128 ], [ %96, %134 ]
  %71 = zext i2 %.1299 to i32
  switch i32 %71, label %72 [
    i32 2, label %73
    i32 0, label %95
    i32 1, label %141
  ]

72:                                               ; preds = %.backedge
  unreachable

73:                                               ; preds = %.backedge
  %74 = icmp eq i4 %.0290, 0
  %. = select i1 %74, i64 %4, i64 0
  %.7 = select i1 %74, i64 0, i64 %4
  %75 = getelementptr inbounds i8, ptr %.3, i64 %.
  call void %5(ptr nonnull align 1 %14, ptr align 1 %75) #15
  %76 = getelementptr inbounds i8, ptr %.3, i64 %.7
  call void %5(ptr align 1 %.3, ptr align 1 %76) #15
  %77 = getelementptr inbounds i8, ptr %.3, i64 %4
  call void %5(ptr align 1 %77, ptr nonnull align 1 %14) #15
  %78 = getelementptr inbounds i8, ptr %.3, i64 %17
  %79 = icmp eq i4 %.0292, 0
  %.8 = select i1 %79, i64 %4, i64 0
  %.9 = select i1 %79, i64 0, i64 %4
  %80 = getelementptr inbounds i8, ptr %78, i64 %.8
  call void %5(ptr nonnull align 1 %14, ptr align 1 %80) #15
  %81 = getelementptr inbounds i8, ptr %78, i64 %.9
  call void %5(ptr align 1 %78, ptr align 1 %81) #15
  %82 = getelementptr inbounds i8, ptr %78, i64 %4
  call void %5(ptr align 1 %82, ptr nonnull align 1 %14) #15
  %83 = getelementptr inbounds i8, ptr %78, i64 %17
  %84 = icmp eq i4 %.0294, 0
  %.10 = select i1 %84, i64 %4, i64 0
  %.11 = select i1 %84, i64 0, i64 %4
  %85 = getelementptr inbounds i8, ptr %83, i64 %.10
  call void %5(ptr nonnull align 1 %14, ptr align 1 %85) #15
  %86 = getelementptr inbounds i8, ptr %83, i64 %.11
  call void %5(ptr align 1 %83, ptr align 1 %86) #15
  %87 = getelementptr inbounds i8, ptr %83, i64 %4
  call void %5(ptr align 1 %87, ptr nonnull align 1 %14) #15
  %88 = getelementptr inbounds i8, ptr %83, i64 %17
  %89 = icmp eq i4 %.0296, 0
  %.12 = select i1 %89, i64 %4, i64 0
  %.13 = select i1 %89, i64 0, i64 %4
  %90 = getelementptr inbounds i8, ptr %88, i64 %.12
  call void %5(ptr nonnull align 1 %14, ptr align 1 %90) #15
  %91 = getelementptr inbounds i8, ptr %88, i64 %.13
  call void %5(ptr align 1 %88, ptr align 1 %91) #15
  %92 = getelementptr inbounds i8, ptr %88, i64 %4
  call void %5(ptr align 1 %92, ptr nonnull align 1 %14) #15
  %93 = getelementptr inbounds i8, ptr %88, i64 %17
  %94 = getelementptr inbounds i8, ptr %93, i64 %25
  br label %.sink.split

95:                                               ; preds = %.backedge
  %96 = getelementptr inbounds i8, ptr %.3, i64 %23
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %97

97:                                               ; preds = %95
  %98 = add i64 %.2286, -1
  call void %6(ptr align 1 %3, i64 4) #15
  %99 = getelementptr inbounds i8, ptr %96, i64 %4
  %100 = call i8 %2(ptr align 1 %3, ptr align 1 %96, ptr align 1 %99) #15
  %101 = icmp eq i8 %100, 1
  %102 = zext i1 %101 to i4
  %103 = getelementptr inbounds i8, ptr %96, i64 %17
  %104 = getelementptr inbounds i8, ptr %96, i64 %18
  %105 = call i8 %2(ptr align 1 %3, ptr align 1 %103, ptr align 1 %104) #15
  %106 = icmp eq i8 %105, 1
  %107 = zext i1 %106 to i4
  %108 = getelementptr inbounds i8, ptr %96, i64 %19
  %109 = getelementptr inbounds i8, ptr %96, i64 %20
  %110 = call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %109) #15
  %111 = icmp eq i8 %110, 1
  %112 = zext i1 %111 to i4
  %113 = getelementptr inbounds i8, ptr %96, i64 %21
  %114 = getelementptr inbounds i8, ptr %96, i64 %22
  %115 = call i8 %2(ptr align 1 %3, ptr align 1 %113, ptr align 1 %114) #15
  %116 = icmp eq i8 %115, 1
  %117 = zext i1 %116 to i4
  %118 = or i4 %107, %102
  %119 = or i4 %118, %112
  %120 = or i4 %119, %117
  %.not320 = icmp eq i4 %120, 0
  br i1 %.not320, label %126, label %121

121:                                              ; preds = %97
  %122 = add nuw nsw i4 %107, %102
  %123 = add nuw nsw i4 %122, %112
  %124 = add nuw nsw i4 %123, %117
  %125 = icmp eq i4 %124, 4
  br i1 %125, label %128, label %.backedge

126:                                              ; preds = %97
  call void %6(ptr align 1 %3, i64 1) #15
  %127 = call i8 %2(ptr align 1 %3, ptr align 1 %99, ptr align 1 %103) #15
  %.not321 = icmp eq i8 %127, 1
  br i1 %.not321, label %.sink.split, label %137

128:                                              ; preds = %121
  call void %6(ptr align 1 %3, i64 1) #15
  %129 = call i8 %2(ptr align 1 %3, ptr align 1 %99, ptr align 1 %103) #15
  %130 = icmp eq i8 %129, 1
  br i1 %130, label %131, label %.backedge

131:                                              ; preds = %128
  call void %6(ptr align 1 %3, i64 1) #15
  %132 = call i8 %2(ptr align 1 %3, ptr align 1 %104, ptr align 1 %108) #15
  %133 = icmp eq i8 %132, 1
  br i1 %133, label %134, label %.backedge

134:                                              ; preds = %131
  call void %6(ptr align 1 %3, i64 1) #15
  %135 = call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %113) #15
  %136 = icmp eq i8 %135, 1
  br i1 %136, label %.outer, label %.backedge

137:                                              ; preds = %126
  call void %6(ptr align 1 %3, i64 1) #15
  %138 = call i8 %2(ptr align 1 %3, ptr align 1 %104, ptr align 1 %108) #15
  %.not322 = icmp eq i8 %138, 1
  br i1 %.not322, label %.sink.split, label %139

139:                                              ; preds = %137
  call void %6(ptr align 1 %3, i64 1) #15
  %140 = call i8 %2(ptr align 1 %3, ptr align 1 %109, ptr align 1 %113) #15
  %.not323 = icmp eq i8 %140, 1
  br i1 %.not323, label %.sink.split, label %.backedge

141:                                              ; preds = %.backedge
  %142 = getelementptr inbounds i8, ptr %.3, i64 %23
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %167, label %143

143:                                              ; preds = %141
  %144 = add i64 %.2286, -1
  call void %6(ptr align 1 %3, i64 4) #15
  %145 = getelementptr inbounds i8, ptr %142, i64 %4
  %146 = call i8 %2(ptr align 1 %3, ptr align 1 %142, ptr align 1 %145) #15
  %147 = icmp ne i8 %146, 1
  %148 = zext i1 %147 to i4
  %149 = getelementptr inbounds i8, ptr %142, i64 %17
  %150 = getelementptr inbounds i8, ptr %142, i64 %18
  %151 = call i8 %2(ptr align 1 %3, ptr align 1 %149, ptr align 1 %150) #15
  %152 = icmp ne i8 %151, 1
  %153 = zext i1 %152 to i4
  %154 = getelementptr inbounds i8, ptr %142, i64 %19
  %155 = getelementptr inbounds i8, ptr %142, i64 %20
  %156 = call i8 %2(ptr align 1 %3, ptr align 1 %154, ptr align 1 %155) #15
  %157 = icmp ne i8 %156, 1
  %158 = zext i1 %157 to i4
  %159 = getelementptr inbounds i8, ptr %142, i64 %21
  %160 = getelementptr inbounds i8, ptr %142, i64 %22
  %161 = call i8 %2(ptr align 1 %3, ptr align 1 %159, ptr align 1 %160) #15
  %162 = icmp ne i8 %161, 1
  %163 = zext i1 %162 to i4
  %164 = or i4 %153, %148
  %165 = or i4 %164, %158
  %166 = or i4 %165, %163
  %.not315 = icmp eq i4 %166, 0
  br i1 %.not315, label %194, label %.critedge25

167:                                              ; preds = %141
  %168 = and i64 %1, 7
  %169 = icmp eq i64 %168, 7
  br i1 %169, label %276, label %.critedge55

.critedge25:                                      ; preds = %204, %201, %198, %194, %143
  %170 = ptrtoint ptr %.3282.ph652 to i64
  %171 = getelementptr inbounds i8, ptr %142, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %172 = ptrtoint ptr %171 to i64
  %173 = sub nuw i64 %172, %170
  %174 = udiv i64 %173, %17
  %175 = mul nuw i64 %174, %4
  %176 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %175
  %177 = sub i64 0, %175
  %178 = getelementptr inbounds i8, ptr %171, i64 %177
  %179 = and i64 %174, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %182, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %182, %.critedge25
  %.027.i = phi ptr [ %184, %182 ], [ %178, %.critedge25 ]
  %.025.i = phi ptr [ %183, %182 ], [ %176, %.critedge25 ]
  %.0.i = phi i64 [ %185, %182 ], [ %174, %.critedge25 ]
  %181 = lshr i64 %.0.i, 1
  br label %186

182:                                              ; preds = %.critedge25
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %176) #15
  call void %5(ptr nonnull align 1 %176, ptr nonnull align 1 %178) #15
  %183 = getelementptr inbounds i8, ptr %176, i64 %24
  call void %5(ptr nonnull align 1 %178, ptr nonnull align 1 %8) #15
  %184 = getelementptr inbounds i8, ptr %178, i64 %4
  %185 = add i64 %174, -1
  br label %._crit_edge.i

186:                                              ; preds = %188, %._crit_edge.i
  %lsr.iv883 = phi i64 [ %lsr.iv.next884, %188 ], [ 0, %._crit_edge.i ]
  %lsr.iv880 = phi i64 [ %lsr.iv.next881, %188 ], [ 0, %._crit_edge.i ]
  %.1.i = phi i64 [ %181, %._crit_edge.i ], [ %189, %188 ]
  %uglygep882 = getelementptr i8, ptr %171, i64 %lsr.iv880
  %uglygep885 = getelementptr i8, ptr %.027.i, i64 %lsr.iv883
  %uglygep886 = getelementptr i8, ptr %.025.i, i64 %lsr.iv880
  %uglygep887 = getelementptr i8, ptr %.3282.ph652, i64 %lsr.iv883
  call void %5(ptr nonnull align 1 %9, ptr align 1 %uglygep887) #15
  call void %5(ptr align 1 %uglygep887, ptr align 1 %uglygep882) #15
  call void %5(ptr align 1 %uglygep882, ptr nonnull align 1 %9) #15
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep886) #15
  call void %5(ptr align 1 %uglygep886, ptr align 1 %uglygep885) #15
  call void %5(ptr align 1 %uglygep885, ptr nonnull align 1 %8) #15
  %187 = icmp eq i64 %.1.i, 0
  br i1 %187, label %sort.quad_reversal.exit, label %188

188:                                              ; preds = %186
  %189 = add nsw i64 %.1.i, -1
  %lsr.iv.next881 = sub i64 %lsr.iv880, %4
  %lsr.iv.next884 = add i64 %lsr.iv883, %4
  br label %186

sort.quad_reversal.exit:                          ; preds = %186
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %190 = add nuw nsw i4 %153, %148
  %191 = add nuw nsw i4 %190, %158
  %192 = add nuw i4 %191, %163
  %193 = zext i4 %192 to i32
  switch i32 %193, label %.critedge37 [
    i32 4, label %207
    i32 0, label %213
  ]

194:                                              ; preds = %143
  %195 = getelementptr inbounds i8, ptr %142, i64 %24
  call void %6(ptr align 1 %3, i64 1) #15
  %196 = call i8 %2(ptr align 1 %3, ptr align 1 %195, ptr align 1 %142) #15
  %197 = icmp eq i8 %196, 1
  br i1 %197, label %198, label %.critedge25

198:                                              ; preds = %194
  call void %6(ptr align 1 %3, i64 1) #15
  %199 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #15
  %200 = icmp eq i8 %199, 1
  br i1 %200, label %201, label %.critedge25

201:                                              ; preds = %198
  call void %6(ptr align 1 %3, i64 1) #15
  %202 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #15
  %203 = icmp eq i8 %202, 1
  br i1 %203, label %204, label %.critedge25

204:                                              ; preds = %201
  call void %6(ptr align 1 %3, i64 1) #15
  %205 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #15
  %206 = icmp eq i8 %205, 1
  br i1 %206, label %.backedge, label %.critedge25

207:                                              ; preds = %sort.quad_reversal.exit
  call void %6(ptr align 1 %3, i64 1) #15
  %208 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #15
  %.not316 = icmp eq i8 %208, 1
  br i1 %.not316, label %.critedge37, label %209

209:                                              ; preds = %207
  call void %6(ptr align 1 %3, i64 1) #15
  %210 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #15
  %.not317 = icmp eq i8 %210, 1
  br i1 %.not317, label %.critedge37, label %211

211:                                              ; preds = %209
  call void %6(ptr align 1 %3, i64 1) #15
  %212 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #15
  %.not318 = icmp eq i8 %212, 1
  br i1 %.not318, label %.critedge37, label %.backedge

213:                                              ; preds = %sort.quad_reversal.exit
  call void %6(ptr align 1 %3, i64 1) #15
  %214 = call i8 %2(ptr align 1 %3, ptr align 1 %145, ptr align 1 %149) #15
  %215 = icmp eq i8 %214, 1
  br i1 %215, label %216, label %.critedge37

216:                                              ; preds = %213
  call void %6(ptr align 1 %3, i64 1) #15
  %217 = call i8 %2(ptr align 1 %3, ptr align 1 %150, ptr align 1 %154) #15
  %218 = icmp eq i8 %217, 1
  br i1 %218, label %219, label %.critedge37

219:                                              ; preds = %216
  call void %6(ptr align 1 %3, i64 1) #15
  %220 = call i8 %2(ptr align 1 %3, ptr align 1 %155, ptr align 1 %159) #15
  %221 = icmp eq i8 %220, 1
  br i1 %221, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %219, %216, %213, %211, %209, %207, %sort.quad_reversal.exit
  %222 = icmp ne i8 %161, 1
  %223 = icmp ne i8 %156, 1
  %224 = icmp ne i8 %151, 1
  %225 = icmp ne i8 %146, 1
  %.42 = select i1 %225, i64 0, i64 %4
  %.43 = select i1 %225, i64 %4, i64 0
  %226 = getelementptr inbounds i8, ptr %142, i64 %.43
  call void %5(ptr nonnull align 1 %14, ptr align 1 %226) #15
  %227 = getelementptr inbounds i8, ptr %142, i64 %.42
  call void %5(ptr align 1 %142, ptr align 1 %227) #15
  call void %5(ptr align 1 %145, ptr nonnull align 1 %14) #15
  %.44 = select i1 %224, i64 0, i64 %4
  %.45 = select i1 %224, i64 %4, i64 0
  %228 = getelementptr inbounds i8, ptr %149, i64 %.45
  call void %5(ptr nonnull align 1 %14, ptr align 1 %228) #15
  %229 = getelementptr inbounds i8, ptr %149, i64 %.44
  call void %5(ptr align 1 %149, ptr align 1 %229) #15
  %230 = getelementptr inbounds i8, ptr %149, i64 %4
  call void %5(ptr align 1 %230, ptr nonnull align 1 %14) #15
  %231 = getelementptr inbounds i8, ptr %149, i64 %17
  %.46 = select i1 %223, i64 0, i64 %4
  %.47 = select i1 %223, i64 %4, i64 0
  %232 = getelementptr inbounds i8, ptr %231, i64 %.47
  call void %5(ptr nonnull align 1 %14, ptr align 1 %232) #15
  %233 = getelementptr inbounds i8, ptr %231, i64 %.46
  call void %5(ptr align 1 %231, ptr align 1 %233) #15
  %234 = getelementptr inbounds i8, ptr %231, i64 %4
  call void %5(ptr align 1 %234, ptr nonnull align 1 %14) #15
  %235 = getelementptr inbounds i8, ptr %231, i64 %17
  %.48 = select i1 %222, i64 0, i64 %4
  %.49 = select i1 %222, i64 %4, i64 0
  %236 = getelementptr inbounds i8, ptr %235, i64 %.49
  call void %5(ptr nonnull align 1 %14, ptr align 1 %236) #15
  %237 = getelementptr inbounds i8, ptr %235, i64 %.48
  call void %5(ptr align 1 %235, ptr align 1 %237) #15
  %238 = getelementptr inbounds i8, ptr %235, i64 %4
  call void %5(ptr align 1 %238, ptr nonnull align 1 %14) #15
  %239 = getelementptr inbounds i8, ptr %235, i64 %17
  %240 = getelementptr inbounds i8, ptr %239, i64 %25
  %241 = getelementptr inbounds i8, ptr %240, i64 %4
  %242 = getelementptr inbounds i8, ptr %240, i64 %17
  call void %6(ptr align 1 %3, i64 1) #15
  %243 = call i8 %2(ptr align 1 %3, ptr align 1 %241, ptr align 1 %242) #15
  %244 = icmp eq i8 %243, 1
  br i1 %244, label %.sink.split, label %245

245:                                              ; preds = %.critedge37
  %246 = getelementptr inbounds i8, ptr %240, i64 %18
  %247 = getelementptr inbounds i8, ptr %240, i64 %19
  call void %6(ptr align 1 %3, i64 1) #15
  %248 = call i8 %2(ptr align 1 %3, ptr align 1 %246, ptr align 1 %247) #15
  %249 = icmp eq i8 %248, 1
  br i1 %249, label %.sink.split, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds i8, ptr %240, i64 %20
  %252 = getelementptr inbounds i8, ptr %240, i64 %21
  call void %6(ptr align 1 %3, i64 1) #15
  %253 = call i8 %2(ptr align 1 %3, ptr align 1 %251, ptr align 1 %252) #15
  %254 = icmp eq i8 %253, 1
  br i1 %254, label %.sink.split, label %54

255:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %276
  %256 = getelementptr inbounds i8, ptr %142, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %257 = ptrtoint ptr %256 to i64
  %258 = ptrtoint ptr %.3282.ph652 to i64
  %259 = sub nuw i64 %257, %258
  %260 = udiv i64 %259, %17
  %261 = mul nuw i64 %260, %4
  %262 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %261
  %263 = sub i64 0, %261
  %264 = getelementptr inbounds i8, ptr %256, i64 %263
  %265 = and i64 %260, 1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %268, label %._crit_edge.i332

._crit_edge.i332:                                 ; preds = %268, %255
  %.027.i334 = phi ptr [ %270, %268 ], [ %264, %255 ]
  %.025.i335 = phi ptr [ %269, %268 ], [ %262, %255 ]
  %.0.i336 = phi i64 [ %271, %268 ], [ %260, %255 ]
  %267 = lshr i64 %.0.i336, 1
  br label %272

268:                                              ; preds = %255
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %262) #15
  call void %5(ptr nonnull align 1 %262, ptr nonnull align 1 %264) #15
  %269 = getelementptr inbounds i8, ptr %262, i64 %24
  call void %5(ptr nonnull align 1 %264, ptr nonnull align 1 %8) #15
  %270 = getelementptr inbounds i8, ptr %264, i64 %4
  %271 = add i64 %260, -1
  br label %._crit_edge.i332

272:                                              ; preds = %274, %._crit_edge.i332
  %lsr.iv875 = phi i64 [ %lsr.iv.next876, %274 ], [ 0, %._crit_edge.i332 ]
  %lsr.iv872 = phi i64 [ %lsr.iv.next873, %274 ], [ 0, %._crit_edge.i332 ]
  %.1.i341 = phi i64 [ %267, %._crit_edge.i332 ], [ %275, %274 ]
  %uglygep874 = getelementptr i8, ptr %256, i64 %lsr.iv872
  %uglygep877 = getelementptr i8, ptr %.027.i334, i64 %lsr.iv875
  %uglygep878 = getelementptr i8, ptr %.025.i335, i64 %lsr.iv872
  %uglygep879 = getelementptr i8, ptr %.3282.ph652, i64 %lsr.iv875
  call void %5(ptr nonnull align 1 %9, ptr align 1 %uglygep879) #15
  call void %5(ptr align 1 %uglygep879, ptr align 1 %uglygep874) #15
  call void %5(ptr align 1 %uglygep874, ptr nonnull align 1 %9) #15
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep878) #15
  call void %5(ptr align 1 %uglygep878, ptr align 1 %uglygep877) #15
  call void %5(ptr align 1 %uglygep877, ptr nonnull align 1 %8) #15
  %273 = icmp eq i64 %.1.i341, 0
  br i1 %273, label %sort.quad_reversal.exit342, label %274

274:                                              ; preds = %272
  %275 = add nsw i64 %.1.i341, -1
  %lsr.iv.next873 = sub i64 %lsr.iv872, %4
  %lsr.iv.next876 = add i64 %lsr.iv875, %4
  br label %272

sort.quad_reversal.exit342:                       ; preds = %272
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  br label %.loopexit

276:                                              ; preds = %167
  %277 = getelementptr inbounds i8, ptr %142, i64 %20
  %278 = getelementptr inbounds i8, ptr %142, i64 %21
  call void %6(ptr align 1 %3, i64 1) #15
  %279 = call i8 %2(ptr align 1 %3, ptr align 1 %277, ptr align 1 %278) #15
  %.not314 = icmp eq i8 %279, 1
  br i1 %.not314, label %.critedge55.thread, label %255

.critedge55:                                      ; preds = %167
  %280 = icmp ugt i64 %168, 5
  br i1 %280, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %276
  %281 = getelementptr inbounds i8, ptr %142, i64 %19
  %282 = getelementptr inbounds i8, ptr %142, i64 %20
  call void %6(ptr align 1 %3, i64 1) #15
  %283 = call i8 %2(ptr align 1 %3, ptr align 1 %281, ptr align 1 %282) #15
  %.not313 = icmp eq i8 %283, 1
  br i1 %.not313, label %.critedge57.thread, label %255

.critedge57:                                      ; preds = %.critedge55
  %284 = icmp eq i64 %168, 5
  br i1 %284, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %285 = getelementptr inbounds i8, ptr %142, i64 %18
  %286 = getelementptr inbounds i8, ptr %142, i64 %19
  call void %6(ptr align 1 %3, i64 1) #15
  %287 = call i8 %2(ptr align 1 %3, ptr align 1 %285, ptr align 1 %286) #15
  %.not312 = icmp eq i8 %287, 1
  br i1 %.not312, label %.critedge59.thread, label %255

.critedge59:                                      ; preds = %.critedge57
  %288 = icmp ugt i64 %168, 3
  br i1 %288, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %289 = getelementptr inbounds i8, ptr %142, i64 %17
  %290 = getelementptr inbounds i8, ptr %142, i64 %18
  call void %6(ptr align 1 %3, i64 1) #15
  %291 = call i8 %2(ptr align 1 %3, ptr align 1 %289, ptr align 1 %290) #15
  %.not311 = icmp eq i8 %291, 1
  br i1 %.not311, label %.critedge61.thread, label %255

.critedge61:                                      ; preds = %.critedge59
  %292 = icmp eq i64 %168, 3
  br i1 %292, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %293 = getelementptr inbounds i8, ptr %142, i64 %4
  %294 = getelementptr inbounds i8, ptr %142, i64 %17
  call void %6(ptr align 1 %3, i64 1) #15
  %295 = call i8 %2(ptr align 1 %3, ptr align 1 %293, ptr align 1 %294) #15
  %.not310 = icmp eq i8 %295, 1
  br i1 %.not310, label %.critedge63.thread, label %255

.critedge63:                                      ; preds = %.critedge61
  %296 = icmp ugt i64 %168, 1
  br i1 %296, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %297 = getelementptr inbounds i8, ptr %142, i64 %4
  call void %6(ptr align 1 %3, i64 1) #15
  %298 = call i8 %2(ptr align 1 %3, ptr align 1 %142, ptr align 1 %297) #15
  %.not309 = icmp eq i8 %298, 1
  br i1 %.not309, label %.critedge65.thread, label %255

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %168, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %299 = getelementptr inbounds i8, ptr %142, i64 %24
  call void %6(ptr align 1 %3, i64 1) #15
  %300 = call i8 %2(ptr align 1 %3, ptr align 1 %299, ptr align 1 %142) #15
  %.not308 = icmp eq i8 %300, 1
  br i1 %.not308, label %.critedge67, label %255

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %301 = mul nuw i64 %168, %4
  %302 = getelementptr inbounds i8, ptr %142, i64 %301
  %303 = getelementptr inbounds i8, ptr %302, i64 %24
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  %304 = ptrtoint ptr %303 to i64
  %305 = ptrtoint ptr %.3282.ph652 to i64
  %306 = sub nuw i64 %304, %305
  %307 = udiv i64 %306, %17
  %308 = mul nuw i64 %307, %4
  %309 = getelementptr inbounds i8, ptr %.3282.ph652, i64 %308
  %310 = sub i64 0, %308
  %311 = getelementptr inbounds i8, ptr %303, i64 %310
  %312 = and i64 %307, 1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %315, label %._crit_edge.i344

._crit_edge.i344:                                 ; preds = %315, %.critedge67
  %.027.i346 = phi ptr [ %317, %315 ], [ %311, %.critedge67 ]
  %.025.i347 = phi ptr [ %316, %315 ], [ %309, %.critedge67 ]
  %.0.i348 = phi i64 [ %318, %315 ], [ %307, %.critedge67 ]
  %314 = lshr i64 %.0.i348, 1
  br label %319

315:                                              ; preds = %.critedge67
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %309) #15
  call void %5(ptr nonnull align 1 %309, ptr nonnull align 1 %311) #15
  %316 = getelementptr inbounds i8, ptr %309, i64 %24
  call void %5(ptr nonnull align 1 %311, ptr nonnull align 1 %8) #15
  %317 = getelementptr inbounds i8, ptr %311, i64 %4
  %318 = add i64 %307, -1
  br label %._crit_edge.i344

319:                                              ; preds = %321, %._crit_edge.i344
  %lsr.iv867 = phi i64 [ %lsr.iv.next868, %321 ], [ 0, %._crit_edge.i344 ]
  %lsr.iv864 = phi i64 [ %lsr.iv.next865, %321 ], [ 0, %._crit_edge.i344 ]
  %.1.i353 = phi i64 [ %314, %._crit_edge.i344 ], [ %322, %321 ]
  %uglygep866 = getelementptr i8, ptr %303, i64 %lsr.iv864
  %uglygep869 = getelementptr i8, ptr %.027.i346, i64 %lsr.iv867
  %uglygep870 = getelementptr i8, ptr %.025.i347, i64 %lsr.iv864
  %uglygep871 = getelementptr i8, ptr %.3282.ph652, i64 %lsr.iv867
  call void %5(ptr nonnull align 1 %9, ptr align 1 %uglygep871) #15
  call void %5(ptr align 1 %uglygep871, ptr align 1 %uglygep866) #15
  call void %5(ptr align 1 %uglygep866, ptr nonnull align 1 %9) #15
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep870) #15
  call void %5(ptr align 1 %uglygep870, ptr align 1 %uglygep869) #15
  call void %5(ptr align 1 %uglygep869, ptr nonnull align 1 %8) #15
  %320 = icmp eq i64 %.1.i353, 0
  br i1 %320, label %sort.quad_reversal.exit354, label %321

321:                                              ; preds = %319
  %322 = add nsw i64 %.1.i353, -1
  %lsr.iv.next865 = sub i64 %lsr.iv864, %4
  %lsr.iv.next868 = add i64 %lsr.iv867, %4
  br label %319

sort.quad_reversal.exit354:                       ; preds = %319
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %323 = icmp eq ptr %.3282.ph652, %0
  br i1 %323, label %common.ret, label %324

common.ret:                                       ; preds = %495, %492, %.preheader.i.1, %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit354
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit354 ], [ true, %._crit_edge ], [ true, %.loopexit.i ], [ true, %492 ], [ true, %.preheader.i.1 ], [ true, %495 ]
  ret i1 %common.ret.op

324:                                              ; preds = %.loopexit, %sort.quad_reversal.exit354
  %.not302490 = icmp ult i64 %1, 32
  br i1 %.not302490, label %._crit_edge, label %.lr.ph493

.lr.ph493:                                        ; preds = %324
  %325 = lshr i64 %1, 5
  %326 = mul nuw i64 %4, 7
  %327 = shl nuw i64 %4, 3
  %328 = mul nuw i64 %4, 15
  %329 = shl nuw i64 %4, 4
  %330 = mul nuw i64 %4, 23
  %331 = mul nuw i64 %4, 24
  %332 = sub i64 0, %4
  %333 = getelementptr inbounds i8, ptr %15, i64 %328
  %334 = getelementptr inbounds i8, ptr %15, i64 %329
  %335 = getelementptr inbounds i8, ptr %334, i64 %328
  %336 = getelementptr inbounds i8, ptr %334, i64 %332
  %337 = getelementptr inbounds i8, ptr %336, i64 %329
  %338 = mul nuw i64 %4, 31
  %339 = shl i64 %4, 5
  %.167.i = getelementptr inbounds i8, ptr %15, i64 %4
  %340 = getelementptr inbounds i8, ptr %333, i64 %332
  %.167.i.1 = getelementptr inbounds i8, ptr %.167.i, i64 %4
  %341 = getelementptr inbounds i8, ptr %340, i64 %332
  %.167.i.2 = getelementptr inbounds i8, ptr %.167.i.1, i64 %4
  %342 = getelementptr inbounds i8, ptr %341, i64 %332
  %.167.i.3 = getelementptr inbounds i8, ptr %.167.i.2, i64 %4
  %343 = getelementptr inbounds i8, ptr %342, i64 %332
  %.167.i.4 = getelementptr inbounds i8, ptr %.167.i.3, i64 %4
  %344 = getelementptr inbounds i8, ptr %343, i64 %332
  %.167.i.5 = getelementptr inbounds i8, ptr %.167.i.4, i64 %4
  %345 = getelementptr inbounds i8, ptr %344, i64 %332
  %.167.i.6 = getelementptr inbounds i8, ptr %.167.i.5, i64 %4
  %346 = getelementptr inbounds i8, ptr %345, i64 %332
  %.167.i370 = getelementptr inbounds i8, ptr %334, i64 %4
  %347 = getelementptr inbounds i8, ptr %335, i64 %332
  %.167.i370.1 = getelementptr inbounds i8, ptr %.167.i370, i64 %4
  %348 = getelementptr inbounds i8, ptr %347, i64 %332
  %.167.i370.2 = getelementptr inbounds i8, ptr %.167.i370.1, i64 %4
  %349 = getelementptr inbounds i8, ptr %348, i64 %332
  %.167.i370.3 = getelementptr inbounds i8, ptr %.167.i370.2, i64 %4
  %350 = getelementptr inbounds i8, ptr %349, i64 %332
  %.167.i370.4 = getelementptr inbounds i8, ptr %.167.i370.3, i64 %4
  %351 = getelementptr inbounds i8, ptr %350, i64 %332
  %.167.i370.5 = getelementptr inbounds i8, ptr %.167.i370.4, i64 %4
  %352 = getelementptr inbounds i8, ptr %351, i64 %332
  %.167.i370.6 = getelementptr inbounds i8, ptr %.167.i370.5, i64 %4
  %353 = getelementptr inbounds i8, ptr %352, i64 %332
  %uglygep857 = getelementptr i8, ptr %0, i64 %4
  br label %355

.loopexit:                                        ; preds = %sort.quad_reversal.exit342, %95, %54, %7
  %.0.ph = phi ptr [ %142, %sort.quad_reversal.exit342 ], [ %0, %7 ], [ %96, %95 ], [ %55, %54 ]
  %354 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %.0.ph, i64 %354, ptr nonnull align 1 %15, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6)
  br label %324

355:                                              ; preds = %361, %.lr.ph493
  %lsr.iv858 = phi ptr [ %uglygep857, %.lr.ph493 ], [ %uglygep859, %361 ]
  %.5492 = phi ptr [ %0, %.lr.ph493 ], [ %363, %361 ]
  %.4288491 = phi i64 [ %325, %.lr.ph493 ], [ %362, %361 ]
  %356 = getelementptr inbounds i8, ptr %.5492, i64 %326
  %357 = getelementptr inbounds i8, ptr %.5492, i64 %327
  call void %6(ptr align 1 %3, i64 1) #15
  %358 = call i8 %2(ptr align 1 %3, ptr align 1 %356, ptr align 1 %357) #15
  %.not303 = icmp eq i8 %358, 1
  br i1 %.not303, label %.critedge69, label %364

._crit_edge:                                      ; preds = %361, %324
  %.5.lcssa = phi ptr [ %0, %324 ], [ %363, %361 ]
  %359 = and i64 %1, 31
  %360 = icmp ugt i64 %359, 8
  br i1 %360, label %.preheader.lr.ph.i, label %common.ret

361:                                              ; preds = %sort.parity_merge__anon_16476.exit406, %368
  %362 = add nsw i64 %.4288491, -1
  %363 = getelementptr inbounds i8, ptr %.5492, i64 %339
  %uglygep859 = getelementptr i8, ptr %lsr.iv858, i64 %339
  %.not302 = icmp eq i64 %362, 0
  br i1 %.not302, label %._crit_edge, label %355

364:                                              ; preds = %355
  %365 = getelementptr inbounds i8, ptr %.5492, i64 %328
  %366 = getelementptr inbounds i8, ptr %.5492, i64 %329
  call void %6(ptr align 1 %3, i64 1) #15
  %367 = call i8 %2(ptr align 1 %3, ptr align 1 %365, ptr align 1 %366) #15
  %.not304 = icmp eq i8 %367, 1
  br i1 %.not304, label %.critedge69, label %368

368:                                              ; preds = %364
  %369 = getelementptr inbounds i8, ptr %.5492, i64 %330
  %370 = getelementptr inbounds i8, ptr %.5492, i64 %331
  call void %6(ptr align 1 %3, i64 1) #15
  %371 = call i8 %2(ptr align 1 %3, ptr align 1 %369, ptr align 1 %370) #15
  %.not305 = icmp eq i8 %371, 1
  br i1 %.not305, label %.critedge69, label %361

.critedge69:                                      ; preds = %368, %364, %355
  %372 = getelementptr inbounds i8, ptr %357, i64 %332
  %373 = getelementptr inbounds i8, ptr %372, i64 %327
  call void %6(ptr align 1 %3, i64 16) #15
  %374 = call i8 %2(ptr align 1 %3, ptr align 1 %.5492, ptr nonnull align 1 %357) #15
  %.not.i = icmp eq i8 %374, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %357, ptr %.5492
  call void %5(ptr nonnull align 1 %15, ptr align 1 %.sroa.speculated21.i) #15
  %375 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 %4
  %.0..i = select i1 %.not.i, ptr %.5492, ptr %375
  %..061.i = select i1 %.not.i, ptr %375, ptr %357
  %376 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i, ptr align 1 %..061.i) #15
  %.not76.i = icmp eq i8 %376, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  call void %5(ptr nonnull align 1 %.167.i, ptr align 1 %.sroa.speculated.i) #15
  %377 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %4
  %..364.i = select i1 %.not76.i, ptr %377, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %377
  %378 = call i8 %2(ptr align 1 %3, ptr align 1 %372, ptr align 1 %373) #15
  %379 = icmp eq i8 %378, 1
  %.sroa.speculated40.i = select i1 %379, ptr %372, ptr %373
  call void %5(ptr nonnull align 1 %333, ptr align 1 %.sroa.speculated40.i) #15
  %380 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 %332
  %.171.i = select i1 %379, ptr %373, ptr %380
  %.169.i = select i1 %379, ptr %380, ptr %372
  %381 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i, ptr align 1 %..364.i) #15
  %.not76.i.1 = icmp eq i8 %381, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  call void %5(ptr nonnull align 1 %.167.i.1, ptr align 1 %.sroa.speculated.i.1) #15
  %382 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %4
  %..364.i.1 = select i1 %.not76.i.1, ptr %382, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %382
  %383 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i, ptr align 1 %.171.i) #15
  %384 = icmp eq i8 %383, 1
  %.sroa.speculated40.i.1 = select i1 %384, ptr %.169.i, ptr %.171.i
  call void %5(ptr nonnull align 1 %340, ptr align 1 %.sroa.speculated40.i.1) #15
  %385 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 %332
  %.171.i.1 = select i1 %384, ptr %.171.i, ptr %385
  %.169.i.1 = select i1 %384, ptr %385, ptr %.169.i
  %386 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.1, ptr align 1 %..364.i.1) #15
  %.not76.i.2 = icmp eq i8 %386, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  call void %5(ptr nonnull align 1 %.167.i.2, ptr align 1 %.sroa.speculated.i.2) #15
  %387 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %4
  %..364.i.2 = select i1 %.not76.i.2, ptr %387, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %387
  %388 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.1, ptr align 1 %.171.i.1) #15
  %389 = icmp eq i8 %388, 1
  %.sroa.speculated40.i.2 = select i1 %389, ptr %.169.i.1, ptr %.171.i.1
  call void %5(ptr nonnull align 1 %341, ptr align 1 %.sroa.speculated40.i.2) #15
  %390 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 %332
  %.171.i.2 = select i1 %389, ptr %.171.i.1, ptr %390
  %.169.i.2 = select i1 %389, ptr %390, ptr %.169.i.1
  %391 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.2, ptr align 1 %..364.i.2) #15
  %.not76.i.3 = icmp eq i8 %391, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  call void %5(ptr nonnull align 1 %.167.i.3, ptr align 1 %.sroa.speculated.i.3) #15
  %392 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %4
  %..364.i.3 = select i1 %.not76.i.3, ptr %392, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %392
  %393 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.2, ptr align 1 %.171.i.2) #15
  %394 = icmp eq i8 %393, 1
  %.sroa.speculated40.i.3 = select i1 %394, ptr %.169.i.2, ptr %.171.i.2
  call void %5(ptr nonnull align 1 %342, ptr align 1 %.sroa.speculated40.i.3) #15
  %395 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 %332
  %.171.i.3 = select i1 %394, ptr %.171.i.2, ptr %395
  %.169.i.3 = select i1 %394, ptr %395, ptr %.169.i.2
  %396 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.3, ptr align 1 %..364.i.3) #15
  %.not76.i.4 = icmp eq i8 %396, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  call void %5(ptr nonnull align 1 %.167.i.4, ptr align 1 %.sroa.speculated.i.4) #15
  %397 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %4
  %..364.i.4 = select i1 %.not76.i.4, ptr %397, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %397
  %398 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.3, ptr align 1 %.171.i.3) #15
  %399 = icmp eq i8 %398, 1
  %.sroa.speculated40.i.4 = select i1 %399, ptr %.169.i.3, ptr %.171.i.3
  call void %5(ptr nonnull align 1 %343, ptr align 1 %.sroa.speculated40.i.4) #15
  %400 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 %332
  %.171.i.4 = select i1 %399, ptr %.171.i.3, ptr %400
  %.169.i.4 = select i1 %399, ptr %400, ptr %.169.i.3
  %401 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.4, ptr align 1 %..364.i.4) #15
  %.not76.i.5 = icmp eq i8 %401, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  call void %5(ptr align 1 %.167.i.5, ptr align 1 %.sroa.speculated.i.5) #15
  %402 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %4
  %..364.i.5 = select i1 %.not76.i.5, ptr %402, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %402
  %403 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.4, ptr align 1 %.171.i.4) #15
  %404 = icmp eq i8 %403, 1
  %.sroa.speculated40.i.5 = select i1 %404, ptr %.169.i.4, ptr %.171.i.4
  call void %5(ptr align 1 %344, ptr align 1 %.sroa.speculated40.i.5) #15
  %405 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 %332
  %.171.i.5 = select i1 %404, ptr %.171.i.4, ptr %405
  %.169.i.5 = select i1 %404, ptr %405, ptr %.169.i.4
  %406 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.5, ptr align 1 %..364.i.5) #15
  %.not76.i.6 = icmp eq i8 %406, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  call void %5(ptr align 1 %.167.i.6, ptr align 1 %.sroa.speculated.i.6) #15
  %407 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.5, ptr align 1 %.171.i.5) #15
  %408 = icmp eq i8 %407, 1
  %.sroa.speculated40.i.6 = select i1 %408, ptr %.169.i.5, ptr %.171.i.5
  call void %5(ptr align 1 %345, ptr align 1 %.sroa.speculated40.i.6) #15
  %409 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 %332
  %.171.i.6 = select i1 %408, ptr %.171.i.5, ptr %409
  %.169.i.6 = select i1 %408, ptr %409, ptr %.169.i.5
  %410 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.6, ptr align 1 %.171.i.6) #15
  %411 = icmp eq i8 %410, 1
  %.sroa.speculated46.i = select i1 %411, ptr %.169.i.6, ptr %.171.i.6
  call void %5(ptr align 1 %346, ptr align 1 %.sroa.speculated46.i) #15
  %412 = getelementptr inbounds i8, ptr %.5492, i64 %329
  %413 = getelementptr inbounds i8, ptr %412, i64 %327
  %414 = getelementptr inbounds i8, ptr %413, i64 %332
  %415 = getelementptr inbounds i8, ptr %414, i64 %327
  call void %6(ptr align 1 %3, i64 16) #15
  %416 = call i8 %2(ptr align 1 %3, ptr align 1 %412, ptr nonnull align 1 %413) #15
  %.not.i359 = icmp eq i8 %416, 1
  %.sroa.speculated21.i360 = select i1 %.not.i359, ptr %413, ptr %412
  call void %5(ptr nonnull align 1 %334, ptr align 1 %.sroa.speculated21.i360) #15
  %417 = getelementptr inbounds i8, ptr %.sroa.speculated21.i360, i64 %4
  %.0..i361 = select i1 %.not.i359, ptr %412, ptr %417
  %..061.i362 = select i1 %.not.i359, ptr %417, ptr %413
  %418 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i361, ptr align 1 %..061.i362) #15
  %.not76.i371 = icmp eq i8 %418, 1
  %.sroa.speculated.i372 = select i1 %.not76.i371, ptr %..061.i362, ptr %.0..i361
  call void %5(ptr nonnull align 1 %.167.i370, ptr align 1 %.sroa.speculated.i372) #15
  %419 = getelementptr inbounds i8, ptr %.sroa.speculated.i372, i64 %4
  %..364.i373 = select i1 %.not76.i371, ptr %419, ptr %..061.i362
  %.3..i374 = select i1 %.not76.i371, ptr %.0..i361, ptr %419
  %420 = call i8 %2(ptr align 1 %3, ptr align 1 %414, ptr align 1 %415) #15
  %421 = icmp eq i8 %420, 1
  %.sroa.speculated40.i375 = select i1 %421, ptr %414, ptr %415
  call void %5(ptr nonnull align 1 %335, ptr align 1 %.sroa.speculated40.i375) #15
  %422 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375, i64 %332
  %.171.i376 = select i1 %421, ptr %415, ptr %422
  %.169.i377 = select i1 %421, ptr %422, ptr %414
  %423 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374, ptr align 1 %..364.i373) #15
  %.not76.i371.1 = icmp eq i8 %423, 1
  %.sroa.speculated.i372.1 = select i1 %.not76.i371.1, ptr %..364.i373, ptr %.3..i374
  call void %5(ptr nonnull align 1 %.167.i370.1, ptr align 1 %.sroa.speculated.i372.1) #15
  %424 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.1, i64 %4
  %..364.i373.1 = select i1 %.not76.i371.1, ptr %424, ptr %..364.i373
  %.3..i374.1 = select i1 %.not76.i371.1, ptr %.3..i374, ptr %424
  %425 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377, ptr align 1 %.171.i376) #15
  %426 = icmp eq i8 %425, 1
  %.sroa.speculated40.i375.1 = select i1 %426, ptr %.169.i377, ptr %.171.i376
  call void %5(ptr nonnull align 1 %347, ptr align 1 %.sroa.speculated40.i375.1) #15
  %427 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.1, i64 %332
  %.171.i376.1 = select i1 %426, ptr %.171.i376, ptr %427
  %.169.i377.1 = select i1 %426, ptr %427, ptr %.169.i377
  %428 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.1, ptr align 1 %..364.i373.1) #15
  %.not76.i371.2 = icmp eq i8 %428, 1
  %.sroa.speculated.i372.2 = select i1 %.not76.i371.2, ptr %..364.i373.1, ptr %.3..i374.1
  call void %5(ptr nonnull align 1 %.167.i370.2, ptr align 1 %.sroa.speculated.i372.2) #15
  %429 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.2, i64 %4
  %..364.i373.2 = select i1 %.not76.i371.2, ptr %429, ptr %..364.i373.1
  %.3..i374.2 = select i1 %.not76.i371.2, ptr %.3..i374.1, ptr %429
  %430 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.1, ptr align 1 %.171.i376.1) #15
  %431 = icmp eq i8 %430, 1
  %.sroa.speculated40.i375.2 = select i1 %431, ptr %.169.i377.1, ptr %.171.i376.1
  call void %5(ptr nonnull align 1 %348, ptr align 1 %.sroa.speculated40.i375.2) #15
  %432 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.2, i64 %332
  %.171.i376.2 = select i1 %431, ptr %.171.i376.1, ptr %432
  %.169.i377.2 = select i1 %431, ptr %432, ptr %.169.i377.1
  %433 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.2, ptr align 1 %..364.i373.2) #15
  %.not76.i371.3 = icmp eq i8 %433, 1
  %.sroa.speculated.i372.3 = select i1 %.not76.i371.3, ptr %..364.i373.2, ptr %.3..i374.2
  call void %5(ptr nonnull align 1 %.167.i370.3, ptr align 1 %.sroa.speculated.i372.3) #15
  %434 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.3, i64 %4
  %..364.i373.3 = select i1 %.not76.i371.3, ptr %434, ptr %..364.i373.2
  %.3..i374.3 = select i1 %.not76.i371.3, ptr %.3..i374.2, ptr %434
  %435 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.2, ptr align 1 %.171.i376.2) #15
  %436 = icmp eq i8 %435, 1
  %.sroa.speculated40.i375.3 = select i1 %436, ptr %.169.i377.2, ptr %.171.i376.2
  call void %5(ptr nonnull align 1 %349, ptr align 1 %.sroa.speculated40.i375.3) #15
  %437 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.3, i64 %332
  %.171.i376.3 = select i1 %436, ptr %.171.i376.2, ptr %437
  %.169.i377.3 = select i1 %436, ptr %437, ptr %.169.i377.2
  %438 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.3, ptr align 1 %..364.i373.3) #15
  %.not76.i371.4 = icmp eq i8 %438, 1
  %.sroa.speculated.i372.4 = select i1 %.not76.i371.4, ptr %..364.i373.3, ptr %.3..i374.3
  call void %5(ptr align 1 %.167.i370.4, ptr align 1 %.sroa.speculated.i372.4) #15
  %439 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.4, i64 %4
  %..364.i373.4 = select i1 %.not76.i371.4, ptr %439, ptr %..364.i373.3
  %.3..i374.4 = select i1 %.not76.i371.4, ptr %.3..i374.3, ptr %439
  %440 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.3, ptr align 1 %.171.i376.3) #15
  %441 = icmp eq i8 %440, 1
  %.sroa.speculated40.i375.4 = select i1 %441, ptr %.169.i377.3, ptr %.171.i376.3
  call void %5(ptr align 1 %350, ptr align 1 %.sroa.speculated40.i375.4) #15
  %442 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.4, i64 %332
  %.171.i376.4 = select i1 %441, ptr %.171.i376.3, ptr %442
  %.169.i377.4 = select i1 %441, ptr %442, ptr %.169.i377.3
  %443 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.4, ptr align 1 %..364.i373.4) #15
  %.not76.i371.5 = icmp eq i8 %443, 1
  %.sroa.speculated.i372.5 = select i1 %.not76.i371.5, ptr %..364.i373.4, ptr %.3..i374.4
  call void %5(ptr align 1 %.167.i370.5, ptr align 1 %.sroa.speculated.i372.5) #15
  %444 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.5, i64 %4
  %..364.i373.5 = select i1 %.not76.i371.5, ptr %444, ptr %..364.i373.4
  %.3..i374.5 = select i1 %.not76.i371.5, ptr %.3..i374.4, ptr %444
  %445 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.4, ptr align 1 %.171.i376.4) #15
  %446 = icmp eq i8 %445, 1
  %.sroa.speculated40.i375.5 = select i1 %446, ptr %.169.i377.4, ptr %.171.i376.4
  call void %5(ptr align 1 %351, ptr align 1 %.sroa.speculated40.i375.5) #15
  %447 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.5, i64 %332
  %.171.i376.5 = select i1 %446, ptr %.171.i376.4, ptr %447
  %.169.i377.5 = select i1 %446, ptr %447, ptr %.169.i377.4
  %448 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.5, ptr align 1 %..364.i373.5) #15
  %.not76.i371.6 = icmp eq i8 %448, 1
  %.sroa.speculated.i372.6 = select i1 %.not76.i371.6, ptr %..364.i373.5, ptr %.3..i374.5
  call void %5(ptr align 1 %.167.i370.6, ptr align 1 %.sroa.speculated.i372.6) #15
  %449 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.5, ptr align 1 %.171.i376.5) #15
  %450 = icmp eq i8 %449, 1
  %.sroa.speculated40.i375.6 = select i1 %450, ptr %.169.i377.5, ptr %.171.i376.5
  call void %5(ptr align 1 %352, ptr align 1 %.sroa.speculated40.i375.6) #15
  %451 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.6, i64 %332
  %.171.i376.6 = select i1 %450, ptr %.171.i376.5, ptr %451
  %.169.i377.6 = select i1 %450, ptr %451, ptr %.169.i377.5
  %452 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.6, ptr align 1 %.171.i376.6) #15
  %453 = icmp eq i8 %452, 1
  %.sroa.speculated46.i380 = select i1 %453, ptr %.169.i377.6, ptr %.171.i376.6
  call void %5(ptr align 1 %353, ptr align 1 %.sroa.speculated46.i380) #15
  %454 = getelementptr inbounds i8, ptr %.5492, i64 %338
  call void %6(ptr align 1 %3, i64 32) #15
  %455 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %334) #15
  %.not.i384 = icmp eq i8 %455, 1
  %.sroa.speculated21.i385 = select i1 %.not.i384, ptr %334, ptr %15
  call void %5(ptr align 1 %.5492, ptr nonnull align 1 %.sroa.speculated21.i385) #15
  %456 = getelementptr inbounds i8, ptr %.sroa.speculated21.i385, i64 %4
  %.0..i386 = select i1 %.not.i384, ptr %15, ptr %456
  %..061.i387 = select i1 %.not.i384, ptr %456, ptr %334
  br label %.cont.i404

.cont.i404:                                       ; preds = %select.end893, %.critedge69
  %lsr.iv862 = phi i64 [ %lsr.iv.next863, %select.end893 ], [ 15, %.critedge69 ]
  %lsr.iv860 = phi ptr [ %uglygep861, %select.end893 ], [ %lsr.iv858, %.critedge69 ]
  %.385.i388 = phi ptr [ %.3..i399, %select.end893 ], [ %.0..i386, %.critedge69 ]
  %.36484.i389 = phi ptr [ %..364.i398, %select.end893 ], [ %..061.i387, %.critedge69 ]
  %.06882.i391 = phi ptr [ %.169.i402, %select.end893 ], [ %336, %.critedge69 ]
  %.07081.i392 = phi ptr [ %.171.i401, %select.end893 ], [ %337, %.critedge69 ]
  %.07280.i393 = phi ptr [ %464, %select.end893 ], [ %454, %.critedge69 ]
  %457 = call i8 %2(ptr align 1 %3, ptr align 1 %.385.i388, ptr align 1 %.36484.i389) #15
  %.sroa.speculated.i397.frozen = freeze i8 %457
  %.not76.i396 = icmp eq i8 %.sroa.speculated.i397.frozen, 1
  br i1 %.not76.i396, label %select.end, label %select.false

select.false:                                     ; preds = %.cont.i404
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont.i404
  %.sroa.speculated.i397 = phi ptr [ %.36484.i389, %.cont.i404 ], [ %.385.i388, %select.false ]
  %..364.i398.frozen = freeze i8 %457
  %458 = icmp eq i8 %..364.i398.frozen, 1
  call void %5(ptr align 1 %lsr.iv860, ptr align 1 %.sroa.speculated.i397) #15
  %459 = getelementptr inbounds i8, ptr %.sroa.speculated.i397, i64 %4
  br i1 %458, label %select.end889, label %select.false890

select.false890:                                  ; preds = %select.end
  br label %select.end889

select.end889:                                    ; preds = %select.false890, %select.end
  %..364.i398 = phi ptr [ %459, %select.end ], [ %.36484.i389, %select.false890 ]
  %.3..i399 = phi ptr [ %.385.i388, %select.end ], [ %459, %select.false890 ]
  %460 = call i8 %2(ptr align 1 %3, ptr align 1 %.06882.i391, ptr align 1 %.07081.i392) #15
  %.sroa.speculated40.i400.frozen = freeze i8 %460
  %461 = icmp eq i8 %.sroa.speculated40.i400.frozen, 1
  br i1 %461, label %select.end891, label %select.false892

select.false892:                                  ; preds = %select.end889
  br label %select.end891

select.end891:                                    ; preds = %select.false892, %select.end889
  %.sroa.speculated40.i400 = phi ptr [ %.06882.i391, %select.end889 ], [ %.07081.i392, %select.false892 ]
  %.171.i401.frozen = freeze i8 %460
  %462 = icmp eq i8 %.171.i401.frozen, 1
  call void %5(ptr align 1 %.07280.i393, ptr align 1 %.sroa.speculated40.i400) #15
  %463 = getelementptr inbounds i8, ptr %.sroa.speculated40.i400, i64 %332
  br i1 %462, label %select.end893, label %select.false894

select.false894:                                  ; preds = %select.end891
  br label %select.end893

select.end893:                                    ; preds = %select.false894, %select.end891
  %.171.i401 = phi ptr [ %.07081.i392, %select.end891 ], [ %463, %select.false894 ]
  %.169.i402 = phi ptr [ %463, %select.end891 ], [ %.06882.i391, %select.false894 ]
  %464 = getelementptr inbounds i8, ptr %.07280.i393, i64 %332
  %uglygep861 = getelementptr i8, ptr %lsr.iv860, i64 %4
  %lsr.iv.next863 = add nsw i64 %lsr.iv862, -1
  %exitcond.not.i403 = icmp eq i64 %lsr.iv.next863, 0
  br i1 %exitcond.not.i403, label %sort.parity_merge__anon_16476.exit406, label %.cont.i404

sort.parity_merge__anon_16476.exit406:            ; preds = %select.end893
  %465 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i402, ptr align 1 %.171.i401) #15
  %466 = icmp eq i8 %465, 1
  %.sroa.speculated46.i405 = select i1 %466, ptr %.169.i402, ptr %.171.i401
  call void %5(ptr align 1 %464, ptr align 1 %.sroa.speculated46.i405) #15
  br label %361

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %467 = mul nuw i64 %359, %4
  %468 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %467
  %469 = ptrtoint ptr %468 to i64
  %470 = ptrtoint ptr %.5.lcssa to i64
  %471 = shl nuw i64 %4, 3
  %472 = add nuw i64 %471, %470
  %473 = icmp ult i64 %472, %469
  br i1 %473, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.lr.ph.i
  %474 = ptrtoint ptr %.5.lcssa to i64
  %475 = shl nuw i64 %4, 4
  %476 = add i64 %474, %475
  %477 = add i64 %474, %471
  br label %499

.loopexit.i:                                      ; preds = %507, %503, %.preheader.lr.ph.i
  %478 = icmp ugt i64 %359, 16
  br i1 %478, label %.preheader.i.1, label %common.ret

.preheader.i.1:                                   ; preds = %.loopexit.i
  %479 = ptrtoint ptr %.5.lcssa to i64
  %480 = ptrtoint ptr %468 to i64
  %481 = shl nuw i64 %4, 4
  %482 = add nuw i64 %481, %479
  %483 = icmp ult i64 %482, %480
  br i1 %483, label %.lr.ph.i.1, label %common.ret

.lr.ph.i.1:                                       ; preds = %.preheader.i.1
  %484 = ptrtoint ptr %.5.lcssa to i64
  %485 = shl nuw i64 %4, 5
  %486 = add i64 %484, %485
  %487 = add i64 %484, %481
  br label %488

488:                                              ; preds = %495, %.lr.ph.i.1
  %lsr.iv = phi i64 [ %lsr.iv.next, %495 ], [ 0, %.lr.ph.i.1 ]
  %489 = ptrtoint ptr %468 to i64
  %uglygep852 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %490 = add i64 %486, %lsr.iv
  %491 = icmp ult i64 %490, %489
  br i1 %491, label %495, label %492

492:                                              ; preds = %488
  %493 = sub i64 %467, %lsr.iv
  %494 = udiv i64 %493, %4
  %uglygep = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep, i64 %494, ptr nonnull align 1 %15, i64 32, i64 16, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6)
  br label %common.ret

495:                                              ; preds = %488
  %496 = ptrtoint ptr %468 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep852, i64 32, ptr nonnull align 1 %15, i64 32, i64 16, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6)
  %lsr.iv.next = add i64 %lsr.iv, %485
  %497 = add i64 %487, %lsr.iv.next
  %498 = icmp ult i64 %497, %496
  br i1 %498, label %488, label %common.ret

499:                                              ; preds = %503, %.lr.ph.i
  %lsr.iv853 = phi i64 [ %lsr.iv.next854, %503 ], [ 0, %.lr.ph.i ]
  %500 = ptrtoint ptr %468 to i64
  %uglygep856 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv853
  %501 = add i64 %476, %lsr.iv853
  %502 = icmp ult i64 %501, %500
  br i1 %502, label %503, label %507

503:                                              ; preds = %499
  %504 = ptrtoint ptr %468 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep856, i64 16, ptr nonnull align 1 %15, i64 32, i64 8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6)
  %lsr.iv.next854 = add i64 %lsr.iv853, %475
  %505 = add i64 %477, %lsr.iv.next854
  %506 = icmp ult i64 %505, %504
  br i1 %506, label %499, label %.loopexit.i

507:                                              ; preds = %499
  %508 = sub i64 %467, %lsr.iv853
  %509 = udiv i64 %508, %4
  %uglygep855 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv853
  call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep855, i64 %509, ptr nonnull align 1 %15, i64 32, i64 8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr nonnull readonly align 4 %6)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = mul i64 %6, %1
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = icmp ugt i64 %1, 127
  %13 = icmp ugt i64 %3, 127
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %9
  %15 = shl i64 %6, 1
  %16 = mul i64 %6, 3
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16481.exit22, %.preheader.lr.ph
  %.030 = phi i64 [ 128, %.preheader.lr.ph ], [ %119, %sort.tail_merge__anon_16481.exit22 ]
  %17 = ptrtoint ptr %0 to i64
  %18 = lshr i64 %.030, 2
  %19 = lshr exact i64 %.030, 1
  %20 = mul i64 %18, %6
  %21 = mul nuw i64 %19, %6
  %22 = shl nuw i64 %21, 1
  %23 = getelementptr inbounds i8, ptr %2, i64 %21
  %24 = mul i64 %.030, %6
  %uglygep15 = getelementptr i8, ptr %0, i64 %20
  %25 = add nsw i64 %18, -1
  %26 = mul i64 %6, %25
  %uglygep17 = getelementptr i8, ptr %0, i64 %26
  %27 = mul i64 %15, %18
  %uglygep19 = getelementptr i8, ptr %0, i64 %27
  %28 = shl nuw nsw i64 %18, 1
  %29 = add nsw i64 %28, -1
  %30 = mul i64 %6, %29
  %uglygep21 = getelementptr i8, ptr %0, i64 %30
  %31 = mul i64 %16, %18
  %uglygep23 = getelementptr i8, ptr %0, i64 %31
  %32 = mul nuw i64 %18, 3
  %33 = add i64 %32, -1
  %34 = mul i64 %6, %33
  %uglygep25 = getelementptr i8, ptr %0, i64 %34
  %35 = add i64 %17, %24
  br label %65

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16481.exit22, %9
  %.0.lcssa = phi i64 [ 128, %9 ], [ %119, %sort.tail_merge__anon_16481.exit22 ]
  %36 = lshr exact i64 %.0.lcssa, 2
  %37 = icmp ult i64 %36, %1
  %38 = icmp ule i64 %36, %3
  %39 = select i1 %37, i1 %38, i1 false
  br i1 %39, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16481.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ %36, %.preheader.lr.ph.i ], [ %45, %.loopexit.i ]
  %40 = ptrtoint ptr %0 to i64
  %41 = ptrtoint ptr %11 to i64
  %42 = mul nuw i64 %.022.i, %6
  %43 = add nuw i64 %42, %40
  %44 = icmp ult i64 %43, %41
  %45 = shl nuw i64 %.022.i, 1
  br i1 %44, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %46 = ptrtoint ptr %0 to i64
  %47 = mul nuw i64 %45, %6
  %48 = add i64 %46, %47
  %49 = add i64 %46, %42
  br label %53

.loopexit.i:                                      ; preds = %61, %57, %.preheader.i
  %50 = icmp ult i64 %45, %1
  %51 = icmp ule i64 %45, %3
  %52 = select i1 %50, i1 %51, i1 false
  br i1 %52, label %.preheader.i, label %sort.tail_merge__anon_16481.exit

53:                                               ; preds = %57, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %57 ], [ 0, %.lr.ph.i ]
  %54 = ptrtoint ptr %11 to i64
  %uglygep10 = getelementptr i8, ptr %0, i64 %lsr.iv
  %55 = add i64 %48, %lsr.iv
  %56 = icmp ult i64 %55, %54
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = ptrtoint ptr %11 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep10, i64 %45, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  %lsr.iv.next = add i64 %lsr.iv, %47
  %59 = add i64 %49, %lsr.iv.next
  %60 = icmp ult i64 %59, %58
  br i1 %60, label %53, label %.loopexit.i

61:                                               ; preds = %53
  %62 = sub i64 %10, %lsr.iv
  %63 = udiv i64 %62, %6
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep, i64 %63, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  br label %.loopexit.i

sort.tail_merge__anon_16481.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %64 = lshr exact i64 %.0.lcssa, 1
  ret i64 %64

65:                                               ; preds = %sort.quad_merge_block__anon_16482.exit, %.preheader
  %lsr.iv29 = phi i64 [ %17, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16482.exit ]
  %lsr.iv27 = phi i64 [ %10, %.preheader ], [ %lsr.iv.next28, %sort.quad_merge_block__anon_16482.exit ]
  %lsr.iv11 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next12, %sort.quad_merge_block__anon_16482.exit ]
  %.013 = phi ptr [ %82, %sort.quad_merge_block__anon_16482.exit ], [ %0, %.preheader ]
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv11
  %uglygep16 = getelementptr i8, ptr %uglygep15, i64 %lsr.iv11
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv11
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv11
  tail call void %8(ptr align 1 %5, i64 2) #15
  %uglygep18 = getelementptr i8, ptr %uglygep17, i64 %lsr.iv11
  %66 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep18, ptr nonnull align 1 %uglygep16) #15
  %67 = icmp ne i8 %66, 1
  %68 = zext i1 %67 to i2
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv11
  %69 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep26, ptr nonnull align 1 %uglygep24) #15
  %.not.i = icmp eq i8 %69, 1
  %70 = select i1 %.not.i, i2 0, i2 -2
  %71 = or i2 %70, %68
  %72 = zext i2 %71 to i32
  switch i32 %72, label %74 [
    i32 0, label %75
    i32 1, label %76
    i32 2, label %77
    i32 3, label %78
  ]

73:                                               ; preds = %80, %77, %76, %75
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %uglygep13, ptr nonnull align 1 %2, i64 %19, i64 %19, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quad_merge_block__anon_16482.exit

74:                                               ; preds = %65
  unreachable

75:                                               ; preds = %65
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %18, i64 %18, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %18, i64 %18, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  br label %73

76:                                               ; preds = %65
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %21, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %18, i64 %18, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  br label %73

77:                                               ; preds = %65
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %18, i64 %18, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %23, ptr nonnull align 1 %uglygep20, i64 %21, i1 false)
  br label %73

78:                                               ; preds = %65
  tail call void %8(ptr align 1 %5, i64 1) #15
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv11
  %79 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep22, ptr nonnull align 1 %uglygep20) #15
  %.not6.i = icmp eq i8 %79, 1
  br i1 %.not6.i, label %80, label %sort.quad_merge_block__anon_16482.exit

80:                                               ; preds = %78
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %22, i1 false)
  br label %73

sort.quad_merge_block__anon_16482.exit:           ; preds = %78, %73
  %81 = ptrtoint ptr %11 to i64
  %82 = getelementptr inbounds i8, ptr %.013, i64 %24
  %lsr.iv.next12 = add i64 %lsr.iv11, %24
  %lsr.iv.next28 = sub i64 %lsr.iv27, %24
  %83 = add i64 %35, %lsr.iv.next12
  %84 = icmp ugt i64 %83, %81
  %lsr.iv.next30 = add i64 %lsr.iv29, %24
  br i1 %84, label %85, label %65

85:                                               ; preds = %sort.quad_merge_block__anon_16482.exit
  %86 = udiv i64 %lsr.iv.next28, %6
  %87 = icmp ult i64 %18, %86
  %88 = icmp ule i64 %18, %3
  %89 = select i1 %87, i1 %88, i1 false
  %uglygep14 = getelementptr i8, ptr %0, i64 %lsr.iv.next12
  br i1 %89, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16481.exit22

.preheader.lr.ph.i16:                             ; preds = %85
  %90 = ptrtoint ptr %0 to i64
  %91 = mul nuw i64 %86, %6
  %92 = getelementptr inbounds i8, ptr %82, i64 %91
  %93 = add i64 %90, %lsr.iv.next12
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i20, %.preheader.lr.ph.i16
  %.022.i17 = phi i64 [ %18, %.preheader.lr.ph.i16 ], [ %98, %.loopexit.i20 ]
  %94 = ptrtoint ptr %92 to i64
  %95 = mul nuw i64 %.022.i17, %6
  %96 = add i64 %93, %95
  %97 = icmp ult i64 %96, %94
  %98 = shl nuw i64 %.022.i17, 1
  br i1 %97, label %.lr.ph.i19, label %.loopexit.i20

.lr.ph.i19:                                       ; preds = %.preheader.i18
  %99 = mul nuw i64 %98, %6
  %100 = add i64 %lsr.iv.next30, %99
  %101 = add nuw i64 %lsr.iv.next30, %95
  br label %105

.loopexit.i20:                                    ; preds = %114, %109, %.preheader.i18
  %102 = icmp ult i64 %98, %86
  %103 = icmp ule i64 %98, %3
  %104 = select i1 %102, i1 %103, i1 false
  br i1 %104, label %.preheader.i18, label %sort.tail_merge__anon_16481.exit22

105:                                              ; preds = %109, %.lr.ph.i19
  %lsr.iv31 = phi i64 [ %lsr.iv.next32, %109 ], [ 0, %.lr.ph.i19 ]
  %.01421.i21 = phi ptr [ %uglygep14, %.lr.ph.i19 ], [ %111, %109 ]
  %106 = ptrtoint ptr %92 to i64
  %uglygep34 = getelementptr i8, ptr %82, i64 %lsr.iv31
  %107 = add i64 %100, %lsr.iv31
  %108 = icmp ult i64 %107, %106
  br i1 %108, label %109, label %114

109:                                              ; preds = %105
  %110 = ptrtoint ptr %92 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep34, i64 %98, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  %111 = getelementptr inbounds i8, ptr %.01421.i21, i64 %99
  %lsr.iv.next32 = add i64 %lsr.iv31, %99
  %112 = add i64 %101, %lsr.iv.next32
  %113 = icmp ult i64 %112, %110
  br i1 %113, label %105, label %.loopexit.i20

114:                                              ; preds = %105
  %115 = ptrtoint ptr %92 to i64
  %116 = ptrtoint ptr %.01421.i21 to i64
  %117 = sub nuw i64 %115, %116
  %118 = udiv i64 %117, %6
  %uglygep33 = getelementptr i8, ptr %82, i64 %lsr.iv31
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %uglygep33, i64 %118, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  br label %.loopexit.i20

sort.tail_merge__anon_16481.exit22:               ; preds = %.loopexit.i20, %85
  %119 = shl nuw i64 %.030, 2
  %120 = icmp ule i64 %119, %1
  %121 = icmp ule i64 %119, %3
  %122 = select i1 %120, i1 %121, i1 false
  br i1 %122, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = mul i64 %7, %1
  %12 = getelementptr inbounds i8, ptr %0, i64 %11
  %13 = shl nuw i64 %4, 1
  %14 = icmp uge i64 %13, %1
  %15 = sub i64 %1, %4
  %16 = icmp ule i64 %15, %3
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %19, label %.preheader21

.preheader21:                                     ; preds = %10
  %18 = icmp ugt i64 %1, %4
  br i1 %18, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader21
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader21
  ret void

19:                                               ; preds = %10
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.01727 = phi i64 [ %4, %.preheader.lr.ph ], [ %25, %.loopexit ]
  %20 = ptrtoint ptr %0 to i64
  %21 = ptrtoint ptr %12 to i64
  %22 = mul nuw i64 %.01727, %7
  %23 = add nuw i64 %22, %20
  %24 = icmp ult i64 %23, %21
  %25 = shl nuw i64 %.01727, 1
  br i1 %24, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %26 = ptrtoint ptr %0 to i64
  %27 = mul nuw i64 %25, %7
  %28 = add i64 %26, %27
  %29 = add i64 %26, %22
  br label %31

.loopexit:                                        ; preds = %39, %35, %.preheader
  %30 = icmp ult i64 %25, %1
  br i1 %30, label %.preheader, label %common.ret

31:                                               ; preds = %35, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %35 ]
  %32 = ptrtoint ptr %12 to i64
  %uglygep34 = getelementptr i8, ptr %0, i64 %lsr.iv
  %33 = add i64 %28, %lsr.iv
  %34 = icmp ult i64 %33, %32
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = ptrtoint ptr %12 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16484(ptr nonnull align 1 %uglygep34, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %.01727, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  %lsr.iv.next = add i64 %lsr.iv, %27
  %37 = add i64 %29, %lsr.iv.next
  %38 = icmp ult i64 %37, %36
  br i1 %38, label %31, label %.loopexit

39:                                               ; preds = %31
  %40 = sub i64 %11, %lsr.iv
  %41 = udiv i64 %40, %7
  %42 = sub nuw i64 %41, %.01727
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16484(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %42, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14837(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4, i64 %5, ptr nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = alloca [49152 x i8], align 16
  %9 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, i64 512, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %4)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %8, i64 512, i64 %9, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %5, ptr nonnull readonly align 4 %6, ptr nonnull readonly align 4 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 16
  %9 = icmp ult i64 %1, 8
  br i1 %9, label %10, label %318

common.ret:                                       ; preds = %342, %sort.tiny_sort__anon_16485.exit
  ret void

10:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  switch i64 %1, label %11 [
    i64 2, label %12
    i64 3, label %18
    i64 4, label %35
    i64 5, label %75
    i64 6, label %135
    i64 7, label %213
    i64 1, label %sort.tiny_sort__anon_16485.exit
    i64 0, label %sort.tiny_sort__anon_16485.exit
  ]

11:                                               ; preds = %10
  unreachable

12:                                               ; preds = %10
  %13 = getelementptr inbounds i8, ptr %0, i64 %5
  %14 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  %..i = select i1 %15, i64 %5, i64 0
  %16 = select i1 %15, ptr %0, ptr %13
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %16) #15
  %17 = getelementptr inbounds i8, ptr %0, i64 %..i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %17) #15
  call void %6(ptr nonnull align 1 %13, ptr nonnull align 1 %8) #15
  br label %sort.tiny_sort__anon_16485.exit

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8, ptr %0, i64 %5
  %20 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %19) #15
  %21 = icmp eq i8 %20, 1
  %.1.i = select i1 %21, i64 %5, i64 0
  %22 = select i1 %21, ptr %0, ptr %19
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %22) #15
  %23 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %23) #15
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %8) #15
  %24 = getelementptr inbounds i8, ptr %19, i64 %5
  %25 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %19, ptr nonnull align 1 %24) #15
  %26 = icmp eq i8 %25, 1
  %27 = select i1 %26, i64 %5, i64 0
  %28 = select i1 %26, ptr %19, ptr %24
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %28) #15
  %29 = getelementptr inbounds i8, ptr %19, i64 %27
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %29) #15
  call void %6(ptr nonnull align 1 %24, ptr nonnull align 1 %8) #15
  %30 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %19) #15
  %31 = icmp eq i8 %30, 1
  %32 = select i1 %31, i64 %5, i64 0
  %33 = select i1 %31, ptr %0, ptr %19
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %33) #15
  %34 = getelementptr inbounds i8, ptr %0, i64 %32
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %34) #15
  call void %6(ptr nonnull align 1 %19, ptr nonnull align 1 %8) #15
  br label %sort.tiny_sort__anon_16485.exit

35:                                               ; preds = %10
  %36 = getelementptr inbounds i8, ptr %0, i64 %5
  %37 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %36) #15
  %38 = icmp eq i8 %37, 1
  %..i.i = select i1 %38, i64 %5, i64 0
  %39 = select i1 %38, ptr %0, ptr %36
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %39) #15
  %40 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %40) #15
  call void %6(ptr nonnull align 1 %36, ptr nonnull align 1 %8) #15
  %41 = shl nuw i64 %5, 1
  %42 = getelementptr inbounds i8, ptr %0, i64 %41
  %43 = getelementptr inbounds i8, ptr %42, i64 %5
  %44 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #15
  %45 = icmp eq i8 %44, 1
  %46 = select i1 %45, i64 %5, i64 0
  %47 = select i1 %45, ptr %42, ptr %43
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %47) #15
  %48 = getelementptr inbounds i8, ptr %42, i64 %46
  call void %6(ptr nonnull align 1 %42, ptr nonnull align 1 %48) #15
  call void %6(ptr nonnull align 1 %43, ptr nonnull align 1 %8) #15
  %49 = sub i64 0, %5
  %50 = getelementptr inbounds i8, ptr %42, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 %5
  %52 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %50, ptr nonnull align 1 %51) #15
  %53 = icmp eq i8 %52, 1
  br i1 %53, label %54, label %sort.tiny_sort__anon_16485.exit

54:                                               ; preds = %35
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %50) #15
  call void %6(ptr nonnull align 1 %50, ptr nonnull align 1 %51) #15
  call void %6(ptr nonnull align 1 %51, ptr nonnull align 1 %8) #15
  %55 = getelementptr inbounds i8, ptr %50, i64 %49
  %56 = getelementptr inbounds i8, ptr %55, i64 %5
  %57 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %55, ptr nonnull align 1 %56) #15
  %58 = icmp eq i8 %57, 1
  %.1.i.i = select i1 %58, i64 %5, i64 0
  %59 = select i1 %58, ptr %55, ptr %56
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %59) #15
  %60 = getelementptr inbounds i8, ptr %55, i64 %.1.i.i
  call void %6(ptr nonnull align 1 %55, ptr nonnull align 1 %60) #15
  call void %6(ptr nonnull align 1 %56, ptr nonnull align 1 %8) #15
  %61 = getelementptr inbounds i8, ptr %55, i64 %41
  %62 = getelementptr inbounds i8, ptr %61, i64 %5
  %63 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %61, ptr nonnull align 1 %62) #15
  %64 = icmp eq i8 %63, 1
  %65 = select i1 %64, i64 %5, i64 0
  %66 = select i1 %64, ptr %61, ptr %62
  call void %6(ptr nonnull align 1 %8, ptr align 1 %66) #15
  %67 = getelementptr inbounds i8, ptr %61, i64 %65
  call void %6(ptr nonnull align 1 %61, ptr nonnull align 1 %67) #15
  call void %6(ptr nonnull align 1 %62, ptr nonnull align 1 %8) #15
  %68 = getelementptr inbounds i8, ptr %61, i64 %49
  %69 = getelementptr inbounds i8, ptr %68, i64 %5
  %70 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %68, ptr align 1 %69) #15
  %71 = icmp eq i8 %70, 1
  %72 = select i1 %71, i64 %5, i64 0
  %73 = select i1 %71, ptr %68, ptr %69
  call void %6(ptr nonnull align 1 %8, ptr align 1 %73) #15
  %74 = getelementptr inbounds i8, ptr %68, i64 %72
  call void %6(ptr nonnull align 1 %68, ptr align 1 %74) #15
  call void %6(ptr align 1 %69, ptr nonnull align 1 %8) #15
  br label %sort.tiny_sort__anon_16485.exit

75:                                               ; preds = %10
  %76 = getelementptr inbounds i8, ptr %0, i64 %5
  %77 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #15
  %78 = icmp eq i8 %77, 1
  %..i9.i = select i1 %78, i64 %5, i64 0
  %79 = select i1 %78, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %79) #15
  %80 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %80) #15
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #15
  %81 = shl nuw i64 %5, 1
  %82 = getelementptr inbounds i8, ptr %0, i64 %81
  %83 = getelementptr inbounds i8, ptr %82, i64 %5
  %84 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #15
  %85 = icmp eq i8 %84, 1
  %86 = select i1 %85, i64 %5, i64 0
  %87 = select i1 %85, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %87) #15
  %88 = getelementptr inbounds i8, ptr %82, i64 %86
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %88) #15
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #15
  %89 = sub i64 0, %5
  %90 = getelementptr inbounds i8, ptr %82, i64 %89
  %91 = getelementptr inbounds i8, ptr %90, i64 %5
  %92 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %90, ptr nonnull align 1 %91) #15
  %93 = icmp eq i8 %92, 1
  %94 = select i1 %93, i64 %5, i64 0
  %95 = select i1 %93, ptr %90, ptr %91
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %95) #15
  %96 = getelementptr inbounds i8, ptr %90, i64 %94
  call void %6(ptr nonnull align 1 %90, ptr nonnull align 1 %96) #15
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %8) #15
  %97 = zext i1 %93 to i8
  %98 = getelementptr inbounds i8, ptr %90, i64 %81
  %99 = getelementptr inbounds i8, ptr %98, i64 %5
  %100 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %98, ptr nonnull align 1 %99) #15
  %101 = icmp eq i8 %100, 1
  %102 = select i1 %101, i64 %5, i64 0
  %103 = select i1 %101, ptr %98, ptr %99
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %103) #15
  %104 = getelementptr inbounds i8, ptr %98, i64 %102
  call void %6(ptr nonnull align 1 %98, ptr nonnull align 1 %104) #15
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %8) #15
  %.neg.i.i = sext i1 %101 to i8
  %.not.i.i = icmp eq i8 %97, %.neg.i.i
  br i1 %.not.i.i, label %sort.tiny_sort__anon_16485.exit, label %105

105:                                              ; preds = %75
  %106 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #15
  %107 = icmp eq i8 %106, 1
  %.1.i10.i = select i1 %107, i64 %5, i64 0
  %108 = select i1 %107, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %108) #15
  %109 = getelementptr inbounds i8, ptr %0, i64 %.1.i10.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %109) #15
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #15
  %110 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #15
  %111 = icmp eq i8 %110, 1
  %112 = select i1 %111, i64 %5, i64 0
  %113 = select i1 %111, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %113) #15
  %114 = getelementptr inbounds i8, ptr %82, i64 %112
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %114) #15
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #15
  %115 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %90, ptr nonnull align 1 %91) #15
  %116 = icmp eq i8 %115, 1
  %117 = select i1 %116, i64 %5, i64 0
  %118 = select i1 %116, ptr %90, ptr %91
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %118) #15
  %119 = getelementptr inbounds i8, ptr %90, i64 %117
  call void %6(ptr nonnull align 1 %90, ptr nonnull align 1 %119) #15
  call void %6(ptr nonnull align 1 %91, ptr nonnull align 1 %8) #15
  %120 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %98, ptr nonnull align 1 %99) #15
  %121 = icmp eq i8 %120, 1
  %122 = select i1 %121, i64 %5, i64 0
  %123 = select i1 %121, ptr %98, ptr %99
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %123) #15
  %124 = getelementptr inbounds i8, ptr %98, i64 %122
  call void %6(ptr nonnull align 1 %98, ptr nonnull align 1 %124) #15
  call void %6(ptr nonnull align 1 %99, ptr nonnull align 1 %8) #15
  %125 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %76) #15
  %126 = icmp eq i8 %125, 1
  %127 = select i1 %126, i64 %5, i64 0
  %128 = select i1 %126, ptr %0, ptr %76
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %128) #15
  %129 = getelementptr inbounds i8, ptr %0, i64 %127
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %129) #15
  call void %6(ptr nonnull align 1 %76, ptr nonnull align 1 %8) #15
  %130 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %82, ptr nonnull align 1 %83) #15
  %131 = icmp eq i8 %130, 1
  %132 = select i1 %131, i64 %5, i64 0
  %133 = select i1 %131, ptr %82, ptr %83
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %133) #15
  %134 = getelementptr inbounds i8, ptr %82, i64 %132
  call void %6(ptr nonnull align 1 %82, ptr nonnull align 1 %134) #15
  call void %6(ptr nonnull align 1 %83, ptr nonnull align 1 %8) #15
  br label %sort.tiny_sort__anon_16485.exit

135:                                              ; preds = %10
  %136 = getelementptr inbounds i8, ptr %0, i64 %5
  %137 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %136) #15
  %138 = icmp eq i8 %137, 1
  %..i11.i = select i1 %138, i64 %5, i64 0
  %139 = select i1 %138, ptr %0, ptr %136
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %139) #15
  %140 = getelementptr inbounds i8, ptr %0, i64 %..i11.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %140) #15
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %8) #15
  %141 = getelementptr inbounds i8, ptr %136, i64 %5
  %142 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %136, ptr nonnull align 1 %141) #15
  %143 = icmp eq i8 %142, 1
  %144 = select i1 %143, i64 %5, i64 0
  %145 = select i1 %143, ptr %136, ptr %141
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %145) #15
  %146 = getelementptr inbounds i8, ptr %136, i64 %144
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %146) #15
  call void %6(ptr nonnull align 1 %141, ptr nonnull align 1 %8) #15
  %147 = mul nuw i64 %5, 3
  %148 = getelementptr inbounds i8, ptr %136, i64 %147
  %149 = getelementptr inbounds i8, ptr %148, i64 %5
  %150 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %148, ptr nonnull align 1 %149) #15
  %151 = icmp eq i8 %150, 1
  %152 = select i1 %151, i64 %5, i64 0
  %153 = select i1 %151, ptr %148, ptr %149
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %153) #15
  %154 = getelementptr inbounds i8, ptr %148, i64 %152
  call void %6(ptr nonnull align 1 %148, ptr nonnull align 1 %154) #15
  call void %6(ptr nonnull align 1 %149, ptr nonnull align 1 %8) #15
  %155 = sub i64 0, %5
  %156 = getelementptr inbounds i8, ptr %148, i64 %155
  %157 = getelementptr inbounds i8, ptr %156, i64 %5
  %158 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %156, ptr nonnull align 1 %157) #15
  %159 = icmp eq i8 %158, 1
  %160 = select i1 %159, i64 %5, i64 0
  %161 = select i1 %159, ptr %156, ptr %157
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %161) #15
  %162 = getelementptr inbounds i8, ptr %156, i64 %160
  call void %6(ptr nonnull align 1 %156, ptr nonnull align 1 %162) #15
  call void %6(ptr nonnull align 1 %157, ptr nonnull align 1 %8) #15
  %163 = shl nuw i64 %5, 1
  %164 = getelementptr inbounds i8, ptr %0, i64 %163
  %165 = getelementptr inbounds i8, ptr %0, i64 %147
  %166 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %164, ptr nonnull align 1 %165) #15
  %.not.i12.i = icmp eq i8 %166, 1
  %167 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %136) #15
  %.not113.i.i = icmp eq i8 %167, 1
  %.2.i.i = select i1 %.not113.i.i, i64 %5, i64 0
  br i1 %.not.i12.i, label %.cont96.i.i, label %168

168:                                              ; preds = %135
  %169 = icmp eq i8 %167, 1
  %170 = select i1 %169, ptr %0, ptr %136
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %170) #15
  %171 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %171) #15
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %8) #15
  %172 = shl nuw i64 %5, 2
  %173 = getelementptr inbounds i8, ptr %0, i64 %172
  %174 = getelementptr inbounds i8, ptr %173, i64 %5
  %175 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %173, ptr nonnull align 1 %174) #15
  %176 = icmp eq i8 %175, 1
  %177 = select i1 %176, i64 %5, i64 0
  %178 = select i1 %176, ptr %173, ptr %174
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %178) #15
  %179 = getelementptr inbounds i8, ptr %173, i64 %177
  call void %6(ptr nonnull align 1 %173, ptr nonnull align 1 %179) #15
  call void %6(ptr nonnull align 1 %174, ptr nonnull align 1 %8) #15
  br label %sort.tiny_sort__anon_16485.exit

.cont96.i.i:                                      ; preds = %135
  %180 = icmp eq i8 %167, 1
  %.3.i.i = select i1 %180, i64 0, i64 %5
  %181 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %181) #15
  %182 = getelementptr inbounds i8, ptr %2, i64 %5
  %183 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  call void %6(ptr nonnull align 1 %182, ptr nonnull align 1 %183) #15
  %184 = getelementptr inbounds i8, ptr %2, i64 %163
  call void %6(ptr nonnull align 1 %184, ptr nonnull align 1 %164) #15
  %185 = shl nuw i64 %5, 2
  %186 = getelementptr inbounds i8, ptr %0, i64 %185
  %187 = getelementptr inbounds i8, ptr %186, i64 %5
  %188 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %186, ptr nonnull align 1 %187) #15
  %.not114.i.i = icmp eq i8 %188, 1
  %.4.i.i = select i1 %.not114.i.i, i64 %5, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 %5
  %189 = getelementptr inbounds i8, ptr %2, i64 %185
  %190 = getelementptr inbounds i8, ptr %186, i64 %.4.i.i
  call void %6(ptr nonnull align 1 %189, ptr nonnull align 1 %190) #15
  %191 = mul nuw i64 %5, 5
  %192 = getelementptr inbounds i8, ptr %2, i64 %191
  %193 = getelementptr inbounds i8, ptr %186, i64 %.5.i.i
  call void %6(ptr nonnull align 1 %192, ptr nonnull align 1 %193) #15
  %194 = getelementptr inbounds i8, ptr %2, i64 %147
  %195 = getelementptr inbounds i8, ptr %186, i64 %155
  call void %6(ptr nonnull align 1 %194, ptr nonnull align 1 %195) #15
  %196 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %194) #15
  %.not115.i.i = icmp eq i8 %196, 1
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %194, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated92.i.i) #15
  %197 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 %5
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %197
  %.119.i.i = select i1 %.not115.i.i, ptr %197, ptr %194
  %198 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.118.i.i, ptr nonnull align 1 %.119.i.i) #15
  %.not116.i.i = icmp eq i8 %198, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  call void %6(ptr nonnull align 1 %136, ptr nonnull align 1 %.sroa.speculated83.i.i) #15
  %199 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 %5
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %199
  %.1106.i.i = select i1 %.not116.i.i, ptr %199, ptr %.119.i.i
  %200 = call i8 %3(ptr align 1 %4, ptr align 1 %.1110.i.i, ptr align 1 %.1106.i.i) #15
  %.not117.i.i = icmp eq i8 %200, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  call void %6(ptr nonnull align 1 %141, ptr align 1 %.sroa.speculated74.i.i) #15
  %201 = getelementptr inbounds i8, ptr %0, i64 %191
  %202 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %184, ptr nonnull align 1 %192) #15
  %203 = icmp eq i8 %202, 1
  %.sroa.speculated65.i.i = select i1 %203, ptr %184, ptr %192
  call void %6(ptr nonnull align 1 %201, ptr nonnull align 1 %.sroa.speculated65.i.i) #15
  %204 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 %155
  %.2111.i.i = select i1 %203, ptr %204, ptr %184
  %.2107.i.i = select i1 %203, ptr %192, ptr %204
  %205 = getelementptr inbounds i8, ptr %201, i64 %155
  %206 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2111.i.i, ptr nonnull align 1 %.2107.i.i) #15
  %207 = icmp eq i8 %206, 1
  %.sroa.speculated.i.i = select i1 %207, ptr %.2111.i.i, ptr %.2107.i.i
  call void %6(ptr nonnull align 1 %205, ptr nonnull align 1 %.sroa.speculated.i.i) #15
  %208 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 %155
  %.3112.i.i = select i1 %207, ptr %208, ptr %.2111.i.i
  %.3108.i.i = select i1 %207, ptr %.2107.i.i, ptr %208
  %209 = getelementptr inbounds i8, ptr %205, i64 %155
  %210 = call i8 %3(ptr align 1 %4, ptr align 1 %.3112.i.i, ptr align 1 %.3108.i.i) #15
  %211 = icmp eq i8 %210, 1
  %212 = select i1 %211, ptr %.3112.i.i, ptr %.3108.i.i
  call void %6(ptr nonnull align 1 %209, ptr align 1 %212) #15
  br label %sort.tiny_sort__anon_16485.exit

213:                                              ; preds = %10
  %214 = getelementptr inbounds i8, ptr %0, i64 %5
  %215 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %214) #15
  %216 = icmp eq i8 %215, 1
  %..i13.i = select i1 %216, i64 %5, i64 0
  %217 = select i1 %216, ptr %0, ptr %214
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %217) #15
  %218 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %218) #15
  call void %6(ptr nonnull align 1 %214, ptr nonnull align 1 %8) #15
  %219 = shl nuw i64 %5, 1
  %220 = getelementptr inbounds i8, ptr %0, i64 %219
  %221 = getelementptr inbounds i8, ptr %220, i64 %5
  %222 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %220, ptr nonnull align 1 %221) #15
  %223 = icmp eq i8 %222, 1
  %224 = select i1 %223, i64 %5, i64 0
  %225 = select i1 %223, ptr %220, ptr %221
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %225) #15
  %226 = getelementptr inbounds i8, ptr %220, i64 %224
  call void %6(ptr nonnull align 1 %220, ptr nonnull align 1 %226) #15
  call void %6(ptr nonnull align 1 %221, ptr nonnull align 1 %8) #15
  %227 = getelementptr inbounds i8, ptr %220, i64 %219
  %228 = getelementptr inbounds i8, ptr %227, i64 %5
  %229 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %227, ptr nonnull align 1 %228) #15
  %230 = icmp eq i8 %229, 1
  %231 = select i1 %230, i64 %5, i64 0
  %232 = select i1 %230, ptr %227, ptr %228
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %232) #15
  %233 = getelementptr inbounds i8, ptr %227, i64 %231
  call void %6(ptr nonnull align 1 %227, ptr nonnull align 1 %233) #15
  call void %6(ptr nonnull align 1 %228, ptr nonnull align 1 %8) #15
  %234 = mul nuw i64 %5, 3
  %235 = sub i64 0, %234
  %236 = getelementptr inbounds i8, ptr %227, i64 %235
  %237 = getelementptr inbounds i8, ptr %236, i64 %5
  %238 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %236, ptr nonnull align 1 %237) #15
  %239 = icmp eq i8 %238, 1
  %240 = select i1 %239, i64 %5, i64 0
  %241 = select i1 %239, ptr %236, ptr %237
  call void %6(ptr nonnull align 1 %8, ptr nonnull align 1 %241) #15
  %242 = getelementptr inbounds i8, ptr %236, i64 %240
  call void %6(ptr nonnull align 1 %236, ptr nonnull align 1 %242) #15
  call void %6(ptr nonnull align 1 %237, ptr nonnull align 1 %8) #15
  %243 = zext i1 %239 to i8
  %244 = getelementptr inbounds i8, ptr %236, i64 %219
  %245 = getelementptr inbounds i8, ptr %244, i64 %5
  %246 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %244, ptr nonnull align 1 %245) #15
  %247 = icmp eq i8 %246, 1
  %248 = select i1 %247, i64 %5, i64 0
  %249 = select i1 %247, ptr %244, ptr %245
  call void %6(ptr nonnull align 1 %8, ptr align 1 %249) #15
  %250 = getelementptr inbounds i8, ptr %244, i64 %248
  call void %6(ptr nonnull align 1 %244, ptr nonnull align 1 %250) #15
  call void %6(ptr nonnull align 1 %245, ptr nonnull align 1 %8) #15
  %251 = zext i1 %247 to i8
  %252 = add nuw nsw i8 %251, %243
  %253 = getelementptr inbounds i8, ptr %244, i64 %219
  %254 = getelementptr inbounds i8, ptr %253, i64 %5
  %255 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %253, ptr align 1 %254) #15
  %256 = icmp eq i8 %255, 1
  %257 = select i1 %256, i64 %5, i64 0
  %258 = select i1 %256, ptr %253, ptr %254
  call void %6(ptr nonnull align 1 %8, ptr align 1 %258) #15
  %259 = getelementptr inbounds i8, ptr %253, i64 %257
  call void %6(ptr nonnull align 1 %253, ptr align 1 %259) #15
  call void %6(ptr align 1 %254, ptr nonnull align 1 %8) #15
  %.neg.i14.i = sext i1 %256 to i8
  %260 = icmp eq i8 %252, %.neg.i14.i
  br i1 %260, label %sort.tiny_sort__anon_16485.exit, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %213
  %261 = sub i64 0, %5
  %262 = getelementptr inbounds i8, ptr %253, i64 %261
  %263 = getelementptr inbounds i8, ptr %262, i64 %5
  %264 = call i8 %3(ptr align 1 %4, ptr align 1 %262, ptr align 1 %263) #15
  %265 = icmp eq i8 %264, 1
  %.1.i15.i = select i1 %265, i64 %5, i64 0
  %266 = select i1 %265, ptr %262, ptr %263
  call void %6(ptr nonnull align 1 %8, ptr align 1 %266) #15
  %267 = getelementptr inbounds i8, ptr %262, i64 %.1.i15.i
  call void %6(ptr align 1 %262, ptr align 1 %267) #15
  call void %6(ptr align 1 %263, ptr nonnull align 1 %8) #15
  %268 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %0, ptr nonnull align 1 %214) #15
  %.not.i16.i = icmp eq i8 %268, 1
  %269 = select i1 %.not.i16.i, i64 %5, i64 0
  %270 = select i1 %.not.i16.i, i64 0, i64 %5
  %271 = getelementptr inbounds i8, ptr %0, i64 %269
  call void %6(ptr nonnull align 1 %2, ptr nonnull align 1 %271) #15
  %272 = getelementptr inbounds i8, ptr %2, i64 %5
  %273 = getelementptr inbounds i8, ptr %0, i64 %270
  call void %6(ptr nonnull align 1 %272, ptr nonnull align 1 %273) #15
  %274 = getelementptr inbounds i8, ptr %2, i64 %219
  call void %6(ptr nonnull align 1 %274, ptr nonnull align 1 %220) #15
  %275 = getelementptr inbounds i8, ptr %0, i64 %234
  %276 = getelementptr inbounds i8, ptr %275, i64 %5
  %277 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %275, ptr nonnull align 1 %276) #15
  %.not127.i.i = icmp eq i8 %277, 1
  %278 = select i1 %.not127.i.i, i64 %5, i64 0
  %279 = select i1 %.not127.i.i, i64 0, i64 %5
  %280 = getelementptr inbounds i8, ptr %2, i64 %234
  %281 = getelementptr inbounds i8, ptr %275, i64 %278
  call void %6(ptr nonnull align 1 %280, ptr nonnull align 1 %281) #15
  %282 = shl nuw i64 %5, 2
  %283 = getelementptr inbounds i8, ptr %2, i64 %282
  %284 = getelementptr inbounds i8, ptr %275, i64 %279
  call void %6(ptr nonnull align 1 %283, ptr nonnull align 1 %284) #15
  %285 = getelementptr inbounds i8, ptr %275, i64 %219
  %286 = getelementptr inbounds i8, ptr %285, i64 %5
  %287 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %285, ptr nonnull align 1 %286) #15
  %.not128.i.i = icmp eq i8 %287, 1
  %288 = select i1 %.not128.i.i, i64 %5, i64 0
  %289 = select i1 %.not128.i.i, i64 0, i64 %5
  %290 = mul nuw i64 %5, 5
  %291 = getelementptr inbounds i8, ptr %2, i64 %290
  %292 = getelementptr inbounds i8, ptr %285, i64 %288
  call void %6(ptr nonnull align 1 %291, ptr nonnull align 1 %292) #15
  %293 = mul nuw i64 %5, 6
  %294 = getelementptr inbounds i8, ptr %2, i64 %293
  %295 = getelementptr inbounds i8, ptr %285, i64 %289
  call void %6(ptr nonnull align 1 %294, ptr nonnull align 1 %295) #15
  %296 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %2, ptr nonnull align 1 %280) #15
  %.not129.i.i = icmp eq i8 %296, 1
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %280, ptr %2
  call void %6(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated106.i.i) #15
  %297 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 %5
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %297
  %.133.i.i = select i1 %.not129.i.i, ptr %297, ptr %280
  %298 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.132.i.i, ptr nonnull align 1 %.133.i.i) #15
  %.not130.i.i = icmp eq i8 %298, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  call void %6(ptr nonnull align 1 %214, ptr nonnull align 1 %.sroa.speculated97.i.i) #15
  %299 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 %5
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %299
  %.1121.i.i = select i1 %.not130.i.i, ptr %299, ptr %.133.i.i
  %300 = getelementptr inbounds i8, ptr %214, i64 %5
  %301 = call i8 %3(ptr align 1 %4, ptr align 1 %.1123.i.i, ptr align 1 %.1121.i.i) #15
  %.not131.i.i = icmp eq i8 %301, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  call void %6(ptr nonnull align 1 %300, ptr align 1 %.sroa.speculated88.i.i) #15
  %302 = getelementptr inbounds i8, ptr %0, i64 %293
  %303 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %274, ptr nonnull align 1 %294) #15
  %304 = icmp eq i8 %303, 1
  %.sroa.speculated79.i.i = select i1 %304, ptr %274, ptr %294
  call void %6(ptr nonnull align 1 %302, ptr nonnull align 1 %.sroa.speculated79.i.i) #15
  %305 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 %261
  %.2124.i.i = select i1 %304, ptr %305, ptr %274
  %.2.i17.i = select i1 %304, ptr %294, ptr %305
  %306 = getelementptr inbounds i8, ptr %302, i64 %261
  %307 = call i8 %3(ptr align 1 %4, ptr nonnull align 1 %.2124.i.i, ptr nonnull align 1 %.2.i17.i) #15
  %308 = icmp eq i8 %307, 1
  %.sroa.speculated70.i.i = select i1 %308, ptr %.2124.i.i, ptr %.2.i17.i
  call void %6(ptr nonnull align 1 %306, ptr nonnull align 1 %.sroa.speculated70.i.i) #15
  %309 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 %261
  %.3125.i.i = select i1 %308, ptr %309, ptr %.2124.i.i
  %.3.i18.i = select i1 %308, ptr %.2.i17.i, ptr %309
  %310 = getelementptr inbounds i8, ptr %306, i64 %261
  %311 = call i8 %3(ptr align 1 %4, ptr align 1 %.3125.i.i, ptr align 1 %.3.i18.i) #15
  %312 = icmp eq i8 %311, 1
  %.sroa.speculated.i19.i = select i1 %312, ptr %.3125.i.i, ptr %.3.i18.i
  call void %6(ptr nonnull align 1 %310, ptr align 1 %.sroa.speculated.i19.i) #15
  %313 = getelementptr inbounds i8, ptr %.sroa.speculated.i19.i, i64 %261
  %.4126.i.i = select i1 %312, ptr %313, ptr %.3125.i.i
  %.4.i20.i = select i1 %312, ptr %.3.i18.i, ptr %313
  %314 = getelementptr inbounds i8, ptr %310, i64 %261
  %315 = call i8 %3(ptr align 1 %4, ptr align 1 %.4126.i.i, ptr align 1 %.4.i20.i) #15
  %316 = icmp eq i8 %315, 1
  %317 = select i1 %316, ptr %.4126.i.i, ptr %.4.i20.i
  call void %6(ptr nonnull align 1 %314, ptr align 1 %317) #15
  br label %sort.tiny_sort__anon_16485.exit

sort.tiny_sort__anon_16485.exit:                  ; preds = %.cont110.i.i, %213, %.cont96.i.i, %168, %105, %75, %54, %35, %18, %12, %10, %10
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  br label %common.ret

318:                                              ; preds = %7
  %319 = lshr i64 %1, 1
  %320 = lshr i64 %1, 2
  %321 = sub nuw nsw i64 %319, %320
  %322 = sub nuw i64 %1, %319
  %323 = lshr i64 %322, 1
  %324 = sub nuw i64 %322, %323
  tail call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %320, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  %325 = mul nuw i64 %320, %5
  %326 = getelementptr inbounds i8, ptr %0, i64 %325
  tail call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %326, i64 %321, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  %327 = mul nuw i64 %321, %5
  %328 = getelementptr inbounds i8, ptr %326, i64 %327
  tail call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %328, i64 %323, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  %329 = mul nuw i64 %323, %5
  %330 = getelementptr inbounds i8, ptr %328, i64 %329
  tail call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %330, i64 %324, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  %331 = add nsw i64 %320, -1
  %332 = mul nuw i64 %331, %5
  %333 = getelementptr inbounds i8, ptr %0, i64 %332
  %334 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %333, ptr nonnull align 1 %326) #15
  %.not = icmp eq i8 %334, 1
  br i1 %.not, label %..critedge_crit_edge, label %335

..critedge_crit_edge:                             ; preds = %318
  %.pre = mul nuw i64 %319, %5
  br label %.critedge

335:                                              ; preds = %318
  %336 = add nsw i64 %319, -1
  %337 = mul nuw i64 %336, %5
  %338 = getelementptr inbounds i8, ptr %0, i64 %337
  %339 = mul nuw i64 %319, %5
  %340 = getelementptr inbounds i8, ptr %0, i64 %339
  %341 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %338, ptr nonnull align 1 %340) #15
  %.not11 = icmp eq i8 %341, 1
  br i1 %.not11, label %.critedge, label %342

342:                                              ; preds = %335
  %343 = sub i64 0, %5
  %344 = getelementptr inbounds i8, ptr %330, i64 %343
  %345 = tail call i8 %3(ptr align 1 %4, ptr nonnull align 1 %344, ptr nonnull align 1 %330) #15
  %.not12 = icmp eq i8 %345, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %342, %335, %..critedge_crit_edge
  %.pre-phi = phi i64 [ %.pre, %..critedge_crit_edge ], [ %339, %335 ], [ %339, %342 ]
  tail call fastcc void @sort.parity_merge__anon_16486(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %320, i64 %321, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  %346 = getelementptr inbounds i8, ptr %2, i64 %.pre-phi
  %347 = getelementptr inbounds i8, ptr %0, i64 %.pre-phi
  tail call fastcc void @sort.parity_merge__anon_16486(ptr nonnull align 1 %346, ptr nonnull align 1 %347, i64 %323, i64 %324, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  tail call fastcc void @sort.parity_merge__anon_16486(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %319, i64 %322, ptr nonnull readonly align 4 %3, ptr align 1 %4, i64 %5, ptr nonnull readonly align 4 %6)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5) unnamed_addr #4 {
  %7 = alloca [96 x i8], align 16
  %8 = alloca [96 x i8], align 16
  %9 = alloca [96 x i8], align 16
  %10 = alloca [96 x i8], align 16
  %11 = alloca [96 x i8], align 16
  %12 = alloca [96 x i8], align 16
  %13 = alloca [96 x i8], align 16
  %14 = alloca [3072 x i8], align 16
  %.not485 = icmp ult i64 %1, 8
  br i1 %.not485, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %6
  %15 = lshr i64 %1, 3
  %16 = shl nuw i64 %4, 1
  %17 = mul nuw i64 %4, 3
  %18 = shl nuw i64 %4, 2
  %19 = mul nuw i64 %4, 5
  %20 = mul nuw i64 %4, 6
  %21 = mul nuw i64 %4, 7
  %22 = shl nuw i64 %4, 3
  %23 = sub i64 0, %4
  %24 = sub i64 0, %22
  br label %25

25:                                               ; preds = %53, %.lr.ph
  %.1488 = phi ptr [ %0, %.lr.ph ], [ %54, %53 ]
  %.0279487 = phi ptr [ %0, %.lr.ph ], [ %.1280, %53 ]
  %.0284486 = phi i64 [ %15, %.lr.ph ], [ %.1285, %53 ]
  %26 = add i64 %.0284486, -1
  %27 = getelementptr inbounds i8, ptr %.1488, i64 %4
  %28 = call i8 %2(ptr align 1 %3, ptr align 1 %.1488, ptr align 1 %27) #15
  %29 = icmp eq i8 %28, 1
  %30 = zext i1 %29 to i4
  %31 = getelementptr inbounds i8, ptr %.1488, i64 %16
  %32 = getelementptr inbounds i8, ptr %.1488, i64 %17
  %33 = call i8 %2(ptr align 1 %3, ptr align 1 %31, ptr align 1 %32) #15
  %34 = icmp eq i8 %33, 1
  %35 = zext i1 %34 to i4
  %36 = getelementptr inbounds i8, ptr %.1488, i64 %18
  %37 = getelementptr inbounds i8, ptr %.1488, i64 %19
  %38 = call i8 %2(ptr align 1 %3, ptr align 1 %36, ptr align 1 %37) #15
  %39 = icmp eq i8 %38, 1
  %40 = zext i1 %39 to i4
  %41 = getelementptr inbounds i8, ptr %.1488, i64 %20
  %42 = getelementptr inbounds i8, ptr %.1488, i64 %21
  %43 = call i8 %2(ptr align 1 %3, ptr align 1 %41, ptr align 1 %42) #15
  %44 = icmp eq i8 %43, 1
  %45 = zext i1 %44 to i4
  %46 = select i1 %34, i4 2, i4 0
  %47 = select i1 %39, i4 4, i4 0
  %48 = select i1 %44, i4 -8, i4 0
  %49 = or i4 %46, %47
  %50 = or i4 %49, %48
  %51 = or i4 %50, %30
  %52 = zext i4 %51 to i32
  switch i32 %52, label %.outer.preheader [
    i32 0, label %55
    i32 15, label %61
  ]

.sink.split:                                      ; preds = %249, %244, %.critedge37, %138, %136, %125, %72, %59, %57, %55
  %.sink597 = phi ptr [ %93, %72 ], [ %.1488, %57 ], [ %.1488, %55 ], [ %.1488, %59 ], [ %239, %244 ], [ %239, %.critedge37 ], [ %239, %249 ], [ %95, %136 ], [ %95, %125 ], [ %95, %138 ]
  %.1285.ph = phi i64 [ %.2286, %72 ], [ %26, %57 ], [ %26, %55 ], [ %26, %59 ], [ %143, %244 ], [ %143, %.critedge37 ], [ %143, %249 ], [ %97, %136 ], [ %97, %125 ], [ %97, %138 ]
  %.1280.ph = phi ptr [ %.3282.ph55, %72 ], [ %.0279487, %57 ], [ %.0279487, %55 ], [ %.0279487, %59 ], [ %.3282.ph55, %244 ], [ %.3282.ph55, %.critedge37 ], [ %.3282.ph55, %249 ], [ %.3282.ph55, %136 ], [ %.3282.ph55, %125 ], [ %.3282.ph55, %138 ]
  call fastcc void @sort.quad_swap_merge__anon_16478(ptr nonnull align 1 %.sink597, ptr nonnull align 1 %14, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  br label %53

53:                                               ; preds = %249, %.sink.split
  %.sink = phi ptr [ %.sink597, %.sink.split ], [ %239, %249 ]
  %.1285 = phi i64 [ %.1285.ph, %.sink.split ], [ %143, %249 ]
  %.1280 = phi ptr [ %.1280.ph, %.sink.split ], [ %.3282.ph55, %249 ]
  %54 = getelementptr inbounds i8, ptr %.sink, i64 %22
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %25

55:                                               ; preds = %25
  %56 = call i8 %2(ptr align 1 %3, ptr align 1 %27, ptr align 1 %31) #15
  %.not328 = icmp eq i8 %56, 1
  br i1 %.not328, label %.sink.split, label %57

57:                                               ; preds = %55
  %58 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %36) #15
  %.not329 = icmp eq i8 %58, 1
  br i1 %.not329, label %.sink.split, label %59

59:                                               ; preds = %57
  %60 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %41) #15
  %.not330 = icmp eq i8 %60, 1
  br i1 %.not330, label %.sink.split, label %.outer.preheader

61:                                               ; preds = %25
  %62 = call i8 %2(ptr align 1 %3, ptr align 1 %27, ptr align 1 %31) #15
  %63 = icmp eq i8 %62, 1
  br i1 %63, label %64, label %.critedge4

64:                                               ; preds = %61
  %65 = call i8 %2(ptr align 1 %3, ptr align 1 %32, ptr align 1 %36) #15
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %.critedge4

67:                                               ; preds = %64
  %68 = call i8 %2(ptr align 1 %3, ptr align 1 %37, ptr align 1 %41) #15
  %69 = icmp eq i8 %68, 1
  br i1 %69, label %.outer.preheader, label %.critedge4

.critedge4:                                       ; preds = %67, %64, %61
  br label %.outer.preheader

.outer.preheader:                                 ; preds = %.critedge4, %67, %59, %25
  %.1299.ph54.ph = phi i2 [ -2, %.critedge4 ], [ -2, %25 ], [ 0, %59 ], [ 1, %67 ]
  %.3282.ph55.ph = phi ptr [ %.0279487, %.critedge4 ], [ %.0279487, %25 ], [ %.0279487, %59 ], [ %.1488, %67 ]
  br label %.outer

.outer:                                           ; preds = %218, %133, %.outer.preheader
  %.1299.ph54 = phi i2 [ %.1299.ph54.ph, %.outer.preheader ], [ 1, %218 ], [ 1, %133 ]
  %.0296.ph = phi i4 [ %45, %.outer.preheader ], [ %162, %218 ], [ %116, %133 ]
  %.0294.ph = phi i4 [ %40, %.outer.preheader ], [ %157, %218 ], [ %111, %133 ]
  %.0292.ph = phi i4 [ %35, %.outer.preheader ], [ %152, %218 ], [ %106, %133 ]
  %.0290.ph = phi i4 [ %30, %.outer.preheader ], [ %147, %218 ], [ %101, %133 ]
  %.2286.ph = phi i64 [ %26, %.outer.preheader ], [ %143, %218 ], [ %97, %133 ]
  %.3282.ph55 = phi ptr [ %.3282.ph55.ph, %.outer.preheader ], [ %141, %218 ], [ %95, %133 ]
  %.3.ph = phi ptr [ %.1488, %.outer.preheader ], [ %141, %218 ], [ %95, %133 ]
  br label %.backedge

.backedge:                                        ; preds = %210, %203, %138, %133, %130, %127, %120, %.outer
  %.1299 = phi i2 [ %.1299.ph54, %.outer ], [ 0, %138 ], [ 1, %203 ], [ 0, %210 ], [ -2, %130 ], [ -2, %120 ], [ -2, %127 ], [ -2, %133 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %116, %138 ], [ %162, %203 ], [ %162, %210 ], [ %116, %130 ], [ %116, %120 ], [ %116, %127 ], [ %116, %133 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %111, %138 ], [ %157, %203 ], [ %157, %210 ], [ %111, %130 ], [ %111, %120 ], [ %111, %127 ], [ %111, %133 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %106, %138 ], [ %152, %203 ], [ %152, %210 ], [ %106, %130 ], [ %106, %120 ], [ %106, %127 ], [ %106, %133 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %101, %138 ], [ %147, %203 ], [ %147, %210 ], [ %101, %130 ], [ %101, %120 ], [ %101, %127 ], [ %101, %133 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %97, %138 ], [ %143, %203 ], [ %143, %210 ], [ %97, %130 ], [ %97, %120 ], [ %97, %127 ], [ %97, %133 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %95, %138 ], [ %141, %203 ], [ %141, %210 ], [ %95, %130 ], [ %95, %120 ], [ %95, %127 ], [ %95, %133 ]
  %70 = zext i2 %.1299 to i32
  switch i32 %70, label %71 [
    i32 2, label %72
    i32 0, label %94
    i32 1, label %140
  ]

71:                                               ; preds = %.backedge
  unreachable

72:                                               ; preds = %.backedge
  %73 = icmp eq i4 %.0290, 0
  %. = select i1 %73, i64 %4, i64 0
  %.7 = select i1 %73, i64 0, i64 %4
  %74 = getelementptr inbounds i8, ptr %.3, i64 %.
  call void %5(ptr nonnull align 1 %13, ptr align 1 %74) #15
  %75 = getelementptr inbounds i8, ptr %.3, i64 %.7
  call void %5(ptr align 1 %.3, ptr align 1 %75) #15
  %76 = getelementptr inbounds i8, ptr %.3, i64 %4
  call void %5(ptr align 1 %76, ptr nonnull align 1 %13) #15
  %77 = getelementptr inbounds i8, ptr %.3, i64 %16
  %78 = icmp eq i4 %.0292, 0
  %.8 = select i1 %78, i64 %4, i64 0
  %.9 = select i1 %78, i64 0, i64 %4
  %79 = getelementptr inbounds i8, ptr %77, i64 %.8
  call void %5(ptr nonnull align 1 %13, ptr align 1 %79) #15
  %80 = getelementptr inbounds i8, ptr %77, i64 %.9
  call void %5(ptr align 1 %77, ptr align 1 %80) #15
  %81 = getelementptr inbounds i8, ptr %77, i64 %4
  call void %5(ptr align 1 %81, ptr nonnull align 1 %13) #15
  %82 = getelementptr inbounds i8, ptr %77, i64 %16
  %83 = icmp eq i4 %.0294, 0
  %.10 = select i1 %83, i64 %4, i64 0
  %.11 = select i1 %83, i64 0, i64 %4
  %84 = getelementptr inbounds i8, ptr %82, i64 %.10
  call void %5(ptr nonnull align 1 %13, ptr align 1 %84) #15
  %85 = getelementptr inbounds i8, ptr %82, i64 %.11
  call void %5(ptr align 1 %82, ptr align 1 %85) #15
  %86 = getelementptr inbounds i8, ptr %82, i64 %4
  call void %5(ptr align 1 %86, ptr nonnull align 1 %13) #15
  %87 = getelementptr inbounds i8, ptr %82, i64 %16
  %88 = icmp eq i4 %.0296, 0
  %.12 = select i1 %88, i64 %4, i64 0
  %.13 = select i1 %88, i64 0, i64 %4
  %89 = getelementptr inbounds i8, ptr %87, i64 %.12
  call void %5(ptr nonnull align 1 %13, ptr align 1 %89) #15
  %90 = getelementptr inbounds i8, ptr %87, i64 %.13
  call void %5(ptr align 1 %87, ptr align 1 %90) #15
  %91 = getelementptr inbounds i8, ptr %87, i64 %4
  call void %5(ptr align 1 %91, ptr nonnull align 1 %13) #15
  %92 = getelementptr inbounds i8, ptr %87, i64 %16
  %93 = getelementptr inbounds i8, ptr %92, i64 %24
  br label %.sink.split

94:                                               ; preds = %.backedge
  %95 = getelementptr inbounds i8, ptr %.3, i64 %22
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %96

96:                                               ; preds = %94
  %97 = add i64 %.2286, -1
  %98 = getelementptr inbounds i8, ptr %95, i64 %4
  %99 = call i8 %2(ptr align 1 %3, ptr align 1 %95, ptr align 1 %98) #15
  %100 = icmp eq i8 %99, 1
  %101 = zext i1 %100 to i4
  %102 = getelementptr inbounds i8, ptr %95, i64 %16
  %103 = getelementptr inbounds i8, ptr %95, i64 %17
  %104 = call i8 %2(ptr align 1 %3, ptr align 1 %102, ptr align 1 %103) #15
  %105 = icmp eq i8 %104, 1
  %106 = zext i1 %105 to i4
  %107 = getelementptr inbounds i8, ptr %95, i64 %18
  %108 = getelementptr inbounds i8, ptr %95, i64 %19
  %109 = call i8 %2(ptr align 1 %3, ptr align 1 %107, ptr align 1 %108) #15
  %110 = icmp eq i8 %109, 1
  %111 = zext i1 %110 to i4
  %112 = getelementptr inbounds i8, ptr %95, i64 %20
  %113 = getelementptr inbounds i8, ptr %95, i64 %21
  %114 = call i8 %2(ptr align 1 %3, ptr align 1 %112, ptr align 1 %113) #15
  %115 = icmp eq i8 %114, 1
  %116 = zext i1 %115 to i4
  %117 = or i4 %106, %101
  %118 = or i4 %117, %111
  %119 = or i4 %118, %116
  %.not320 = icmp eq i4 %119, 0
  br i1 %.not320, label %125, label %120

120:                                              ; preds = %96
  %121 = add nuw nsw i4 %106, %101
  %122 = add nuw nsw i4 %121, %111
  %123 = add nuw nsw i4 %122, %116
  %124 = icmp eq i4 %123, 4
  br i1 %124, label %127, label %.backedge

125:                                              ; preds = %96
  %126 = call i8 %2(ptr align 1 %3, ptr align 1 %98, ptr align 1 %102) #15
  %.not321 = icmp eq i8 %126, 1
  br i1 %.not321, label %.sink.split, label %136

127:                                              ; preds = %120
  %128 = call i8 %2(ptr align 1 %3, ptr align 1 %98, ptr align 1 %102) #15
  %129 = icmp eq i8 %128, 1
  br i1 %129, label %130, label %.backedge

130:                                              ; preds = %127
  %131 = call i8 %2(ptr align 1 %3, ptr align 1 %103, ptr align 1 %107) #15
  %132 = icmp eq i8 %131, 1
  br i1 %132, label %133, label %.backedge

133:                                              ; preds = %130
  %134 = call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %112) #15
  %135 = icmp eq i8 %134, 1
  br i1 %135, label %.outer, label %.backedge

136:                                              ; preds = %125
  %137 = call i8 %2(ptr align 1 %3, ptr align 1 %103, ptr align 1 %107) #15
  %.not322 = icmp eq i8 %137, 1
  br i1 %.not322, label %.sink.split, label %138

138:                                              ; preds = %136
  %139 = call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %112) #15
  %.not323 = icmp eq i8 %139, 1
  br i1 %.not323, label %.sink.split, label %.backedge

140:                                              ; preds = %.backedge
  %141 = getelementptr inbounds i8, ptr %.3, i64 %22
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %166, label %142

142:                                              ; preds = %140
  %143 = add i64 %.2286, -1
  %144 = getelementptr inbounds i8, ptr %141, i64 %4
  %145 = call i8 %2(ptr align 1 %3, ptr align 1 %141, ptr align 1 %144) #15
  %146 = icmp ne i8 %145, 1
  %147 = zext i1 %146 to i4
  %148 = getelementptr inbounds i8, ptr %141, i64 %16
  %149 = getelementptr inbounds i8, ptr %141, i64 %17
  %150 = call i8 %2(ptr align 1 %3, ptr align 1 %148, ptr align 1 %149) #15
  %151 = icmp ne i8 %150, 1
  %152 = zext i1 %151 to i4
  %153 = getelementptr inbounds i8, ptr %141, i64 %18
  %154 = getelementptr inbounds i8, ptr %141, i64 %19
  %155 = call i8 %2(ptr align 1 %3, ptr align 1 %153, ptr align 1 %154) #15
  %156 = icmp ne i8 %155, 1
  %157 = zext i1 %156 to i4
  %158 = getelementptr inbounds i8, ptr %141, i64 %20
  %159 = getelementptr inbounds i8, ptr %141, i64 %21
  %160 = call i8 %2(ptr align 1 %3, ptr align 1 %158, ptr align 1 %159) #15
  %161 = icmp ne i8 %160, 1
  %162 = zext i1 %161 to i4
  %163 = or i4 %152, %147
  %164 = or i4 %163, %157
  %165 = or i4 %164, %162
  %.not315 = icmp eq i4 %165, 0
  br i1 %.not315, label %193, label %.critedge25

166:                                              ; preds = %140
  %167 = and i64 %1, 7
  %168 = icmp eq i64 %167, 7
  br i1 %168, label %275, label %.critedge55

.critedge25:                                      ; preds = %203, %200, %197, %193, %142
  %169 = ptrtoint ptr %.3282.ph55 to i64
  %170 = getelementptr inbounds i8, ptr %141, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %171 = ptrtoint ptr %170 to i64
  %172 = sub nuw i64 %171, %169
  %173 = udiv i64 %172, %16
  %174 = mul nuw i64 %173, %4
  %175 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %174
  %176 = sub i64 0, %174
  %177 = getelementptr inbounds i8, ptr %170, i64 %176
  %178 = and i64 %173, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %181, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %181, %.critedge25
  %.027.i = phi ptr [ %183, %181 ], [ %177, %.critedge25 ]
  %.025.i = phi ptr [ %182, %181 ], [ %175, %.critedge25 ]
  %.0.i = phi i64 [ %184, %181 ], [ %173, %.critedge25 ]
  %180 = lshr i64 %.0.i, 1
  br label %185

181:                                              ; preds = %.critedge25
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %175) #15
  call void %5(ptr nonnull align 1 %175, ptr nonnull align 1 %177) #15
  %182 = getelementptr inbounds i8, ptr %175, i64 %23
  call void %5(ptr nonnull align 1 %177, ptr nonnull align 1 %7) #15
  %183 = getelementptr inbounds i8, ptr %177, i64 %4
  %184 = add i64 %173, -1
  br label %._crit_edge.i

185:                                              ; preds = %187, %._crit_edge.i
  %lsr.iv286 = phi i64 [ %lsr.iv.next287, %187 ], [ 0, %._crit_edge.i ]
  %lsr.iv283 = phi i64 [ %lsr.iv.next284, %187 ], [ 0, %._crit_edge.i ]
  %.1.i = phi i64 [ %180, %._crit_edge.i ], [ %188, %187 ]
  %uglygep285 = getelementptr i8, ptr %170, i64 %lsr.iv283
  %uglygep288 = getelementptr i8, ptr %.027.i, i64 %lsr.iv286
  %uglygep289 = getelementptr i8, ptr %.025.i, i64 %lsr.iv283
  %uglygep290 = getelementptr i8, ptr %.3282.ph55, i64 %lsr.iv286
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep290) #15
  call void %5(ptr align 1 %uglygep290, ptr align 1 %uglygep285) #15
  call void %5(ptr align 1 %uglygep285, ptr nonnull align 1 %8) #15
  call void %5(ptr nonnull align 1 %7, ptr align 1 %uglygep289) #15
  call void %5(ptr align 1 %uglygep289, ptr align 1 %uglygep288) #15
  call void %5(ptr align 1 %uglygep288, ptr nonnull align 1 %7) #15
  %186 = icmp eq i64 %.1.i, 0
  br i1 %186, label %sort.quad_reversal.exit, label %187

187:                                              ; preds = %185
  %188 = add nsw i64 %.1.i, -1
  %lsr.iv.next284 = sub i64 %lsr.iv283, %4
  %lsr.iv.next287 = add i64 %lsr.iv286, %4
  br label %185

sort.quad_reversal.exit:                          ; preds = %185
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %189 = add nuw nsw i4 %152, %147
  %190 = add nuw nsw i4 %189, %157
  %191 = add nuw i4 %190, %162
  %192 = zext i4 %191 to i32
  switch i32 %192, label %.critedge37 [
    i32 4, label %206
    i32 0, label %212
  ]

193:                                              ; preds = %142
  %194 = getelementptr inbounds i8, ptr %141, i64 %23
  %195 = call i8 %2(ptr align 1 %3, ptr align 1 %194, ptr align 1 %141) #15
  %196 = icmp eq i8 %195, 1
  br i1 %196, label %197, label %.critedge25

197:                                              ; preds = %193
  %198 = call i8 %2(ptr align 1 %3, ptr align 1 %144, ptr align 1 %148) #15
  %199 = icmp eq i8 %198, 1
  br i1 %199, label %200, label %.critedge25

200:                                              ; preds = %197
  %201 = call i8 %2(ptr align 1 %3, ptr align 1 %149, ptr align 1 %153) #15
  %202 = icmp eq i8 %201, 1
  br i1 %202, label %203, label %.critedge25

203:                                              ; preds = %200
  %204 = call i8 %2(ptr align 1 %3, ptr align 1 %154, ptr align 1 %158) #15
  %205 = icmp eq i8 %204, 1
  br i1 %205, label %.backedge, label %.critedge25

206:                                              ; preds = %sort.quad_reversal.exit
  %207 = call i8 %2(ptr align 1 %3, ptr align 1 %144, ptr align 1 %148) #15
  %.not316 = icmp eq i8 %207, 1
  br i1 %.not316, label %.critedge37, label %208

208:                                              ; preds = %206
  %209 = call i8 %2(ptr align 1 %3, ptr align 1 %149, ptr align 1 %153) #15
  %.not317 = icmp eq i8 %209, 1
  br i1 %.not317, label %.critedge37, label %210

210:                                              ; preds = %208
  %211 = call i8 %2(ptr align 1 %3, ptr align 1 %154, ptr align 1 %158) #15
  %.not318 = icmp eq i8 %211, 1
  br i1 %.not318, label %.critedge37, label %.backedge

212:                                              ; preds = %sort.quad_reversal.exit
  %213 = call i8 %2(ptr align 1 %3, ptr align 1 %144, ptr align 1 %148) #15
  %214 = icmp eq i8 %213, 1
  br i1 %214, label %215, label %.critedge37

215:                                              ; preds = %212
  %216 = call i8 %2(ptr align 1 %3, ptr align 1 %149, ptr align 1 %153) #15
  %217 = icmp eq i8 %216, 1
  br i1 %217, label %218, label %.critedge37

218:                                              ; preds = %215
  %219 = call i8 %2(ptr align 1 %3, ptr align 1 %154, ptr align 1 %158) #15
  %220 = icmp eq i8 %219, 1
  br i1 %220, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %218, %215, %212, %210, %208, %206, %sort.quad_reversal.exit
  %221 = icmp ne i8 %160, 1
  %222 = icmp ne i8 %155, 1
  %223 = icmp ne i8 %150, 1
  %224 = icmp ne i8 %145, 1
  %.42 = select i1 %224, i64 0, i64 %4
  %.43 = select i1 %224, i64 %4, i64 0
  %225 = getelementptr inbounds i8, ptr %141, i64 %.43
  call void %5(ptr nonnull align 1 %13, ptr align 1 %225) #15
  %226 = getelementptr inbounds i8, ptr %141, i64 %.42
  call void %5(ptr align 1 %141, ptr align 1 %226) #15
  call void %5(ptr align 1 %144, ptr nonnull align 1 %13) #15
  %.44 = select i1 %223, i64 0, i64 %4
  %.45 = select i1 %223, i64 %4, i64 0
  %227 = getelementptr inbounds i8, ptr %148, i64 %.45
  call void %5(ptr nonnull align 1 %13, ptr align 1 %227) #15
  %228 = getelementptr inbounds i8, ptr %148, i64 %.44
  call void %5(ptr align 1 %148, ptr align 1 %228) #15
  %229 = getelementptr inbounds i8, ptr %148, i64 %4
  call void %5(ptr align 1 %229, ptr nonnull align 1 %13) #15
  %230 = getelementptr inbounds i8, ptr %148, i64 %16
  %.46 = select i1 %222, i64 0, i64 %4
  %.47 = select i1 %222, i64 %4, i64 0
  %231 = getelementptr inbounds i8, ptr %230, i64 %.47
  call void %5(ptr nonnull align 1 %13, ptr align 1 %231) #15
  %232 = getelementptr inbounds i8, ptr %230, i64 %.46
  call void %5(ptr align 1 %230, ptr align 1 %232) #15
  %233 = getelementptr inbounds i8, ptr %230, i64 %4
  call void %5(ptr align 1 %233, ptr nonnull align 1 %13) #15
  %234 = getelementptr inbounds i8, ptr %230, i64 %16
  %.48 = select i1 %221, i64 0, i64 %4
  %.49 = select i1 %221, i64 %4, i64 0
  %235 = getelementptr inbounds i8, ptr %234, i64 %.49
  call void %5(ptr nonnull align 1 %13, ptr align 1 %235) #15
  %236 = getelementptr inbounds i8, ptr %234, i64 %.48
  call void %5(ptr align 1 %234, ptr align 1 %236) #15
  %237 = getelementptr inbounds i8, ptr %234, i64 %4
  call void %5(ptr align 1 %237, ptr nonnull align 1 %13) #15
  %238 = getelementptr inbounds i8, ptr %234, i64 %16
  %239 = getelementptr inbounds i8, ptr %238, i64 %24
  %240 = getelementptr inbounds i8, ptr %239, i64 %4
  %241 = getelementptr inbounds i8, ptr %239, i64 %16
  %242 = call i8 %2(ptr align 1 %3, ptr align 1 %240, ptr align 1 %241) #15
  %243 = icmp eq i8 %242, 1
  br i1 %243, label %.sink.split, label %244

244:                                              ; preds = %.critedge37
  %245 = getelementptr inbounds i8, ptr %239, i64 %17
  %246 = getelementptr inbounds i8, ptr %239, i64 %18
  %247 = call i8 %2(ptr align 1 %3, ptr align 1 %245, ptr align 1 %246) #15
  %248 = icmp eq i8 %247, 1
  br i1 %248, label %.sink.split, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds i8, ptr %239, i64 %19
  %251 = getelementptr inbounds i8, ptr %239, i64 %20
  %252 = call i8 %2(ptr align 1 %3, ptr align 1 %250, ptr align 1 %251) #15
  %253 = icmp eq i8 %252, 1
  br i1 %253, label %.sink.split, label %53

254:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %275
  %255 = getelementptr inbounds i8, ptr %141, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %256 = ptrtoint ptr %255 to i64
  %257 = ptrtoint ptr %.3282.ph55 to i64
  %258 = sub nuw i64 %256, %257
  %259 = udiv i64 %258, %16
  %260 = mul nuw i64 %259, %4
  %261 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %260
  %262 = sub i64 0, %260
  %263 = getelementptr inbounds i8, ptr %255, i64 %262
  %264 = and i64 %259, 1
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %267, label %._crit_edge.i332

._crit_edge.i332:                                 ; preds = %267, %254
  %.027.i334 = phi ptr [ %269, %267 ], [ %263, %254 ]
  %.025.i335 = phi ptr [ %268, %267 ], [ %261, %254 ]
  %.0.i336 = phi i64 [ %270, %267 ], [ %259, %254 ]
  %266 = lshr i64 %.0.i336, 1
  br label %271

267:                                              ; preds = %254
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %261) #15
  call void %5(ptr nonnull align 1 %261, ptr nonnull align 1 %263) #15
  %268 = getelementptr inbounds i8, ptr %261, i64 %23
  call void %5(ptr nonnull align 1 %263, ptr nonnull align 1 %7) #15
  %269 = getelementptr inbounds i8, ptr %263, i64 %4
  %270 = add i64 %259, -1
  br label %._crit_edge.i332

271:                                              ; preds = %273, %._crit_edge.i332
  %lsr.iv278 = phi i64 [ %lsr.iv.next279, %273 ], [ 0, %._crit_edge.i332 ]
  %lsr.iv275 = phi i64 [ %lsr.iv.next276, %273 ], [ 0, %._crit_edge.i332 ]
  %.1.i341 = phi i64 [ %266, %._crit_edge.i332 ], [ %274, %273 ]
  %uglygep277 = getelementptr i8, ptr %255, i64 %lsr.iv275
  %uglygep280 = getelementptr i8, ptr %.027.i334, i64 %lsr.iv278
  %uglygep281 = getelementptr i8, ptr %.025.i335, i64 %lsr.iv275
  %uglygep282 = getelementptr i8, ptr %.3282.ph55, i64 %lsr.iv278
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep282) #15
  call void %5(ptr align 1 %uglygep282, ptr align 1 %uglygep277) #15
  call void %5(ptr align 1 %uglygep277, ptr nonnull align 1 %8) #15
  call void %5(ptr nonnull align 1 %7, ptr align 1 %uglygep281) #15
  call void %5(ptr align 1 %uglygep281, ptr align 1 %uglygep280) #15
  call void %5(ptr align 1 %uglygep280, ptr nonnull align 1 %7) #15
  %272 = icmp eq i64 %.1.i341, 0
  br i1 %272, label %sort.quad_reversal.exit342, label %273

273:                                              ; preds = %271
  %274 = add nsw i64 %.1.i341, -1
  %lsr.iv.next276 = sub i64 %lsr.iv275, %4
  %lsr.iv.next279 = add i64 %lsr.iv278, %4
  br label %271

sort.quad_reversal.exit342:                       ; preds = %271
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  br label %.loopexit

275:                                              ; preds = %166
  %276 = getelementptr inbounds i8, ptr %141, i64 %19
  %277 = getelementptr inbounds i8, ptr %141, i64 %20
  %278 = call i8 %2(ptr align 1 %3, ptr align 1 %276, ptr align 1 %277) #15
  %.not314 = icmp eq i8 %278, 1
  br i1 %.not314, label %.critedge55.thread, label %254

.critedge55:                                      ; preds = %166
  %279 = icmp ugt i64 %167, 5
  br i1 %279, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %275
  %280 = getelementptr inbounds i8, ptr %141, i64 %18
  %281 = getelementptr inbounds i8, ptr %141, i64 %19
  %282 = call i8 %2(ptr align 1 %3, ptr align 1 %280, ptr align 1 %281) #15
  %.not313 = icmp eq i8 %282, 1
  br i1 %.not313, label %.critedge57.thread, label %254

.critedge57:                                      ; preds = %.critedge55
  %283 = icmp eq i64 %167, 5
  br i1 %283, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %284 = getelementptr inbounds i8, ptr %141, i64 %17
  %285 = getelementptr inbounds i8, ptr %141, i64 %18
  %286 = call i8 %2(ptr align 1 %3, ptr align 1 %284, ptr align 1 %285) #15
  %.not312 = icmp eq i8 %286, 1
  br i1 %.not312, label %.critedge59.thread, label %254

.critedge59:                                      ; preds = %.critedge57
  %287 = icmp ugt i64 %167, 3
  br i1 %287, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %288 = getelementptr inbounds i8, ptr %141, i64 %16
  %289 = getelementptr inbounds i8, ptr %141, i64 %17
  %290 = call i8 %2(ptr align 1 %3, ptr align 1 %288, ptr align 1 %289) #15
  %.not311 = icmp eq i8 %290, 1
  br i1 %.not311, label %.critedge61.thread, label %254

.critedge61:                                      ; preds = %.critedge59
  %291 = icmp eq i64 %167, 3
  br i1 %291, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %292 = getelementptr inbounds i8, ptr %141, i64 %4
  %293 = getelementptr inbounds i8, ptr %141, i64 %16
  %294 = call i8 %2(ptr align 1 %3, ptr align 1 %292, ptr align 1 %293) #15
  %.not310 = icmp eq i8 %294, 1
  br i1 %.not310, label %.critedge63.thread, label %254

.critedge63:                                      ; preds = %.critedge61
  %295 = icmp ugt i64 %167, 1
  br i1 %295, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %296 = getelementptr inbounds i8, ptr %141, i64 %4
  %297 = call i8 %2(ptr align 1 %3, ptr align 1 %141, ptr align 1 %296) #15
  %.not309 = icmp eq i8 %297, 1
  br i1 %.not309, label %.critedge65.thread, label %254

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %167, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %298 = getelementptr inbounds i8, ptr %141, i64 %23
  %299 = call i8 %2(ptr align 1 %3, ptr align 1 %298, ptr align 1 %141) #15
  %.not308 = icmp eq i8 %299, 1
  br i1 %.not308, label %.critedge67, label %254

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %300 = mul nuw i64 %167, %4
  %301 = getelementptr inbounds i8, ptr %141, i64 %300
  %302 = getelementptr inbounds i8, ptr %301, i64 %23
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %303 = ptrtoint ptr %302 to i64
  %304 = ptrtoint ptr %.3282.ph55 to i64
  %305 = sub nuw i64 %303, %304
  %306 = udiv i64 %305, %16
  %307 = mul nuw i64 %306, %4
  %308 = getelementptr inbounds i8, ptr %.3282.ph55, i64 %307
  %309 = sub i64 0, %307
  %310 = getelementptr inbounds i8, ptr %302, i64 %309
  %311 = and i64 %306, 1
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %314, label %._crit_edge.i344

._crit_edge.i344:                                 ; preds = %314, %.critedge67
  %.027.i346 = phi ptr [ %316, %314 ], [ %310, %.critedge67 ]
  %.025.i347 = phi ptr [ %315, %314 ], [ %308, %.critedge67 ]
  %.0.i348 = phi i64 [ %317, %314 ], [ %306, %.critedge67 ]
  %313 = lshr i64 %.0.i348, 1
  br label %318

314:                                              ; preds = %.critedge67
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %308) #15
  call void %5(ptr nonnull align 1 %308, ptr nonnull align 1 %310) #15
  %315 = getelementptr inbounds i8, ptr %308, i64 %23
  call void %5(ptr nonnull align 1 %310, ptr nonnull align 1 %7) #15
  %316 = getelementptr inbounds i8, ptr %310, i64 %4
  %317 = add i64 %306, -1
  br label %._crit_edge.i344

318:                                              ; preds = %320, %._crit_edge.i344
  %lsr.iv270 = phi i64 [ %lsr.iv.next271, %320 ], [ 0, %._crit_edge.i344 ]
  %lsr.iv267 = phi i64 [ %lsr.iv.next268, %320 ], [ 0, %._crit_edge.i344 ]
  %.1.i353 = phi i64 [ %313, %._crit_edge.i344 ], [ %321, %320 ]
  %uglygep269 = getelementptr i8, ptr %302, i64 %lsr.iv267
  %uglygep272 = getelementptr i8, ptr %.027.i346, i64 %lsr.iv270
  %uglygep273 = getelementptr i8, ptr %.025.i347, i64 %lsr.iv267
  %uglygep274 = getelementptr i8, ptr %.3282.ph55, i64 %lsr.iv270
  call void %5(ptr nonnull align 1 %8, ptr align 1 %uglygep274) #15
  call void %5(ptr align 1 %uglygep274, ptr align 1 %uglygep269) #15
  call void %5(ptr align 1 %uglygep269, ptr nonnull align 1 %8) #15
  call void %5(ptr nonnull align 1 %7, ptr align 1 %uglygep273) #15
  call void %5(ptr align 1 %uglygep273, ptr align 1 %uglygep272) #15
  call void %5(ptr align 1 %uglygep272, ptr nonnull align 1 %7) #15
  %319 = icmp eq i64 %.1.i353, 0
  br i1 %319, label %sort.quad_reversal.exit354, label %320

320:                                              ; preds = %318
  %321 = add nsw i64 %.1.i353, -1
  %lsr.iv.next268 = sub i64 %lsr.iv267, %4
  %lsr.iv.next271 = add i64 %lsr.iv270, %4
  br label %318

sort.quad_reversal.exit354:                       ; preds = %318
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %322 = icmp eq ptr %.3282.ph55, %0
  br i1 %322, label %common.ret, label %323

common.ret:                                       ; preds = %494, %491, %.preheader.i.1, %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit354
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit354 ], [ true, %._crit_edge ], [ true, %.loopexit.i ], [ true, %491 ], [ true, %.preheader.i.1 ], [ true, %494 ]
  ret i1 %common.ret.op

323:                                              ; preds = %.loopexit, %sort.quad_reversal.exit354
  %.not302490 = icmp ult i64 %1, 32
  br i1 %.not302490, label %._crit_edge, label %.lr.ph493

.lr.ph493:                                        ; preds = %323
  %324 = lshr i64 %1, 5
  %325 = mul nuw i64 %4, 7
  %326 = shl nuw i64 %4, 3
  %327 = mul nuw i64 %4, 15
  %328 = shl nuw i64 %4, 4
  %329 = mul nuw i64 %4, 23
  %330 = mul nuw i64 %4, 24
  %331 = sub i64 0, %4
  %332 = getelementptr inbounds i8, ptr %14, i64 %327
  %333 = getelementptr inbounds i8, ptr %14, i64 %328
  %334 = getelementptr inbounds i8, ptr %333, i64 %327
  %335 = getelementptr inbounds i8, ptr %333, i64 %331
  %336 = getelementptr inbounds i8, ptr %335, i64 %328
  %337 = mul nuw i64 %4, 31
  %338 = shl i64 %4, 5
  %.167.i = getelementptr inbounds i8, ptr %14, i64 %4
  %339 = getelementptr inbounds i8, ptr %332, i64 %331
  %.167.i.1 = getelementptr inbounds i8, ptr %.167.i, i64 %4
  %340 = getelementptr inbounds i8, ptr %339, i64 %331
  %.167.i.2 = getelementptr inbounds i8, ptr %.167.i.1, i64 %4
  %341 = getelementptr inbounds i8, ptr %340, i64 %331
  %.167.i.3 = getelementptr inbounds i8, ptr %.167.i.2, i64 %4
  %342 = getelementptr inbounds i8, ptr %341, i64 %331
  %.167.i.4 = getelementptr inbounds i8, ptr %.167.i.3, i64 %4
  %343 = getelementptr inbounds i8, ptr %342, i64 %331
  %.167.i.5 = getelementptr inbounds i8, ptr %.167.i.4, i64 %4
  %344 = getelementptr inbounds i8, ptr %343, i64 %331
  %.167.i.6 = getelementptr inbounds i8, ptr %.167.i.5, i64 %4
  %345 = getelementptr inbounds i8, ptr %344, i64 %331
  %.167.i370 = getelementptr inbounds i8, ptr %333, i64 %4
  %346 = getelementptr inbounds i8, ptr %334, i64 %331
  %.167.i370.1 = getelementptr inbounds i8, ptr %.167.i370, i64 %4
  %347 = getelementptr inbounds i8, ptr %346, i64 %331
  %.167.i370.2 = getelementptr inbounds i8, ptr %.167.i370.1, i64 %4
  %348 = getelementptr inbounds i8, ptr %347, i64 %331
  %.167.i370.3 = getelementptr inbounds i8, ptr %.167.i370.2, i64 %4
  %349 = getelementptr inbounds i8, ptr %348, i64 %331
  %.167.i370.4 = getelementptr inbounds i8, ptr %.167.i370.3, i64 %4
  %350 = getelementptr inbounds i8, ptr %349, i64 %331
  %.167.i370.5 = getelementptr inbounds i8, ptr %.167.i370.4, i64 %4
  %351 = getelementptr inbounds i8, ptr %350, i64 %331
  %.167.i370.6 = getelementptr inbounds i8, ptr %.167.i370.5, i64 %4
  %352 = getelementptr inbounds i8, ptr %351, i64 %331
  %uglygep260 = getelementptr i8, ptr %0, i64 %4
  br label %354

.loopexit:                                        ; preds = %sort.quad_reversal.exit342, %94, %53, %6
  %.0.ph = phi ptr [ %141, %sort.quad_reversal.exit342 ], [ %0, %6 ], [ %95, %94 ], [ %54, %53 ]
  %353 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %.0.ph, i64 %353, ptr nonnull align 1 %14, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  br label %323

354:                                              ; preds = %360, %.lr.ph493
  %lsr.iv261 = phi ptr [ %uglygep260, %.lr.ph493 ], [ %uglygep262, %360 ]
  %.5492 = phi ptr [ %0, %.lr.ph493 ], [ %362, %360 ]
  %.4288491 = phi i64 [ %324, %.lr.ph493 ], [ %361, %360 ]
  %355 = getelementptr inbounds i8, ptr %.5492, i64 %325
  %356 = getelementptr inbounds i8, ptr %.5492, i64 %326
  %357 = call i8 %2(ptr align 1 %3, ptr align 1 %355, ptr align 1 %356) #15
  %.not303 = icmp eq i8 %357, 1
  br i1 %.not303, label %.critedge69, label %363

._crit_edge:                                      ; preds = %360, %323
  %.5.lcssa = phi ptr [ %0, %323 ], [ %362, %360 ]
  %358 = and i64 %1, 31
  %359 = icmp ugt i64 %358, 8
  br i1 %359, label %.preheader.lr.ph.i, label %common.ret

360:                                              ; preds = %sort.parity_merge__anon_16486.exit406, %367
  %361 = add nsw i64 %.4288491, -1
  %362 = getelementptr inbounds i8, ptr %.5492, i64 %338
  %uglygep262 = getelementptr i8, ptr %lsr.iv261, i64 %338
  %.not302 = icmp eq i64 %361, 0
  br i1 %.not302, label %._crit_edge, label %354

363:                                              ; preds = %354
  %364 = getelementptr inbounds i8, ptr %.5492, i64 %327
  %365 = getelementptr inbounds i8, ptr %.5492, i64 %328
  %366 = call i8 %2(ptr align 1 %3, ptr align 1 %364, ptr align 1 %365) #15
  %.not304 = icmp eq i8 %366, 1
  br i1 %.not304, label %.critedge69, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds i8, ptr %.5492, i64 %329
  %369 = getelementptr inbounds i8, ptr %.5492, i64 %330
  %370 = call i8 %2(ptr align 1 %3, ptr align 1 %368, ptr align 1 %369) #15
  %.not305 = icmp eq i8 %370, 1
  br i1 %.not305, label %.critedge69, label %360

.critedge69:                                      ; preds = %367, %363, %354
  %371 = getelementptr inbounds i8, ptr %356, i64 %331
  %372 = getelementptr inbounds i8, ptr %371, i64 %326
  %373 = call i8 %2(ptr align 1 %3, ptr align 1 %.5492, ptr nonnull align 1 %356) #15
  %.not.i = icmp eq i8 %373, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %356, ptr %.5492
  call void %5(ptr nonnull align 1 %14, ptr align 1 %.sroa.speculated21.i) #15
  %374 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 %4
  %.0..i = select i1 %.not.i, ptr %.5492, ptr %374
  %..061.i = select i1 %.not.i, ptr %374, ptr %356
  %375 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i, ptr align 1 %..061.i) #15
  %.not76.i = icmp eq i8 %375, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  call void %5(ptr nonnull align 1 %.167.i, ptr align 1 %.sroa.speculated.i) #15
  %376 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %4
  %..364.i = select i1 %.not76.i, ptr %376, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %376
  %377 = call i8 %2(ptr align 1 %3, ptr align 1 %371, ptr align 1 %372) #15
  %378 = icmp eq i8 %377, 1
  %.sroa.speculated40.i = select i1 %378, ptr %371, ptr %372
  call void %5(ptr nonnull align 1 %332, ptr align 1 %.sroa.speculated40.i) #15
  %379 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 %331
  %.171.i = select i1 %378, ptr %372, ptr %379
  %.169.i = select i1 %378, ptr %379, ptr %371
  %380 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i, ptr align 1 %..364.i) #15
  %.not76.i.1 = icmp eq i8 %380, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  call void %5(ptr nonnull align 1 %.167.i.1, ptr align 1 %.sroa.speculated.i.1) #15
  %381 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %4
  %..364.i.1 = select i1 %.not76.i.1, ptr %381, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %381
  %382 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i, ptr align 1 %.171.i) #15
  %383 = icmp eq i8 %382, 1
  %.sroa.speculated40.i.1 = select i1 %383, ptr %.169.i, ptr %.171.i
  call void %5(ptr nonnull align 1 %339, ptr align 1 %.sroa.speculated40.i.1) #15
  %384 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 %331
  %.171.i.1 = select i1 %383, ptr %.171.i, ptr %384
  %.169.i.1 = select i1 %383, ptr %384, ptr %.169.i
  %385 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.1, ptr align 1 %..364.i.1) #15
  %.not76.i.2 = icmp eq i8 %385, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  call void %5(ptr nonnull align 1 %.167.i.2, ptr align 1 %.sroa.speculated.i.2) #15
  %386 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %4
  %..364.i.2 = select i1 %.not76.i.2, ptr %386, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %386
  %387 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.1, ptr align 1 %.171.i.1) #15
  %388 = icmp eq i8 %387, 1
  %.sroa.speculated40.i.2 = select i1 %388, ptr %.169.i.1, ptr %.171.i.1
  call void %5(ptr nonnull align 1 %340, ptr align 1 %.sroa.speculated40.i.2) #15
  %389 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 %331
  %.171.i.2 = select i1 %388, ptr %.171.i.1, ptr %389
  %.169.i.2 = select i1 %388, ptr %389, ptr %.169.i.1
  %390 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.2, ptr align 1 %..364.i.2) #15
  %.not76.i.3 = icmp eq i8 %390, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  call void %5(ptr nonnull align 1 %.167.i.3, ptr align 1 %.sroa.speculated.i.3) #15
  %391 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %4
  %..364.i.3 = select i1 %.not76.i.3, ptr %391, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %391
  %392 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.2, ptr align 1 %.171.i.2) #15
  %393 = icmp eq i8 %392, 1
  %.sroa.speculated40.i.3 = select i1 %393, ptr %.169.i.2, ptr %.171.i.2
  call void %5(ptr nonnull align 1 %341, ptr align 1 %.sroa.speculated40.i.3) #15
  %394 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 %331
  %.171.i.3 = select i1 %393, ptr %.171.i.2, ptr %394
  %.169.i.3 = select i1 %393, ptr %394, ptr %.169.i.2
  %395 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.3, ptr align 1 %..364.i.3) #15
  %.not76.i.4 = icmp eq i8 %395, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  call void %5(ptr nonnull align 1 %.167.i.4, ptr align 1 %.sroa.speculated.i.4) #15
  %396 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %4
  %..364.i.4 = select i1 %.not76.i.4, ptr %396, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %396
  %397 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.3, ptr align 1 %.171.i.3) #15
  %398 = icmp eq i8 %397, 1
  %.sroa.speculated40.i.4 = select i1 %398, ptr %.169.i.3, ptr %.171.i.3
  call void %5(ptr nonnull align 1 %342, ptr align 1 %.sroa.speculated40.i.4) #15
  %399 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 %331
  %.171.i.4 = select i1 %398, ptr %.171.i.3, ptr %399
  %.169.i.4 = select i1 %398, ptr %399, ptr %.169.i.3
  %400 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.4, ptr align 1 %..364.i.4) #15
  %.not76.i.5 = icmp eq i8 %400, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  call void %5(ptr align 1 %.167.i.5, ptr align 1 %.sroa.speculated.i.5) #15
  %401 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %4
  %..364.i.5 = select i1 %.not76.i.5, ptr %401, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %401
  %402 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.4, ptr align 1 %.171.i.4) #15
  %403 = icmp eq i8 %402, 1
  %.sroa.speculated40.i.5 = select i1 %403, ptr %.169.i.4, ptr %.171.i.4
  call void %5(ptr align 1 %343, ptr align 1 %.sroa.speculated40.i.5) #15
  %404 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 %331
  %.171.i.5 = select i1 %403, ptr %.171.i.4, ptr %404
  %.169.i.5 = select i1 %403, ptr %404, ptr %.169.i.4
  %405 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i.5, ptr align 1 %..364.i.5) #15
  %.not76.i.6 = icmp eq i8 %405, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  call void %5(ptr align 1 %.167.i.6, ptr align 1 %.sroa.speculated.i.6) #15
  %406 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.5, ptr align 1 %.171.i.5) #15
  %407 = icmp eq i8 %406, 1
  %.sroa.speculated40.i.6 = select i1 %407, ptr %.169.i.5, ptr %.171.i.5
  call void %5(ptr align 1 %344, ptr align 1 %.sroa.speculated40.i.6) #15
  %408 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 %331
  %.171.i.6 = select i1 %407, ptr %.171.i.5, ptr %408
  %.169.i.6 = select i1 %407, ptr %408, ptr %.169.i.5
  %409 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i.6, ptr align 1 %.171.i.6) #15
  %410 = icmp eq i8 %409, 1
  %.sroa.speculated46.i = select i1 %410, ptr %.169.i.6, ptr %.171.i.6
  call void %5(ptr align 1 %345, ptr align 1 %.sroa.speculated46.i) #15
  %411 = getelementptr inbounds i8, ptr %.5492, i64 %328
  %412 = getelementptr inbounds i8, ptr %411, i64 %326
  %413 = getelementptr inbounds i8, ptr %412, i64 %331
  %414 = getelementptr inbounds i8, ptr %413, i64 %326
  %415 = call i8 %2(ptr align 1 %3, ptr align 1 %411, ptr nonnull align 1 %412) #15
  %.not.i359 = icmp eq i8 %415, 1
  %.sroa.speculated21.i360 = select i1 %.not.i359, ptr %412, ptr %411
  call void %5(ptr nonnull align 1 %333, ptr align 1 %.sroa.speculated21.i360) #15
  %416 = getelementptr inbounds i8, ptr %.sroa.speculated21.i360, i64 %4
  %.0..i361 = select i1 %.not.i359, ptr %411, ptr %416
  %..061.i362 = select i1 %.not.i359, ptr %416, ptr %412
  %417 = call i8 %2(ptr align 1 %3, ptr align 1 %.0..i361, ptr align 1 %..061.i362) #15
  %.not76.i371 = icmp eq i8 %417, 1
  %.sroa.speculated.i372 = select i1 %.not76.i371, ptr %..061.i362, ptr %.0..i361
  call void %5(ptr nonnull align 1 %.167.i370, ptr align 1 %.sroa.speculated.i372) #15
  %418 = getelementptr inbounds i8, ptr %.sroa.speculated.i372, i64 %4
  %..364.i373 = select i1 %.not76.i371, ptr %418, ptr %..061.i362
  %.3..i374 = select i1 %.not76.i371, ptr %.0..i361, ptr %418
  %419 = call i8 %2(ptr align 1 %3, ptr align 1 %413, ptr align 1 %414) #15
  %420 = icmp eq i8 %419, 1
  %.sroa.speculated40.i375 = select i1 %420, ptr %413, ptr %414
  call void %5(ptr nonnull align 1 %334, ptr align 1 %.sroa.speculated40.i375) #15
  %421 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375, i64 %331
  %.171.i376 = select i1 %420, ptr %414, ptr %421
  %.169.i377 = select i1 %420, ptr %421, ptr %413
  %422 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374, ptr align 1 %..364.i373) #15
  %.not76.i371.1 = icmp eq i8 %422, 1
  %.sroa.speculated.i372.1 = select i1 %.not76.i371.1, ptr %..364.i373, ptr %.3..i374
  call void %5(ptr nonnull align 1 %.167.i370.1, ptr align 1 %.sroa.speculated.i372.1) #15
  %423 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.1, i64 %4
  %..364.i373.1 = select i1 %.not76.i371.1, ptr %423, ptr %..364.i373
  %.3..i374.1 = select i1 %.not76.i371.1, ptr %.3..i374, ptr %423
  %424 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377, ptr align 1 %.171.i376) #15
  %425 = icmp eq i8 %424, 1
  %.sroa.speculated40.i375.1 = select i1 %425, ptr %.169.i377, ptr %.171.i376
  call void %5(ptr nonnull align 1 %346, ptr align 1 %.sroa.speculated40.i375.1) #15
  %426 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.1, i64 %331
  %.171.i376.1 = select i1 %425, ptr %.171.i376, ptr %426
  %.169.i377.1 = select i1 %425, ptr %426, ptr %.169.i377
  %427 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.1, ptr align 1 %..364.i373.1) #15
  %.not76.i371.2 = icmp eq i8 %427, 1
  %.sroa.speculated.i372.2 = select i1 %.not76.i371.2, ptr %..364.i373.1, ptr %.3..i374.1
  call void %5(ptr nonnull align 1 %.167.i370.2, ptr align 1 %.sroa.speculated.i372.2) #15
  %428 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.2, i64 %4
  %..364.i373.2 = select i1 %.not76.i371.2, ptr %428, ptr %..364.i373.1
  %.3..i374.2 = select i1 %.not76.i371.2, ptr %.3..i374.1, ptr %428
  %429 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.1, ptr align 1 %.171.i376.1) #15
  %430 = icmp eq i8 %429, 1
  %.sroa.speculated40.i375.2 = select i1 %430, ptr %.169.i377.1, ptr %.171.i376.1
  call void %5(ptr nonnull align 1 %347, ptr align 1 %.sroa.speculated40.i375.2) #15
  %431 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.2, i64 %331
  %.171.i376.2 = select i1 %430, ptr %.171.i376.1, ptr %431
  %.169.i377.2 = select i1 %430, ptr %431, ptr %.169.i377.1
  %432 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.2, ptr align 1 %..364.i373.2) #15
  %.not76.i371.3 = icmp eq i8 %432, 1
  %.sroa.speculated.i372.3 = select i1 %.not76.i371.3, ptr %..364.i373.2, ptr %.3..i374.2
  call void %5(ptr nonnull align 1 %.167.i370.3, ptr align 1 %.sroa.speculated.i372.3) #15
  %433 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.3, i64 %4
  %..364.i373.3 = select i1 %.not76.i371.3, ptr %433, ptr %..364.i373.2
  %.3..i374.3 = select i1 %.not76.i371.3, ptr %.3..i374.2, ptr %433
  %434 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.2, ptr align 1 %.171.i376.2) #15
  %435 = icmp eq i8 %434, 1
  %.sroa.speculated40.i375.3 = select i1 %435, ptr %.169.i377.2, ptr %.171.i376.2
  call void %5(ptr nonnull align 1 %348, ptr align 1 %.sroa.speculated40.i375.3) #15
  %436 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.3, i64 %331
  %.171.i376.3 = select i1 %435, ptr %.171.i376.2, ptr %436
  %.169.i377.3 = select i1 %435, ptr %436, ptr %.169.i377.2
  %437 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.3, ptr align 1 %..364.i373.3) #15
  %.not76.i371.4 = icmp eq i8 %437, 1
  %.sroa.speculated.i372.4 = select i1 %.not76.i371.4, ptr %..364.i373.3, ptr %.3..i374.3
  call void %5(ptr align 1 %.167.i370.4, ptr align 1 %.sroa.speculated.i372.4) #15
  %438 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.4, i64 %4
  %..364.i373.4 = select i1 %.not76.i371.4, ptr %438, ptr %..364.i373.3
  %.3..i374.4 = select i1 %.not76.i371.4, ptr %.3..i374.3, ptr %438
  %439 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.3, ptr align 1 %.171.i376.3) #15
  %440 = icmp eq i8 %439, 1
  %.sroa.speculated40.i375.4 = select i1 %440, ptr %.169.i377.3, ptr %.171.i376.3
  call void %5(ptr align 1 %349, ptr align 1 %.sroa.speculated40.i375.4) #15
  %441 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.4, i64 %331
  %.171.i376.4 = select i1 %440, ptr %.171.i376.3, ptr %441
  %.169.i377.4 = select i1 %440, ptr %441, ptr %.169.i377.3
  %442 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.4, ptr align 1 %..364.i373.4) #15
  %.not76.i371.5 = icmp eq i8 %442, 1
  %.sroa.speculated.i372.5 = select i1 %.not76.i371.5, ptr %..364.i373.4, ptr %.3..i374.4
  call void %5(ptr align 1 %.167.i370.5, ptr align 1 %.sroa.speculated.i372.5) #15
  %443 = getelementptr inbounds i8, ptr %.sroa.speculated.i372.5, i64 %4
  %..364.i373.5 = select i1 %.not76.i371.5, ptr %443, ptr %..364.i373.4
  %.3..i374.5 = select i1 %.not76.i371.5, ptr %.3..i374.4, ptr %443
  %444 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.4, ptr align 1 %.171.i376.4) #15
  %445 = icmp eq i8 %444, 1
  %.sroa.speculated40.i375.5 = select i1 %445, ptr %.169.i377.4, ptr %.171.i376.4
  call void %5(ptr align 1 %350, ptr align 1 %.sroa.speculated40.i375.5) #15
  %446 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.5, i64 %331
  %.171.i376.5 = select i1 %445, ptr %.171.i376.4, ptr %446
  %.169.i377.5 = select i1 %445, ptr %446, ptr %.169.i377.4
  %447 = call i8 %2(ptr align 1 %3, ptr align 1 %.3..i374.5, ptr align 1 %..364.i373.5) #15
  %.not76.i371.6 = icmp eq i8 %447, 1
  %.sroa.speculated.i372.6 = select i1 %.not76.i371.6, ptr %..364.i373.5, ptr %.3..i374.5
  call void %5(ptr align 1 %.167.i370.6, ptr align 1 %.sroa.speculated.i372.6) #15
  %448 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.5, ptr align 1 %.171.i376.5) #15
  %449 = icmp eq i8 %448, 1
  %.sroa.speculated40.i375.6 = select i1 %449, ptr %.169.i377.5, ptr %.171.i376.5
  call void %5(ptr align 1 %351, ptr align 1 %.sroa.speculated40.i375.6) #15
  %450 = getelementptr inbounds i8, ptr %.sroa.speculated40.i375.6, i64 %331
  %.171.i376.6 = select i1 %449, ptr %.171.i376.5, ptr %450
  %.169.i377.6 = select i1 %449, ptr %450, ptr %.169.i377.5
  %451 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i377.6, ptr align 1 %.171.i376.6) #15
  %452 = icmp eq i8 %451, 1
  %.sroa.speculated46.i380 = select i1 %452, ptr %.169.i377.6, ptr %.171.i376.6
  call void %5(ptr align 1 %352, ptr align 1 %.sroa.speculated46.i380) #15
  %453 = getelementptr inbounds i8, ptr %.5492, i64 %337
  %454 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %14, ptr nonnull align 1 %333) #15
  %.not.i384 = icmp eq i8 %454, 1
  %.sroa.speculated21.i385 = select i1 %.not.i384, ptr %333, ptr %14
  call void %5(ptr align 1 %.5492, ptr nonnull align 1 %.sroa.speculated21.i385) #15
  %455 = getelementptr inbounds i8, ptr %.sroa.speculated21.i385, i64 %4
  %.0..i386 = select i1 %.not.i384, ptr %14, ptr %455
  %..061.i387 = select i1 %.not.i384, ptr %455, ptr %333
  br label %.cont.i404

.cont.i404:                                       ; preds = %select.end296, %.critedge69
  %lsr.iv265 = phi i64 [ %lsr.iv.next266, %select.end296 ], [ 15, %.critedge69 ]
  %lsr.iv263 = phi ptr [ %uglygep264, %select.end296 ], [ %lsr.iv261, %.critedge69 ]
  %.37.i388 = phi ptr [ %.3..i399, %select.end296 ], [ %.0..i386, %.critedge69 ]
  %.3646.i389 = phi ptr [ %..364.i398, %select.end296 ], [ %..061.i387, %.critedge69 ]
  %.0684.i391 = phi ptr [ %.169.i402, %select.end296 ], [ %335, %.critedge69 ]
  %.0703.i392 = phi ptr [ %.171.i401, %select.end296 ], [ %336, %.critedge69 ]
  %.0722.i393 = phi ptr [ %463, %select.end296 ], [ %453, %.critedge69 ]
  %456 = call i8 %2(ptr align 1 %3, ptr align 1 %.37.i388, ptr align 1 %.3646.i389) #15
  %.sroa.speculated.i397.frozen = freeze i8 %456
  %.not76.i396 = icmp eq i8 %.sroa.speculated.i397.frozen, 1
  br i1 %.not76.i396, label %select.end, label %select.false

select.false:                                     ; preds = %.cont.i404
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont.i404
  %.sroa.speculated.i397 = phi ptr [ %.3646.i389, %.cont.i404 ], [ %.37.i388, %select.false ]
  %..364.i398.frozen = freeze i8 %456
  %457 = icmp eq i8 %..364.i398.frozen, 1
  call void %5(ptr align 1 %lsr.iv263, ptr align 1 %.sroa.speculated.i397) #15
  %458 = getelementptr inbounds i8, ptr %.sroa.speculated.i397, i64 %4
  br i1 %457, label %select.end292, label %select.false293

select.false293:                                  ; preds = %select.end
  br label %select.end292

select.end292:                                    ; preds = %select.false293, %select.end
  %..364.i398 = phi ptr [ %458, %select.end ], [ %.3646.i389, %select.false293 ]
  %.3..i399 = phi ptr [ %.37.i388, %select.end ], [ %458, %select.false293 ]
  %459 = call i8 %2(ptr align 1 %3, ptr align 1 %.0684.i391, ptr align 1 %.0703.i392) #15
  %.sroa.speculated40.i400.frozen = freeze i8 %459
  %460 = icmp eq i8 %.sroa.speculated40.i400.frozen, 1
  br i1 %460, label %select.end294, label %select.false295

select.false295:                                  ; preds = %select.end292
  br label %select.end294

select.end294:                                    ; preds = %select.false295, %select.end292
  %.sroa.speculated40.i400 = phi ptr [ %.0684.i391, %select.end292 ], [ %.0703.i392, %select.false295 ]
  %.171.i401.frozen = freeze i8 %459
  %461 = icmp eq i8 %.171.i401.frozen, 1
  call void %5(ptr align 1 %.0722.i393, ptr align 1 %.sroa.speculated40.i400) #15
  %462 = getelementptr inbounds i8, ptr %.sroa.speculated40.i400, i64 %331
  br i1 %461, label %select.end296, label %select.false297

select.false297:                                  ; preds = %select.end294
  br label %select.end296

select.end296:                                    ; preds = %select.false297, %select.end294
  %.171.i401 = phi ptr [ %.0703.i392, %select.end294 ], [ %462, %select.false297 ]
  %.169.i402 = phi ptr [ %462, %select.end294 ], [ %.0684.i391, %select.false297 ]
  %463 = getelementptr inbounds i8, ptr %.0722.i393, i64 %331
  %uglygep264 = getelementptr i8, ptr %lsr.iv263, i64 %4
  %lsr.iv.next266 = add nsw i64 %lsr.iv265, -1
  %exitcond.not.i403 = icmp eq i64 %lsr.iv.next266, 0
  br i1 %exitcond.not.i403, label %sort.parity_merge__anon_16486.exit406, label %.cont.i404

sort.parity_merge__anon_16486.exit406:            ; preds = %select.end296
  %464 = call i8 %2(ptr align 1 %3, ptr align 1 %.169.i402, ptr align 1 %.171.i401) #15
  %465 = icmp eq i8 %464, 1
  %.sroa.speculated46.i405 = select i1 %465, ptr %.169.i402, ptr %.171.i401
  call void %5(ptr align 1 %463, ptr align 1 %.sroa.speculated46.i405) #15
  br label %360

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %466 = mul nuw i64 %358, %4
  %467 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %466
  %468 = ptrtoint ptr %467 to i64
  %469 = ptrtoint ptr %.5.lcssa to i64
  %470 = shl nuw i64 %4, 3
  %471 = add nuw i64 %470, %469
  %472 = icmp ult i64 %471, %468
  br i1 %472, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.lr.ph.i
  %473 = ptrtoint ptr %.5.lcssa to i64
  %474 = shl nuw i64 %4, 4
  %475 = add i64 %473, %474
  %476 = add i64 %473, %470
  br label %498

.loopexit.i:                                      ; preds = %506, %502, %.preheader.lr.ph.i
  %477 = icmp ugt i64 %358, 16
  br i1 %477, label %.preheader.i.1, label %common.ret

.preheader.i.1:                                   ; preds = %.loopexit.i
  %478 = ptrtoint ptr %.5.lcssa to i64
  %479 = ptrtoint ptr %467 to i64
  %480 = shl nuw i64 %4, 4
  %481 = add nuw i64 %480, %478
  %482 = icmp ult i64 %481, %479
  br i1 %482, label %.lr.ph.i.1, label %common.ret

.lr.ph.i.1:                                       ; preds = %.preheader.i.1
  %483 = ptrtoint ptr %.5.lcssa to i64
  %484 = shl nuw i64 %4, 5
  %485 = add i64 %483, %484
  %486 = add i64 %483, %480
  br label %487

487:                                              ; preds = %494, %.lr.ph.i.1
  %lsr.iv = phi i64 [ %lsr.iv.next, %494 ], [ 0, %.lr.ph.i.1 ]
  %488 = ptrtoint ptr %467 to i64
  %uglygep255 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %489 = add i64 %485, %lsr.iv
  %490 = icmp ult i64 %489, %488
  br i1 %490, label %494, label %491

491:                                              ; preds = %487
  %492 = sub i64 %466, %lsr.iv
  %493 = udiv i64 %492, %4
  %uglygep = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep, i64 %493, ptr nonnull align 1 %14, i64 32, i64 16, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  br label %common.ret

494:                                              ; preds = %487
  %495 = ptrtoint ptr %467 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep255, i64 32, ptr nonnull align 1 %14, i64 32, i64 16, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  %lsr.iv.next = add i64 %lsr.iv, %484
  %496 = add i64 %486, %lsr.iv.next
  %497 = icmp ult i64 %496, %495
  br i1 %497, label %487, label %common.ret

498:                                              ; preds = %502, %.lr.ph.i
  %lsr.iv256 = phi i64 [ %lsr.iv.next257, %502 ], [ 0, %.lr.ph.i ]
  %499 = ptrtoint ptr %467 to i64
  %uglygep259 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv256
  %500 = add i64 %475, %lsr.iv256
  %501 = icmp ult i64 %500, %499
  br i1 %501, label %502, label %506

502:                                              ; preds = %498
  %503 = ptrtoint ptr %467 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep259, i64 16, ptr nonnull align 1 %14, i64 32, i64 8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  %lsr.iv.next257 = add i64 %lsr.iv256, %474
  %504 = add i64 %476, %lsr.iv.next257
  %505 = icmp ult i64 %504, %503
  br i1 %505, label %498, label %.loopexit.i

506:                                              ; preds = %498
  %507 = sub i64 %466, %lsr.iv256
  %508 = udiv i64 %507, %4
  %uglygep258 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv256
  call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep258, i64 %508, ptr nonnull align 1 %14, i64 32, i64 8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = mul i64 %6, %1
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = icmp ugt i64 %1, 127
  %12 = icmp ugt i64 %3, 127
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %8
  %14 = shl i64 %6, 1
  %15 = mul i64 %6, 3
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16490.exit22, %.preheader.lr.ph
  %.030 = phi i64 [ 128, %.preheader.lr.ph ], [ %118, %sort.tail_merge__anon_16490.exit22 ]
  %16 = ptrtoint ptr %0 to i64
  %17 = lshr i64 %.030, 2
  %18 = lshr exact i64 %.030, 1
  %19 = mul i64 %17, %6
  %20 = mul nuw i64 %18, %6
  %21 = shl nuw i64 %20, 1
  %22 = getelementptr inbounds i8, ptr %2, i64 %20
  %23 = mul i64 %.030, %6
  %uglygep15 = getelementptr i8, ptr %0, i64 %19
  %24 = add nsw i64 %17, -1
  %25 = mul i64 %6, %24
  %uglygep17 = getelementptr i8, ptr %0, i64 %25
  %26 = mul i64 %14, %17
  %uglygep19 = getelementptr i8, ptr %0, i64 %26
  %27 = shl nuw nsw i64 %17, 1
  %28 = add nsw i64 %27, -1
  %29 = mul i64 %6, %28
  %uglygep21 = getelementptr i8, ptr %0, i64 %29
  %30 = mul i64 %15, %17
  %uglygep23 = getelementptr i8, ptr %0, i64 %30
  %31 = mul nuw i64 %17, 3
  %32 = add i64 %31, -1
  %33 = mul i64 %6, %32
  %uglygep25 = getelementptr i8, ptr %0, i64 %33
  %34 = add i64 %16, %23
  br label %64

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16490.exit22, %8
  %.0.lcssa = phi i64 [ 128, %8 ], [ %118, %sort.tail_merge__anon_16490.exit22 ]
  %35 = lshr exact i64 %.0.lcssa, 2
  %36 = icmp ult i64 %35, %1
  %37 = icmp ule i64 %35, %3
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16490.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.022.i = phi i64 [ %35, %.preheader.lr.ph.i ], [ %44, %.loopexit.i ]
  %39 = ptrtoint ptr %0 to i64
  %40 = ptrtoint ptr %10 to i64
  %41 = mul nuw i64 %.022.i, %6
  %42 = add nuw i64 %41, %39
  %43 = icmp ult i64 %42, %40
  %44 = shl nuw i64 %.022.i, 1
  br i1 %43, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %45 = ptrtoint ptr %0 to i64
  %46 = mul nuw i64 %44, %6
  %47 = add i64 %45, %46
  %48 = add i64 %45, %41
  br label %52

.loopexit.i:                                      ; preds = %60, %56, %.preheader.i
  %49 = icmp ult i64 %44, %1
  %50 = icmp ule i64 %44, %3
  %51 = select i1 %49, i1 %50, i1 false
  br i1 %51, label %.preheader.i, label %sort.tail_merge__anon_16490.exit

52:                                               ; preds = %56, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %56 ], [ 0, %.lr.ph.i ]
  %53 = ptrtoint ptr %10 to i64
  %uglygep10 = getelementptr i8, ptr %0, i64 %lsr.iv
  %54 = add i64 %47, %lsr.iv
  %55 = icmp ult i64 %54, %53
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = ptrtoint ptr %10 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep10, i64 %44, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  %lsr.iv.next = add i64 %lsr.iv, %46
  %58 = add i64 %48, %lsr.iv.next
  %59 = icmp ult i64 %58, %57
  br i1 %59, label %52, label %.loopexit.i

60:                                               ; preds = %52
  %61 = sub i64 %9, %lsr.iv
  %62 = udiv i64 %61, %6
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep, i64 %62, ptr nonnull align 1 %2, i64 %3, i64 %.022.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  br label %.loopexit.i

sort.tail_merge__anon_16490.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %63 = lshr exact i64 %.0.lcssa, 1
  ret i64 %63

64:                                               ; preds = %sort.quad_merge_block__anon_16491.exit, %.preheader
  %lsr.iv29 = phi i64 [ %16, %.preheader ], [ %lsr.iv.next30, %sort.quad_merge_block__anon_16491.exit ]
  %lsr.iv27 = phi i64 [ %9, %.preheader ], [ %lsr.iv.next28, %sort.quad_merge_block__anon_16491.exit ]
  %lsr.iv11 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next12, %sort.quad_merge_block__anon_16491.exit ]
  %.013 = phi ptr [ %81, %sort.quad_merge_block__anon_16491.exit ], [ %0, %.preheader ]
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv11
  %uglygep16 = getelementptr i8, ptr %uglygep15, i64 %lsr.iv11
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv11
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv11
  %uglygep18 = getelementptr i8, ptr %uglygep17, i64 %lsr.iv11
  %65 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep18, ptr nonnull align 1 %uglygep16) #15
  %66 = icmp ne i8 %65, 1
  %67 = zext i1 %66 to i2
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 %lsr.iv11
  %68 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep26, ptr nonnull align 1 %uglygep24) #15
  %.not.i = icmp eq i8 %68, 1
  %69 = select i1 %.not.i, i2 0, i2 -2
  %70 = or i2 %69, %67
  %71 = zext i2 %70 to i32
  switch i32 %71, label %73 [
    i32 0, label %74
    i32 1, label %75
    i32 2, label %76
    i32 3, label %77
  ]

72:                                               ; preds = %79, %76, %75, %74
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %uglygep13, ptr nonnull align 1 %2, i64 %18, i64 %18, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quad_merge_block__anon_16491.exit

73:                                               ; preds = %64
  unreachable

74:                                               ; preds = %64
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %17, i64 %17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %17, i64 %17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  br label %72

75:                                               ; preds = %64
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %20, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %17, i64 %17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  br label %72

76:                                               ; preds = %64
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %17, i64 %17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %22, ptr nonnull align 1 %uglygep20, i64 %20, i1 false)
  br label %72

77:                                               ; preds = %64
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 %lsr.iv11
  %78 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %uglygep22, ptr nonnull align 1 %uglygep20) #15
  %.not6.i = icmp eq i8 %78, 1
  br i1 %.not6.i, label %79, label %sort.quad_merge_block__anon_16491.exit

79:                                               ; preds = %77
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep13, i64 %21, i1 false)
  br label %72

sort.quad_merge_block__anon_16491.exit:           ; preds = %77, %72
  %80 = ptrtoint ptr %10 to i64
  %81 = getelementptr inbounds i8, ptr %.013, i64 %23
  %lsr.iv.next12 = add i64 %lsr.iv11, %23
  %lsr.iv.next28 = sub i64 %lsr.iv27, %23
  %82 = add i64 %34, %lsr.iv.next12
  %83 = icmp ugt i64 %82, %80
  %lsr.iv.next30 = add i64 %lsr.iv29, %23
  br i1 %83, label %84, label %64

84:                                               ; preds = %sort.quad_merge_block__anon_16491.exit
  %85 = udiv i64 %lsr.iv.next28, %6
  %86 = icmp ult i64 %17, %85
  %87 = icmp ule i64 %17, %3
  %88 = select i1 %86, i1 %87, i1 false
  %uglygep14 = getelementptr i8, ptr %0, i64 %lsr.iv.next12
  br i1 %88, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16490.exit22

.preheader.lr.ph.i16:                             ; preds = %84
  %89 = ptrtoint ptr %0 to i64
  %90 = mul nuw i64 %85, %6
  %91 = getelementptr inbounds i8, ptr %81, i64 %90
  %92 = add i64 %89, %lsr.iv.next12
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i20, %.preheader.lr.ph.i16
  %.022.i17 = phi i64 [ %17, %.preheader.lr.ph.i16 ], [ %97, %.loopexit.i20 ]
  %93 = ptrtoint ptr %91 to i64
  %94 = mul nuw i64 %.022.i17, %6
  %95 = add i64 %92, %94
  %96 = icmp ult i64 %95, %93
  %97 = shl nuw i64 %.022.i17, 1
  br i1 %96, label %.lr.ph.i19, label %.loopexit.i20

.lr.ph.i19:                                       ; preds = %.preheader.i18
  %98 = mul nuw i64 %97, %6
  %99 = add i64 %lsr.iv.next30, %98
  %100 = add nuw i64 %lsr.iv.next30, %94
  br label %104

.loopexit.i20:                                    ; preds = %113, %108, %.preheader.i18
  %101 = icmp ult i64 %97, %85
  %102 = icmp ule i64 %97, %3
  %103 = select i1 %101, i1 %102, i1 false
  br i1 %103, label %.preheader.i18, label %sort.tail_merge__anon_16490.exit22

104:                                              ; preds = %108, %.lr.ph.i19
  %lsr.iv31 = phi i64 [ %lsr.iv.next32, %108 ], [ 0, %.lr.ph.i19 ]
  %.01421.i21 = phi ptr [ %uglygep14, %.lr.ph.i19 ], [ %110, %108 ]
  %105 = ptrtoint ptr %91 to i64
  %uglygep34 = getelementptr i8, ptr %81, i64 %lsr.iv31
  %106 = add i64 %99, %lsr.iv31
  %107 = icmp ult i64 %106, %105
  br i1 %107, label %108, label %113

108:                                              ; preds = %104
  %109 = ptrtoint ptr %91 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep34, i64 %97, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  %110 = getelementptr inbounds i8, ptr %.01421.i21, i64 %98
  %lsr.iv.next32 = add i64 %lsr.iv31, %98
  %111 = add i64 %100, %lsr.iv.next32
  %112 = icmp ult i64 %111, %109
  br i1 %112, label %104, label %.loopexit.i20

113:                                              ; preds = %104
  %114 = ptrtoint ptr %91 to i64
  %115 = ptrtoint ptr %.01421.i21 to i64
  %116 = sub nuw i64 %114, %115
  %117 = udiv i64 %116, %6
  %uglygep33 = getelementptr i8, ptr %81, i64 %lsr.iv31
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %uglygep33, i64 %117, ptr nonnull align 1 %2, i64 %3, i64 %.022.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  br label %.loopexit.i20

sort.tail_merge__anon_16490.exit22:               ; preds = %.loopexit.i20, %84
  %118 = shl nuw i64 %.030, 2
  %119 = icmp ule i64 %118, %1
  %120 = icmp ule i64 %118, %3
  %121 = select i1 %119, i1 %120, i1 false
  br i1 %121, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = mul i64 %7, %1
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = shl nuw i64 %4, 1
  %13 = icmp uge i64 %12, %1
  %14 = sub i64 %1, %4
  %15 = icmp ule i64 %14, %3
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %18, label %.preheader21

.preheader21:                                     ; preds = %9
  %17 = icmp ugt i64 %1, %4
  br i1 %17, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader21
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader21
  ret void

18:                                               ; preds = %9
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.01727 = phi i64 [ %4, %.preheader.lr.ph ], [ %24, %.loopexit ]
  %19 = ptrtoint ptr %0 to i64
  %20 = ptrtoint ptr %11 to i64
  %21 = mul nuw i64 %.01727, %7
  %22 = add nuw i64 %21, %19
  %23 = icmp ult i64 %22, %20
  %24 = shl nuw i64 %.01727, 1
  br i1 %23, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %25 = ptrtoint ptr %0 to i64
  %26 = mul nuw i64 %24, %7
  %27 = add i64 %25, %26
  %28 = add i64 %25, %21
  br label %30

.loopexit:                                        ; preds = %38, %34, %.preheader
  %29 = icmp ult i64 %24, %1
  br i1 %29, label %.preheader, label %common.ret

30:                                               ; preds = %34, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %34 ]
  %31 = ptrtoint ptr %11 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %32 = add i64 %27, %lsr.iv
  %33 = icmp ult i64 %32, %31
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = ptrtoint ptr %11 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16493(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %.01727, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  %lsr.iv.next = add i64 %lsr.iv, %26
  %36 = add i64 %28, %lsr.iv.next
  %37 = icmp ult i64 %36, %35
  br i1 %37, label %30, label %.loopexit

38:                                               ; preds = %30
  %39 = sub i64 %10, %lsr.iv
  %40 = udiv i64 %39, %7
  %41 = sub nuw i64 %40, %.01727
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16493(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.01727, i64 %41, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14842(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5) unnamed_addr #4 {
  %7 = alloca [49152 x i8], align 16
  %8 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %7, i64 512, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %7, i64 512, i64 %8, ptr nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nonnull readonly align 4 %5)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5) unnamed_addr #4 {
  %7 = icmp ult i64 %1, 8
  br i1 %7, label %8, label %445

common.ret:                                       ; preds = %470, %.cont110.i.i, %301, %sort.parity_swap_six__anon_16717.exit.i, %138, %98, %71, %47, %20, %10, %8, %8
  ret void

8:                                                ; preds = %6
  switch i64 %1, label %9 [
    i64 2, label %10
    i64 3, label %20
    i64 4, label %47
    i64 5, label %98
    i64 6, label %191
    i64 7, label %301
    i64 1, label %common.ret
    i64 0, label %common.ret
  ]

9:                                                ; preds = %8
  unreachable

10:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 1) #15
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %3(ptr align 1 %4, ptr align 1 %12, ptr align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  %..i = select i1 %15, i64 8, i64 0
  %16 = select i1 %15, i64 0, i64 8
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %16
  %17 = load i64, ptr %sunkaddr, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 %..i
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %0, align 8
  store i64 %17, ptr %11, align 8
  br label %common.ret

20:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 3) #15
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  %22 = load ptr, ptr %0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call i8 %3(ptr align 1 %4, ptr align 1 %22, ptr align 1 %23) #15
  %25 = icmp eq i8 %24, 1
  %.1.i = select i1 %25, i64 8, i64 0
  %26 = select i1 %25, i64 0, i64 8
  %sunkaddr1 = getelementptr inbounds i8, ptr %0, i64 %26
  %27 = load i64, ptr %sunkaddr1, align 8
  %28 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  %29 = load i64, ptr %28, align 8
  store i64 %29, ptr %0, align 8
  store i64 %27, ptr %21, align 8
  %30 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i = inttoptr i64 %27 to ptr
  %31 = load ptr, ptr %30, align 8
  %32 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i, ptr align 1 %31) #15
  %33 = icmp eq i8 %32, 1
  %34 = select i1 %33, i64 8, i64 0
  %35 = select i1 %33, i64 8, i64 16
  %sunkaddr2 = getelementptr inbounds i8, ptr %0, i64 %35
  %36 = load i64, ptr %sunkaddr2, align 8
  %37 = getelementptr inbounds i8, ptr %21, i64 %34
  %38 = load i64, ptr %37, align 8
  store i64 %38, ptr %21, align 8
  store i64 %36, ptr %30, align 8
  %39 = load ptr, ptr %0, align 8
  %.cast64.i = inttoptr i64 %38 to ptr
  %40 = tail call i8 %3(ptr align 1 %4, ptr align 1 %39, ptr align 1 %.cast64.i) #15
  %41 = icmp eq i8 %40, 1
  %42 = select i1 %41, i64 8, i64 0
  %43 = select i1 %41, i64 0, i64 8
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %43
  %44 = load i64, ptr %sunkaddr3, align 8
  %45 = getelementptr inbounds i8, ptr %0, i64 %42
  %46 = load i64, ptr %45, align 8
  store i64 %46, ptr %0, align 8
  store i64 %44, ptr %21, align 8
  br label %common.ret

47:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 3) #15
  %48 = getelementptr inbounds i8, ptr %0, i64 8
  %49 = load ptr, ptr %0, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = tail call i8 %3(ptr align 1 %4, ptr align 1 %49, ptr align 1 %50) #15
  %52 = icmp eq i8 %51, 1
  %..i.i = select i1 %52, i64 8, i64 0
  %53 = select i1 %52, i64 0, i64 8
  %sunkaddr4 = getelementptr inbounds i8, ptr %0, i64 %53
  %54 = load i64, ptr %sunkaddr4, align 8
  %55 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  %56 = load i64, ptr %55, align 8
  store i64 %56, ptr %0, align 8
  store i64 %54, ptr %48, align 8
  %57 = getelementptr inbounds i8, ptr %0, i64 16
  %58 = getelementptr inbounds i8, ptr %0, i64 24
  %59 = load ptr, ptr %57, align 8
  %60 = load ptr, ptr %58, align 8
  %61 = tail call i8 %3(ptr align 1 %4, ptr align 1 %59, ptr align 1 %60) #15
  %62 = icmp eq i8 %61, 1
  %63 = select i1 %62, i64 8, i64 0
  %64 = select i1 %62, i64 16, i64 24
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %64
  %65 = load i64, ptr %sunkaddr5, align 8
  %66 = getelementptr inbounds i8, ptr %57, i64 %63
  %67 = load i64, ptr %66, align 8
  store i64 %67, ptr %57, align 8
  store i64 %65, ptr %58, align 8
  %68 = load ptr, ptr %48, align 8
  %.cast.i.i = inttoptr i64 %67 to ptr
  %69 = tail call i8 %3(ptr align 1 %4, ptr align 1 %68, ptr align 1 %.cast.i.i) #15
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %71, label %common.ret

71:                                               ; preds = %47
  tail call void %5(ptr align 1 %4, i64 3) #15
  %sunkaddr6 = getelementptr inbounds i8, ptr %0, i64 8
  %72 = load i64, ptr %sunkaddr6, align 8
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 16
  %73 = load i64, ptr %sunkaddr7, align 8
  store i64 %73, ptr %sunkaddr6, align 8
  store i64 %72, ptr %sunkaddr7, align 8
  %74 = load ptr, ptr %0, align 8
  %.cast1.i.i = inttoptr i64 %73 to ptr
  %75 = tail call i8 %3(ptr align 1 %4, ptr align 1 %74, ptr align 1 %.cast1.i.i) #15
  %76 = icmp eq i8 %75, 1
  %.1.i.i = select i1 %76, i64 8, i64 0
  %77 = select i1 %76, i64 0, i64 8
  %sunkaddr8 = getelementptr inbounds i8, ptr %0, i64 %77
  %78 = load i64, ptr %sunkaddr8, align 8
  %79 = getelementptr inbounds i8, ptr %0, i64 %.1.i.i
  %80 = load i64, ptr %79, align 8
  store i64 %80, ptr %0, align 8
  store i64 %78, ptr %sunkaddr6, align 8
  %81 = load ptr, ptr %sunkaddr7, align 8
  %sunkaddr9 = getelementptr inbounds i8, ptr %0, i64 24
  %82 = load ptr, ptr %sunkaddr9, align 8
  %83 = tail call i8 %3(ptr align 1 %4, ptr align 1 %81, ptr align 1 %82) #15
  %84 = icmp eq i8 %83, 1
  %85 = select i1 %84, i64 8, i64 0
  %86 = select i1 %84, i64 16, i64 24
  %sunkaddr10 = getelementptr inbounds i8, ptr %0, i64 %86
  %87 = load i64, ptr %sunkaddr10, align 8
  %88 = getelementptr inbounds i8, ptr %57, i64 %85
  %89 = load i64, ptr %88, align 8
  store i64 %89, ptr %sunkaddr7, align 8
  store i64 %87, ptr %sunkaddr9, align 8
  %90 = load ptr, ptr %sunkaddr6, align 8
  %.cast2.i.i = inttoptr i64 %89 to ptr
  %91 = tail call i8 %3(ptr align 1 %4, ptr align 1 %90, ptr align 1 %.cast2.i.i) #15
  %92 = icmp eq i8 %91, 1
  %93 = select i1 %92, i64 8, i64 0
  %94 = select i1 %92, i64 8, i64 16
  %sunkaddr11 = getelementptr inbounds i8, ptr %0, i64 %94
  %95 = load i64, ptr %sunkaddr11, align 8
  %96 = getelementptr inbounds i8, ptr %48, i64 %93
  %97 = load i64, ptr %96, align 8
  store i64 %97, ptr %sunkaddr6, align 8
  store i64 %95, ptr %sunkaddr7, align 8
  br label %common.ret

98:                                               ; preds = %8
  tail call void %5(ptr align 1 %4, i64 4) #15
  %99 = getelementptr inbounds i8, ptr %0, i64 8
  %100 = load ptr, ptr %0, align 8
  %101 = load ptr, ptr %99, align 8
  %102 = tail call i8 %3(ptr align 1 %4, ptr align 1 %100, ptr align 1 %101) #15
  %103 = icmp eq i8 %102, 1
  %..i9.i = select i1 %103, i64 8, i64 0
  %104 = select i1 %103, i64 0, i64 8
  %sunkaddr12 = getelementptr inbounds i8, ptr %0, i64 %104
  %105 = load i64, ptr %sunkaddr12, align 8
  %106 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %0, align 8
  store i64 %105, ptr %99, align 8
  %108 = getelementptr inbounds i8, ptr %0, i64 16
  %109 = getelementptr inbounds i8, ptr %0, i64 24
  %110 = load ptr, ptr %108, align 8
  %111 = load ptr, ptr %109, align 8
  %112 = tail call i8 %3(ptr align 1 %4, ptr align 1 %110, ptr align 1 %111) #15
  %113 = icmp eq i8 %112, 1
  %114 = select i1 %113, i64 8, i64 0
  %115 = select i1 %113, i64 16, i64 24
  %sunkaddr13 = getelementptr inbounds i8, ptr %0, i64 %115
  %116 = load i64, ptr %sunkaddr13, align 8
  %117 = getelementptr inbounds i8, ptr %108, i64 %114
  %118 = load i64, ptr %117, align 8
  store i64 %118, ptr %108, align 8
  store i64 %116, ptr %109, align 8
  %119 = load ptr, ptr %99, align 8
  %.cast.i10.i = inttoptr i64 %118 to ptr
  %120 = tail call i8 %3(ptr align 1 %4, ptr align 1 %119, ptr align 1 %.cast.i10.i) #15
  %121 = icmp eq i8 %120, 1
  %122 = select i1 %121, i64 8, i64 0
  %123 = select i1 %121, i64 8, i64 16
  %sunkaddr14 = getelementptr inbounds i8, ptr %0, i64 %123
  %124 = load i64, ptr %sunkaddr14, align 8
  %125 = getelementptr inbounds i8, ptr %99, i64 %122
  %126 = load i64, ptr %125, align 8
  store i64 %126, ptr %99, align 8
  store i64 %124, ptr %108, align 8
  %127 = zext i1 %121 to i8
  %128 = getelementptr inbounds i8, ptr %0, i64 32
  %129 = load ptr, ptr %109, align 8
  %130 = load ptr, ptr %128, align 8
  %131 = tail call i8 %3(ptr align 1 %4, ptr align 1 %129, ptr align 1 %130) #15
  %132 = icmp eq i8 %131, 1
  %133 = select i1 %132, i64 8, i64 0
  %134 = select i1 %132, i64 24, i64 32
  %sunkaddr15 = getelementptr inbounds i8, ptr %0, i64 %134
  %135 = load i64, ptr %sunkaddr15, align 8
  %136 = getelementptr inbounds i8, ptr %109, i64 %133
  %137 = load i64, ptr %136, align 8
  store i64 %137, ptr %109, align 8
  store i64 %135, ptr %128, align 8
  %.neg.i.i = sext i1 %132 to i8
  %.not.i.i = icmp eq i8 %127, %.neg.i.i
  br i1 %.not.i.i, label %common.ret, label %138

138:                                              ; preds = %98
  tail call void %5(ptr align 1 %4, i64 6) #15
  %139 = load ptr, ptr %0, align 8
  %sunkaddr16 = getelementptr inbounds i8, ptr %0, i64 8
  %140 = load ptr, ptr %sunkaddr16, align 8
  %141 = tail call i8 %3(ptr align 1 %4, ptr align 1 %139, ptr align 1 %140) #15
  %142 = icmp eq i8 %141, 1
  %.1.i11.i = select i1 %142, i64 8, i64 0
  %143 = select i1 %142, i64 0, i64 8
  %sunkaddr17 = getelementptr inbounds i8, ptr %0, i64 %143
  %144 = load i64, ptr %sunkaddr17, align 8
  %145 = getelementptr inbounds i8, ptr %0, i64 %.1.i11.i
  %146 = load i64, ptr %145, align 8
  store i64 %146, ptr %0, align 8
  store i64 %144, ptr %sunkaddr16, align 8
  %sunkaddr18 = getelementptr inbounds i8, ptr %0, i64 16
  %147 = load ptr, ptr %sunkaddr18, align 8
  %sunkaddr19 = getelementptr inbounds i8, ptr %0, i64 24
  %148 = load ptr, ptr %sunkaddr19, align 8
  %149 = tail call i8 %3(ptr align 1 %4, ptr align 1 %147, ptr align 1 %148) #15
  %150 = icmp eq i8 %149, 1
  %151 = select i1 %150, i64 8, i64 0
  %152 = select i1 %150, i64 16, i64 24
  %sunkaddr20 = getelementptr inbounds i8, ptr %0, i64 %152
  %153 = load i64, ptr %sunkaddr20, align 8
  %154 = getelementptr inbounds i8, ptr %108, i64 %151
  %155 = load i64, ptr %154, align 8
  store i64 %155, ptr %sunkaddr18, align 8
  store i64 %153, ptr %sunkaddr19, align 8
  %156 = load ptr, ptr %sunkaddr16, align 8
  %.cast1.i12.i = inttoptr i64 %155 to ptr
  %157 = tail call i8 %3(ptr align 1 %4, ptr align 1 %156, ptr align 1 %.cast1.i12.i) #15
  %158 = icmp eq i8 %157, 1
  %159 = select i1 %158, i64 8, i64 0
  %160 = select i1 %158, i64 8, i64 16
  %sunkaddr21 = getelementptr inbounds i8, ptr %0, i64 %160
  %161 = load i64, ptr %sunkaddr21, align 8
  %162 = getelementptr inbounds i8, ptr %99, i64 %159
  %163 = load i64, ptr %162, align 8
  store i64 %163, ptr %sunkaddr16, align 8
  store i64 %161, ptr %sunkaddr18, align 8
  %164 = load ptr, ptr %sunkaddr19, align 8
  %sunkaddr22 = getelementptr inbounds i8, ptr %0, i64 32
  %165 = load ptr, ptr %sunkaddr22, align 8
  %166 = tail call i8 %3(ptr align 1 %4, ptr align 1 %164, ptr align 1 %165) #15
  %167 = icmp eq i8 %166, 1
  %168 = select i1 %167, i64 8, i64 0
  %169 = select i1 %167, i64 24, i64 32
  %sunkaddr23 = getelementptr inbounds i8, ptr %0, i64 %169
  %170 = load i64, ptr %sunkaddr23, align 8
  %171 = getelementptr inbounds i8, ptr %109, i64 %168
  %172 = load i64, ptr %171, align 8
  store i64 %172, ptr %sunkaddr19, align 8
  store i64 %170, ptr %sunkaddr22, align 8
  %173 = load ptr, ptr %0, align 8
  %174 = load ptr, ptr %sunkaddr16, align 8
  %175 = tail call i8 %3(ptr align 1 %4, ptr align 1 %173, ptr align 1 %174) #15
  %176 = icmp eq i8 %175, 1
  %177 = select i1 %176, i64 8, i64 0
  %178 = select i1 %176, i64 0, i64 8
  %sunkaddr24 = getelementptr inbounds i8, ptr %0, i64 %178
  %179 = load i64, ptr %sunkaddr24, align 8
  %180 = getelementptr inbounds i8, ptr %0, i64 %177
  %181 = load i64, ptr %180, align 8
  store i64 %181, ptr %0, align 8
  store i64 %179, ptr %sunkaddr16, align 8
  %182 = load ptr, ptr %sunkaddr18, align 8
  %183 = load ptr, ptr %sunkaddr19, align 8
  %184 = tail call i8 %3(ptr align 1 %4, ptr align 1 %182, ptr align 1 %183) #15
  %185 = icmp eq i8 %184, 1
  %186 = select i1 %185, i64 8, i64 0
  %187 = select i1 %185, i64 16, i64 24
  %sunkaddr25 = getelementptr inbounds i8, ptr %0, i64 %187
  %188 = load i64, ptr %sunkaddr25, align 8
  %189 = getelementptr inbounds i8, ptr %108, i64 %186
  %190 = load i64, ptr %189, align 8
  store i64 %190, ptr %sunkaddr18, align 8
  store i64 %188, ptr %sunkaddr19, align 8
  br label %common.ret

191:                                              ; preds = %8
  tail call void %5(ptr align 1 %4, i64 5) #15
  %192 = getelementptr inbounds i8, ptr %0, i64 8
  %193 = load ptr, ptr %0, align 8
  %194 = load ptr, ptr %192, align 8
  %195 = tail call i8 %3(ptr align 1 %4, ptr align 1 %193, ptr align 1 %194) #15
  %196 = icmp eq i8 %195, 1
  %..i13.i = select i1 %196, i64 8, i64 0
  %197 = select i1 %196, i64 0, i64 8
  %sunkaddr26 = getelementptr inbounds i8, ptr %0, i64 %197
  %198 = load i64, ptr %sunkaddr26, align 8
  %199 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  %200 = load i64, ptr %199, align 8
  store i64 %200, ptr %0, align 8
  store i64 %198, ptr %192, align 8
  %201 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i14.i = inttoptr i64 %198 to ptr
  %202 = load ptr, ptr %201, align 8
  %203 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i14.i, ptr align 1 %202) #15
  %204 = icmp eq i8 %203, 1
  %205 = select i1 %204, i64 8, i64 0
  %206 = select i1 %204, i64 8, i64 16
  %sunkaddr27 = getelementptr inbounds i8, ptr %0, i64 %206
  %207 = load i64, ptr %sunkaddr27, align 8
  %208 = getelementptr inbounds i8, ptr %192, i64 %205
  %209 = load i64, ptr %208, align 8
  store i64 %209, ptr %192, align 8
  store i64 %207, ptr %201, align 8
  %210 = getelementptr inbounds i8, ptr %0, i64 32
  %211 = getelementptr inbounds i8, ptr %0, i64 40
  %212 = load ptr, ptr %210, align 8
  %213 = load ptr, ptr %211, align 8
  %214 = tail call i8 %3(ptr align 1 %4, ptr align 1 %212, ptr align 1 %213) #15
  %215 = icmp eq i8 %214, 1
  %216 = select i1 %215, i64 8, i64 0
  %217 = select i1 %215, i64 32, i64 40
  %sunkaddr28 = getelementptr inbounds i8, ptr %0, i64 %217
  %218 = load i64, ptr %sunkaddr28, align 8
  %219 = getelementptr inbounds i8, ptr %210, i64 %216
  %220 = load i64, ptr %219, align 8
  store i64 %220, ptr %210, align 8
  store i64 %218, ptr %211, align 8
  %221 = getelementptr inbounds i8, ptr %0, i64 24
  %222 = load ptr, ptr %221, align 8
  %.cast1.i15.i = inttoptr i64 %220 to ptr
  %223 = tail call i8 %3(ptr align 1 %4, ptr align 1 %222, ptr align 1 %.cast1.i15.i) #15
  %224 = icmp eq i8 %223, 1
  %225 = select i1 %224, i64 8, i64 0
  %226 = select i1 %224, i64 24, i64 32
  %sunkaddr29 = getelementptr inbounds i8, ptr %0, i64 %226
  %227 = load i64, ptr %sunkaddr29, align 8
  %228 = getelementptr inbounds i8, ptr %221, i64 %225
  %229 = load i64, ptr %228, align 8
  store i64 %229, ptr %221, align 8
  store i64 %227, ptr %210, align 8
  %230 = load ptr, ptr %201, align 8
  %.cast2.i16.i = inttoptr i64 %229 to ptr
  %231 = tail call i8 %3(ptr align 1 %4, ptr align 1 %230, ptr align 1 %.cast2.i16.i) #15
  %.not.i17.i = icmp eq i8 %231, 1
  br i1 %.not.i17.i, label %.cont96.i.i, label %232

232:                                              ; preds = %191
  tail call void %5(ptr align 1 %4, i64 2) #15
  %233 = load ptr, ptr %0, align 8
  %sunkaddr30 = getelementptr inbounds i8, ptr %0, i64 8
  %234 = load ptr, ptr %sunkaddr30, align 8
  %235 = tail call i8 %3(ptr align 1 %4, ptr align 1 %233, ptr align 1 %234) #15
  %236 = icmp eq i8 %235, 1
  %.1.i18.i = select i1 %236, i64 8, i64 0
  %237 = select i1 %236, i64 0, i64 8
  %sunkaddr31 = getelementptr inbounds i8, ptr %0, i64 %237
  %238 = load i64, ptr %sunkaddr31, align 8
  %239 = getelementptr inbounds i8, ptr %0, i64 %.1.i18.i
  %240 = load i64, ptr %239, align 8
  store i64 %240, ptr %0, align 8
  store i64 %238, ptr %sunkaddr30, align 8
  %sunkaddr32 = getelementptr inbounds i8, ptr %0, i64 32
  %241 = load ptr, ptr %sunkaddr32, align 8
  %sunkaddr33 = getelementptr inbounds i8, ptr %0, i64 40
  %242 = load ptr, ptr %sunkaddr33, align 8
  %243 = tail call i8 %3(ptr align 1 %4, ptr align 1 %241, ptr align 1 %242) #15
  %244 = icmp eq i8 %243, 1
  %245 = select i1 %244, i64 8, i64 0
  %246 = select i1 %244, i64 32, i64 40
  %sunkaddr34 = getelementptr inbounds i8, ptr %0, i64 %246
  %247 = load i64, ptr %sunkaddr34, align 8
  %248 = getelementptr inbounds i8, ptr %210, i64 %245
  %249 = load i64, ptr %248, align 8
  store i64 %249, ptr %sunkaddr32, align 8
  br label %sort.parity_swap_six__anon_16717.exit.i

.cont96.i.i:                                      ; preds = %191
  tail call void %5(ptr align 1 %4, i64 8) #15
  %250 = load ptr, ptr %0, align 8
  %sunkaddr35 = getelementptr inbounds i8, ptr %0, i64 8
  %251 = load ptr, ptr %sunkaddr35, align 8
  %252 = tail call i8 %3(ptr align 1 %4, ptr align 1 %250, ptr align 1 %251) #15
  %.not113.i.i = icmp eq i8 %252, 1
  %.2.i.i = select i1 %.not113.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not113.i.i, i64 0, i64 8
  %253 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %254 = load i64, ptr %253, align 8
  store i64 %254, ptr %2, align 8
  %255 = getelementptr inbounds i8, ptr %2, i64 8
  %256 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  %257 = load i64, ptr %256, align 8
  store i64 %257, ptr %255, align 8
  %258 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr36 = getelementptr inbounds i8, ptr %0, i64 16
  %259 = load i64, ptr %sunkaddr36, align 8
  store i64 %259, ptr %258, align 8
  %sunkaddr37 = getelementptr inbounds i8, ptr %0, i64 32
  %260 = load ptr, ptr %sunkaddr37, align 8
  %sunkaddr38 = getelementptr inbounds i8, ptr %0, i64 40
  %261 = load ptr, ptr %sunkaddr38, align 8
  %262 = tail call i8 %3(ptr align 1 %4, ptr align 1 %260, ptr align 1 %261) #15
  %.not114.i.i = icmp eq i8 %262, 1
  %.4.i.i = select i1 %.not114.i.i, i64 8, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 8
  %263 = getelementptr inbounds i8, ptr %2, i64 32
  %264 = getelementptr inbounds i8, ptr %210, i64 %.4.i.i
  %265 = load i64, ptr %264, align 8
  store i64 %265, ptr %263, align 8
  %266 = getelementptr inbounds i8, ptr %2, i64 40
  %267 = getelementptr inbounds i8, ptr %210, i64 %.5.i.i
  %268 = load i64, ptr %267, align 8
  store i64 %268, ptr %266, align 8
  %269 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr39 = getelementptr inbounds i8, ptr %0, i64 24
  %270 = load i64, ptr %sunkaddr39, align 8
  store i64 %270, ptr %269, align 8
  %271 = load ptr, ptr %2, align 8
  %.cast3.i.i = inttoptr i64 %270 to ptr
  %272 = tail call i8 %3(ptr align 1 %4, ptr align 1 %271, ptr align 1 %.cast3.i.i) #15
  %.not115.i.i = icmp eq i8 %272, 1
  %.sroa.speculated92.i.i40 = select i1 %.not115.i.i, i64 24, i64 0
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %269, ptr %2
  %sunkaddr41 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated92.i.i40
  %273 = load i64, ptr %sunkaddr41, align 8
  store i64 %273, ptr %0, align 8
  %274 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 8
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %274
  %.119.i.i = select i1 %.not115.i.i, ptr %274, ptr %269
  %275 = load ptr, ptr %.118.i.i, align 8
  %276 = load ptr, ptr %.119.i.i, align 8
  %277 = tail call i8 %3(ptr align 1 %4, ptr align 1 %275, ptr align 1 %276) #15
  %.not116.i.i = icmp eq i8 %277, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  %278 = load i64, ptr %.sroa.speculated83.i.i, align 8
  store i64 %278, ptr %sunkaddr35, align 8
  %279 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 8
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %279
  %.1106.i.i = select i1 %.not116.i.i, ptr %279, ptr %.119.i.i
  %280 = load ptr, ptr %.1110.i.i, align 8
  %281 = load ptr, ptr %.1106.i.i, align 8
  %282 = tail call i8 %3(ptr align 1 %4, ptr align 1 %280, ptr align 1 %281) #15
  %.not117.i.i = icmp eq i8 %282, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  %283 = load i64, ptr %.sroa.speculated74.i.i, align 8
  store i64 %283, ptr %sunkaddr36, align 8
  %284 = load ptr, ptr %258, align 8
  %285 = load ptr, ptr %266, align 8
  %286 = tail call i8 %3(ptr align 1 %4, ptr align 1 %284, ptr align 1 %285) #15
  %287 = icmp eq i8 %286, 1
  %.sroa.speculated65.i.i42 = select i1 %287, i64 16, i64 40
  %.sroa.speculated65.i.i = select i1 %287, ptr %258, ptr %266
  %sunkaddr43 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated65.i.i42
  %288 = load i64, ptr %sunkaddr43, align 8
  store i64 %288, ptr %sunkaddr38, align 8
  %289 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 -8
  %.2111.i.i = select i1 %287, ptr %289, ptr %258
  %.2107.i.i = select i1 %287, ptr %266, ptr %289
  %290 = load ptr, ptr %.2111.i.i, align 8
  %291 = load ptr, ptr %.2107.i.i, align 8
  %292 = tail call i8 %3(ptr align 1 %4, ptr align 1 %290, ptr align 1 %291) #15
  %293 = icmp eq i8 %292, 1
  %.sroa.speculated.i.i = select i1 %293, ptr %.2111.i.i, ptr %.2107.i.i
  %294 = load i64, ptr %.sroa.speculated.i.i, align 8
  store i64 %294, ptr %sunkaddr37, align 8
  %295 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 -8
  %.3112.i.i = select i1 %293, ptr %295, ptr %.2111.i.i
  %.3108.i.i = select i1 %293, ptr %.2107.i.i, ptr %295
  %296 = load ptr, ptr %.3112.i.i, align 8
  %297 = load ptr, ptr %.3108.i.i, align 8
  %298 = tail call i8 %3(ptr align 1 %4, ptr align 1 %296, ptr align 1 %297) #15
  %299 = icmp eq i8 %298, 1
  %300 = select i1 %299, ptr %.3112.i.i, ptr %.3108.i.i
  %.sink5.i.sroa.speculate.load..cont96.i.i = load i64, ptr %300, align 8
  br label %sort.parity_swap_six__anon_16717.exit.i

sort.parity_swap_six__anon_16717.exit.i:          ; preds = %.cont96.i.i, %232
  %.sink5.i.sroa.speculated.i = phi i64 [ %.sink5.i.sroa.speculate.load..cont96.i.i, %.cont96.i.i ], [ %247, %232 ]
  %.sink4.i.i = phi ptr [ %221, %.cont96.i.i ], [ %211, %232 ]
  store i64 %.sink5.i.sroa.speculated.i, ptr %.sink4.i.i, align 8
  br label %common.ret

301:                                              ; preds = %8
  tail call void %5(ptr align 1 %4, i64 6) #15
  %302 = getelementptr inbounds i8, ptr %0, i64 8
  %303 = load ptr, ptr %0, align 8
  %304 = load ptr, ptr %302, align 8
  %305 = tail call i8 %3(ptr align 1 %4, ptr align 1 %303, ptr align 1 %304) #15
  %306 = icmp eq i8 %305, 1
  %..i19.i = select i1 %306, i64 8, i64 0
  %307 = select i1 %306, i64 0, i64 8
  %sunkaddr44 = getelementptr inbounds i8, ptr %0, i64 %307
  %308 = load i64, ptr %sunkaddr44, align 8
  %309 = getelementptr inbounds i8, ptr %0, i64 %..i19.i
  %310 = load i64, ptr %309, align 8
  store i64 %310, ptr %0, align 8
  store i64 %308, ptr %302, align 8
  %311 = getelementptr inbounds i8, ptr %0, i64 16
  %312 = getelementptr inbounds i8, ptr %0, i64 24
  %313 = load ptr, ptr %311, align 8
  %314 = load ptr, ptr %312, align 8
  %315 = tail call i8 %3(ptr align 1 %4, ptr align 1 %313, ptr align 1 %314) #15
  %316 = icmp eq i8 %315, 1
  %317 = select i1 %316, i64 8, i64 0
  %318 = select i1 %316, i64 16, i64 24
  %sunkaddr45 = getelementptr inbounds i8, ptr %0, i64 %318
  %319 = load i64, ptr %sunkaddr45, align 8
  %320 = getelementptr inbounds i8, ptr %311, i64 %317
  %321 = load i64, ptr %320, align 8
  store i64 %321, ptr %311, align 8
  store i64 %319, ptr %312, align 8
  %322 = getelementptr inbounds i8, ptr %0, i64 32
  %323 = getelementptr inbounds i8, ptr %0, i64 40
  %324 = load ptr, ptr %322, align 8
  %325 = load ptr, ptr %323, align 8
  %326 = tail call i8 %3(ptr align 1 %4, ptr align 1 %324, ptr align 1 %325) #15
  %327 = icmp eq i8 %326, 1
  %328 = select i1 %327, i64 8, i64 0
  %329 = select i1 %327, i64 32, i64 40
  %sunkaddr46 = getelementptr inbounds i8, ptr %0, i64 %329
  %330 = load i64, ptr %sunkaddr46, align 8
  %331 = getelementptr inbounds i8, ptr %322, i64 %328
  %332 = load i64, ptr %331, align 8
  store i64 %332, ptr %322, align 8
  store i64 %330, ptr %323, align 8
  %333 = load ptr, ptr %302, align 8
  %334 = load ptr, ptr %311, align 8
  %335 = tail call i8 %3(ptr align 1 %4, ptr align 1 %333, ptr align 1 %334) #15
  %336 = icmp eq i8 %335, 1
  %337 = select i1 %336, i64 8, i64 0
  %338 = select i1 %336, i64 8, i64 16
  %sunkaddr47 = getelementptr inbounds i8, ptr %0, i64 %338
  %339 = load i64, ptr %sunkaddr47, align 8
  %340 = getelementptr inbounds i8, ptr %302, i64 %337
  %341 = load i64, ptr %340, align 8
  store i64 %341, ptr %302, align 8
  store i64 %339, ptr %311, align 8
  %342 = zext i1 %336 to i8
  %343 = load ptr, ptr %312, align 8
  %344 = load ptr, ptr %322, align 8
  %345 = tail call i8 %3(ptr align 1 %4, ptr align 1 %343, ptr align 1 %344) #15
  %346 = icmp eq i8 %345, 1
  %347 = select i1 %346, i64 8, i64 0
  %348 = select i1 %346, i64 24, i64 32
  %sunkaddr48 = getelementptr inbounds i8, ptr %0, i64 %348
  %349 = load i64, ptr %sunkaddr48, align 8
  %350 = getelementptr inbounds i8, ptr %312, i64 %347
  %351 = load i64, ptr %350, align 8
  store i64 %351, ptr %312, align 8
  store i64 %349, ptr %322, align 8
  %352 = zext i1 %346 to i8
  %353 = add nuw nsw i8 %352, %342
  %354 = getelementptr inbounds i8, ptr %0, i64 48
  %355 = load ptr, ptr %323, align 8
  %356 = load ptr, ptr %354, align 8
  %357 = tail call i8 %3(ptr align 1 %4, ptr align 1 %355, ptr align 1 %356) #15
  %358 = icmp eq i8 %357, 1
  %359 = select i1 %358, i64 8, i64 0
  %360 = select i1 %358, i64 40, i64 48
  %sunkaddr49 = getelementptr inbounds i8, ptr %0, i64 %360
  %361 = load i64, ptr %sunkaddr49, align 8
  %362 = getelementptr inbounds i8, ptr %323, i64 %359
  %363 = load i64, ptr %362, align 8
  store i64 %363, ptr %323, align 8
  store i64 %361, ptr %354, align 8
  %.neg.i20.i = sext i1 %358 to i8
  %364 = icmp eq i8 %353, %.neg.i20.i
  br i1 %364, label %common.ret, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %301
  tail call void %5(ptr align 1 %4, i64 11) #15
  %sunkaddr50 = getelementptr inbounds i8, ptr %0, i64 32
  %365 = load ptr, ptr %sunkaddr50, align 8
  %sunkaddr51 = getelementptr inbounds i8, ptr %0, i64 40
  %366 = load ptr, ptr %sunkaddr51, align 8
  %367 = tail call i8 %3(ptr align 1 %4, ptr align 1 %365, ptr align 1 %366) #15
  %368 = icmp eq i8 %367, 1
  %.1.i21.i = select i1 %368, i64 8, i64 0
  %369 = select i1 %368, i64 32, i64 40
  %sunkaddr52 = getelementptr inbounds i8, ptr %0, i64 %369
  %370 = load i64, ptr %sunkaddr52, align 8
  %371 = getelementptr inbounds i8, ptr %322, i64 %.1.i21.i
  %372 = load i64, ptr %371, align 8
  store i64 %372, ptr %sunkaddr50, align 8
  store i64 %370, ptr %sunkaddr51, align 8
  %373 = load ptr, ptr %0, align 8
  %sunkaddr53 = getelementptr inbounds i8, ptr %0, i64 8
  %374 = load ptr, ptr %sunkaddr53, align 8
  %375 = tail call i8 %3(ptr align 1 %4, ptr align 1 %373, ptr align 1 %374) #15
  %.not.i22.i = icmp eq i8 %375, 1
  %376 = select i1 %.not.i22.i, i64 8, i64 0
  %377 = select i1 %.not.i22.i, i64 0, i64 8
  %378 = getelementptr inbounds i8, ptr %0, i64 %376
  %379 = load i64, ptr %378, align 8
  store i64 %379, ptr %2, align 8
  %380 = getelementptr inbounds i8, ptr %2, i64 8
  %381 = getelementptr inbounds i8, ptr %0, i64 %377
  %382 = load i64, ptr %381, align 8
  store i64 %382, ptr %380, align 8
  %383 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr54 = getelementptr inbounds i8, ptr %0, i64 16
  %384 = load i64, ptr %sunkaddr54, align 8
  store i64 %384, ptr %383, align 8
  %sunkaddr55 = getelementptr inbounds i8, ptr %0, i64 24
  %385 = load ptr, ptr %sunkaddr55, align 8
  %386 = load ptr, ptr %sunkaddr50, align 8
  %387 = tail call i8 %3(ptr align 1 %4, ptr align 1 %385, ptr align 1 %386) #15
  %.not127.i.i = icmp eq i8 %387, 1
  %388 = select i1 %.not127.i.i, i64 8, i64 0
  %389 = select i1 %.not127.i.i, i64 0, i64 8
  %390 = getelementptr inbounds i8, ptr %2, i64 24
  %391 = getelementptr inbounds i8, ptr %312, i64 %388
  %392 = load i64, ptr %391, align 8
  store i64 %392, ptr %390, align 8
  %393 = getelementptr inbounds i8, ptr %2, i64 32
  %394 = getelementptr inbounds i8, ptr %312, i64 %389
  %395 = load i64, ptr %394, align 8
  store i64 %395, ptr %393, align 8
  %396 = load ptr, ptr %sunkaddr51, align 8
  %sunkaddr56 = getelementptr inbounds i8, ptr %0, i64 48
  %397 = load ptr, ptr %sunkaddr56, align 8
  %398 = tail call i8 %3(ptr align 1 %4, ptr align 1 %396, ptr align 1 %397) #15
  %.not128.i.i = icmp eq i8 %398, 1
  %399 = select i1 %.not128.i.i, i64 8, i64 0
  %400 = select i1 %.not128.i.i, i64 0, i64 8
  %401 = getelementptr inbounds i8, ptr %2, i64 40
  %402 = getelementptr inbounds i8, ptr %323, i64 %399
  %403 = load i64, ptr %402, align 8
  store i64 %403, ptr %401, align 8
  %404 = getelementptr inbounds i8, ptr %2, i64 48
  %405 = getelementptr inbounds i8, ptr %323, i64 %400
  %406 = load i64, ptr %405, align 8
  store i64 %406, ptr %404, align 8
  %407 = load ptr, ptr %2, align 8
  %408 = load ptr, ptr %390, align 8
  %409 = tail call i8 %3(ptr align 1 %4, ptr align 1 %407, ptr align 1 %408) #15
  %.not129.i.i = icmp eq i8 %409, 1
  %.sroa.speculated106.i.i57 = select i1 %.not129.i.i, i64 24, i64 0
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %390, ptr %2
  %sunkaddr58 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated106.i.i57
  %410 = load i64, ptr %sunkaddr58, align 8
  store i64 %410, ptr %0, align 8
  %411 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 8
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %411
  %.133.i.i = select i1 %.not129.i.i, ptr %411, ptr %390
  %412 = load ptr, ptr %.132.i.i, align 8
  %413 = load ptr, ptr %.133.i.i, align 8
  %414 = tail call i8 %3(ptr align 1 %4, ptr align 1 %412, ptr align 1 %413) #15
  %.not130.i.i = icmp eq i8 %414, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  %415 = load i64, ptr %.sroa.speculated97.i.i, align 8
  store i64 %415, ptr %sunkaddr53, align 8
  %416 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 8
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %416
  %.1121.i.i = select i1 %.not130.i.i, ptr %416, ptr %.133.i.i
  %417 = load ptr, ptr %.1123.i.i, align 8
  %418 = load ptr, ptr %.1121.i.i, align 8
  %419 = tail call i8 %3(ptr align 1 %4, ptr align 1 %417, ptr align 1 %418) #15
  %.not131.i.i = icmp eq i8 %419, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  %420 = load i64, ptr %.sroa.speculated88.i.i, align 8
  store i64 %420, ptr %sunkaddr54, align 8
  %421 = load ptr, ptr %383, align 8
  %422 = load ptr, ptr %404, align 8
  %423 = tail call i8 %3(ptr align 1 %4, ptr align 1 %421, ptr align 1 %422) #15
  %424 = icmp eq i8 %423, 1
  %.sroa.speculated79.i.i59 = select i1 %424, i64 16, i64 48
  %.sroa.speculated79.i.i = select i1 %424, ptr %383, ptr %404
  %sunkaddr60 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated79.i.i59
  %425 = load i64, ptr %sunkaddr60, align 8
  store i64 %425, ptr %sunkaddr56, align 8
  %426 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 -8
  %.2124.i.i = select i1 %424, ptr %426, ptr %383
  %.2.i23.i = select i1 %424, ptr %404, ptr %426
  %427 = load ptr, ptr %.2124.i.i, align 8
  %428 = load ptr, ptr %.2.i23.i, align 8
  %429 = tail call i8 %3(ptr align 1 %4, ptr align 1 %427, ptr align 1 %428) #15
  %430 = icmp eq i8 %429, 1
  %.sroa.speculated70.i.i = select i1 %430, ptr %.2124.i.i, ptr %.2.i23.i
  %431 = load i64, ptr %.sroa.speculated70.i.i, align 8
  store i64 %431, ptr %sunkaddr51, align 8
  %432 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 -8
  %.3125.i.i = select i1 %430, ptr %432, ptr %.2124.i.i
  %.3.i24.i = select i1 %430, ptr %.2.i23.i, ptr %432
  %433 = load ptr, ptr %.3125.i.i, align 8
  %434 = load ptr, ptr %.3.i24.i, align 8
  %435 = tail call i8 %3(ptr align 1 %4, ptr align 1 %433, ptr align 1 %434) #15
  %436 = icmp eq i8 %435, 1
  %.sroa.speculated.i25.i = select i1 %436, ptr %.3125.i.i, ptr %.3.i24.i
  %437 = load i64, ptr %.sroa.speculated.i25.i, align 8
  store i64 %437, ptr %sunkaddr50, align 8
  %438 = getelementptr inbounds i8, ptr %.sroa.speculated.i25.i, i64 -8
  %.4126.i.i = select i1 %436, ptr %438, ptr %.3125.i.i
  %.4.i26.i = select i1 %436, ptr %.3.i24.i, ptr %438
  %439 = load ptr, ptr %.4126.i.i, align 8
  %440 = load ptr, ptr %.4.i26.i, align 8
  %441 = tail call i8 %3(ptr align 1 %4, ptr align 1 %439, ptr align 1 %440) #15
  %442 = icmp eq i8 %441, 1
  %443 = select i1 %442, ptr %.4126.i.i, ptr %.4.i26.i
  %444 = load i64, ptr %443, align 8
  store i64 %444, ptr %sunkaddr55, align 8
  br label %common.ret

445:                                              ; preds = %6
  %446 = lshr i64 %1, 1
  %447 = lshr i64 %1, 2
  %448 = sub nuw nsw i64 %446, %447
  %449 = sub nuw i64 %1, %446
  %450 = lshr i64 %449, 1
  %451 = sub nuw i64 %449, %450
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %447, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  %452 = shl i64 %447, 3
  %453 = getelementptr inbounds i8, ptr %0, i64 %452
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %453, i64 %448, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  %454 = shl nuw i64 %448, 3
  %455 = getelementptr inbounds i8, ptr %453, i64 %454
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %455, i64 %450, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  %456 = shl nuw i64 %450, 3
  %457 = getelementptr inbounds i8, ptr %455, i64 %456
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %457, i64 %451, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  %458 = add i64 %452, -8
  %459 = getelementptr inbounds i8, ptr %0, i64 %458
  tail call void %5(ptr align 1 %4, i64 1) #15
  %460 = load ptr, ptr %459, align 8
  %461 = load ptr, ptr %453, align 8
  %462 = tail call i8 %3(ptr align 1 %4, ptr align 1 %460, ptr align 1 %461) #15
  %.not = icmp eq i8 %462, 1
  %.pre = shl i64 %446, 3
  br i1 %.not, label %.critedge, label %463

463:                                              ; preds = %445
  %464 = add i64 %.pre, -8
  %465 = getelementptr inbounds i8, ptr %0, i64 %464
  %466 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call void %5(ptr align 1 %4, i64 1) #15
  %467 = load ptr, ptr %465, align 8
  %468 = load ptr, ptr %466, align 8
  %469 = tail call i8 %3(ptr align 1 %4, ptr align 1 %467, ptr align 1 %468) #15
  %.not11 = icmp eq i8 %469, 1
  br i1 %.not11, label %.critedge, label %470

470:                                              ; preds = %463
  %471 = getelementptr inbounds i8, ptr %457, i64 -8
  tail call void %5(ptr align 1 %4, i64 1) #15
  %472 = load ptr, ptr %471, align 8
  %473 = load ptr, ptr %457, align 8
  %474 = tail call i8 %3(ptr align 1 %4, ptr align 1 %472, ptr align 1 %473) #15
  %.not12 = icmp eq i8 %474, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %470, %463, %445
  tail call fastcc void @sort.parity_merge__anon_16495(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %447, i64 %448, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  %475 = getelementptr inbounds i8, ptr %2, i64 %.pre
  %476 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call fastcc void @sort.parity_merge__anon_16495(ptr nonnull align 1 %475, ptr nonnull align 1 %476, i64 %450, i64 %451, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  tail call fastcc void @sort.parity_merge__anon_16495(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %446, i64 %449, ptr nonnull readonly align 4 %3, ptr align 1 %4, ptr nonnull readonly align 4 %5)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4) unnamed_addr #4 {
  %6 = alloca [3072 x i8], align 16
  %.not95 = icmp ult i64 %1, 8
  br i1 %.not95, label %.loopexit, label %.lr.ph100.preheader

.lr.ph100.preheader:                              ; preds = %5
  %7 = lshr i64 %1, 3
  br label %.lr.ph100

.lr.ph100:                                        ; preds = %43, %.lr.ph100.preheader
  %.198 = phi ptr [ %.2, %43 ], [ %0, %.lr.ph100.preheader ]
  %.027997 = phi ptr [ %.1280, %43 ], [ %0, %.lr.ph100.preheader ]
  %.028496 = phi i64 [ %.1285, %43 ], [ %7, %.lr.ph100.preheader ]
  %8 = add i64 %.028496, -1
  tail call void %4(ptr align 1 %3, i64 4) #15
  %9 = getelementptr inbounds i8, ptr %.198, i64 8
  %10 = load ptr, ptr %.198, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = tail call i8 %2(ptr align 1 %3, ptr align 1 %10, ptr align 1 %11) #15
  %13 = icmp eq i8 %12, 1
  %14 = zext i1 %13 to i4
  %15 = getelementptr inbounds i8, ptr %.198, i64 16
  %16 = getelementptr inbounds i8, ptr %.198, i64 24
  %17 = load ptr, ptr %15, align 8
  %18 = load ptr, ptr %16, align 8
  %19 = tail call i8 %2(ptr align 1 %3, ptr align 1 %17, ptr align 1 %18) #15
  %20 = icmp eq i8 %19, 1
  %21 = zext i1 %20 to i4
  %22 = getelementptr inbounds i8, ptr %.198, i64 32
  %23 = getelementptr inbounds i8, ptr %.198, i64 40
  %24 = load ptr, ptr %22, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call i8 %2(ptr align 1 %3, ptr align 1 %24, ptr align 1 %25) #15
  %27 = icmp eq i8 %26, 1
  %28 = zext i1 %27 to i4
  %29 = getelementptr inbounds i8, ptr %.198, i64 48
  %30 = getelementptr inbounds i8, ptr %.198, i64 56
  %31 = load ptr, ptr %29, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %2(ptr align 1 %3, ptr align 1 %31, ptr align 1 %32) #15
  %34 = icmp eq i8 %33, 1
  %35 = zext i1 %34 to i4
  %36 = select i1 %20, i4 2, i4 0
  %37 = select i1 %27, i4 4, i4 0
  %38 = select i1 %34, i4 -8, i4 0
  %39 = or i4 %36, %37
  %40 = or i4 %39, %38
  %41 = or i4 %40, %14
  %42 = zext i4 %41 to i32
  switch i32 %42, label %.outer.preheader [
    i32 0, label %44
    i32 15, label %57
  ]

43:                                               ; preds = %328, %.critedge21, %74, %.critedge
  %.1285 = phi i64 [ %173, %328 ], [ %106, %.critedge21 ], [ %.2286, %74 ], [ %8, %.critedge ]
  %.1280 = phi ptr [ %.3282.ph264, %328 ], [ %.3282.ph264, %.critedge21 ], [ %.3282.ph264, %74 ], [ %.027997, %.critedge ]
  %.2 = phi ptr [ %329, %328 ], [ %169, %.critedge21 ], [ %102, %74 ], [ %56, %.critedge ]
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %.lr.ph100

44:                                               ; preds = %.lr.ph100
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr = getelementptr inbounds i8, ptr %.198, i64 8
  %45 = load ptr, ptr %sunkaddr, align 8
  %sunkaddr561 = getelementptr inbounds i8, ptr %.198, i64 16
  %46 = load ptr, ptr %sunkaddr561, align 8
  %47 = tail call i8 %2(ptr align 1 %3, ptr align 1 %45, ptr align 1 %46) #15
  %.not328 = icmp eq i8 %47, 1
  br i1 %.not328, label %.critedge, label %48

48:                                               ; preds = %44
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr562 = getelementptr inbounds i8, ptr %.198, i64 24
  %49 = load ptr, ptr %sunkaddr562, align 8
  %sunkaddr563 = getelementptr inbounds i8, ptr %.198, i64 32
  %50 = load ptr, ptr %sunkaddr563, align 8
  %51 = tail call i8 %2(ptr align 1 %3, ptr align 1 %49, ptr align 1 %50) #15
  %.not329 = icmp eq i8 %51, 1
  br i1 %.not329, label %.critedge, label %52

52:                                               ; preds = %48
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr564 = getelementptr inbounds i8, ptr %.198, i64 40
  %53 = load ptr, ptr %sunkaddr564, align 8
  %sunkaddr565 = getelementptr inbounds i8, ptr %.198, i64 48
  %54 = load ptr, ptr %sunkaddr565, align 8
  %55 = tail call i8 %2(ptr align 1 %3, ptr align 1 %53, ptr align 1 %54) #15
  %.not330 = icmp eq i8 %55, 1
  br i1 %.not330, label %.critedge, label %.outer.preheader

.critedge:                                        ; preds = %52, %48, %44
  tail call void %4(ptr align 1 %3, i64 16) #15
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %.198, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %56 = getelementptr inbounds i8, ptr %.198, i64 64
  br label %43

57:                                               ; preds = %.lr.ph100
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr566 = getelementptr inbounds i8, ptr %.198, i64 8
  %58 = load ptr, ptr %sunkaddr566, align 8
  %sunkaddr567 = getelementptr inbounds i8, ptr %.198, i64 16
  %59 = load ptr, ptr %sunkaddr567, align 8
  %60 = tail call i8 %2(ptr align 1 %3, ptr align 1 %58, ptr align 1 %59) #15
  %61 = icmp eq i8 %60, 1
  br i1 %61, label %62, label %.critedge4

62:                                               ; preds = %57
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr568 = getelementptr inbounds i8, ptr %.198, i64 24
  %63 = load ptr, ptr %sunkaddr568, align 8
  %sunkaddr569 = getelementptr inbounds i8, ptr %.198, i64 32
  %64 = load ptr, ptr %sunkaddr569, align 8
  %65 = tail call i8 %2(ptr align 1 %3, ptr align 1 %63, ptr align 1 %64) #15
  %66 = icmp eq i8 %65, 1
  br i1 %66, label %67, label %.critedge4

67:                                               ; preds = %62
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr570 = getelementptr inbounds i8, ptr %.198, i64 40
  %68 = load ptr, ptr %sunkaddr570, align 8
  %sunkaddr571 = getelementptr inbounds i8, ptr %.198, i64 48
  %69 = load ptr, ptr %sunkaddr571, align 8
  %70 = tail call i8 %2(ptr align 1 %3, ptr align 1 %68, ptr align 1 %69) #15
  %71 = icmp eq i8 %70, 1
  br i1 %71, label %.outer.preheader, label %.critedge4

.critedge4:                                       ; preds = %67, %62, %57
  br label %.outer.preheader

.outer.preheader:                                 ; preds = %.critedge4, %67, %52, %.lr.ph100
  %.1299.ph263.ph = phi i2 [ -2, %.critedge4 ], [ -2, %.lr.ph100 ], [ 0, %52 ], [ 1, %67 ]
  %.3282.ph264.ph = phi ptr [ %.027997, %.critedge4 ], [ %.027997, %.lr.ph100 ], [ %.027997, %52 ], [ %.198, %67 ]
  br label %.outer

.outer:                                           ; preds = %298, %156, %.outer.preheader
  %.1299.ph263 = phi i2 [ %.1299.ph263.ph, %.outer.preheader ], [ 1, %298 ], [ 1, %156 ]
  %.0296.ph = phi i4 [ %35, %.outer.preheader ], [ %200, %298 ], [ %133, %156 ]
  %.0294.ph = phi i4 [ %28, %.outer.preheader ], [ %193, %298 ], [ %126, %156 ]
  %.0292.ph = phi i4 [ %21, %.outer.preheader ], [ %186, %298 ], [ %119, %156 ]
  %.0290.ph = phi i4 [ %14, %.outer.preheader ], [ %179, %298 ], [ %112, %156 ]
  %.2286.ph = phi i64 [ %8, %.outer.preheader ], [ %173, %298 ], [ %106, %156 ]
  %.3282.ph264 = phi ptr [ %.3282.ph264.ph, %.outer.preheader ], [ %171, %298 ], [ %104, %156 ]
  %.3.ph = phi ptr [ %.198, %.outer.preheader ], [ %171, %298 ], [ %104, %156 ]
  %uglygep60 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep248 = getelementptr i8, ptr %.3282.ph264, i64 8
  br label %.backedge

.backedge:                                        ; preds = %284, %271, %165, %156, %151, %146, %137, %.outer
  %.1299 = phi i2 [ %.1299.ph263, %.outer ], [ 0, %165 ], [ 1, %271 ], [ 0, %284 ], [ -2, %151 ], [ -2, %137 ], [ -2, %146 ], [ -2, %156 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %133, %165 ], [ %200, %271 ], [ %200, %284 ], [ %133, %151 ], [ %133, %137 ], [ %133, %146 ], [ %133, %156 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %126, %165 ], [ %193, %271 ], [ %193, %284 ], [ %126, %151 ], [ %126, %137 ], [ %126, %146 ], [ %126, %156 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %119, %165 ], [ %186, %271 ], [ %186, %284 ], [ %119, %151 ], [ %119, %137 ], [ %119, %146 ], [ %119, %156 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %112, %165 ], [ %179, %271 ], [ %179, %284 ], [ %112, %151 ], [ %112, %137 ], [ %112, %146 ], [ %112, %156 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %106, %165 ], [ %173, %271 ], [ %173, %284 ], [ %106, %151 ], [ %106, %137 ], [ %106, %146 ], [ %106, %156 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %104, %165 ], [ %171, %271 ], [ %171, %284 ], [ %104, %151 ], [ %104, %137 ], [ %104, %146 ], [ %104, %156 ]
  %72 = zext i2 %.1299 to i32
  switch i32 %72, label %73 [
    i32 2, label %74
    i32 0, label %103
    i32 1, label %170
  ]

73:                                               ; preds = %.backedge
  unreachable

74:                                               ; preds = %.backedge
  %75 = icmp eq i4 %.0290, 0
  %. = select i1 %75, i64 8, i64 0
  %.7 = select i1 %75, i64 0, i64 8
  %76 = getelementptr inbounds i8, ptr %.3, i64 %.
  %77 = load i64, ptr %76, align 8
  %78 = getelementptr inbounds i8, ptr %.3, i64 %.7
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %.3, align 8
  %80 = getelementptr inbounds i8, ptr %.3, i64 8
  store i64 %77, ptr %80, align 8
  %81 = getelementptr inbounds i8, ptr %.3, i64 16
  %82 = icmp eq i4 %.0292, 0
  %.8 = select i1 %82, i64 8, i64 0
  %.9 = select i1 %82, i64 0, i64 8
  %83 = getelementptr inbounds i8, ptr %81, i64 %.8
  %84 = load i64, ptr %83, align 8
  %85 = getelementptr inbounds i8, ptr %81, i64 %.9
  %86 = load i64, ptr %85, align 8
  store i64 %86, ptr %81, align 8
  %87 = getelementptr inbounds i8, ptr %.3, i64 24
  store i64 %84, ptr %87, align 8
  %88 = getelementptr inbounds i8, ptr %.3, i64 32
  %89 = icmp eq i4 %.0294, 0
  %.10 = select i1 %89, i64 8, i64 0
  %.11 = select i1 %89, i64 0, i64 8
  %90 = getelementptr inbounds i8, ptr %88, i64 %.10
  %91 = load i64, ptr %90, align 8
  %92 = getelementptr inbounds i8, ptr %88, i64 %.11
  %93 = load i64, ptr %92, align 8
  store i64 %93, ptr %88, align 8
  %94 = getelementptr inbounds i8, ptr %.3, i64 40
  store i64 %91, ptr %94, align 8
  %95 = getelementptr inbounds i8, ptr %.3, i64 48
  %96 = icmp eq i4 %.0296, 0
  %.12 = select i1 %96, i64 8, i64 0
  %.13 = select i1 %96, i64 0, i64 8
  %97 = getelementptr inbounds i8, ptr %95, i64 %.12
  %98 = load i64, ptr %97, align 8
  %99 = getelementptr inbounds i8, ptr %95, i64 %.13
  %100 = load i64, ptr %99, align 8
  store i64 %100, ptr %95, align 8
  %101 = getelementptr inbounds i8, ptr %.3, i64 56
  store i64 %98, ptr %101, align 8
  tail call void %4(ptr align 1 %3, i64 16) #15
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %.3, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %102 = getelementptr inbounds i8, ptr %.3, i64 64
  br label %43

103:                                              ; preds = %.backedge
  %104 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %105

105:                                              ; preds = %103
  %106 = add i64 %.2286, -1
  tail call void %4(ptr align 1 %3, i64 4) #15
  %107 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr572 = getelementptr inbounds i8, ptr %.3, i64 64
  %108 = load ptr, ptr %sunkaddr572, align 8
  %109 = load ptr, ptr %107, align 8
  %110 = tail call i8 %2(ptr align 1 %3, ptr align 1 %108, ptr align 1 %109) #15
  %111 = icmp eq i8 %110, 1
  %112 = zext i1 %111 to i4
  %113 = getelementptr inbounds i8, ptr %.3, i64 80
  %114 = getelementptr inbounds i8, ptr %.3, i64 88
  %115 = load ptr, ptr %113, align 8
  %116 = load ptr, ptr %114, align 8
  %117 = tail call i8 %2(ptr align 1 %3, ptr align 1 %115, ptr align 1 %116) #15
  %118 = icmp eq i8 %117, 1
  %119 = zext i1 %118 to i4
  %120 = getelementptr inbounds i8, ptr %.3, i64 96
  %121 = getelementptr inbounds i8, ptr %.3, i64 104
  %122 = load ptr, ptr %120, align 8
  %123 = load ptr, ptr %121, align 8
  %124 = tail call i8 %2(ptr align 1 %3, ptr align 1 %122, ptr align 1 %123) #15
  %125 = icmp eq i8 %124, 1
  %126 = zext i1 %125 to i4
  %127 = getelementptr inbounds i8, ptr %.3, i64 112
  %128 = getelementptr inbounds i8, ptr %.3, i64 120
  %129 = load ptr, ptr %127, align 8
  %130 = load ptr, ptr %128, align 8
  %131 = tail call i8 %2(ptr align 1 %3, ptr align 1 %129, ptr align 1 %130) #15
  %132 = icmp eq i8 %131, 1
  %133 = zext i1 %132 to i4
  %134 = or i4 %119, %112
  %135 = or i4 %134, %126
  %136 = or i4 %135, %133
  %.not320 = icmp eq i4 %136, 0
  br i1 %.not320, label %142, label %137

137:                                              ; preds = %105
  %138 = add nuw nsw i4 %119, %112
  %139 = add nuw nsw i4 %138, %126
  %140 = add nuw nsw i4 %139, %133
  %141 = icmp eq i4 %140, 4
  br i1 %141, label %146, label %.backedge

142:                                              ; preds = %105
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr573 = getelementptr inbounds i8, ptr %.3, i64 72
  %143 = load ptr, ptr %sunkaddr573, align 8
  %sunkaddr574 = getelementptr inbounds i8, ptr %.3, i64 80
  %144 = load ptr, ptr %sunkaddr574, align 8
  %145 = tail call i8 %2(ptr align 1 %3, ptr align 1 %143, ptr align 1 %144) #15
  %.not321 = icmp eq i8 %145, 1
  br i1 %.not321, label %.critedge21, label %161

146:                                              ; preds = %137
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr575 = getelementptr inbounds i8, ptr %.3, i64 72
  %147 = load ptr, ptr %sunkaddr575, align 8
  %sunkaddr576 = getelementptr inbounds i8, ptr %.3, i64 80
  %148 = load ptr, ptr %sunkaddr576, align 8
  %149 = tail call i8 %2(ptr align 1 %3, ptr align 1 %147, ptr align 1 %148) #15
  %150 = icmp eq i8 %149, 1
  br i1 %150, label %151, label %.backedge

151:                                              ; preds = %146
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr577 = getelementptr inbounds i8, ptr %.3, i64 88
  %152 = load ptr, ptr %sunkaddr577, align 8
  %sunkaddr578 = getelementptr inbounds i8, ptr %.3, i64 96
  %153 = load ptr, ptr %sunkaddr578, align 8
  %154 = tail call i8 %2(ptr align 1 %3, ptr align 1 %152, ptr align 1 %153) #15
  %155 = icmp eq i8 %154, 1
  br i1 %155, label %156, label %.backedge

156:                                              ; preds = %151
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr579 = getelementptr inbounds i8, ptr %.3, i64 104
  %157 = load ptr, ptr %sunkaddr579, align 8
  %sunkaddr580 = getelementptr inbounds i8, ptr %.3, i64 112
  %158 = load ptr, ptr %sunkaddr580, align 8
  %159 = tail call i8 %2(ptr align 1 %3, ptr align 1 %157, ptr align 1 %158) #15
  %160 = icmp eq i8 %159, 1
  br i1 %160, label %.outer, label %.backedge

161:                                              ; preds = %142
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr581 = getelementptr inbounds i8, ptr %.3, i64 88
  %162 = load ptr, ptr %sunkaddr581, align 8
  %sunkaddr582 = getelementptr inbounds i8, ptr %.3, i64 96
  %163 = load ptr, ptr %sunkaddr582, align 8
  %164 = tail call i8 %2(ptr align 1 %3, ptr align 1 %162, ptr align 1 %163) #15
  %.not322 = icmp eq i8 %164, 1
  br i1 %.not322, label %.critedge21, label %165

165:                                              ; preds = %161
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr583 = getelementptr inbounds i8, ptr %.3, i64 104
  %166 = load ptr, ptr %sunkaddr583, align 8
  %sunkaddr584 = getelementptr inbounds i8, ptr %.3, i64 112
  %167 = load ptr, ptr %sunkaddr584, align 8
  %168 = tail call i8 %2(ptr align 1 %3, ptr align 1 %166, ptr align 1 %167) #15
  %.not323 = icmp eq i8 %168, 1
  br i1 %.not323, label %.critedge21, label %.backedge

.critedge21:                                      ; preds = %165, %161, %142
  tail call void %4(ptr align 1 %3, i64 16) #15
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %104, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %169 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %43

170:                                              ; preds = %.backedge
  %171 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %204, label %172

172:                                              ; preds = %170
  %173 = add i64 %.2286, -1
  tail call void %4(ptr align 1 %3, i64 4) #15
  %174 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr585 = getelementptr inbounds i8, ptr %.3, i64 64
  %175 = load ptr, ptr %sunkaddr585, align 8
  %176 = load ptr, ptr %174, align 8
  %177 = tail call i8 %2(ptr align 1 %3, ptr align 1 %175, ptr align 1 %176) #15
  %178 = icmp ne i8 %177, 1
  %179 = zext i1 %178 to i4
  %180 = getelementptr inbounds i8, ptr %.3, i64 80
  %181 = getelementptr inbounds i8, ptr %.3, i64 88
  %182 = load ptr, ptr %180, align 8
  %183 = load ptr, ptr %181, align 8
  %184 = tail call i8 %2(ptr align 1 %3, ptr align 1 %182, ptr align 1 %183) #15
  %185 = icmp ne i8 %184, 1
  %186 = zext i1 %185 to i4
  %187 = getelementptr inbounds i8, ptr %.3, i64 96
  %188 = getelementptr inbounds i8, ptr %.3, i64 104
  %189 = load ptr, ptr %187, align 8
  %190 = load ptr, ptr %188, align 8
  %191 = tail call i8 %2(ptr align 1 %3, ptr align 1 %189, ptr align 1 %190) #15
  %192 = icmp ne i8 %191, 1
  %193 = zext i1 %192 to i4
  %194 = getelementptr inbounds i8, ptr %.3, i64 112
  %195 = getelementptr inbounds i8, ptr %.3, i64 120
  %196 = load ptr, ptr %194, align 8
  %197 = load ptr, ptr %195, align 8
  %198 = tail call i8 %2(ptr align 1 %3, ptr align 1 %196, ptr align 1 %197) #15
  %199 = icmp ne i8 %198, 1
  %200 = zext i1 %199 to i4
  %201 = or i4 %186, %179
  %202 = or i4 %201, %193
  %203 = or i4 %202, %200
  %.not315 = icmp eq i4 %203, 0
  br i1 %.not315, label %255, label %.critedge25

204:                                              ; preds = %170
  %205 = and i64 %1, 7
  %206 = icmp eq i64 %205, 7
  br i1 %206, label %387, label %.critedge55

.critedge25:                                      ; preds = %271, %266, %261, %255, %172
  %207 = ptrtoint ptr %.3282.ph264 to i64
  %208 = getelementptr inbounds i8, ptr %.3, i64 56
  %209 = ptrtoint ptr %208 to i64
  %210 = sub nuw i64 %209, %207
  %211 = lshr i64 %210, 4
  %212 = shl nuw nsw i64 %211, 3
  %213 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %212
  %214 = sub nsw i64 0, %212
  %215 = getelementptr inbounds i8, ptr %208, i64 %214
  %216 = and i64 %210, 16
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %239, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %239, %.critedge25
  %.027.i = phi ptr [ %243, %239 ], [ %215, %.critedge25 ]
  %.025.i = phi ptr [ %242, %239 ], [ %213, %.critedge25 ]
  %.0.i = phi i64 [ %244, %239 ], [ %211, %.critedge25 ]
  %218 = load i64, ptr %.3282.ph264, align 8
  %219 = load i64, ptr %208, align 8
  store i64 %219, ptr %.3282.ph264, align 8
  store i64 %218, ptr %208, align 8
  %220 = load i64, ptr %.025.i, align 8
  %221 = load i64, ptr %.027.i, align 8
  store i64 %221, ptr %.025.i, align 8
  store i64 %220, ptr %.027.i, align 8
  %222 = icmp ult i64 %.0.i, 2
  br i1 %222, label %sort.quad_reversal.exit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.i
  %223 = lshr i64 %.0.i, 1
  %min.iters.check = icmp ult i64 %.0.i, 44
  br i1 %min.iters.check, label %.lr.ph.preheader465, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph.preheader
  %224 = add nsw i64 %223, -1
  %uglygep = getelementptr i8, ptr %.3, i64 48
  %mul.result.neg = mul i64 %224, -8
  %225 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %226 = icmp ugt ptr %225, %uglygep
  %uglygep56 = getelementptr i8, ptr %.025.i, i64 -8
  %mul.result58.neg = mul i64 %224, -8
  %mul.overflow59 = icmp ugt i64 %224, 2305843009213693951
  %227 = getelementptr i8, ptr %uglygep56, i64 %mul.result58.neg
  %228 = icmp ugt ptr %227, %uglygep56
  %229 = or i1 %228, %mul.overflow59
  %230 = or i1 %226, %229
  br i1 %230, label %.lr.ph.preheader465, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %231 = shl i64 %223, 3
  %uglygep61 = getelementptr i8, ptr %uglygep60, i64 %231
  %uglygep62 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep63 = getelementptr i8, ptr %uglygep62, i64 %231
  %uglygep64 = getelementptr i8, ptr %.3, i64 56
  %232 = mul i64 %223, -8
  %uglygep65 = getelementptr i8, ptr %uglygep64, i64 %232
  %uglygep66 = getelementptr i8, ptr %.025.i, i64 %232
  %bound0 = icmp ult ptr %uglygep60, %uglygep63
  %bound1 = icmp ult ptr %uglygep62, %uglygep61
  %found.conflict = and i1 %bound0, %bound1
  %bound067 = icmp ult ptr %uglygep60, %208
  %bound168 = icmp ult ptr %uglygep65, %uglygep61
  %found.conflict69 = and i1 %bound067, %bound168
  %conflict.rdx = or i1 %found.conflict, %found.conflict69
  %bound070 = icmp ult ptr %uglygep60, %.025.i
  %bound171 = icmp ult ptr %uglygep66, %uglygep61
  %found.conflict72 = and i1 %bound070, %bound171
  %conflict.rdx73 = or i1 %conflict.rdx, %found.conflict72
  %bound074 = icmp ult ptr %uglygep62, %208
  %bound175 = icmp ult ptr %uglygep65, %uglygep63
  %found.conflict76 = and i1 %bound074, %bound175
  %conflict.rdx77 = or i1 %conflict.rdx73, %found.conflict76
  %bound078 = icmp ult ptr %uglygep62, %.025.i
  %bound179 = icmp ult ptr %uglygep66, %uglygep63
  %found.conflict80 = and i1 %bound078, %bound179
  %conflict.rdx81 = or i1 %conflict.rdx77, %found.conflict80
  %bound082 = icmp ult ptr %uglygep65, %.025.i
  %bound183 = icmp ult ptr %uglygep66, %208
  %found.conflict84 = and i1 %bound082, %bound183
  %conflict.rdx85 = or i1 %conflict.rdx81, %found.conflict84
  br i1 %conflict.rdx85, label %.lr.ph.preheader465, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %233 = lshr i64 %.0.i, 1
  %n.vec = and i64 %223, 9223372036854775806
  %ind.end = and i64 %233, 1
  %234 = shl i64 %n.vec, 3
  %ind.end86 = getelementptr i8, ptr %.3282.ph264, i64 %234
  %235 = mul i64 %n.vec, -8
  %ind.end88 = getelementptr i8, ptr %.025.i, i64 %235
  %236 = shl i64 %n.vec, 3
  %ind.end90 = getelementptr i8, ptr %.027.i, i64 %236
  %237 = mul i64 %n.vec, -8
  %ind.end92 = getelementptr i8, ptr %208, i64 %237
  %next.gep95245 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep526 = getelementptr i8, ptr %.3, i64 40
  %uglygep531 = getelementptr i8, ptr %.025.i, i64 -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv536 = phi i64 [ %lsr.iv.next537, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv534 = phi ptr [ %uglygep535, %vector.body ], [ %next.gep248, %vector.ph ]
  %lsr.iv532 = phi ptr [ %uglygep533, %vector.body ], [ %uglygep531, %vector.ph ]
  %lsr.iv529 = phi ptr [ %uglygep530, %vector.body ], [ %next.gep95245, %vector.ph ]
  %lsr.iv527 = phi ptr [ %uglygep528, %vector.body ], [ %uglygep526, %vector.ph ]
  %wide.load = load <2 x i64>, ptr %lsr.iv534, align 8, !alias.scope !435, !noalias !438
  %wide.load97 = load <2 x i64>, ptr %lsr.iv527, align 8, !alias.scope !442, !noalias !443
  %reverse = shufflevector <2 x i64> %wide.load97, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %lsr.iv534, align 8, !alias.scope !435, !noalias !438
  %reverse98 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse98, ptr %lsr.iv527, align 8, !alias.scope !442, !noalias !443
  %wide.load99 = load <2 x i64>, ptr %lsr.iv532, align 8, !alias.scope !443
  %reverse100 = shufflevector <2 x i64> %wide.load99, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load101 = load <2 x i64>, ptr %lsr.iv529, align 8, !alias.scope !444, !noalias !445
  %reverse102 = shufflevector <2 x i64> %wide.load101, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse102, ptr %lsr.iv532, align 8, !alias.scope !443
  store <2 x i64> %reverse100, ptr %lsr.iv529, align 8, !alias.scope !444, !noalias !445
  %uglygep528 = getelementptr i8, ptr %lsr.iv527, i64 -16
  %uglygep530 = getelementptr i8, ptr %lsr.iv529, i64 16
  %uglygep533 = getelementptr i8, ptr %lsr.iv532, i64 -16
  %uglygep535 = getelementptr i8, ptr %lsr.iv534, i64 16
  %lsr.iv.next537 = add nsw i64 %lsr.iv536, -2
  %238 = icmp eq i64 %lsr.iv.next537, 0
  br i1 %238, label %middle.block, label %vector.body, !llvm.loop !446

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %223, %n.vec
  br i1 %cmp.n, label %sort.quad_reversal.exit, label %.lr.ph.preheader465

.lr.ph.preheader465:                              ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %.lr.ph.preheader
  %.1.i94.ph = phi i64 [ %ind.end, %middle.block ], [ %223, %.lr.ph.preheader ], [ %223, %vector.scevcheck ], [ %223, %vector.memcheck ]
  %.024.i93.ph = phi ptr [ %ind.end86, %middle.block ], [ %.3282.ph264, %.lr.ph.preheader ], [ %.3282.ph264, %vector.scevcheck ], [ %.3282.ph264, %vector.memcheck ]
  %.126.i92.ph = phi ptr [ %ind.end88, %middle.block ], [ %.025.i, %.lr.ph.preheader ], [ %.025.i, %vector.scevcheck ], [ %.025.i, %vector.memcheck ]
  %.128.i91.ph = phi ptr [ %ind.end90, %middle.block ], [ %.027.i, %.lr.ph.preheader ], [ %.027.i, %vector.scevcheck ], [ %.027.i, %vector.memcheck ]
  %.029.i90.ph = phi ptr [ %ind.end92, %middle.block ], [ %208, %.lr.ph.preheader ], [ %208, %vector.scevcheck ], [ %208, %vector.memcheck ]
  %uglygep538 = getelementptr i8, ptr %.024.i93.ph, i64 8
  %uglygep541 = getelementptr i8, ptr %.126.i92.ph, i64 -8
  %uglygep544 = getelementptr i8, ptr %.128.i91.ph, i64 8
  %uglygep547 = getelementptr i8, ptr %.029.i90.ph, i64 -8
  br label %.lr.ph

239:                                              ; preds = %.critedge25
  %240 = load i64, ptr %213, align 8
  %241 = load i64, ptr %215, align 8
  store i64 %241, ptr %213, align 8
  %242 = getelementptr inbounds i8, ptr %213, i64 -8
  store i64 %240, ptr %215, align 8
  %243 = getelementptr inbounds i8, ptr %215, i64 8
  %244 = add nsw i64 %211, -1
  br label %._crit_edge.i

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader465
  %lsr.iv548 = phi ptr [ %uglygep547, %.lr.ph.preheader465 ], [ %uglygep549, %.lr.ph ]
  %lsr.iv545 = phi ptr [ %uglygep544, %.lr.ph.preheader465 ], [ %uglygep546, %.lr.ph ]
  %lsr.iv542 = phi ptr [ %uglygep541, %.lr.ph.preheader465 ], [ %uglygep543, %.lr.ph ]
  %lsr.iv539 = phi ptr [ %uglygep538, %.lr.ph.preheader465 ], [ %uglygep540, %.lr.ph ]
  %.1.i94 = phi i64 [ %245, %.lr.ph ], [ %.1.i94.ph, %.lr.ph.preheader465 ]
  %245 = add nsw i64 %.1.i94, -1
  %246 = load i64, ptr %lsr.iv539, align 8
  %247 = load i64, ptr %lsr.iv548, align 8
  store i64 %247, ptr %lsr.iv539, align 8
  store i64 %246, ptr %lsr.iv548, align 8
  %248 = load i64, ptr %lsr.iv542, align 8
  %249 = load i64, ptr %lsr.iv545, align 8
  store i64 %249, ptr %lsr.iv542, align 8
  store i64 %248, ptr %lsr.iv545, align 8
  %uglygep540 = getelementptr i8, ptr %lsr.iv539, i64 8
  %uglygep543 = getelementptr i8, ptr %lsr.iv542, i64 -8
  %uglygep546 = getelementptr i8, ptr %lsr.iv545, i64 8
  %uglygep549 = getelementptr i8, ptr %lsr.iv548, i64 -8
  %250 = icmp eq i64 %245, 0
  br i1 %250, label %sort.quad_reversal.exit, label %.lr.ph, !llvm.loop !447

sort.quad_reversal.exit:                          ; preds = %.lr.ph, %middle.block, %._crit_edge.i
  %251 = add nuw nsw i4 %186, %179
  %252 = add nuw nsw i4 %251, %193
  %253 = add nuw i4 %252, %200
  %254 = zext i4 %253 to i32
  switch i32 %254, label %.critedge37 [
    i32 4, label %276
    i32 0, label %288
  ]

255:                                              ; preds = %172
  %256 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %4(ptr align 1 %3, i64 1) #15
  %257 = load ptr, ptr %256, align 8
  %sunkaddr586 = getelementptr inbounds i8, ptr %.3, i64 64
  %258 = load ptr, ptr %sunkaddr586, align 8
  %259 = tail call i8 %2(ptr align 1 %3, ptr align 1 %257, ptr align 1 %258) #15
  %260 = icmp eq i8 %259, 1
  br i1 %260, label %261, label %.critedge25

261:                                              ; preds = %255
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr587 = getelementptr inbounds i8, ptr %.3, i64 72
  %262 = load ptr, ptr %sunkaddr587, align 8
  %sunkaddr588 = getelementptr inbounds i8, ptr %.3, i64 80
  %263 = load ptr, ptr %sunkaddr588, align 8
  %264 = tail call i8 %2(ptr align 1 %3, ptr align 1 %262, ptr align 1 %263) #15
  %265 = icmp eq i8 %264, 1
  br i1 %265, label %266, label %.critedge25

266:                                              ; preds = %261
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr589 = getelementptr inbounds i8, ptr %.3, i64 88
  %267 = load ptr, ptr %sunkaddr589, align 8
  %sunkaddr590 = getelementptr inbounds i8, ptr %.3, i64 96
  %268 = load ptr, ptr %sunkaddr590, align 8
  %269 = tail call i8 %2(ptr align 1 %3, ptr align 1 %267, ptr align 1 %268) #15
  %270 = icmp eq i8 %269, 1
  br i1 %270, label %271, label %.critedge25

271:                                              ; preds = %266
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr591 = getelementptr inbounds i8, ptr %.3, i64 104
  %272 = load ptr, ptr %sunkaddr591, align 8
  %sunkaddr592 = getelementptr inbounds i8, ptr %.3, i64 112
  %273 = load ptr, ptr %sunkaddr592, align 8
  %274 = tail call i8 %2(ptr align 1 %3, ptr align 1 %272, ptr align 1 %273) #15
  %275 = icmp eq i8 %274, 1
  br i1 %275, label %.backedge, label %.critedge25

276:                                              ; preds = %sort.quad_reversal.exit
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr593 = getelementptr inbounds i8, ptr %.3, i64 72
  %277 = load ptr, ptr %sunkaddr593, align 8
  %sunkaddr594 = getelementptr inbounds i8, ptr %.3, i64 80
  %278 = load ptr, ptr %sunkaddr594, align 8
  %279 = tail call i8 %2(ptr align 1 %3, ptr align 1 %277, ptr align 1 %278) #15
  %.not316 = icmp eq i8 %279, 1
  br i1 %.not316, label %.critedge37, label %280

280:                                              ; preds = %276
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr595 = getelementptr inbounds i8, ptr %.3, i64 88
  %281 = load ptr, ptr %sunkaddr595, align 8
  %sunkaddr596 = getelementptr inbounds i8, ptr %.3, i64 96
  %282 = load ptr, ptr %sunkaddr596, align 8
  %283 = tail call i8 %2(ptr align 1 %3, ptr align 1 %281, ptr align 1 %282) #15
  %.not317 = icmp eq i8 %283, 1
  br i1 %.not317, label %.critedge37, label %284

284:                                              ; preds = %280
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr597 = getelementptr inbounds i8, ptr %.3, i64 104
  %285 = load ptr, ptr %sunkaddr597, align 8
  %sunkaddr598 = getelementptr inbounds i8, ptr %.3, i64 112
  %286 = load ptr, ptr %sunkaddr598, align 8
  %287 = tail call i8 %2(ptr align 1 %3, ptr align 1 %285, ptr align 1 %286) #15
  %.not318 = icmp eq i8 %287, 1
  br i1 %.not318, label %.critedge37, label %.backedge

288:                                              ; preds = %sort.quad_reversal.exit
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr599 = getelementptr inbounds i8, ptr %.3, i64 72
  %289 = load ptr, ptr %sunkaddr599, align 8
  %sunkaddr600 = getelementptr inbounds i8, ptr %.3, i64 80
  %290 = load ptr, ptr %sunkaddr600, align 8
  %291 = tail call i8 %2(ptr align 1 %3, ptr align 1 %289, ptr align 1 %290) #15
  %292 = icmp eq i8 %291, 1
  br i1 %292, label %293, label %.critedge37

293:                                              ; preds = %288
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr601 = getelementptr inbounds i8, ptr %.3, i64 88
  %294 = load ptr, ptr %sunkaddr601, align 8
  %sunkaddr602 = getelementptr inbounds i8, ptr %.3, i64 96
  %295 = load ptr, ptr %sunkaddr602, align 8
  %296 = tail call i8 %2(ptr align 1 %3, ptr align 1 %294, ptr align 1 %295) #15
  %297 = icmp eq i8 %296, 1
  br i1 %297, label %298, label %.critedge37

298:                                              ; preds = %293
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr603 = getelementptr inbounds i8, ptr %.3, i64 104
  %299 = load ptr, ptr %sunkaddr603, align 8
  %sunkaddr604 = getelementptr inbounds i8, ptr %.3, i64 112
  %300 = load ptr, ptr %sunkaddr604, align 8
  %301 = tail call i8 %2(ptr align 1 %3, ptr align 1 %299, ptr align 1 %300) #15
  %302 = icmp eq i8 %301, 1
  br i1 %302, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %298, %293, %288, %284, %280, %276, %sort.quad_reversal.exit
  %303 = icmp ne i8 %198, 1
  %304 = icmp ne i8 %191, 1
  %305 = icmp ne i8 %184, 1
  %306 = icmp ne i8 %177, 1
  %307 = getelementptr inbounds i8, ptr %.3, i64 120
  %.42 = select i1 %306, i64 0, i64 8
  %.43 = select i1 %306, i64 8, i64 0
  %308 = getelementptr inbounds i8, ptr %171, i64 %.43
  %309 = load i64, ptr %308, align 8
  %310 = getelementptr inbounds i8, ptr %171, i64 %.42
  %311 = load i64, ptr %310, align 8
  %sunkaddr605 = getelementptr inbounds i8, ptr %.3, i64 64
  store i64 %311, ptr %sunkaddr605, align 8
  %sunkaddr606 = getelementptr inbounds i8, ptr %.3, i64 72
  store i64 %309, ptr %sunkaddr606, align 8
  %.44 = select i1 %305, i64 0, i64 8
  %.45 = select i1 %305, i64 8, i64 0
  %312 = getelementptr inbounds i8, ptr %180, i64 %.45
  %313 = load i64, ptr %312, align 8
  %314 = getelementptr inbounds i8, ptr %180, i64 %.44
  %315 = load i64, ptr %314, align 8
  %sunkaddr607 = getelementptr inbounds i8, ptr %.3, i64 80
  store i64 %315, ptr %sunkaddr607, align 8
  %sunkaddr608 = getelementptr inbounds i8, ptr %.3, i64 88
  store i64 %313, ptr %sunkaddr608, align 8
  %.46 = select i1 %304, i64 0, i64 8
  %.47 = select i1 %304, i64 8, i64 0
  %316 = getelementptr inbounds i8, ptr %187, i64 %.47
  %317 = load i64, ptr %316, align 8
  %318 = getelementptr inbounds i8, ptr %187, i64 %.46
  %319 = load i64, ptr %318, align 8
  %sunkaddr609 = getelementptr inbounds i8, ptr %.3, i64 96
  store i64 %319, ptr %sunkaddr609, align 8
  %sunkaddr610 = getelementptr inbounds i8, ptr %.3, i64 104
  store i64 %317, ptr %sunkaddr610, align 8
  %.48 = select i1 %303, i64 0, i64 8
  %.49 = select i1 %303, i64 8, i64 0
  %320 = getelementptr inbounds i8, ptr %194, i64 %.49
  %321 = load i64, ptr %320, align 8
  %322 = getelementptr inbounds i8, ptr %194, i64 %.48
  %323 = load i64, ptr %322, align 8
  %sunkaddr611 = getelementptr inbounds i8, ptr %.3, i64 112
  store i64 %323, ptr %sunkaddr611, align 8
  store i64 %321, ptr %307, align 8
  tail call void %4(ptr align 1 %3, i64 1) #15
  %324 = load ptr, ptr %sunkaddr606, align 8
  %325 = load ptr, ptr %sunkaddr607, align 8
  %326 = tail call i8 %2(ptr align 1 %3, ptr align 1 %324, ptr align 1 %325) #15
  %327 = icmp eq i8 %326, 1
  br i1 %327, label %.critedge51, label %330

328:                                              ; preds = %.critedge51, %335
  %329 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %43

330:                                              ; preds = %.critedge37
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr612 = getelementptr inbounds i8, ptr %.3, i64 88
  %331 = load ptr, ptr %sunkaddr612, align 8
  %sunkaddr613 = getelementptr inbounds i8, ptr %.3, i64 96
  %332 = load ptr, ptr %sunkaddr613, align 8
  %333 = tail call i8 %2(ptr align 1 %3, ptr align 1 %331, ptr align 1 %332) #15
  %334 = icmp eq i8 %333, 1
  br i1 %334, label %.critedge51, label %335

335:                                              ; preds = %330
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr614 = getelementptr inbounds i8, ptr %.3, i64 104
  %336 = load ptr, ptr %sunkaddr614, align 8
  %sunkaddr615 = getelementptr inbounds i8, ptr %.3, i64 112
  %337 = load ptr, ptr %sunkaddr615, align 8
  %338 = tail call i8 %2(ptr align 1 %3, ptr align 1 %336, ptr align 1 %337) #15
  %339 = icmp eq i8 %338, 1
  br i1 %339, label %.critedge51, label %328

.critedge51:                                      ; preds = %335, %330, %.critedge37
  tail call void %4(ptr align 1 %3, i64 16) #15
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %171, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %328

340:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %387
  %341 = getelementptr inbounds i8, ptr %.3, i64 56
  %342 = ptrtoint ptr %341 to i64
  %343 = ptrtoint ptr %.3282.ph264 to i64
  %344 = sub nuw i64 %342, %343
  %345 = lshr i64 %344, 4
  %346 = shl nuw nsw i64 %345, 3
  %347 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %346
  %348 = sub nsw i64 0, %346
  %349 = getelementptr inbounds i8, ptr %341, i64 %348
  %350 = and i64 %344, 16
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %375, label %._crit_edge.i331

._crit_edge.i331:                                 ; preds = %375, %340
  %.027.i332 = phi ptr [ %379, %375 ], [ %349, %340 ]
  %.025.i333 = phi ptr [ %378, %375 ], [ %347, %340 ]
  %.0.i334 = phi i64 [ %380, %375 ], [ %345, %340 ]
  %352 = load i64, ptr %.3282.ph264, align 8
  %353 = load i64, ptr %341, align 8
  store i64 %353, ptr %.3282.ph264, align 8
  store i64 %352, ptr %341, align 8
  %354 = load i64, ptr %.025.i333, align 8
  %355 = load i64, ptr %.027.i332, align 8
  store i64 %355, ptr %.025.i333, align 8
  store i64 %354, ptr %.027.i332, align 8
  %356 = icmp ult i64 %.0.i334, 2
  br i1 %356, label %.loopexit, label %.lr.ph106.preheader

.lr.ph106.preheader:                              ; preds = %._crit_edge.i331
  %357 = lshr i64 %.0.i334, 1
  %min.iters.check144 = icmp ult i64 %.0.i334, 48
  br i1 %min.iters.check144, label %.lr.ph106.preheader464, label %vector.scevcheck103

vector.scevcheck103:                              ; preds = %.lr.ph106.preheader
  %358 = add nsw i64 %357, -1
  %uglygep104 = getelementptr i8, ptr %.3, i64 48
  %mul.result106.neg = mul i64 %358, -8
  %359 = getelementptr i8, ptr %uglygep104, i64 %mul.result106.neg
  %360 = icmp ugt ptr %359, %uglygep104
  %uglygep108 = getelementptr i8, ptr %.025.i333, i64 -8
  %mul.result110.neg = mul i64 %358, -8
  %mul.overflow111 = icmp ugt i64 %358, 2305843009213693951
  %361 = getelementptr i8, ptr %uglygep108, i64 %mul.result110.neg
  %362 = icmp ugt ptr %361, %uglygep108
  %363 = or i1 %362, %mul.overflow111
  %364 = or i1 %360, %363
  br i1 %364, label %.lr.ph106.preheader464, label %vector.memcheck112

vector.memcheck112:                               ; preds = %vector.scevcheck103
  %uglygep113 = getelementptr i8, ptr %.3282.ph264, i64 8
  %365 = shl i64 %357, 3
  %366 = add i64 %365, 8
  %uglygep114 = getelementptr i8, ptr %.3282.ph264, i64 %366
  %uglygep115 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep116 = getelementptr i8, ptr %.027.i332, i64 %366
  %367 = sub i64 56, %365
  %uglygep117 = getelementptr i8, ptr %.3, i64 %367
  %368 = mul i64 %357, -8
  %uglygep118 = getelementptr i8, ptr %.025.i333, i64 %368
  %bound0119 = icmp ult ptr %uglygep113, %uglygep116
  %bound1120 = icmp ult ptr %uglygep115, %uglygep114
  %found.conflict121 = and i1 %bound0119, %bound1120
  %bound0122 = icmp ult ptr %uglygep113, %341
  %bound1123 = icmp ult ptr %uglygep117, %uglygep114
  %found.conflict124 = and i1 %bound0122, %bound1123
  %conflict.rdx125 = or i1 %found.conflict121, %found.conflict124
  %bound0126 = icmp ult ptr %uglygep113, %.025.i333
  %bound1127 = icmp ult ptr %uglygep118, %uglygep114
  %found.conflict128 = and i1 %bound0126, %bound1127
  %conflict.rdx129 = or i1 %conflict.rdx125, %found.conflict128
  %bound0130 = icmp ult ptr %uglygep115, %341
  %bound1131 = icmp ult ptr %uglygep117, %uglygep116
  %found.conflict132 = and i1 %bound0130, %bound1131
  %conflict.rdx133 = or i1 %conflict.rdx129, %found.conflict132
  %bound0134 = icmp ult ptr %uglygep115, %.025.i333
  %bound1135 = icmp ult ptr %uglygep118, %uglygep116
  %found.conflict136 = and i1 %bound0134, %bound1135
  %conflict.rdx137 = or i1 %conflict.rdx133, %found.conflict136
  %bound0138 = icmp ult ptr %uglygep117, %.025.i333
  %bound1139 = icmp ult ptr %uglygep118, %341
  %found.conflict140 = and i1 %bound0138, %bound1139
  %conflict.rdx141 = or i1 %conflict.rdx137, %found.conflict140
  br i1 %conflict.rdx141, label %.lr.ph106.preheader464, label %vector.ph145

vector.ph145:                                     ; preds = %vector.memcheck112
  %369 = lshr i64 %.0.i334, 1
  %n.vec147 = and i64 %357, 9223372036854775806
  %ind.end148 = and i64 %369, 1
  %370 = shl i64 %n.vec147, 3
  %ind.end150 = getelementptr i8, ptr %.3282.ph264, i64 %370
  %371 = mul i64 %n.vec147, -8
  %ind.end152 = getelementptr i8, ptr %.025.i333, i64 %371
  %372 = shl i64 %n.vec147, 3
  %ind.end154 = getelementptr i8, ptr %.027.i332, i64 %372
  %373 = mul i64 %n.vec147, -8
  %ind.end156 = getelementptr i8, ptr %341, i64 %373
  %next.gep161252 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep163249 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep514 = getelementptr i8, ptr %.3, i64 40
  %uglygep519 = getelementptr i8, ptr %.025.i333, i64 -16
  br label %vector.body159

vector.body159:                                   ; preds = %vector.body159, %vector.ph145
  %lsr.iv524 = phi i64 [ %lsr.iv.next525, %vector.body159 ], [ %n.vec147, %vector.ph145 ]
  %lsr.iv522 = phi ptr [ %uglygep523, %vector.body159 ], [ %next.gep161252, %vector.ph145 ]
  %lsr.iv520 = phi ptr [ %uglygep521, %vector.body159 ], [ %uglygep519, %vector.ph145 ]
  %lsr.iv517 = phi ptr [ %uglygep518, %vector.body159 ], [ %next.gep163249, %vector.ph145 ]
  %lsr.iv515 = phi ptr [ %uglygep516, %vector.body159 ], [ %uglygep514, %vector.ph145 ]
  %wide.load165 = load <2 x i64>, ptr %lsr.iv522, align 8, !alias.scope !448, !noalias !451
  %wide.load166 = load <2 x i64>, ptr %lsr.iv515, align 8, !alias.scope !455, !noalias !456
  %reverse167 = shufflevector <2 x i64> %wide.load166, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse167, ptr %lsr.iv522, align 8, !alias.scope !448, !noalias !451
  %reverse168 = shufflevector <2 x i64> %wide.load165, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse168, ptr %lsr.iv515, align 8, !alias.scope !455, !noalias !456
  %wide.load169 = load <2 x i64>, ptr %lsr.iv520, align 8, !alias.scope !456
  %reverse170 = shufflevector <2 x i64> %wide.load169, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load171 = load <2 x i64>, ptr %lsr.iv517, align 8, !alias.scope !457, !noalias !458
  %reverse172 = shufflevector <2 x i64> %wide.load171, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse172, ptr %lsr.iv520, align 8, !alias.scope !456
  store <2 x i64> %reverse170, ptr %lsr.iv517, align 8, !alias.scope !457, !noalias !458
  %uglygep516 = getelementptr i8, ptr %lsr.iv515, i64 -16
  %uglygep518 = getelementptr i8, ptr %lsr.iv517, i64 16
  %uglygep521 = getelementptr i8, ptr %lsr.iv520, i64 -16
  %uglygep523 = getelementptr i8, ptr %lsr.iv522, i64 16
  %lsr.iv.next525 = add nsw i64 %lsr.iv524, -2
  %374 = icmp eq i64 %lsr.iv.next525, 0
  br i1 %374, label %middle.block142, label %vector.body159, !llvm.loop !459

middle.block142:                                  ; preds = %vector.body159
  %cmp.n158 = icmp eq i64 %357, %n.vec147
  br i1 %cmp.n158, label %.loopexit, label %.lr.ph106.preheader464

.lr.ph106.preheader464:                           ; preds = %middle.block142, %vector.memcheck112, %vector.scevcheck103, %.lr.ph106.preheader
  %.1.i339105.ph = phi i64 [ %ind.end148, %middle.block142 ], [ %357, %.lr.ph106.preheader ], [ %357, %vector.scevcheck103 ], [ %357, %vector.memcheck112 ]
  %.024.i338104.ph = phi ptr [ %ind.end150, %middle.block142 ], [ %.3282.ph264, %.lr.ph106.preheader ], [ %.3282.ph264, %vector.scevcheck103 ], [ %.3282.ph264, %vector.memcheck112 ]
  %.126.i337103.ph = phi ptr [ %ind.end152, %middle.block142 ], [ %.025.i333, %.lr.ph106.preheader ], [ %.025.i333, %vector.scevcheck103 ], [ %.025.i333, %vector.memcheck112 ]
  %.128.i336102.ph = phi ptr [ %ind.end154, %middle.block142 ], [ %.027.i332, %.lr.ph106.preheader ], [ %.027.i332, %vector.scevcheck103 ], [ %.027.i332, %vector.memcheck112 ]
  %.029.i335101.ph = phi ptr [ %ind.end156, %middle.block142 ], [ %341, %.lr.ph106.preheader ], [ %341, %vector.scevcheck103 ], [ %341, %vector.memcheck112 ]
  %uglygep502 = getelementptr i8, ptr %.024.i338104.ph, i64 8
  %uglygep505 = getelementptr i8, ptr %.126.i337103.ph, i64 -8
  %uglygep508 = getelementptr i8, ptr %.128.i336102.ph, i64 8
  %uglygep511 = getelementptr i8, ptr %.029.i335101.ph, i64 -8
  br label %.lr.ph106

375:                                              ; preds = %340
  %376 = load i64, ptr %347, align 8
  %377 = load i64, ptr %349, align 8
  store i64 %377, ptr %347, align 8
  %378 = getelementptr inbounds i8, ptr %347, i64 -8
  store i64 %376, ptr %349, align 8
  %379 = getelementptr inbounds i8, ptr %349, i64 8
  %380 = add nsw i64 %345, -1
  br label %._crit_edge.i331

.lr.ph106:                                        ; preds = %.lr.ph106, %.lr.ph106.preheader464
  %lsr.iv512 = phi ptr [ %uglygep511, %.lr.ph106.preheader464 ], [ %uglygep513, %.lr.ph106 ]
  %lsr.iv509 = phi ptr [ %uglygep508, %.lr.ph106.preheader464 ], [ %uglygep510, %.lr.ph106 ]
  %lsr.iv506 = phi ptr [ %uglygep505, %.lr.ph106.preheader464 ], [ %uglygep507, %.lr.ph106 ]
  %lsr.iv503 = phi ptr [ %uglygep502, %.lr.ph106.preheader464 ], [ %uglygep504, %.lr.ph106 ]
  %.1.i339105 = phi i64 [ %381, %.lr.ph106 ], [ %.1.i339105.ph, %.lr.ph106.preheader464 ]
  %381 = add nsw i64 %.1.i339105, -1
  %382 = load i64, ptr %lsr.iv503, align 8
  %383 = load i64, ptr %lsr.iv512, align 8
  store i64 %383, ptr %lsr.iv503, align 8
  store i64 %382, ptr %lsr.iv512, align 8
  %384 = load i64, ptr %lsr.iv506, align 8
  %385 = load i64, ptr %lsr.iv509, align 8
  store i64 %385, ptr %lsr.iv506, align 8
  store i64 %384, ptr %lsr.iv509, align 8
  %uglygep504 = getelementptr i8, ptr %lsr.iv503, i64 8
  %uglygep507 = getelementptr i8, ptr %lsr.iv506, i64 -8
  %uglygep510 = getelementptr i8, ptr %lsr.iv509, i64 8
  %uglygep513 = getelementptr i8, ptr %lsr.iv512, i64 -8
  %386 = icmp eq i64 %381, 0
  br i1 %386, label %.loopexit, label %.lr.ph106, !llvm.loop !460

387:                                              ; preds = %204
  %388 = getelementptr inbounds i8, ptr %.3, i64 104
  %389 = getelementptr inbounds i8, ptr %.3, i64 112
  tail call void %4(ptr align 1 %3, i64 1) #15
  %390 = load ptr, ptr %388, align 8
  %391 = load ptr, ptr %389, align 8
  %392 = tail call i8 %2(ptr align 1 %3, ptr align 1 %390, ptr align 1 %391) #15
  %.not314 = icmp eq i8 %392, 1
  br i1 %.not314, label %.critedge55.thread, label %340

.critedge55:                                      ; preds = %204
  %393 = icmp ugt i64 %205, 5
  br i1 %393, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %387
  %394 = getelementptr inbounds i8, ptr %.3, i64 96
  %395 = getelementptr inbounds i8, ptr %.3, i64 104
  tail call void %4(ptr align 1 %3, i64 1) #15
  %396 = load ptr, ptr %394, align 8
  %397 = load ptr, ptr %395, align 8
  %398 = tail call i8 %2(ptr align 1 %3, ptr align 1 %396, ptr align 1 %397) #15
  %.not313 = icmp eq i8 %398, 1
  br i1 %.not313, label %.critedge57.thread, label %340

.critedge57:                                      ; preds = %.critedge55
  %399 = icmp eq i64 %205, 5
  br i1 %399, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %400 = getelementptr inbounds i8, ptr %.3, i64 88
  %401 = getelementptr inbounds i8, ptr %.3, i64 96
  tail call void %4(ptr align 1 %3, i64 1) #15
  %402 = load ptr, ptr %400, align 8
  %403 = load ptr, ptr %401, align 8
  %404 = tail call i8 %2(ptr align 1 %3, ptr align 1 %402, ptr align 1 %403) #15
  %.not312 = icmp eq i8 %404, 1
  br i1 %.not312, label %.critedge59.thread, label %340

.critedge59:                                      ; preds = %.critedge57
  %405 = icmp ugt i64 %205, 3
  br i1 %405, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %406 = getelementptr inbounds i8, ptr %.3, i64 80
  %407 = getelementptr inbounds i8, ptr %.3, i64 88
  tail call void %4(ptr align 1 %3, i64 1) #15
  %408 = load ptr, ptr %406, align 8
  %409 = load ptr, ptr %407, align 8
  %410 = tail call i8 %2(ptr align 1 %3, ptr align 1 %408, ptr align 1 %409) #15
  %.not311 = icmp eq i8 %410, 1
  br i1 %.not311, label %.critedge61.thread, label %340

.critedge61:                                      ; preds = %.critedge59
  %411 = icmp eq i64 %205, 3
  br i1 %411, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %412 = getelementptr inbounds i8, ptr %.3, i64 72
  %413 = getelementptr inbounds i8, ptr %.3, i64 80
  tail call void %4(ptr align 1 %3, i64 1) #15
  %414 = load ptr, ptr %412, align 8
  %415 = load ptr, ptr %413, align 8
  %416 = tail call i8 %2(ptr align 1 %3, ptr align 1 %414, ptr align 1 %415) #15
  %.not310 = icmp eq i8 %416, 1
  br i1 %.not310, label %.critedge63.thread, label %340

.critedge63:                                      ; preds = %.critedge61
  %417 = icmp ugt i64 %205, 1
  br i1 %417, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %418 = getelementptr inbounds i8, ptr %.3, i64 72
  tail call void %4(ptr align 1 %3, i64 1) #15
  %sunkaddr616 = getelementptr inbounds i8, ptr %.3, i64 64
  %419 = load ptr, ptr %sunkaddr616, align 8
  %420 = load ptr, ptr %418, align 8
  %421 = tail call i8 %2(ptr align 1 %3, ptr align 1 %419, ptr align 1 %420) #15
  %.not309 = icmp eq i8 %421, 1
  br i1 %.not309, label %.critedge65.thread, label %340

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %205, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %422 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %4(ptr align 1 %3, i64 1) #15
  %423 = load ptr, ptr %422, align 8
  %sunkaddr617 = getelementptr inbounds i8, ptr %.3, i64 64
  %424 = load ptr, ptr %sunkaddr617, align 8
  %425 = tail call i8 %2(ptr align 1 %3, ptr align 1 %423, ptr align 1 %424) #15
  %.not308 = icmp eq i8 %425, 1
  br i1 %.not308, label %.critedge67, label %340

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %426 = shl nuw nsw i64 %205, 3
  %427 = getelementptr inbounds i8, ptr %171, i64 %426
  %428 = getelementptr inbounds i8, ptr %427, i64 -8
  %429 = ptrtoint ptr %428 to i64
  %430 = ptrtoint ptr %.3282.ph264 to i64
  %431 = sub nuw i64 %429, %430
  %432 = lshr i64 %431, 4
  %433 = shl nuw nsw i64 %432, 3
  %434 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %433
  %435 = sub nsw i64 0, %433
  %436 = getelementptr inbounds i8, ptr %428, i64 %435
  %437 = and i64 %431, 16
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %465, label %._crit_edge.i341

._crit_edge.i341:                                 ; preds = %465, %.critedge67
  %.027.i342 = phi ptr [ %469, %465 ], [ %436, %.critedge67 ]
  %.025.i343 = phi ptr [ %468, %465 ], [ %434, %.critedge67 ]
  %.0.i344 = phi i64 [ %470, %465 ], [ %432, %.critedge67 ]
  %439 = load i64, ptr %.3282.ph264, align 8
  %440 = load i64, ptr %428, align 8
  store i64 %440, ptr %.3282.ph264, align 8
  store i64 %439, ptr %428, align 8
  %441 = load i64, ptr %.025.i343, align 8
  %442 = load i64, ptr %.027.i342, align 8
  store i64 %442, ptr %.025.i343, align 8
  store i64 %441, ptr %.027.i342, align 8
  %443 = icmp ult i64 %.0.i344, 2
  br i1 %443, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader

.lr.ph112.preheader:                              ; preds = %._crit_edge.i341
  %444 = lshr i64 %.0.i344, 1
  %min.iters.check215 = icmp ult i64 %.0.i344, 48
  br i1 %min.iters.check215, label %.lr.ph112.preheader463, label %vector.scevcheck174

vector.scevcheck174:                              ; preds = %.lr.ph112.preheader
  %445 = add nsw i64 %444, -1
  %446 = add nuw nsw i64 %426, 48
  %uglygep175 = getelementptr i8, ptr %.3, i64 %446
  %mul.result177.neg = mul i64 %445, -8
  %447 = getelementptr i8, ptr %uglygep175, i64 %mul.result177.neg
  %448 = icmp ugt ptr %447, %uglygep175
  %uglygep179 = getelementptr i8, ptr %.025.i343, i64 -8
  %mul.result181.neg = mul i64 %445, -8
  %mul.overflow182 = icmp ugt i64 %445, 2305843009213693951
  %449 = getelementptr i8, ptr %uglygep179, i64 %mul.result181.neg
  %450 = icmp ugt ptr %449, %uglygep179
  %451 = or i1 %450, %mul.overflow182
  %452 = or i1 %448, %451
  br i1 %452, label %.lr.ph112.preheader463, label %vector.memcheck183

vector.memcheck183:                               ; preds = %vector.scevcheck174
  %uglygep184 = getelementptr i8, ptr %.3282.ph264, i64 8
  %453 = shl i64 %444, 3
  %454 = add i64 %453, 8
  %uglygep185 = getelementptr i8, ptr %.3282.ph264, i64 %454
  %uglygep186 = getelementptr i8, ptr %.027.i342, i64 8
  %uglygep187 = getelementptr i8, ptr %.027.i342, i64 %454
  %455 = add nuw nsw i64 %426, 56
  %456 = sub i64 %455, %453
  %uglygep188 = getelementptr i8, ptr %.3, i64 %456
  %457 = mul i64 %444, -8
  %uglygep189 = getelementptr i8, ptr %.025.i343, i64 %457
  %bound0190 = icmp ult ptr %uglygep184, %uglygep187
  %bound1191 = icmp ult ptr %uglygep186, %uglygep185
  %found.conflict192 = and i1 %bound0190, %bound1191
  %bound0193 = icmp ult ptr %uglygep184, %428
  %bound1194 = icmp ult ptr %uglygep188, %uglygep185
  %found.conflict195 = and i1 %bound0193, %bound1194
  %conflict.rdx196 = or i1 %found.conflict192, %found.conflict195
  %bound0197 = icmp ult ptr %uglygep184, %.025.i343
  %bound1198 = icmp ult ptr %uglygep189, %uglygep185
  %found.conflict199 = and i1 %bound0197, %bound1198
  %conflict.rdx200 = or i1 %conflict.rdx196, %found.conflict199
  %bound0201 = icmp ult ptr %uglygep186, %428
  %bound1202 = icmp ult ptr %uglygep188, %uglygep187
  %found.conflict203 = and i1 %bound0201, %bound1202
  %conflict.rdx204 = or i1 %conflict.rdx200, %found.conflict203
  %bound0205 = icmp ult ptr %uglygep186, %.025.i343
  %bound1206 = icmp ult ptr %uglygep189, %uglygep187
  %found.conflict207 = and i1 %bound0205, %bound1206
  %conflict.rdx208 = or i1 %conflict.rdx204, %found.conflict207
  %bound0209 = icmp ult ptr %uglygep188, %.025.i343
  %bound1210 = icmp ult ptr %uglygep189, %428
  %found.conflict211 = and i1 %bound0209, %bound1210
  %conflict.rdx212 = or i1 %conflict.rdx208, %found.conflict211
  br i1 %conflict.rdx212, label %.lr.ph112.preheader463, label %vector.ph216

vector.ph216:                                     ; preds = %vector.memcheck183
  %458 = lshr i64 %.0.i344, 1
  %n.vec218 = and i64 %444, 9223372036854775806
  %ind.end219 = and i64 %458, 1
  %459 = shl i64 %n.vec218, 3
  %ind.end221 = getelementptr i8, ptr %.3282.ph264, i64 %459
  %460 = mul i64 %n.vec218, -8
  %ind.end223 = getelementptr i8, ptr %.025.i343, i64 %460
  %461 = shl i64 %n.vec218, 3
  %ind.end225 = getelementptr i8, ptr %.027.i342, i64 %461
  %462 = mul i64 %n.vec218, -8
  %ind.end227 = getelementptr i8, ptr %428, i64 %462
  %next.gep232256 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep234253 = getelementptr i8, ptr %.027.i342, i64 8
  %463 = add nuw nsw i64 %426, 40
  %uglygep490 = getelementptr i8, ptr %.3, i64 %463
  %uglygep495 = getelementptr i8, ptr %.025.i343, i64 -16
  br label %vector.body230

vector.body230:                                   ; preds = %vector.body230, %vector.ph216
  %lsr.iv500 = phi i64 [ %lsr.iv.next501, %vector.body230 ], [ %n.vec218, %vector.ph216 ]
  %lsr.iv498 = phi ptr [ %uglygep499, %vector.body230 ], [ %next.gep232256, %vector.ph216 ]
  %lsr.iv496 = phi ptr [ %uglygep497, %vector.body230 ], [ %uglygep495, %vector.ph216 ]
  %lsr.iv493 = phi ptr [ %uglygep494, %vector.body230 ], [ %next.gep234253, %vector.ph216 ]
  %lsr.iv491 = phi ptr [ %uglygep492, %vector.body230 ], [ %uglygep490, %vector.ph216 ]
  %wide.load236 = load <2 x i64>, ptr %lsr.iv498, align 8, !alias.scope !461, !noalias !464
  %wide.load237 = load <2 x i64>, ptr %lsr.iv491, align 8, !alias.scope !468, !noalias !469
  %reverse238 = shufflevector <2 x i64> %wide.load237, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse238, ptr %lsr.iv498, align 8, !alias.scope !461, !noalias !464
  %reverse239 = shufflevector <2 x i64> %wide.load236, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse239, ptr %lsr.iv491, align 8, !alias.scope !468, !noalias !469
  %wide.load240 = load <2 x i64>, ptr %lsr.iv496, align 8, !alias.scope !469
  %reverse241 = shufflevector <2 x i64> %wide.load240, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load242 = load <2 x i64>, ptr %lsr.iv493, align 8, !alias.scope !470, !noalias !471
  %reverse243 = shufflevector <2 x i64> %wide.load242, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse243, ptr %lsr.iv496, align 8, !alias.scope !469
  store <2 x i64> %reverse241, ptr %lsr.iv493, align 8, !alias.scope !470, !noalias !471
  %uglygep492 = getelementptr i8, ptr %lsr.iv491, i64 -16
  %uglygep494 = getelementptr i8, ptr %lsr.iv493, i64 16
  %uglygep497 = getelementptr i8, ptr %lsr.iv496, i64 -16
  %uglygep499 = getelementptr i8, ptr %lsr.iv498, i64 16
  %lsr.iv.next501 = add nsw i64 %lsr.iv500, -2
  %464 = icmp eq i64 %lsr.iv.next501, 0
  br i1 %464, label %middle.block213, label %vector.body230, !llvm.loop !472

middle.block213:                                  ; preds = %vector.body230
  %cmp.n229 = icmp eq i64 %444, %n.vec218
  br i1 %cmp.n229, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader463

.lr.ph112.preheader463:                           ; preds = %middle.block213, %vector.memcheck183, %vector.scevcheck174, %.lr.ph112.preheader
  %.1.i349111.ph = phi i64 [ %ind.end219, %middle.block213 ], [ %444, %.lr.ph112.preheader ], [ %444, %vector.scevcheck174 ], [ %444, %vector.memcheck183 ]
  %.024.i348110.ph = phi ptr [ %ind.end221, %middle.block213 ], [ %.3282.ph264, %.lr.ph112.preheader ], [ %.3282.ph264, %vector.scevcheck174 ], [ %.3282.ph264, %vector.memcheck183 ]
  %.126.i347109.ph = phi ptr [ %ind.end223, %middle.block213 ], [ %.025.i343, %.lr.ph112.preheader ], [ %.025.i343, %vector.scevcheck174 ], [ %.025.i343, %vector.memcheck183 ]
  %.128.i346108.ph = phi ptr [ %ind.end225, %middle.block213 ], [ %.027.i342, %.lr.ph112.preheader ], [ %.027.i342, %vector.scevcheck174 ], [ %.027.i342, %vector.memcheck183 ]
  %.029.i345107.ph = phi ptr [ %ind.end227, %middle.block213 ], [ %428, %.lr.ph112.preheader ], [ %428, %vector.scevcheck174 ], [ %428, %vector.memcheck183 ]
  %uglygep478 = getelementptr i8, ptr %.024.i348110.ph, i64 8
  %uglygep481 = getelementptr i8, ptr %.126.i347109.ph, i64 -8
  %uglygep484 = getelementptr i8, ptr %.128.i346108.ph, i64 8
  %uglygep487 = getelementptr i8, ptr %.029.i345107.ph, i64 -8
  br label %.lr.ph112

465:                                              ; preds = %.critedge67
  %466 = load i64, ptr %434, align 8
  %467 = load i64, ptr %436, align 8
  store i64 %467, ptr %434, align 8
  %468 = getelementptr inbounds i8, ptr %434, i64 -8
  store i64 %466, ptr %436, align 8
  %469 = getelementptr inbounds i8, ptr %436, i64 8
  %470 = add nsw i64 %432, -1
  br label %._crit_edge.i341

.lr.ph112:                                        ; preds = %.lr.ph112, %.lr.ph112.preheader463
  %lsr.iv488 = phi ptr [ %uglygep487, %.lr.ph112.preheader463 ], [ %uglygep489, %.lr.ph112 ]
  %lsr.iv485 = phi ptr [ %uglygep484, %.lr.ph112.preheader463 ], [ %uglygep486, %.lr.ph112 ]
  %lsr.iv482 = phi ptr [ %uglygep481, %.lr.ph112.preheader463 ], [ %uglygep483, %.lr.ph112 ]
  %lsr.iv479 = phi ptr [ %uglygep478, %.lr.ph112.preheader463 ], [ %uglygep480, %.lr.ph112 ]
  %.1.i349111 = phi i64 [ %471, %.lr.ph112 ], [ %.1.i349111.ph, %.lr.ph112.preheader463 ]
  %471 = add nsw i64 %.1.i349111, -1
  %472 = load i64, ptr %lsr.iv479, align 8
  %473 = load i64, ptr %lsr.iv488, align 8
  store i64 %473, ptr %lsr.iv479, align 8
  store i64 %472, ptr %lsr.iv488, align 8
  %474 = load i64, ptr %lsr.iv482, align 8
  %475 = load i64, ptr %lsr.iv485, align 8
  store i64 %475, ptr %lsr.iv482, align 8
  store i64 %474, ptr %lsr.iv485, align 8
  %uglygep480 = getelementptr i8, ptr %lsr.iv479, i64 8
  %uglygep483 = getelementptr i8, ptr %lsr.iv482, i64 -8
  %uglygep486 = getelementptr i8, ptr %lsr.iv485, i64 8
  %uglygep489 = getelementptr i8, ptr %lsr.iv488, i64 -8
  %476 = icmp eq i64 %471, 0
  br i1 %476, label %sort.quad_reversal.exit350, label %.lr.ph112, !llvm.loop !473

sort.quad_reversal.exit350:                       ; preds = %.lr.ph112, %middle.block213, %._crit_edge.i341
  %477 = icmp eq ptr %.3282.ph264, %0
  br i1 %477, label %common.ret, label %478

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit350
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit350 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

478:                                              ; preds = %.loopexit, %sort.quad_reversal.exit350
  %.not302113 = icmp ult i64 %1, 32
  br i1 %.not302113, label %._crit_edge, label %.lr.ph116

.lr.ph116:                                        ; preds = %478
  %479 = lshr i64 %1, 5
  %480 = getelementptr inbounds i8, ptr %6, i64 120
  %481 = getelementptr inbounds i8, ptr %6, i64 128
  %482 = getelementptr inbounds i8, ptr %6, i64 248
  %.sroa.gep2 = getelementptr inbounds i8, ptr %6, i64 136
  %.sroa.gep3 = getelementptr inbounds i8, ptr %6, i64 8
  %.167.i.1 = getelementptr inbounds i8, ptr %6, i64 16
  %.167.i.1.sroa.gep = getelementptr inbounds i8, ptr %6, i64 24
  br label %484

.loopexit:                                        ; preds = %.lr.ph106, %middle.block142, %._crit_edge.i331, %103, %43, %5
  %.0.ph = phi ptr [ %171, %._crit_edge.i331 ], [ %0, %5 ], [ %171, %middle.block142 ], [ %171, %.lr.ph106 ], [ %104, %103 ], [ %.2, %43 ]
  %483 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %.0.ph, i64 %483, ptr nonnull align 1 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  br label %478

484:                                              ; preds = %492, %.lr.ph116
  %.5115 = phi ptr [ %0, %.lr.ph116 ], [ %494, %492 ]
  %.4288114 = phi i64 [ %479, %.lr.ph116 ], [ %493, %492 ]
  %485 = getelementptr inbounds i8, ptr %.5115, i64 56
  %486 = getelementptr inbounds i8, ptr %.5115, i64 64
  call void %4(ptr align 1 %3, i64 1) #15
  %487 = load ptr, ptr %485, align 8
  %488 = load ptr, ptr %486, align 8
  %489 = call i8 %2(ptr align 1 %3, ptr align 1 %487, ptr align 1 %488) #15
  %.not303 = icmp eq i8 %489, 1
  br i1 %.not303, label %.critedge69, label %495

._crit_edge:                                      ; preds = %492, %478
  %.5.lcssa = phi ptr [ %0, %478 ], [ %494, %492 ]
  %490 = and i64 %1, 31
  %491 = icmp ugt i64 %490, 8
  br i1 %491, label %.preheader.lr.ph.i, label %common.ret

492:                                              ; preds = %sort.parity_merge__anon_16495.exit399, %501
  %493 = add nsw i64 %.4288114, -1
  %494 = getelementptr inbounds i8, ptr %.5115, i64 256
  %.not302 = icmp eq i64 %493, 0
  br i1 %.not302, label %._crit_edge, label %484

495:                                              ; preds = %484
  %496 = getelementptr inbounds i8, ptr %.5115, i64 120
  %497 = getelementptr inbounds i8, ptr %.5115, i64 128
  call void %4(ptr align 1 %3, i64 1) #15
  %498 = load ptr, ptr %496, align 8
  %499 = load ptr, ptr %497, align 8
  %500 = call i8 %2(ptr align 1 %3, ptr align 1 %498, ptr align 1 %499) #15
  %.not304 = icmp eq i8 %500, 1
  br i1 %.not304, label %.critedge69, label %501

501:                                              ; preds = %495
  %502 = getelementptr inbounds i8, ptr %.5115, i64 184
  %503 = getelementptr inbounds i8, ptr %.5115, i64 192
  call void %4(ptr align 1 %3, i64 1) #15
  %504 = load ptr, ptr %502, align 8
  %505 = load ptr, ptr %503, align 8
  %506 = call i8 %2(ptr align 1 %3, ptr align 1 %504, ptr align 1 %505) #15
  %.not305 = icmp eq i8 %506, 1
  br i1 %.not305, label %.critedge69, label %492

.critedge69:                                      ; preds = %501, %495, %484
  %507 = getelementptr inbounds i8, ptr %.5115, i64 120
  call void %4(ptr align 1 %3, i64 16) #15
  %508 = load ptr, ptr %.5115, align 8
  %sunkaddr618 = getelementptr inbounds i8, ptr %.5115, i64 64
  %509 = load ptr, ptr %sunkaddr618, align 8
  %510 = call i8 %2(ptr align 1 %3, ptr align 1 %508, ptr align 1 %509) #15
  %.not.i = icmp eq i8 %510, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %486, ptr %.5115
  %511 = load i64, ptr %.sroa.speculated21.i, align 8
  store i64 %511, ptr %6, align 16
  %512 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 8
  %.0..i = select i1 %.not.i, ptr %.5115, ptr %512
  %..061.i = select i1 %.not.i, ptr %512, ptr %486
  %513 = load ptr, ptr %.0..i, align 8
  %514 = load ptr, ptr %..061.i, align 8
  %515 = call i8 %2(ptr align 1 %3, ptr align 1 %513, ptr align 1 %514) #15
  %.not76.i = icmp eq i8 %515, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  %516 = load i64, ptr %.sroa.speculated.i, align 8
  %sunkaddr619 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %516, ptr %sunkaddr619, align 8
  %517 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..364.i = select i1 %.not76.i, ptr %517, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %517
  %sunkaddr620 = getelementptr inbounds i8, ptr %.5115, i64 56
  %518 = load ptr, ptr %sunkaddr620, align 8
  %519 = load ptr, ptr %507, align 8
  %520 = call i8 %2(ptr align 1 %3, ptr align 1 %518, ptr align 1 %519) #15
  %521 = icmp eq i8 %520, 1
  %.sroa.speculated40.i621 = select i1 %521, i64 56, i64 120
  %.sroa.speculated40.i = select i1 %521, ptr %485, ptr %507
  %sunkaddr622 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i621
  %522 = load i64, ptr %sunkaddr622, align 8
  %sunkaddr623 = getelementptr inbounds i8, ptr %6, i64 120
  store i64 %522, ptr %sunkaddr623, align 8
  %523 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 -8
  %.171.i = select i1 %521, ptr %507, ptr %523
  %.169.i = select i1 %521, ptr %523, ptr %485
  %524 = load ptr, ptr %.3..i, align 8
  %525 = load ptr, ptr %..364.i, align 8
  %526 = call i8 %2(ptr align 1 %3, ptr align 1 %524, ptr align 1 %525) #15
  %.not76.i.1 = icmp eq i8 %526, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  %527 = load i64, ptr %.sroa.speculated.i.1, align 8
  %sunkaddr624 = getelementptr inbounds i8, ptr %6, i64 16
  store i64 %527, ptr %sunkaddr624, align 16
  %528 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %..364.i.1 = select i1 %.not76.i.1, ptr %528, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %528
  %529 = load ptr, ptr %.169.i, align 8
  %530 = load ptr, ptr %.171.i, align 8
  %531 = call i8 %2(ptr align 1 %3, ptr align 1 %529, ptr align 1 %530) #15
  %532 = icmp eq i8 %531, 1
  %.sroa.speculated40.i.1 = select i1 %532, ptr %.169.i, ptr %.171.i
  %533 = load i64, ptr %.sroa.speculated40.i.1, align 8
  %sunkaddr625 = getelementptr inbounds i8, ptr %6, i64 112
  store i64 %533, ptr %sunkaddr625, align 16
  %534 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 -8
  %.171.i.1 = select i1 %532, ptr %.171.i, ptr %534
  %.169.i.1 = select i1 %532, ptr %534, ptr %.169.i
  %535 = load ptr, ptr %.3..i.1, align 8
  %536 = load ptr, ptr %..364.i.1, align 8
  %537 = call i8 %2(ptr align 1 %3, ptr align 1 %535, ptr align 1 %536) #15
  %.not76.i.2 = icmp eq i8 %537, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  %538 = load i64, ptr %.sroa.speculated.i.2, align 8
  %sunkaddr626 = getelementptr inbounds i8, ptr %6, i64 24
  store i64 %538, ptr %sunkaddr626, align 8
  %539 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %..364.i.2 = select i1 %.not76.i.2, ptr %539, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %539
  %540 = load ptr, ptr %.169.i.1, align 8
  %541 = load ptr, ptr %.171.i.1, align 8
  %542 = call i8 %2(ptr align 1 %3, ptr align 1 %540, ptr align 1 %541) #15
  %543 = icmp eq i8 %542, 1
  %.sroa.speculated40.i.2 = select i1 %543, ptr %.169.i.1, ptr %.171.i.1
  %544 = load i64, ptr %.sroa.speculated40.i.2, align 8
  %sunkaddr627 = getelementptr inbounds i8, ptr %6, i64 104
  store i64 %544, ptr %sunkaddr627, align 8
  %545 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 -8
  %.171.i.2 = select i1 %543, ptr %.171.i.1, ptr %545
  %.169.i.2 = select i1 %543, ptr %545, ptr %.169.i.1
  %546 = load ptr, ptr %.3..i.2, align 8
  %547 = load ptr, ptr %..364.i.2, align 8
  %548 = call i8 %2(ptr align 1 %3, ptr align 1 %546, ptr align 1 %547) #15
  %.not76.i.3 = icmp eq i8 %548, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  %549 = load i64, ptr %.sroa.speculated.i.3, align 8
  %sunkaddr628 = getelementptr inbounds i8, ptr %6, i64 32
  store i64 %549, ptr %sunkaddr628, align 16
  %550 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %..364.i.3 = select i1 %.not76.i.3, ptr %550, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %550
  %551 = load ptr, ptr %.169.i.2, align 8
  %552 = load ptr, ptr %.171.i.2, align 8
  %553 = call i8 %2(ptr align 1 %3, ptr align 1 %551, ptr align 1 %552) #15
  %554 = icmp eq i8 %553, 1
  %.sroa.speculated40.i.3 = select i1 %554, ptr %.169.i.2, ptr %.171.i.2
  %555 = load i64, ptr %.sroa.speculated40.i.3, align 8
  %sunkaddr629 = getelementptr inbounds i8, ptr %6, i64 96
  store i64 %555, ptr %sunkaddr629, align 16
  %556 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 -8
  %.171.i.3 = select i1 %554, ptr %.171.i.2, ptr %556
  %.169.i.3 = select i1 %554, ptr %556, ptr %.169.i.2
  %557 = load ptr, ptr %.3..i.3, align 8
  %558 = load ptr, ptr %..364.i.3, align 8
  %559 = call i8 %2(ptr align 1 %3, ptr align 1 %557, ptr align 1 %558) #15
  %.not76.i.4 = icmp eq i8 %559, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  %560 = load i64, ptr %.sroa.speculated.i.4, align 8
  %sunkaddr630 = getelementptr inbounds i8, ptr %6, i64 40
  store i64 %560, ptr %sunkaddr630, align 8
  %561 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %..364.i.4 = select i1 %.not76.i.4, ptr %561, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %561
  %562 = load ptr, ptr %.169.i.3, align 8
  %563 = load ptr, ptr %.171.i.3, align 8
  %564 = call i8 %2(ptr align 1 %3, ptr align 1 %562, ptr align 1 %563) #15
  %565 = icmp eq i8 %564, 1
  %.sroa.speculated40.i.4 = select i1 %565, ptr %.169.i.3, ptr %.171.i.3
  %566 = load i64, ptr %.sroa.speculated40.i.4, align 8
  %sunkaddr631 = getelementptr inbounds i8, ptr %6, i64 88
  store i64 %566, ptr %sunkaddr631, align 8
  %567 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 -8
  %.171.i.4 = select i1 %565, ptr %.171.i.3, ptr %567
  %.169.i.4 = select i1 %565, ptr %567, ptr %.169.i.3
  %568 = load ptr, ptr %.3..i.4, align 8
  %569 = load ptr, ptr %..364.i.4, align 8
  %570 = call i8 %2(ptr align 1 %3, ptr align 1 %568, ptr align 1 %569) #15
  %.not76.i.5 = icmp eq i8 %570, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  %571 = load i64, ptr %.sroa.speculated.i.5, align 8
  %sunkaddr632 = getelementptr inbounds i8, ptr %6, i64 48
  store i64 %571, ptr %sunkaddr632, align 16
  %572 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %..364.i.5 = select i1 %.not76.i.5, ptr %572, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %572
  %573 = load ptr, ptr %.169.i.4, align 8
  %574 = load ptr, ptr %.171.i.4, align 8
  %575 = call i8 %2(ptr align 1 %3, ptr align 1 %573, ptr align 1 %574) #15
  %576 = icmp eq i8 %575, 1
  %.sroa.speculated40.i.5 = select i1 %576, ptr %.169.i.4, ptr %.171.i.4
  %577 = load i64, ptr %.sroa.speculated40.i.5, align 8
  %sunkaddr633 = getelementptr inbounds i8, ptr %6, i64 80
  store i64 %577, ptr %sunkaddr633, align 16
  %578 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 -8
  %.171.i.5 = select i1 %576, ptr %.171.i.4, ptr %578
  %.169.i.5 = select i1 %576, ptr %578, ptr %.169.i.4
  %579 = load ptr, ptr %.3..i.5, align 8
  %580 = load ptr, ptr %..364.i.5, align 8
  %581 = call i8 %2(ptr align 1 %3, ptr align 1 %579, ptr align 1 %580) #15
  %.not76.i.6 = icmp eq i8 %581, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  %582 = load i64, ptr %.sroa.speculated.i.6, align 8
  %sunkaddr634 = getelementptr inbounds i8, ptr %6, i64 56
  store i64 %582, ptr %sunkaddr634, align 8
  %583 = load ptr, ptr %.169.i.5, align 8
  %584 = load ptr, ptr %.171.i.5, align 8
  %585 = call i8 %2(ptr align 1 %3, ptr align 1 %583, ptr align 1 %584) #15
  %586 = icmp eq i8 %585, 1
  %.sroa.speculated40.i.6 = select i1 %586, ptr %.169.i.5, ptr %.171.i.5
  %587 = load i64, ptr %.sroa.speculated40.i.6, align 8
  %sunkaddr635 = getelementptr inbounds i8, ptr %6, i64 72
  store i64 %587, ptr %sunkaddr635, align 8
  %588 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 -8
  %.171.i.6 = select i1 %586, ptr %.171.i.5, ptr %588
  %.169.i.6 = select i1 %586, ptr %588, ptr %.169.i.5
  %589 = load ptr, ptr %.169.i.6, align 8
  %590 = load ptr, ptr %.171.i.6, align 8
  %591 = call i8 %2(ptr align 1 %3, ptr align 1 %589, ptr align 1 %590) #15
  %592 = icmp eq i8 %591, 1
  %.sroa.speculated46.i = select i1 %592, ptr %.169.i.6, ptr %.171.i.6
  %593 = load i64, ptr %.sroa.speculated46.i, align 8
  %sunkaddr636 = getelementptr inbounds i8, ptr %6, i64 64
  store i64 %593, ptr %sunkaddr636, align 16
  %594 = getelementptr inbounds i8, ptr %.5115, i64 128
  %595 = getelementptr inbounds i8, ptr %.5115, i64 192
  %596 = getelementptr inbounds i8, ptr %.5115, i64 184
  %597 = getelementptr inbounds i8, ptr %.5115, i64 248
  call void %4(ptr align 1 %3, i64 16) #15
  %598 = load ptr, ptr %594, align 8
  %599 = load ptr, ptr %595, align 8
  %600 = call i8 %2(ptr align 1 %3, ptr align 1 %598, ptr align 1 %599) #15
  %.not.i353 = icmp eq i8 %600, 1
  %.sroa.speculated21.i354637 = select i1 %.not.i353, i64 192, i64 128
  %.sroa.speculated21.i354 = select i1 %.not.i353, ptr %595, ptr %594
  %sunkaddr638 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated21.i354637
  %601 = load i64, ptr %sunkaddr638, align 8
  %sunkaddr639 = getelementptr inbounds i8, ptr %6, i64 128
  store i64 %601, ptr %sunkaddr639, align 16
  %602 = getelementptr inbounds i8, ptr %.sroa.speculated21.i354, i64 8
  %.0..i355 = select i1 %.not.i353, ptr %594, ptr %602
  %..061.i356 = select i1 %.not.i353, ptr %602, ptr %595
  %603 = load ptr, ptr %.0..i355, align 8
  %604 = load ptr, ptr %..061.i356, align 8
  %605 = call i8 %2(ptr align 1 %3, ptr align 1 %603, ptr align 1 %604) #15
  %.not76.i365 = icmp eq i8 %605, 1
  %.sroa.speculated.i366 = select i1 %.not76.i365, ptr %..061.i356, ptr %.0..i355
  %606 = load i64, ptr %.sroa.speculated.i366, align 8
  %sunkaddr640 = getelementptr inbounds i8, ptr %6, i64 136
  store i64 %606, ptr %sunkaddr640, align 8
  %607 = getelementptr inbounds i8, ptr %.sroa.speculated.i366, i64 8
  %..364.i367 = select i1 %.not76.i365, ptr %607, ptr %..061.i356
  %.3..i368 = select i1 %.not76.i365, ptr %.0..i355, ptr %607
  %608 = load ptr, ptr %596, align 8
  %609 = load ptr, ptr %597, align 8
  %610 = call i8 %2(ptr align 1 %3, ptr align 1 %608, ptr align 1 %609) #15
  %611 = icmp eq i8 %610, 1
  %.sroa.speculated40.i369641 = select i1 %611, i64 184, i64 248
  %.sroa.speculated40.i369 = select i1 %611, ptr %596, ptr %597
  %sunkaddr642 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i369641
  %612 = load i64, ptr %sunkaddr642, align 8
  %sunkaddr643 = getelementptr inbounds i8, ptr %6, i64 248
  store i64 %612, ptr %sunkaddr643, align 8
  %613 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369, i64 -8
  %.171.i370 = select i1 %611, ptr %597, ptr %613
  %.169.i371 = select i1 %611, ptr %613, ptr %596
  %614 = load ptr, ptr %.3..i368, align 8
  %615 = load ptr, ptr %..364.i367, align 8
  %616 = call i8 %2(ptr align 1 %3, ptr align 1 %614, ptr align 1 %615) #15
  %.not76.i365.1 = icmp eq i8 %616, 1
  %.sroa.speculated.i366.1 = select i1 %.not76.i365.1, ptr %..364.i367, ptr %.3..i368
  %617 = load i64, ptr %.sroa.speculated.i366.1, align 8
  %sunkaddr644 = getelementptr inbounds i8, ptr %6, i64 144
  store i64 %617, ptr %sunkaddr644, align 16
  %618 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.1, i64 8
  %..364.i367.1 = select i1 %.not76.i365.1, ptr %618, ptr %..364.i367
  %.3..i368.1 = select i1 %.not76.i365.1, ptr %.3..i368, ptr %618
  %619 = load ptr, ptr %.169.i371, align 8
  %620 = load ptr, ptr %.171.i370, align 8
  %621 = call i8 %2(ptr align 1 %3, ptr align 1 %619, ptr align 1 %620) #15
  %622 = icmp eq i8 %621, 1
  %.sroa.speculated40.i369.1 = select i1 %622, ptr %.169.i371, ptr %.171.i370
  %623 = load i64, ptr %.sroa.speculated40.i369.1, align 8
  %sunkaddr645 = getelementptr inbounds i8, ptr %6, i64 240
  store i64 %623, ptr %sunkaddr645, align 16
  %624 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.1, i64 -8
  %.171.i370.1 = select i1 %622, ptr %.171.i370, ptr %624
  %.169.i371.1 = select i1 %622, ptr %624, ptr %.169.i371
  %625 = load ptr, ptr %.3..i368.1, align 8
  %626 = load ptr, ptr %..364.i367.1, align 8
  %627 = call i8 %2(ptr align 1 %3, ptr align 1 %625, ptr align 1 %626) #15
  %.not76.i365.2 = icmp eq i8 %627, 1
  %.sroa.speculated.i366.2 = select i1 %.not76.i365.2, ptr %..364.i367.1, ptr %.3..i368.1
  %628 = load i64, ptr %.sroa.speculated.i366.2, align 8
  %sunkaddr646 = getelementptr inbounds i8, ptr %6, i64 152
  store i64 %628, ptr %sunkaddr646, align 8
  %629 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.2, i64 8
  %..364.i367.2 = select i1 %.not76.i365.2, ptr %629, ptr %..364.i367.1
  %.3..i368.2 = select i1 %.not76.i365.2, ptr %.3..i368.1, ptr %629
  %630 = load ptr, ptr %.169.i371.1, align 8
  %631 = load ptr, ptr %.171.i370.1, align 8
  %632 = call i8 %2(ptr align 1 %3, ptr align 1 %630, ptr align 1 %631) #15
  %633 = icmp eq i8 %632, 1
  %.sroa.speculated40.i369.2 = select i1 %633, ptr %.169.i371.1, ptr %.171.i370.1
  %634 = load i64, ptr %.sroa.speculated40.i369.2, align 8
  %sunkaddr647 = getelementptr inbounds i8, ptr %6, i64 232
  store i64 %634, ptr %sunkaddr647, align 8
  %635 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.2, i64 -8
  %.171.i370.2 = select i1 %633, ptr %.171.i370.1, ptr %635
  %.169.i371.2 = select i1 %633, ptr %635, ptr %.169.i371.1
  %636 = load ptr, ptr %.3..i368.2, align 8
  %637 = load ptr, ptr %..364.i367.2, align 8
  %638 = call i8 %2(ptr align 1 %3, ptr align 1 %636, ptr align 1 %637) #15
  %.not76.i365.3 = icmp eq i8 %638, 1
  %.sroa.speculated.i366.3 = select i1 %.not76.i365.3, ptr %..364.i367.2, ptr %.3..i368.2
  %639 = load i64, ptr %.sroa.speculated.i366.3, align 8
  %sunkaddr648 = getelementptr inbounds i8, ptr %6, i64 160
  store i64 %639, ptr %sunkaddr648, align 16
  %640 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.3, i64 8
  %..364.i367.3 = select i1 %.not76.i365.3, ptr %640, ptr %..364.i367.2
  %.3..i368.3 = select i1 %.not76.i365.3, ptr %.3..i368.2, ptr %640
  %641 = load ptr, ptr %.169.i371.2, align 8
  %642 = load ptr, ptr %.171.i370.2, align 8
  %643 = call i8 %2(ptr align 1 %3, ptr align 1 %641, ptr align 1 %642) #15
  %644 = icmp eq i8 %643, 1
  %.sroa.speculated40.i369.3 = select i1 %644, ptr %.169.i371.2, ptr %.171.i370.2
  %645 = load i64, ptr %.sroa.speculated40.i369.3, align 8
  %sunkaddr649 = getelementptr inbounds i8, ptr %6, i64 224
  store i64 %645, ptr %sunkaddr649, align 16
  %646 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.3, i64 -8
  %.171.i370.3 = select i1 %644, ptr %.171.i370.2, ptr %646
  %.169.i371.3 = select i1 %644, ptr %646, ptr %.169.i371.2
  %647 = load ptr, ptr %.3..i368.3, align 8
  %648 = load ptr, ptr %..364.i367.3, align 8
  %649 = call i8 %2(ptr align 1 %3, ptr align 1 %647, ptr align 1 %648) #15
  %.not76.i365.4 = icmp eq i8 %649, 1
  %.sroa.speculated.i366.4 = select i1 %.not76.i365.4, ptr %..364.i367.3, ptr %.3..i368.3
  %650 = load i64, ptr %.sroa.speculated.i366.4, align 8
  %sunkaddr650 = getelementptr inbounds i8, ptr %6, i64 168
  store i64 %650, ptr %sunkaddr650, align 8
  %651 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.4, i64 8
  %..364.i367.4 = select i1 %.not76.i365.4, ptr %651, ptr %..364.i367.3
  %.3..i368.4 = select i1 %.not76.i365.4, ptr %.3..i368.3, ptr %651
  %652 = load ptr, ptr %.169.i371.3, align 8
  %653 = load ptr, ptr %.171.i370.3, align 8
  %654 = call i8 %2(ptr align 1 %3, ptr align 1 %652, ptr align 1 %653) #15
  %655 = icmp eq i8 %654, 1
  %.sroa.speculated40.i369.4 = select i1 %655, ptr %.169.i371.3, ptr %.171.i370.3
  %656 = load i64, ptr %.sroa.speculated40.i369.4, align 8
  %sunkaddr651 = getelementptr inbounds i8, ptr %6, i64 216
  store i64 %656, ptr %sunkaddr651, align 8
  %657 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.4, i64 -8
  %.171.i370.4 = select i1 %655, ptr %.171.i370.3, ptr %657
  %.169.i371.4 = select i1 %655, ptr %657, ptr %.169.i371.3
  %658 = load ptr, ptr %.3..i368.4, align 8
  %659 = load ptr, ptr %..364.i367.4, align 8
  %660 = call i8 %2(ptr align 1 %3, ptr align 1 %658, ptr align 1 %659) #15
  %.not76.i365.5 = icmp eq i8 %660, 1
  %.sroa.speculated.i366.5 = select i1 %.not76.i365.5, ptr %..364.i367.4, ptr %.3..i368.4
  %661 = load i64, ptr %.sroa.speculated.i366.5, align 8
  %sunkaddr652 = getelementptr inbounds i8, ptr %6, i64 176
  store i64 %661, ptr %sunkaddr652, align 16
  %662 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.5, i64 8
  %..364.i367.5 = select i1 %.not76.i365.5, ptr %662, ptr %..364.i367.4
  %.3..i368.5 = select i1 %.not76.i365.5, ptr %.3..i368.4, ptr %662
  %663 = load ptr, ptr %.169.i371.4, align 8
  %664 = load ptr, ptr %.171.i370.4, align 8
  %665 = call i8 %2(ptr align 1 %3, ptr align 1 %663, ptr align 1 %664) #15
  %666 = icmp eq i8 %665, 1
  %.sroa.speculated40.i369.5 = select i1 %666, ptr %.169.i371.4, ptr %.171.i370.4
  %667 = load i64, ptr %.sroa.speculated40.i369.5, align 8
  %sunkaddr653 = getelementptr inbounds i8, ptr %6, i64 208
  store i64 %667, ptr %sunkaddr653, align 16
  %668 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.5, i64 -8
  %.171.i370.5 = select i1 %666, ptr %.171.i370.4, ptr %668
  %.169.i371.5 = select i1 %666, ptr %668, ptr %.169.i371.4
  %669 = load ptr, ptr %.3..i368.5, align 8
  %670 = load ptr, ptr %..364.i367.5, align 8
  %671 = call i8 %2(ptr align 1 %3, ptr align 1 %669, ptr align 1 %670) #15
  %.not76.i365.6 = icmp eq i8 %671, 1
  %.sroa.speculated.i366.6 = select i1 %.not76.i365.6, ptr %..364.i367.5, ptr %.3..i368.5
  %672 = load i64, ptr %.sroa.speculated.i366.6, align 8
  %sunkaddr654 = getelementptr inbounds i8, ptr %6, i64 184
  store i64 %672, ptr %sunkaddr654, align 8
  %673 = load ptr, ptr %.169.i371.5, align 8
  %674 = load ptr, ptr %.171.i370.5, align 8
  %675 = call i8 %2(ptr align 1 %3, ptr align 1 %673, ptr align 1 %674) #15
  %676 = icmp eq i8 %675, 1
  %.sroa.speculated40.i369.6 = select i1 %676, ptr %.169.i371.5, ptr %.171.i370.5
  %677 = load i64, ptr %.sroa.speculated40.i369.6, align 8
  %sunkaddr655 = getelementptr inbounds i8, ptr %6, i64 200
  store i64 %677, ptr %sunkaddr655, align 8
  %678 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.6, i64 -8
  %.171.i370.6 = select i1 %676, ptr %.171.i370.5, ptr %678
  %.169.i371.6 = select i1 %676, ptr %678, ptr %.169.i371.5
  %679 = load ptr, ptr %.169.i371.6, align 8
  %680 = load ptr, ptr %.171.i370.6, align 8
  %681 = call i8 %2(ptr align 1 %3, ptr align 1 %679, ptr align 1 %680) #15
  %682 = icmp eq i8 %681, 1
  %.sroa.speculated46.i374 = select i1 %682, ptr %.169.i371.6, ptr %.171.i370.6
  %683 = load i64, ptr %.sroa.speculated46.i374, align 8
  %sunkaddr656 = getelementptr inbounds i8, ptr %6, i64 192
  store i64 %683, ptr %sunkaddr656, align 16
  call void %4(ptr align 1 %3, i64 32) #15
  %684 = load ptr, ptr %6, align 16
  %685 = load ptr, ptr %sunkaddr639, align 16
  %686 = call i8 %2(ptr align 1 %3, ptr align 1 %684, ptr align 1 %685) #15
  %.not.i377 = icmp eq i8 %686, 1
  %.val = load i64, ptr %sunkaddr639, align 16
  %.val28 = load i64, ptr %6, align 16
  %687 = select i1 %.not.i377, i64 %.val, i64 %.val28
  store i64 %687, ptr %.5115, align 8
  %.0..i379 = select i1 %.not.i377, ptr %6, ptr %.sroa.gep3
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.v = select i1 %.not.i377, i64 144, i64 16
  %.sroa.speculated21.i378.sroa.sel.sroa.sel = getelementptr inbounds i8, ptr %6, i64 %.sroa.speculated21.i378.sroa.sel.sroa.sel.v
  %.0..i379.sroa.sel = select i1 %.not.i377, ptr %.sroa.gep3, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel, i64 8
  %.0..i379.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep, i64 8
  %.0..i379.sroa.sel.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1.sroa.gep, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep
  %..061.i380 = select i1 %.not.i377, ptr %.sroa.gep2, ptr %481
  br label %.cont.i397

.cont.i397:                                       ; preds = %select.end559, %.critedge69
  %lsr.iv474 = phi i64 [ %lsr.iv.next475, %select.end559 ], [ 248, %.critedge69 ]
  %lsr.iv471 = phi i64 [ %lsr.iv.next472, %select.end559 ], [ 8, %.critedge69 ]
  %.37.i381 = phi ptr [ %.3..i392, %select.end559 ], [ %.0..i379, %.critedge69 ]
  %.3646.i382 = phi ptr [ %..364.i391, %select.end559 ], [ %..061.i380, %.critedge69 ]
  %.0684.i384 = phi ptr [ %.169.i395, %select.end559 ], [ %480, %.critedge69 ]
  %.0703.i385 = phi ptr [ %.171.i394, %select.end559 ], [ %482, %.critedge69 ]
  %.37.i381.sroa.phi = phi ptr [ %.3..i392.sroa.sel, %select.end559 ], [ %.0..i379.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel, %select.end559 ], [ %.0..i379.sroa.sel.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel.sroa.gep, %select.end559 ], [ %.0..i379.sroa.sel.sroa.sel.sroa.sel, %.critedge69 ]
  %688 = load ptr, ptr %.37.i381, align 8
  %689 = load ptr, ptr %.3646.i382, align 8
  %690 = call i8 %2(ptr align 1 %3, ptr align 1 %688, ptr align 1 %689) #15
  %.sroa.speculated.i390.frozen = freeze i8 %690
  %.not76.i389 = icmp eq i8 %.sroa.speculated.i390.frozen, 1
  br i1 %.not76.i389, label %select.end, label %select.false

select.false:                                     ; preds = %.cont.i397
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont.i397
  %.sroa.speculated.i390 = phi ptr [ %.3646.i382, %.cont.i397 ], [ %.37.i381, %select.false ]
  %..364.i391.idx.frozen = freeze i8 %690
  %691 = icmp eq i8 %..364.i391.idx.frozen, 1
  %692 = load i64, ptr %.sroa.speculated.i390, align 8
  %sunkaddr657 = getelementptr i8, ptr %.5115, i64 %lsr.iv471
  store i64 %692, ptr %sunkaddr657, align 8
  br i1 %691, label %select.end550, label %select.false551

select.false551:                                  ; preds = %select.end
  br label %select.end550

select.end550:                                    ; preds = %select.false551, %select.end
  %..364.i391.idx = phi i64 [ 8, %select.end ], [ 0, %select.false551 ]
  %.3..i392.frozen = freeze i8 %690
  %693 = icmp eq i8 %.3..i392.frozen, 1
  %..364.i391 = getelementptr i8, ptr %.3646.i382, i64 %..364.i391.idx
  br i1 %693, label %select.true.sink, label %select.end552

select.true.sink:                                 ; preds = %select.end550
  %.37.i381.sroa.phi364 = getelementptr inbounds i8, ptr %.37.i381, i64 8
  br label %select.end552

select.end552:                                    ; preds = %select.true.sink, %select.end550
  %.3..i392 = phi ptr [ %.37.i381, %select.true.sink ], [ %.37.i381.sroa.phi, %select.end550 ]
  %.3..i392.sroa.sel = phi ptr [ %.37.i381.sroa.phi364, %select.true.sink ], [ %.37.i381.sroa.phi.sroa.phi, %select.end550 ]
  %.3..i392.sroa.sel.sroa.sel.frozen = freeze i8 %690
  %694 = icmp eq i8 %.3..i392.sroa.sel.sroa.sel.frozen, 1
  br i1 %694, label %select.true.sink554, label %select.end553

select.true.sink554:                              ; preds = %select.end552
  %.37.i381.sroa.phi364.sroa.gep = getelementptr inbounds i8, ptr %.37.i381, i64 16
  br label %select.end553

select.end553:                                    ; preds = %select.true.sink554, %select.end552
  %.3..i392.sroa.sel.sroa.sel = phi ptr [ %.37.i381.sroa.phi364.sroa.gep, %select.true.sink554 ], [ %.37.i381.sroa.phi.sroa.phi.sroa.phi, %select.end552 ]
  %.3..i392.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.3..i392.sroa.sel.sroa.sel, i64 8
  %695 = load ptr, ptr %.0684.i384, align 8
  %696 = load ptr, ptr %.0703.i385, align 8
  %697 = call i8 %2(ptr align 1 %3, ptr align 1 %695, ptr align 1 %696) #15
  %.sroa.speculated40.i393.frozen = freeze i8 %697
  %698 = icmp eq i8 %.sroa.speculated40.i393.frozen, 1
  br i1 %698, label %select.end555, label %select.false556

select.false556:                                  ; preds = %select.end553
  br label %select.end555

select.end555:                                    ; preds = %select.false556, %select.end553
  %.sroa.speculated40.i393 = phi ptr [ %.0684.i384, %select.end553 ], [ %.0703.i385, %select.false556 ]
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v.frozen = freeze i8 %697
  %699 = icmp eq i8 %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v.frozen, 1
  %700 = load i64, ptr %.sroa.speculated40.i393, align 8
  %sunkaddr658 = getelementptr i8, ptr %.5115, i64 %lsr.iv474
  store i64 %700, ptr %sunkaddr658, align 8
  br i1 %699, label %select.end557, label %select.false558

select.false558:                                  ; preds = %select.end555
  br label %select.end557

select.end557:                                    ; preds = %select.false558, %select.end555
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v = phi ptr [ %.0684.i384, %select.end555 ], [ %.0703.i385, %select.false558 ]
  %.171.i394.frozen = freeze i8 %697
  %701 = icmp eq i8 %.171.i394.frozen, 1
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 -8
  br i1 %701, label %select.end559, label %select.false560

select.false560:                                  ; preds = %select.end557
  br label %select.end559

select.end559:                                    ; preds = %select.false560, %select.end557
  %.171.i394 = phi ptr [ %.0703.i385, %select.end557 ], [ %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, %select.false560 ]
  %.169.i395 = phi ptr [ %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, %select.end557 ], [ %.0684.i384, %select.false560 ]
  %lsr.iv.next472 = add nuw nsw i64 %lsr.iv471, 8
  %lsr.iv.next475 = add nsw i64 %lsr.iv474, -8
  %exitcond.not.i396 = icmp eq i64 %lsr.iv.next475, 128
  br i1 %exitcond.not.i396, label %sort.parity_merge__anon_16495.exit399, label %.cont.i397

sort.parity_merge__anon_16495.exit399:            ; preds = %select.end559
  %702 = load ptr, ptr %.169.i395, align 8
  %703 = load ptr, ptr %.171.i394, align 8
  %704 = call i8 %2(ptr align 1 %3, ptr align 1 %702, ptr align 1 %703) #15
  %705 = icmp eq i8 %704, 1
  %.sroa.speculated46.i398 = select i1 %705, ptr %.169.i395, ptr %.171.i394
  %706 = load i64, ptr %.sroa.speculated46.i398, align 8
  %uglygep476 = getelementptr i8, ptr %.5115, i64 %lsr.iv.next475
  store i64 %706, ptr %uglygep476, align 8
  br label %492

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %707 = shl nuw nsw i64 %490, 3
  %708 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %707
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %709 = ptrtoint ptr %.5.lcssa to i64
  %710 = ptrtoint ptr %708 to i64
  %711 = shl nuw nsw i64 %.06.i, 3
  %712 = add nuw i64 %711, %709
  %713 = icmp ult i64 %712, %710
  br i1 %713, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw nsw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %714 = ptrtoint ptr %.5.lcssa to i64
  %715 = shl nuw nsw i64 %.06.i, 4
  %716 = shl nuw nsw i64 %.06.i, 1
  %717 = add i64 %714, %715
  %718 = add i64 %714, %711
  br label %722

.loopexit.i:                                      ; preds = %730, %726, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %716, %730 ], [ %716, %726 ]
  %719 = icmp ult i64 %.pre-phi.i, %490
  %720 = icmp ult i64 %.pre-phi.i, 33
  %721 = and i1 %719, %720
  br i1 %721, label %.preheader.i, label %common.ret

722:                                              ; preds = %726, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %726 ], [ 0, %.lr.ph.i ]
  %723 = ptrtoint ptr %708 to i64
  %uglygep470 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %724 = add i64 %717, %lsr.iv
  %725 = icmp ult i64 %724, %723
  br i1 %725, label %726, label %730

726:                                              ; preds = %722
  %727 = ptrtoint ptr %708 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep470, i64 %716, ptr nonnull align 1 %6, i64 32, i64 %.06.i, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  %lsr.iv.next = add i64 %lsr.iv, %715
  %728 = add i64 %718, %lsr.iv.next
  %729 = icmp ult i64 %728, %727
  br i1 %729, label %722, label %.loopexit.i

730:                                              ; preds = %722
  %731 = sub i64 %707, %lsr.iv
  %732 = lshr i64 %731, 3
  %uglygep469 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep469, i64 %732, ptr nonnull align 1 %6, i64 32, i64 %.06.i, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  %10 = icmp ugt i64 %1, 127
  %11 = icmp ugt i64 %3, 127
  %12 = select i1 %10, i1 %11, i1 false
  br i1 %12, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %7
  %uglygep18 = getelementptr i8, ptr %0, i64 -8
  %uglygep27 = getelementptr i8, ptr %0, i64 -8
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16500.exit25, %.preheader.lr.ph
  %.08 = phi i64 [ 128, %.preheader.lr.ph ], [ %18, %sort.tail_merge__anon_16500.exit25 ]
  %13 = ptrtoint ptr %0 to i64
  %14 = lshr exact i64 %.08, 2
  %15 = lshr exact i64 %.08, 1
  %16 = shl i64 %.08, 1
  %17 = shl i64 %.08, 3
  %18 = shl i64 %.08, 2
  %19 = getelementptr inbounds i8, ptr %2, i64 %18
  %uglygep19 = getelementptr i8, ptr %uglygep18, i64 %16
  %uglygep23 = getelementptr i8, ptr %0, i64 %18
  %20 = add i64 %13, %17
  %21 = mul i64 %.08, 6
  %uglygep28 = getelementptr i8, ptr %uglygep27, i64 %21
  br label %51

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16500.exit25, %7
  %.0.lcssa = phi i64 [ 128, %7 ], [ %18, %sort.tail_merge__anon_16500.exit25 ]
  %22 = lshr exact i64 %.0.lcssa, 2
  %23 = icmp ult i64 %22, %1
  %24 = icmp ule i64 %22, %3
  %25 = select i1 %23, i1 %24, i1 false
  br i1 %25, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16500.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ %22, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %26 = ptrtoint ptr %0 to i64
  %27 = ptrtoint ptr %9 to i64
  %28 = shl nuw i64 %.06.i, 3
  %29 = add nuw i64 %28, %26
  %30 = icmp ult i64 %29, %27
  br i1 %30, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %31 = ptrtoint ptr %0 to i64
  %32 = shl nuw i64 %.06.i, 4
  %33 = shl nuw i64 %.06.i, 1
  %34 = add i64 %31, %32
  %35 = add i64 %31, %28
  br label %39

.loopexit.i:                                      ; preds = %47, %43, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %33, %47 ], [ %33, %43 ]
  %36 = icmp ult i64 %.pre-phi.i, %1
  %37 = icmp ule i64 %.pre-phi.i, %3
  %38 = select i1 %36, i1 %37, i1 false
  br i1 %38, label %.preheader.i, label %sort.tail_merge__anon_16500.exit

39:                                               ; preds = %43, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %43 ], [ 0, %.lr.ph.i ]
  %40 = ptrtoint ptr %9 to i64
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv
  %41 = add i64 %34, %lsr.iv
  %42 = icmp ult i64 %41, %40
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = ptrtoint ptr %9 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep13, i64 %33, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  %lsr.iv.next = add i64 %lsr.iv, %32
  %45 = add i64 %35, %lsr.iv.next
  %46 = icmp ult i64 %45, %44
  br i1 %46, label %39, label %.loopexit.i

47:                                               ; preds = %39
  %48 = sub i64 %8, %lsr.iv
  %49 = lshr i64 %48, 3
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep, i64 %49, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  br label %.loopexit.i

sort.tail_merge__anon_16500.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %50 = lshr exact i64 %.0.lcssa, 1
  ret i64 %50

51:                                               ; preds = %sort.quad_merge_block__anon_16501.exit, %.preheader
  %lsr.iv36 = phi i64 [ %13, %.preheader ], [ %lsr.iv.next37, %sort.quad_merge_block__anon_16501.exit ]
  %lsr.iv32 = phi i64 [ %8, %.preheader ], [ %lsr.iv.next33, %sort.quad_merge_block__anon_16501.exit ]
  %lsr.iv14 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next15, %sort.quad_merge_block__anon_16501.exit ]
  %uglygep16 = getelementptr i8, ptr %0, i64 %lsr.iv14
  %uglygep21 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv14
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 8
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %uglygep30 = getelementptr i8, ptr %uglygep28, i64 %lsr.iv14
  %uglygep31 = getelementptr i8, ptr %uglygep30, i64 8
  tail call void %6(ptr align 1 %5, i64 2) #15
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv14
  %52 = load ptr, ptr %uglygep20, align 8
  %53 = load ptr, ptr %uglygep22, align 8
  %54 = tail call i8 %4(ptr align 1 %5, ptr align 1 %52, ptr align 1 %53) #15
  %55 = icmp ne i8 %54, 1
  %56 = zext i1 %55 to i2
  %uglygep29 = getelementptr i8, ptr %uglygep28, i64 %lsr.iv14
  %57 = load ptr, ptr %uglygep29, align 8
  %58 = load ptr, ptr %uglygep31, align 8
  %59 = tail call i8 %4(ptr align 1 %5, ptr align 1 %57, ptr align 1 %58) #15
  %.not.i = icmp eq i8 %59, 1
  %60 = select i1 %.not.i, i2 0, i2 -2
  %61 = or i2 %60, %56
  %62 = zext i2 %61 to i32
  switch i32 %62, label %64 [
    i32 0, label %65
    i32 1, label %66
    i32 2, label %67
    i32 3, label %68
  ]

63:                                               ; preds = %72, %67, %66, %65
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %uglygep16, ptr nonnull align 1 %2, i64 %15, i64 %15, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  br label %sort.quad_merge_block__anon_16501.exit

64:                                               ; preds = %51
  unreachable

65:                                               ; preds = %51
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %14, i64 %14, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %19, ptr nonnull align 1 %uglygep24, i64 %14, i64 %14, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  br label %63

66:                                               ; preds = %51
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %18, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %19, ptr nonnull align 1 %uglygep24, i64 %14, i64 %14, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  br label %63

67:                                               ; preds = %51
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %14, i64 %14, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %19, ptr noundef nonnull align 1 dereferenceable(1) %uglygep24, i64 %18, i1 false)
  br label %63

68:                                               ; preds = %51
  tail call void %6(ptr align 1 %5, i64 1) #15
  %uglygep25 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 -8
  %69 = load ptr, ptr %uglygep26, align 8
  %sunkaddr = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %70 = load ptr, ptr %sunkaddr, align 8
  %71 = tail call i8 %4(ptr align 1 %5, ptr align 1 %69, ptr align 1 %70) #15
  %.not6.i = icmp eq i8 %71, 1
  br i1 %.not6.i, label %72, label %sort.quad_merge_block__anon_16501.exit

72:                                               ; preds = %68
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %17, i1 false)
  br label %63

sort.quad_merge_block__anon_16501.exit:           ; preds = %68, %63
  %73 = ptrtoint ptr %9 to i64
  %lsr.iv.next15 = add i64 %lsr.iv14, %17
  %74 = add i64 %20, %lsr.iv.next15
  %lsr.iv.next33 = sub i64 %lsr.iv32, %17
  %75 = icmp ugt i64 %74, %73
  %lsr.iv.next37 = add i64 %lsr.iv36, %17
  br i1 %75, label %76, label %51

76:                                               ; preds = %sort.quad_merge_block__anon_16501.exit
  %77 = sub i64 %8, %lsr.iv.next15
  %78 = lshr i64 %77, 3
  %79 = icmp ult i64 %14, %78
  %80 = icmp ule i64 %14, %3
  %81 = select i1 %79, i1 %80, i1 false
  br i1 %81, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16500.exit25

.preheader.lr.ph.i16:                             ; preds = %76
  %82 = ptrtoint ptr %0 to i64
  %83 = lshr i64 %lsr.iv.next33, 3
  %84 = shl nuw i64 %83, 3
  %uglygep34 = getelementptr i8, ptr %0, i64 %84
  %uglygep35 = getelementptr i8, ptr %uglygep34, i64 %lsr.iv.next15
  %85 = lshr i64 %lsr.iv.next33, 3
  %86 = shl nuw i64 %85, 3
  %87 = add i64 %82, %86
  %88 = add i64 %87, %lsr.iv.next15
  %89 = add i64 %82, %lsr.iv.next15
  %uglygep40 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  %uglygep42 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  %90 = lshr i64 %lsr.iv.next33, 3
  %91 = shl nuw i64 %90, 3
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i23, %.preheader.lr.ph.i16
  %.06.i17 = phi i64 [ %14, %.preheader.lr.ph.i16 ], [ %.pre-phi.i22, %.loopexit.i23 ]
  %92 = ptrtoint ptr %uglygep35 to i64
  %93 = shl nuw i64 %.06.i17, 3
  %94 = add i64 %89, %93
  %95 = icmp ult i64 %94, %92
  br i1 %95, label %.lr.ph.i21, label %.preheader..loopexit_crit_edge.i20

.preheader..loopexit_crit_edge.i20:               ; preds = %.preheader.i18
  %.pre.i19 = shl nuw i64 %.06.i17, 1
  br label %.loopexit.i23

.lr.ph.i21:                                       ; preds = %.preheader.i18
  %96 = ptrtoint ptr %0 to i64
  %97 = shl nuw i64 %.06.i17, 4
  %98 = shl nuw i64 %.06.i17, 1
  %99 = add i64 %lsr.iv.next37, %97
  %100 = add i64 %96, %93
  %101 = add i64 %lsr.iv.next15, %100
  br label %105

.loopexit.i23:                                    ; preds = %112, %109, %.preheader..loopexit_crit_edge.i20
  %.pre-phi.i22 = phi i64 [ %.pre.i19, %.preheader..loopexit_crit_edge.i20 ], [ %98, %112 ], [ %98, %109 ]
  %102 = icmp ult i64 %.pre-phi.i22, %78
  %103 = icmp ule i64 %.pre-phi.i22, %3
  %104 = select i1 %102, i1 %103, i1 false
  br i1 %104, label %.preheader.i18, label %sort.tail_merge__anon_16500.exit25

105:                                              ; preds = %109, %.lr.ph.i21
  %lsr.iv38 = phi i64 [ %lsr.iv.next39, %109 ], [ 0, %.lr.ph.i21 ]
  %106 = ptrtoint ptr %uglygep35 to i64
  %uglygep43 = getelementptr i8, ptr %uglygep42, i64 %lsr.iv38
  %107 = add i64 %99, %lsr.iv38
  %108 = icmp ult i64 %107, %106
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep43, i64 %98, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  %lsr.iv.next39 = add i64 %lsr.iv38, %97
  %110 = add i64 %101, %lsr.iv.next39
  %111 = icmp ult i64 %110, %88
  br i1 %111, label %105, label %.loopexit.i23

112:                                              ; preds = %105
  %113 = sub i64 %91, %lsr.iv38
  %114 = lshr i64 %113, 3
  %uglygep41 = getelementptr i8, ptr %uglygep40, i64 %lsr.iv38
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %uglygep41, i64 %114, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  br label %.loopexit.i23

sort.tail_merge__anon_16500.exit25:               ; preds = %.loopexit.i23, %76
  %115 = icmp ule i64 %18, %1
  %116 = icmp ule i64 %18, %3
  %117 = select i1 %115, i1 %116, i1 false
  br i1 %117, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = shl i64 %1, 3
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = shl nuw i64 %4, 1
  %12 = icmp uge i64 %11, %1
  %13 = sub i64 %1, %4
  %14 = icmp ule i64 %13, %3
  %15 = select i1 %12, i1 %14, i1 false
  br i1 %15, label %17, label %.preheader1

.preheader1:                                      ; preds = %8
  %16 = icmp ugt i64 %1, %4
  br i1 %16, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader1
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader1
  ret void

17:                                               ; preds = %8
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.0177 = phi i64 [ %4, %.preheader.lr.ph ], [ %27, %.loopexit ]
  %18 = ptrtoint ptr %0 to i64
  %19 = ptrtoint ptr %10 to i64
  %20 = shl nuw i64 %.0177, 3
  %21 = add nuw i64 %20, %18
  %22 = icmp ult i64 %21, %19
  br i1 %22, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %23 = ptrtoint ptr %0 to i64
  %24 = shl nuw i64 %.0177, 4
  %25 = add i64 %23, %24
  %26 = add i64 %23, %20
  br label %29

.loopexit:                                        ; preds = %37, %33, %.preheader
  %27 = shl nuw i64 %.0177, 1
  %28 = icmp ult i64 %27, %1
  br i1 %28, label %.preheader, label %common.ret

29:                                               ; preds = %33, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %33 ]
  %30 = ptrtoint ptr %10 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %31 = add i64 %25, %lsr.iv
  %32 = icmp ult i64 %31, %30
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = ptrtoint ptr %10 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16503(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %.0177, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  %lsr.iv.next = add i64 %lsr.iv, %24
  %35 = add i64 %26, %lsr.iv.next
  %36 = icmp ult i64 %35, %34
  br i1 %36, label %29, label %.loopexit

37:                                               ; preds = %29
  %38 = sub i64 %9, %lsr.iv
  %39 = lshr i64 %38, 3
  %40 = sub nuw i64 %39, %.0177
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16503(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %40, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14847(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4) unnamed_addr #4 {
  %6 = alloca [49152 x i8], align 16
  %7 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, i64 512, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %6, i64 512, i64 %7, ptr nonnull readonly align 4 %2, ptr align 1 %3, ptr nonnull readonly align 4 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4) unnamed_addr #4 {
  %6 = icmp ult i64 %1, 8
  br i1 %6, label %7, label %442

common.ret:                                       ; preds = %467, %.cont110.i.i, %298, %sort.parity_swap_six__anon_16728.exit.i, %137, %97, %70, %46, %19, %9, %7, %7
  ret void

7:                                                ; preds = %5
  switch i64 %1, label %8 [
    i64 2, label %9
    i64 3, label %19
    i64 4, label %46
    i64 5, label %97
    i64 6, label %190
    i64 7, label %298
    i64 1, label %common.ret
    i64 0, label %common.ret
  ]

8:                                                ; preds = %7
  unreachable

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load ptr, ptr %0, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %3(ptr align 1 %4, ptr align 1 %11, ptr align 1 %12) #15
  %14 = icmp eq i8 %13, 1
  %..i = select i1 %14, i64 8, i64 0
  %15 = select i1 %14, i64 0, i64 8
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %15
  %16 = load i64, ptr %sunkaddr, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 %..i
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %0, align 8
  store i64 %16, ptr %10, align 8
  br label %common.ret

19:                                               ; preds = %7
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %20, align 8
  %23 = tail call i8 %3(ptr align 1 %4, ptr align 1 %21, ptr align 1 %22) #15
  %24 = icmp eq i8 %23, 1
  %.1.i = select i1 %24, i64 8, i64 0
  %25 = select i1 %24, i64 0, i64 8
  %sunkaddr1 = getelementptr inbounds i8, ptr %0, i64 %25
  %26 = load i64, ptr %sunkaddr1, align 8
  %27 = getelementptr inbounds i8, ptr %0, i64 %.1.i
  %28 = load i64, ptr %27, align 8
  store i64 %28, ptr %0, align 8
  store i64 %26, ptr %20, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i = inttoptr i64 %26 to ptr
  %30 = load ptr, ptr %29, align 8
  %31 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i, ptr align 1 %30) #15
  %32 = icmp eq i8 %31, 1
  %33 = select i1 %32, i64 8, i64 0
  %34 = select i1 %32, i64 8, i64 16
  %sunkaddr2 = getelementptr inbounds i8, ptr %0, i64 %34
  %35 = load i64, ptr %sunkaddr2, align 8
  %36 = getelementptr inbounds i8, ptr %20, i64 %33
  %37 = load i64, ptr %36, align 8
  store i64 %37, ptr %20, align 8
  store i64 %35, ptr %29, align 8
  %38 = load ptr, ptr %0, align 8
  %.cast64.i = inttoptr i64 %37 to ptr
  %39 = tail call i8 %3(ptr align 1 %4, ptr align 1 %38, ptr align 1 %.cast64.i) #15
  %40 = icmp eq i8 %39, 1
  %41 = select i1 %40, i64 8, i64 0
  %42 = select i1 %40, i64 0, i64 8
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %42
  %43 = load i64, ptr %sunkaddr3, align 8
  %44 = getelementptr inbounds i8, ptr %0, i64 %41
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %0, align 8
  store i64 %43, ptr %20, align 8
  br label %common.ret

46:                                               ; preds = %7
  %47 = getelementptr inbounds i8, ptr %0, i64 8
  %48 = load ptr, ptr %0, align 8
  %49 = load ptr, ptr %47, align 8
  %50 = tail call i8 %3(ptr align 1 %4, ptr align 1 %48, ptr align 1 %49) #15
  %51 = icmp eq i8 %50, 1
  %..i.i = select i1 %51, i64 8, i64 0
  %52 = select i1 %51, i64 0, i64 8
  %sunkaddr4 = getelementptr inbounds i8, ptr %0, i64 %52
  %53 = load i64, ptr %sunkaddr4, align 8
  %54 = getelementptr inbounds i8, ptr %0, i64 %..i.i
  %55 = load i64, ptr %54, align 8
  store i64 %55, ptr %0, align 8
  store i64 %53, ptr %47, align 8
  %56 = getelementptr inbounds i8, ptr %0, i64 16
  %57 = getelementptr inbounds i8, ptr %0, i64 24
  %58 = load ptr, ptr %56, align 8
  %59 = load ptr, ptr %57, align 8
  %60 = tail call i8 %3(ptr align 1 %4, ptr align 1 %58, ptr align 1 %59) #15
  %61 = icmp eq i8 %60, 1
  %62 = select i1 %61, i64 8, i64 0
  %63 = select i1 %61, i64 16, i64 24
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %63
  %64 = load i64, ptr %sunkaddr5, align 8
  %65 = getelementptr inbounds i8, ptr %56, i64 %62
  %66 = load i64, ptr %65, align 8
  store i64 %66, ptr %56, align 8
  store i64 %64, ptr %57, align 8
  %67 = load ptr, ptr %47, align 8
  %.cast.i.i = inttoptr i64 %66 to ptr
  %68 = tail call i8 %3(ptr align 1 %4, ptr align 1 %67, ptr align 1 %.cast.i.i) #15
  %69 = icmp eq i8 %68, 1
  br i1 %69, label %70, label %common.ret

70:                                               ; preds = %46
  %sunkaddr6 = getelementptr inbounds i8, ptr %0, i64 8
  %71 = load i64, ptr %sunkaddr6, align 8
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 16
  %72 = load i64, ptr %sunkaddr7, align 8
  store i64 %72, ptr %sunkaddr6, align 8
  store i64 %71, ptr %sunkaddr7, align 8
  %73 = load ptr, ptr %0, align 8
  %.cast1.i.i = inttoptr i64 %72 to ptr
  %74 = tail call i8 %3(ptr align 1 %4, ptr align 1 %73, ptr align 1 %.cast1.i.i) #15
  %75 = icmp eq i8 %74, 1
  %.1.i.i = select i1 %75, i64 8, i64 0
  %76 = select i1 %75, i64 0, i64 8
  %sunkaddr8 = getelementptr inbounds i8, ptr %0, i64 %76
  %77 = load i64, ptr %sunkaddr8, align 8
  %78 = getelementptr inbounds i8, ptr %0, i64 %.1.i.i
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %0, align 8
  store i64 %77, ptr %sunkaddr6, align 8
  %80 = load ptr, ptr %sunkaddr7, align 8
  %sunkaddr9 = getelementptr inbounds i8, ptr %0, i64 24
  %81 = load ptr, ptr %sunkaddr9, align 8
  %82 = tail call i8 %3(ptr align 1 %4, ptr align 1 %80, ptr align 1 %81) #15
  %83 = icmp eq i8 %82, 1
  %84 = select i1 %83, i64 8, i64 0
  %85 = select i1 %83, i64 16, i64 24
  %sunkaddr10 = getelementptr inbounds i8, ptr %0, i64 %85
  %86 = load i64, ptr %sunkaddr10, align 8
  %87 = getelementptr inbounds i8, ptr %56, i64 %84
  %88 = load i64, ptr %87, align 8
  store i64 %88, ptr %sunkaddr7, align 8
  store i64 %86, ptr %sunkaddr9, align 8
  %89 = load ptr, ptr %sunkaddr6, align 8
  %.cast2.i.i = inttoptr i64 %88 to ptr
  %90 = tail call i8 %3(ptr align 1 %4, ptr align 1 %89, ptr align 1 %.cast2.i.i) #15
  %91 = icmp eq i8 %90, 1
  %92 = select i1 %91, i64 8, i64 0
  %93 = select i1 %91, i64 8, i64 16
  %sunkaddr11 = getelementptr inbounds i8, ptr %0, i64 %93
  %94 = load i64, ptr %sunkaddr11, align 8
  %95 = getelementptr inbounds i8, ptr %47, i64 %92
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %sunkaddr6, align 8
  store i64 %94, ptr %sunkaddr7, align 8
  br label %common.ret

97:                                               ; preds = %7
  %98 = getelementptr inbounds i8, ptr %0, i64 8
  %99 = load ptr, ptr %0, align 8
  %100 = load ptr, ptr %98, align 8
  %101 = tail call i8 %3(ptr align 1 %4, ptr align 1 %99, ptr align 1 %100) #15
  %102 = icmp eq i8 %101, 1
  %..i9.i = select i1 %102, i64 8, i64 0
  %103 = select i1 %102, i64 0, i64 8
  %sunkaddr12 = getelementptr inbounds i8, ptr %0, i64 %103
  %104 = load i64, ptr %sunkaddr12, align 8
  %105 = getelementptr inbounds i8, ptr %0, i64 %..i9.i
  %106 = load i64, ptr %105, align 8
  store i64 %106, ptr %0, align 8
  store i64 %104, ptr %98, align 8
  %107 = getelementptr inbounds i8, ptr %0, i64 16
  %108 = getelementptr inbounds i8, ptr %0, i64 24
  %109 = load ptr, ptr %107, align 8
  %110 = load ptr, ptr %108, align 8
  %111 = tail call i8 %3(ptr align 1 %4, ptr align 1 %109, ptr align 1 %110) #15
  %112 = icmp eq i8 %111, 1
  %113 = select i1 %112, i64 8, i64 0
  %114 = select i1 %112, i64 16, i64 24
  %sunkaddr13 = getelementptr inbounds i8, ptr %0, i64 %114
  %115 = load i64, ptr %sunkaddr13, align 8
  %116 = getelementptr inbounds i8, ptr %107, i64 %113
  %117 = load i64, ptr %116, align 8
  store i64 %117, ptr %107, align 8
  store i64 %115, ptr %108, align 8
  %118 = load ptr, ptr %98, align 8
  %.cast.i10.i = inttoptr i64 %117 to ptr
  %119 = tail call i8 %3(ptr align 1 %4, ptr align 1 %118, ptr align 1 %.cast.i10.i) #15
  %120 = icmp eq i8 %119, 1
  %121 = select i1 %120, i64 8, i64 0
  %122 = select i1 %120, i64 8, i64 16
  %sunkaddr14 = getelementptr inbounds i8, ptr %0, i64 %122
  %123 = load i64, ptr %sunkaddr14, align 8
  %124 = getelementptr inbounds i8, ptr %98, i64 %121
  %125 = load i64, ptr %124, align 8
  store i64 %125, ptr %98, align 8
  store i64 %123, ptr %107, align 8
  %126 = zext i1 %120 to i8
  %127 = getelementptr inbounds i8, ptr %0, i64 32
  %128 = load ptr, ptr %108, align 8
  %129 = load ptr, ptr %127, align 8
  %130 = tail call i8 %3(ptr align 1 %4, ptr align 1 %128, ptr align 1 %129) #15
  %131 = icmp eq i8 %130, 1
  %132 = select i1 %131, i64 8, i64 0
  %133 = select i1 %131, i64 24, i64 32
  %sunkaddr15 = getelementptr inbounds i8, ptr %0, i64 %133
  %134 = load i64, ptr %sunkaddr15, align 8
  %135 = getelementptr inbounds i8, ptr %108, i64 %132
  %136 = load i64, ptr %135, align 8
  store i64 %136, ptr %108, align 8
  store i64 %134, ptr %127, align 8
  %.neg.i.i = sext i1 %131 to i8
  %.not.i.i = icmp eq i8 %126, %.neg.i.i
  br i1 %.not.i.i, label %common.ret, label %137

137:                                              ; preds = %97
  %138 = load ptr, ptr %0, align 8
  %sunkaddr16 = getelementptr inbounds i8, ptr %0, i64 8
  %139 = load ptr, ptr %sunkaddr16, align 8
  %140 = tail call i8 %3(ptr align 1 %4, ptr align 1 %138, ptr align 1 %139) #15
  %141 = icmp eq i8 %140, 1
  %.1.i11.i = select i1 %141, i64 8, i64 0
  %142 = select i1 %141, i64 0, i64 8
  %sunkaddr17 = getelementptr inbounds i8, ptr %0, i64 %142
  %143 = load i64, ptr %sunkaddr17, align 8
  %144 = getelementptr inbounds i8, ptr %0, i64 %.1.i11.i
  %145 = load i64, ptr %144, align 8
  store i64 %145, ptr %0, align 8
  store i64 %143, ptr %sunkaddr16, align 8
  %sunkaddr18 = getelementptr inbounds i8, ptr %0, i64 16
  %146 = load ptr, ptr %sunkaddr18, align 8
  %sunkaddr19 = getelementptr inbounds i8, ptr %0, i64 24
  %147 = load ptr, ptr %sunkaddr19, align 8
  %148 = tail call i8 %3(ptr align 1 %4, ptr align 1 %146, ptr align 1 %147) #15
  %149 = icmp eq i8 %148, 1
  %150 = select i1 %149, i64 8, i64 0
  %151 = select i1 %149, i64 16, i64 24
  %sunkaddr20 = getelementptr inbounds i8, ptr %0, i64 %151
  %152 = load i64, ptr %sunkaddr20, align 8
  %153 = getelementptr inbounds i8, ptr %107, i64 %150
  %154 = load i64, ptr %153, align 8
  store i64 %154, ptr %sunkaddr18, align 8
  store i64 %152, ptr %sunkaddr19, align 8
  %155 = load ptr, ptr %sunkaddr16, align 8
  %.cast1.i12.i = inttoptr i64 %154 to ptr
  %156 = tail call i8 %3(ptr align 1 %4, ptr align 1 %155, ptr align 1 %.cast1.i12.i) #15
  %157 = icmp eq i8 %156, 1
  %158 = select i1 %157, i64 8, i64 0
  %159 = select i1 %157, i64 8, i64 16
  %sunkaddr21 = getelementptr inbounds i8, ptr %0, i64 %159
  %160 = load i64, ptr %sunkaddr21, align 8
  %161 = getelementptr inbounds i8, ptr %98, i64 %158
  %162 = load i64, ptr %161, align 8
  store i64 %162, ptr %sunkaddr16, align 8
  store i64 %160, ptr %sunkaddr18, align 8
  %163 = load ptr, ptr %sunkaddr19, align 8
  %sunkaddr22 = getelementptr inbounds i8, ptr %0, i64 32
  %164 = load ptr, ptr %sunkaddr22, align 8
  %165 = tail call i8 %3(ptr align 1 %4, ptr align 1 %163, ptr align 1 %164) #15
  %166 = icmp eq i8 %165, 1
  %167 = select i1 %166, i64 8, i64 0
  %168 = select i1 %166, i64 24, i64 32
  %sunkaddr23 = getelementptr inbounds i8, ptr %0, i64 %168
  %169 = load i64, ptr %sunkaddr23, align 8
  %170 = getelementptr inbounds i8, ptr %108, i64 %167
  %171 = load i64, ptr %170, align 8
  store i64 %171, ptr %sunkaddr19, align 8
  store i64 %169, ptr %sunkaddr22, align 8
  %172 = load ptr, ptr %0, align 8
  %173 = load ptr, ptr %sunkaddr16, align 8
  %174 = tail call i8 %3(ptr align 1 %4, ptr align 1 %172, ptr align 1 %173) #15
  %175 = icmp eq i8 %174, 1
  %176 = select i1 %175, i64 8, i64 0
  %177 = select i1 %175, i64 0, i64 8
  %sunkaddr24 = getelementptr inbounds i8, ptr %0, i64 %177
  %178 = load i64, ptr %sunkaddr24, align 8
  %179 = getelementptr inbounds i8, ptr %0, i64 %176
  %180 = load i64, ptr %179, align 8
  store i64 %180, ptr %0, align 8
  store i64 %178, ptr %sunkaddr16, align 8
  %181 = load ptr, ptr %sunkaddr18, align 8
  %182 = load ptr, ptr %sunkaddr19, align 8
  %183 = tail call i8 %3(ptr align 1 %4, ptr align 1 %181, ptr align 1 %182) #15
  %184 = icmp eq i8 %183, 1
  %185 = select i1 %184, i64 8, i64 0
  %186 = select i1 %184, i64 16, i64 24
  %sunkaddr25 = getelementptr inbounds i8, ptr %0, i64 %186
  %187 = load i64, ptr %sunkaddr25, align 8
  %188 = getelementptr inbounds i8, ptr %107, i64 %185
  %189 = load i64, ptr %188, align 8
  store i64 %189, ptr %sunkaddr18, align 8
  store i64 %187, ptr %sunkaddr19, align 8
  br label %common.ret

190:                                              ; preds = %7
  %191 = getelementptr inbounds i8, ptr %0, i64 8
  %192 = load ptr, ptr %0, align 8
  %193 = load ptr, ptr %191, align 8
  %194 = tail call i8 %3(ptr align 1 %4, ptr align 1 %192, ptr align 1 %193) #15
  %195 = icmp eq i8 %194, 1
  %..i13.i = select i1 %195, i64 8, i64 0
  %196 = select i1 %195, i64 0, i64 8
  %sunkaddr26 = getelementptr inbounds i8, ptr %0, i64 %196
  %197 = load i64, ptr %sunkaddr26, align 8
  %198 = getelementptr inbounds i8, ptr %0, i64 %..i13.i
  %199 = load i64, ptr %198, align 8
  store i64 %199, ptr %0, align 8
  store i64 %197, ptr %191, align 8
  %200 = getelementptr inbounds i8, ptr %0, i64 16
  %.cast.i14.i = inttoptr i64 %197 to ptr
  %201 = load ptr, ptr %200, align 8
  %202 = tail call i8 %3(ptr align 1 %4, ptr align 1 %.cast.i14.i, ptr align 1 %201) #15
  %203 = icmp eq i8 %202, 1
  %204 = select i1 %203, i64 8, i64 0
  %205 = select i1 %203, i64 8, i64 16
  %sunkaddr27 = getelementptr inbounds i8, ptr %0, i64 %205
  %206 = load i64, ptr %sunkaddr27, align 8
  %207 = getelementptr inbounds i8, ptr %191, i64 %204
  %208 = load i64, ptr %207, align 8
  store i64 %208, ptr %191, align 8
  store i64 %206, ptr %200, align 8
  %209 = getelementptr inbounds i8, ptr %0, i64 32
  %210 = getelementptr inbounds i8, ptr %0, i64 40
  %211 = load ptr, ptr %209, align 8
  %212 = load ptr, ptr %210, align 8
  %213 = tail call i8 %3(ptr align 1 %4, ptr align 1 %211, ptr align 1 %212) #15
  %214 = icmp eq i8 %213, 1
  %215 = select i1 %214, i64 8, i64 0
  %216 = select i1 %214, i64 32, i64 40
  %sunkaddr28 = getelementptr inbounds i8, ptr %0, i64 %216
  %217 = load i64, ptr %sunkaddr28, align 8
  %218 = getelementptr inbounds i8, ptr %209, i64 %215
  %219 = load i64, ptr %218, align 8
  store i64 %219, ptr %209, align 8
  store i64 %217, ptr %210, align 8
  %220 = getelementptr inbounds i8, ptr %0, i64 24
  %221 = load ptr, ptr %220, align 8
  %.cast1.i15.i = inttoptr i64 %219 to ptr
  %222 = tail call i8 %3(ptr align 1 %4, ptr align 1 %221, ptr align 1 %.cast1.i15.i) #15
  %223 = icmp eq i8 %222, 1
  %224 = select i1 %223, i64 8, i64 0
  %225 = select i1 %223, i64 24, i64 32
  %sunkaddr29 = getelementptr inbounds i8, ptr %0, i64 %225
  %226 = load i64, ptr %sunkaddr29, align 8
  %227 = getelementptr inbounds i8, ptr %220, i64 %224
  %228 = load i64, ptr %227, align 8
  store i64 %228, ptr %220, align 8
  store i64 %226, ptr %209, align 8
  %229 = load ptr, ptr %200, align 8
  %.cast2.i16.i = inttoptr i64 %228 to ptr
  %230 = tail call i8 %3(ptr align 1 %4, ptr align 1 %229, ptr align 1 %.cast2.i16.i) #15
  %.not.i17.i = icmp eq i8 %230, 1
  %231 = load ptr, ptr %0, align 8
  %232 = load ptr, ptr %191, align 8
  %233 = tail call i8 %3(ptr align 1 %4, ptr align 1 %231, ptr align 1 %232) #15
  %.not113.i.i = icmp eq i8 %233, 1
  %.2.i.i = select i1 %.not113.i.i, i64 8, i64 0
  br i1 %.not.i17.i, label %.cont96.i.i, label %234

234:                                              ; preds = %190
  %235 = icmp eq i8 %233, 1
  %236 = select i1 %235, i64 0, i64 8
  %sunkaddr30 = getelementptr inbounds i8, ptr %0, i64 %236
  %237 = load i64, ptr %sunkaddr30, align 8
  %238 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %239 = load i64, ptr %238, align 8
  store i64 %239, ptr %0, align 8
  %sunkaddr31 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %237, ptr %sunkaddr31, align 8
  %sunkaddr32 = getelementptr inbounds i8, ptr %0, i64 32
  %240 = load ptr, ptr %sunkaddr32, align 8
  %sunkaddr33 = getelementptr inbounds i8, ptr %0, i64 40
  %241 = load ptr, ptr %sunkaddr33, align 8
  %242 = tail call i8 %3(ptr align 1 %4, ptr align 1 %240, ptr align 1 %241) #15
  %243 = icmp eq i8 %242, 1
  %244 = select i1 %243, i64 8, i64 0
  %245 = select i1 %243, i64 32, i64 40
  %sunkaddr34 = getelementptr inbounds i8, ptr %0, i64 %245
  %246 = load i64, ptr %sunkaddr34, align 8
  %247 = getelementptr inbounds i8, ptr %209, i64 %244
  %248 = load i64, ptr %247, align 8
  store i64 %248, ptr %sunkaddr32, align 8
  br label %sort.parity_swap_six__anon_16728.exit.i

.cont96.i.i:                                      ; preds = %190
  %249 = icmp eq i8 %233, 1
  %.3.i.i = select i1 %249, i64 0, i64 8
  %250 = getelementptr inbounds i8, ptr %0, i64 %.2.i.i
  %251 = load i64, ptr %250, align 8
  store i64 %251, ptr %2, align 8
  %252 = getelementptr inbounds i8, ptr %2, i64 8
  %253 = getelementptr inbounds i8, ptr %0, i64 %.3.i.i
  %254 = load i64, ptr %253, align 8
  store i64 %254, ptr %252, align 8
  %255 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr35 = getelementptr inbounds i8, ptr %0, i64 16
  %256 = load i64, ptr %sunkaddr35, align 8
  store i64 %256, ptr %255, align 8
  %sunkaddr36 = getelementptr inbounds i8, ptr %0, i64 32
  %257 = load ptr, ptr %sunkaddr36, align 8
  %sunkaddr37 = getelementptr inbounds i8, ptr %0, i64 40
  %258 = load ptr, ptr %sunkaddr37, align 8
  %259 = tail call i8 %3(ptr align 1 %4, ptr align 1 %257, ptr align 1 %258) #15
  %.not114.i.i = icmp eq i8 %259, 1
  %.4.i.i = select i1 %.not114.i.i, i64 8, i64 0
  %.5.i.i = select i1 %.not114.i.i, i64 0, i64 8
  %260 = getelementptr inbounds i8, ptr %2, i64 32
  %261 = getelementptr inbounds i8, ptr %209, i64 %.4.i.i
  %262 = load i64, ptr %261, align 8
  store i64 %262, ptr %260, align 8
  %263 = getelementptr inbounds i8, ptr %2, i64 40
  %264 = getelementptr inbounds i8, ptr %209, i64 %.5.i.i
  %265 = load i64, ptr %264, align 8
  store i64 %265, ptr %263, align 8
  %266 = getelementptr inbounds i8, ptr %2, i64 24
  %sunkaddr38 = getelementptr inbounds i8, ptr %0, i64 24
  %267 = load i64, ptr %sunkaddr38, align 8
  store i64 %267, ptr %266, align 8
  %268 = load ptr, ptr %2, align 8
  %.cast3.i.i = inttoptr i64 %267 to ptr
  %269 = tail call i8 %3(ptr align 1 %4, ptr align 1 %268, ptr align 1 %.cast3.i.i) #15
  %.not115.i.i = icmp eq i8 %269, 1
  %.sroa.speculated92.i.i39 = select i1 %.not115.i.i, i64 24, i64 0
  %.sroa.speculated92.i.i = select i1 %.not115.i.i, ptr %266, ptr %2
  %sunkaddr40 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated92.i.i39
  %270 = load i64, ptr %sunkaddr40, align 8
  store i64 %270, ptr %0, align 8
  %271 = getelementptr inbounds i8, ptr %.sroa.speculated92.i.i, i64 8
  %.118.i.i = select i1 %.not115.i.i, ptr %2, ptr %271
  %.119.i.i = select i1 %.not115.i.i, ptr %271, ptr %266
  %272 = load ptr, ptr %.118.i.i, align 8
  %273 = load ptr, ptr %.119.i.i, align 8
  %274 = tail call i8 %3(ptr align 1 %4, ptr align 1 %272, ptr align 1 %273) #15
  %.not116.i.i = icmp eq i8 %274, 1
  %.sroa.speculated83.i.i = select i1 %.not116.i.i, ptr %.119.i.i, ptr %.118.i.i
  %275 = load i64, ptr %.sroa.speculated83.i.i, align 8
  %sunkaddr41 = getelementptr inbounds i8, ptr %0, i64 8
  store i64 %275, ptr %sunkaddr41, align 8
  %276 = getelementptr inbounds i8, ptr %.sroa.speculated83.i.i, i64 8
  %.1110.i.i = select i1 %.not116.i.i, ptr %.118.i.i, ptr %276
  %.1106.i.i = select i1 %.not116.i.i, ptr %276, ptr %.119.i.i
  %277 = load ptr, ptr %.1110.i.i, align 8
  %278 = load ptr, ptr %.1106.i.i, align 8
  %279 = tail call i8 %3(ptr align 1 %4, ptr align 1 %277, ptr align 1 %278) #15
  %.not117.i.i = icmp eq i8 %279, 1
  %.sroa.speculated74.i.i = select i1 %.not117.i.i, ptr %.1106.i.i, ptr %.1110.i.i
  %280 = load i64, ptr %.sroa.speculated74.i.i, align 8
  store i64 %280, ptr %sunkaddr35, align 8
  %281 = load ptr, ptr %255, align 8
  %282 = load ptr, ptr %263, align 8
  %283 = tail call i8 %3(ptr align 1 %4, ptr align 1 %281, ptr align 1 %282) #15
  %284 = icmp eq i8 %283, 1
  %.sroa.speculated65.i.i42 = select i1 %284, i64 16, i64 40
  %.sroa.speculated65.i.i = select i1 %284, ptr %255, ptr %263
  %sunkaddr43 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated65.i.i42
  %285 = load i64, ptr %sunkaddr43, align 8
  store i64 %285, ptr %sunkaddr37, align 8
  %286 = getelementptr inbounds i8, ptr %.sroa.speculated65.i.i, i64 -8
  %.2111.i.i = select i1 %284, ptr %286, ptr %255
  %.2107.i.i = select i1 %284, ptr %263, ptr %286
  %287 = load ptr, ptr %.2111.i.i, align 8
  %288 = load ptr, ptr %.2107.i.i, align 8
  %289 = tail call i8 %3(ptr align 1 %4, ptr align 1 %287, ptr align 1 %288) #15
  %290 = icmp eq i8 %289, 1
  %.sroa.speculated.i.i = select i1 %290, ptr %.2111.i.i, ptr %.2107.i.i
  %291 = load i64, ptr %.sroa.speculated.i.i, align 8
  store i64 %291, ptr %sunkaddr36, align 8
  %292 = getelementptr inbounds i8, ptr %.sroa.speculated.i.i, i64 -8
  %.3112.i.i = select i1 %290, ptr %292, ptr %.2111.i.i
  %.3108.i.i = select i1 %290, ptr %.2107.i.i, ptr %292
  %293 = load ptr, ptr %.3112.i.i, align 8
  %294 = load ptr, ptr %.3108.i.i, align 8
  %295 = tail call i8 %3(ptr align 1 %4, ptr align 1 %293, ptr align 1 %294) #15
  %296 = icmp eq i8 %295, 1
  %297 = select i1 %296, ptr %.3112.i.i, ptr %.3108.i.i
  %.sink5.i.sroa.speculate.load..cont96.i.i = load i64, ptr %297, align 8
  br label %sort.parity_swap_six__anon_16728.exit.i

sort.parity_swap_six__anon_16728.exit.i:          ; preds = %.cont96.i.i, %234
  %.sink5.i.sroa.speculated.i = phi i64 [ %.sink5.i.sroa.speculate.load..cont96.i.i, %.cont96.i.i ], [ %246, %234 ]
  %.sink4.i.i = phi ptr [ %220, %.cont96.i.i ], [ %210, %234 ]
  store i64 %.sink5.i.sroa.speculated.i, ptr %.sink4.i.i, align 8
  br label %common.ret

298:                                              ; preds = %7
  %299 = getelementptr inbounds i8, ptr %0, i64 8
  %300 = load ptr, ptr %0, align 8
  %301 = load ptr, ptr %299, align 8
  %302 = tail call i8 %3(ptr align 1 %4, ptr align 1 %300, ptr align 1 %301) #15
  %303 = icmp eq i8 %302, 1
  %..i18.i = select i1 %303, i64 8, i64 0
  %304 = select i1 %303, i64 0, i64 8
  %sunkaddr44 = getelementptr inbounds i8, ptr %0, i64 %304
  %305 = load i64, ptr %sunkaddr44, align 8
  %306 = getelementptr inbounds i8, ptr %0, i64 %..i18.i
  %307 = load i64, ptr %306, align 8
  store i64 %307, ptr %0, align 8
  store i64 %305, ptr %299, align 8
  %308 = getelementptr inbounds i8, ptr %0, i64 16
  %309 = getelementptr inbounds i8, ptr %0, i64 24
  %310 = load ptr, ptr %308, align 8
  %311 = load ptr, ptr %309, align 8
  %312 = tail call i8 %3(ptr align 1 %4, ptr align 1 %310, ptr align 1 %311) #15
  %313 = icmp eq i8 %312, 1
  %314 = select i1 %313, i64 8, i64 0
  %315 = select i1 %313, i64 16, i64 24
  %sunkaddr45 = getelementptr inbounds i8, ptr %0, i64 %315
  %316 = load i64, ptr %sunkaddr45, align 8
  %317 = getelementptr inbounds i8, ptr %308, i64 %314
  %318 = load i64, ptr %317, align 8
  store i64 %318, ptr %308, align 8
  store i64 %316, ptr %309, align 8
  %319 = getelementptr inbounds i8, ptr %0, i64 32
  %320 = getelementptr inbounds i8, ptr %0, i64 40
  %321 = load ptr, ptr %319, align 8
  %322 = load ptr, ptr %320, align 8
  %323 = tail call i8 %3(ptr align 1 %4, ptr align 1 %321, ptr align 1 %322) #15
  %324 = icmp eq i8 %323, 1
  %325 = select i1 %324, i64 8, i64 0
  %326 = select i1 %324, i64 32, i64 40
  %sunkaddr46 = getelementptr inbounds i8, ptr %0, i64 %326
  %327 = load i64, ptr %sunkaddr46, align 8
  %328 = getelementptr inbounds i8, ptr %319, i64 %325
  %329 = load i64, ptr %328, align 8
  store i64 %329, ptr %319, align 8
  store i64 %327, ptr %320, align 8
  %330 = load ptr, ptr %299, align 8
  %331 = load ptr, ptr %308, align 8
  %332 = tail call i8 %3(ptr align 1 %4, ptr align 1 %330, ptr align 1 %331) #15
  %333 = icmp eq i8 %332, 1
  %334 = select i1 %333, i64 8, i64 0
  %335 = select i1 %333, i64 8, i64 16
  %sunkaddr47 = getelementptr inbounds i8, ptr %0, i64 %335
  %336 = load i64, ptr %sunkaddr47, align 8
  %337 = getelementptr inbounds i8, ptr %299, i64 %334
  %338 = load i64, ptr %337, align 8
  store i64 %338, ptr %299, align 8
  store i64 %336, ptr %308, align 8
  %339 = zext i1 %333 to i8
  %340 = load ptr, ptr %309, align 8
  %341 = load ptr, ptr %319, align 8
  %342 = tail call i8 %3(ptr align 1 %4, ptr align 1 %340, ptr align 1 %341) #15
  %343 = icmp eq i8 %342, 1
  %344 = select i1 %343, i64 8, i64 0
  %345 = select i1 %343, i64 24, i64 32
  %sunkaddr48 = getelementptr inbounds i8, ptr %0, i64 %345
  %346 = load i64, ptr %sunkaddr48, align 8
  %347 = getelementptr inbounds i8, ptr %309, i64 %344
  %348 = load i64, ptr %347, align 8
  store i64 %348, ptr %309, align 8
  store i64 %346, ptr %319, align 8
  %349 = zext i1 %343 to i8
  %350 = add nuw nsw i8 %349, %339
  %351 = getelementptr inbounds i8, ptr %0, i64 48
  %352 = load ptr, ptr %320, align 8
  %353 = load ptr, ptr %351, align 8
  %354 = tail call i8 %3(ptr align 1 %4, ptr align 1 %352, ptr align 1 %353) #15
  %355 = icmp eq i8 %354, 1
  %356 = select i1 %355, i64 8, i64 0
  %357 = select i1 %355, i64 40, i64 48
  %sunkaddr49 = getelementptr inbounds i8, ptr %0, i64 %357
  %358 = load i64, ptr %sunkaddr49, align 8
  %359 = getelementptr inbounds i8, ptr %320, i64 %356
  %360 = load i64, ptr %359, align 8
  store i64 %360, ptr %320, align 8
  store i64 %358, ptr %351, align 8
  %.neg.i19.i = sext i1 %355 to i8
  %361 = icmp eq i8 %350, %.neg.i19.i
  br i1 %361, label %common.ret, label %.cont110.i.i

.cont110.i.i:                                     ; preds = %298
  %362 = inttoptr i64 %360 to ptr
  %sunkaddr50 = getelementptr inbounds i8, ptr %0, i64 32
  %363 = load ptr, ptr %sunkaddr50, align 8
  %364 = tail call i8 %3(ptr align 1 %4, ptr align 1 %363, ptr align 1 %362) #15
  %365 = icmp eq i8 %364, 1
  %.1.i20.i = select i1 %365, i64 8, i64 0
  %366 = select i1 %365, i64 32, i64 40
  %sunkaddr51 = getelementptr inbounds i8, ptr %0, i64 %366
  %367 = load i64, ptr %sunkaddr51, align 8
  %368 = getelementptr inbounds i8, ptr %319, i64 %.1.i20.i
  %369 = load i64, ptr %368, align 8
  store i64 %369, ptr %sunkaddr50, align 8
  %sunkaddr52 = getelementptr inbounds i8, ptr %0, i64 40
  store i64 %367, ptr %sunkaddr52, align 8
  %370 = load ptr, ptr %0, align 8
  %sunkaddr53 = getelementptr inbounds i8, ptr %0, i64 8
  %371 = load ptr, ptr %sunkaddr53, align 8
  %372 = tail call i8 %3(ptr align 1 %4, ptr align 1 %370, ptr align 1 %371) #15
  %.not.i21.i = icmp eq i8 %372, 1
  %373 = select i1 %.not.i21.i, i64 8, i64 0
  %374 = select i1 %.not.i21.i, i64 0, i64 8
  %375 = getelementptr inbounds i8, ptr %0, i64 %373
  %376 = load i64, ptr %375, align 8
  store i64 %376, ptr %2, align 8
  %377 = getelementptr inbounds i8, ptr %2, i64 8
  %378 = getelementptr inbounds i8, ptr %0, i64 %374
  %379 = load i64, ptr %378, align 8
  store i64 %379, ptr %377, align 8
  %380 = getelementptr inbounds i8, ptr %2, i64 16
  %sunkaddr54 = getelementptr inbounds i8, ptr %0, i64 16
  %381 = load i64, ptr %sunkaddr54, align 8
  store i64 %381, ptr %380, align 8
  %sunkaddr55 = getelementptr inbounds i8, ptr %0, i64 24
  %382 = load ptr, ptr %sunkaddr55, align 8
  %383 = load ptr, ptr %sunkaddr50, align 8
  %384 = tail call i8 %3(ptr align 1 %4, ptr align 1 %382, ptr align 1 %383) #15
  %.not127.i.i = icmp eq i8 %384, 1
  %385 = select i1 %.not127.i.i, i64 8, i64 0
  %386 = select i1 %.not127.i.i, i64 0, i64 8
  %387 = getelementptr inbounds i8, ptr %2, i64 24
  %388 = getelementptr inbounds i8, ptr %309, i64 %385
  %389 = load i64, ptr %388, align 8
  store i64 %389, ptr %387, align 8
  %390 = getelementptr inbounds i8, ptr %2, i64 32
  %391 = getelementptr inbounds i8, ptr %309, i64 %386
  %392 = load i64, ptr %391, align 8
  store i64 %392, ptr %390, align 8
  %393 = load ptr, ptr %sunkaddr52, align 8
  %sunkaddr56 = getelementptr inbounds i8, ptr %0, i64 48
  %394 = load ptr, ptr %sunkaddr56, align 8
  %395 = tail call i8 %3(ptr align 1 %4, ptr align 1 %393, ptr align 1 %394) #15
  %.not128.i.i = icmp eq i8 %395, 1
  %396 = select i1 %.not128.i.i, i64 8, i64 0
  %397 = select i1 %.not128.i.i, i64 0, i64 8
  %398 = getelementptr inbounds i8, ptr %2, i64 40
  %399 = getelementptr inbounds i8, ptr %320, i64 %396
  %400 = load i64, ptr %399, align 8
  store i64 %400, ptr %398, align 8
  %401 = getelementptr inbounds i8, ptr %2, i64 48
  %402 = getelementptr inbounds i8, ptr %320, i64 %397
  %403 = load i64, ptr %402, align 8
  store i64 %403, ptr %401, align 8
  %404 = load ptr, ptr %2, align 8
  %405 = load ptr, ptr %387, align 8
  %406 = tail call i8 %3(ptr align 1 %4, ptr align 1 %404, ptr align 1 %405) #15
  %.not129.i.i = icmp eq i8 %406, 1
  %.sroa.speculated106.i.i57 = select i1 %.not129.i.i, i64 24, i64 0
  %.sroa.speculated106.i.i = select i1 %.not129.i.i, ptr %387, ptr %2
  %sunkaddr58 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated106.i.i57
  %407 = load i64, ptr %sunkaddr58, align 8
  store i64 %407, ptr %0, align 8
  %408 = getelementptr inbounds i8, ptr %.sroa.speculated106.i.i, i64 8
  %.132.i.i = select i1 %.not129.i.i, ptr %2, ptr %408
  %.133.i.i = select i1 %.not129.i.i, ptr %408, ptr %387
  %409 = load ptr, ptr %.132.i.i, align 8
  %410 = load ptr, ptr %.133.i.i, align 8
  %411 = tail call i8 %3(ptr align 1 %4, ptr align 1 %409, ptr align 1 %410) #15
  %.not130.i.i = icmp eq i8 %411, 1
  %.sroa.speculated97.i.i = select i1 %.not130.i.i, ptr %.133.i.i, ptr %.132.i.i
  %412 = load i64, ptr %.sroa.speculated97.i.i, align 8
  store i64 %412, ptr %sunkaddr53, align 8
  %413 = getelementptr inbounds i8, ptr %.sroa.speculated97.i.i, i64 8
  %.1123.i.i = select i1 %.not130.i.i, ptr %.132.i.i, ptr %413
  %.1121.i.i = select i1 %.not130.i.i, ptr %413, ptr %.133.i.i
  %414 = load ptr, ptr %.1123.i.i, align 8
  %415 = load ptr, ptr %.1121.i.i, align 8
  %416 = tail call i8 %3(ptr align 1 %4, ptr align 1 %414, ptr align 1 %415) #15
  %.not131.i.i = icmp eq i8 %416, 1
  %.sroa.speculated88.i.i = select i1 %.not131.i.i, ptr %.1121.i.i, ptr %.1123.i.i
  %417 = load i64, ptr %.sroa.speculated88.i.i, align 8
  store i64 %417, ptr %sunkaddr54, align 8
  %418 = load ptr, ptr %380, align 8
  %419 = load ptr, ptr %401, align 8
  %420 = tail call i8 %3(ptr align 1 %4, ptr align 1 %418, ptr align 1 %419) #15
  %421 = icmp eq i8 %420, 1
  %.sroa.speculated79.i.i59 = select i1 %421, i64 16, i64 48
  %.sroa.speculated79.i.i = select i1 %421, ptr %380, ptr %401
  %sunkaddr60 = getelementptr inbounds i8, ptr %2, i64 %.sroa.speculated79.i.i59
  %422 = load i64, ptr %sunkaddr60, align 8
  store i64 %422, ptr %sunkaddr56, align 8
  %423 = getelementptr inbounds i8, ptr %.sroa.speculated79.i.i, i64 -8
  %.2124.i.i = select i1 %421, ptr %423, ptr %380
  %.2.i22.i = select i1 %421, ptr %401, ptr %423
  %424 = load ptr, ptr %.2124.i.i, align 8
  %425 = load ptr, ptr %.2.i22.i, align 8
  %426 = tail call i8 %3(ptr align 1 %4, ptr align 1 %424, ptr align 1 %425) #15
  %427 = icmp eq i8 %426, 1
  %.sroa.speculated70.i.i = select i1 %427, ptr %.2124.i.i, ptr %.2.i22.i
  %428 = load i64, ptr %.sroa.speculated70.i.i, align 8
  store i64 %428, ptr %sunkaddr52, align 8
  %429 = getelementptr inbounds i8, ptr %.sroa.speculated70.i.i, i64 -8
  %.3125.i.i = select i1 %427, ptr %429, ptr %.2124.i.i
  %.3.i23.i = select i1 %427, ptr %.2.i22.i, ptr %429
  %430 = load ptr, ptr %.3125.i.i, align 8
  %431 = load ptr, ptr %.3.i23.i, align 8
  %432 = tail call i8 %3(ptr align 1 %4, ptr align 1 %430, ptr align 1 %431) #15
  %433 = icmp eq i8 %432, 1
  %.sroa.speculated.i24.i = select i1 %433, ptr %.3125.i.i, ptr %.3.i23.i
  %434 = load i64, ptr %.sroa.speculated.i24.i, align 8
  store i64 %434, ptr %sunkaddr50, align 8
  %435 = getelementptr inbounds i8, ptr %.sroa.speculated.i24.i, i64 -8
  %.4126.i.i = select i1 %433, ptr %435, ptr %.3125.i.i
  %.4.i25.i = select i1 %433, ptr %.3.i23.i, ptr %435
  %436 = load ptr, ptr %.4126.i.i, align 8
  %437 = load ptr, ptr %.4.i25.i, align 8
  %438 = tail call i8 %3(ptr align 1 %4, ptr align 1 %436, ptr align 1 %437) #15
  %439 = icmp eq i8 %438, 1
  %440 = select i1 %439, ptr %.4126.i.i, ptr %.4.i25.i
  %441 = load i64, ptr %440, align 8
  store i64 %441, ptr %sunkaddr55, align 8
  br label %common.ret

442:                                              ; preds = %5
  %443 = lshr i64 %1, 1
  %444 = lshr i64 %1, 2
  %445 = sub nuw nsw i64 %443, %444
  %446 = sub nuw i64 %1, %443
  %447 = lshr i64 %446, 1
  %448 = sub nuw i64 %446, %447
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %444, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  %449 = shl i64 %444, 3
  %450 = getelementptr inbounds i8, ptr %0, i64 %449
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %450, i64 %445, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  %451 = shl nuw i64 %445, 3
  %452 = getelementptr inbounds i8, ptr %450, i64 %451
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %452, i64 %447, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  %453 = shl nuw i64 %447, 3
  %454 = getelementptr inbounds i8, ptr %452, i64 %453
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %454, i64 %448, ptr nonnull align 1 %2, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  %455 = add i64 %449, -8
  %456 = getelementptr inbounds i8, ptr %0, i64 %455
  %457 = load ptr, ptr %456, align 8
  %458 = load ptr, ptr %450, align 8
  %459 = tail call i8 %3(ptr align 1 %4, ptr align 1 %457, ptr align 1 %458) #15
  %.not = icmp eq i8 %459, 1
  %.pre = shl i64 %443, 3
  br i1 %.not, label %.critedge, label %460

460:                                              ; preds = %442
  %461 = add i64 %.pre, -8
  %462 = getelementptr inbounds i8, ptr %0, i64 %461
  %463 = getelementptr inbounds i8, ptr %0, i64 %.pre
  %464 = load ptr, ptr %462, align 8
  %465 = load ptr, ptr %463, align 8
  %466 = tail call i8 %3(ptr align 1 %4, ptr align 1 %464, ptr align 1 %465) #15
  %.not11 = icmp eq i8 %466, 1
  br i1 %.not11, label %.critedge, label %467

467:                                              ; preds = %460
  %468 = getelementptr inbounds i8, ptr %454, i64 -8
  %469 = load ptr, ptr %468, align 8
  %470 = load ptr, ptr %454, align 8
  %471 = tail call i8 %3(ptr align 1 %4, ptr align 1 %469, ptr align 1 %470) #15
  %.not12 = icmp eq i8 %471, 1
  br i1 %.not12, label %.critedge, label %common.ret

.critedge:                                        ; preds = %467, %460, %442
  tail call fastcc void @sort.parity_merge__anon_16505(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %444, i64 %445, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  %472 = getelementptr inbounds i8, ptr %2, i64 %.pre
  %473 = getelementptr inbounds i8, ptr %0, i64 %.pre
  tail call fastcc void @sort.parity_merge__anon_16505(ptr nonnull align 1 %472, ptr nonnull align 1 %473, i64 %447, i64 %448, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  tail call fastcc void @sort.parity_merge__anon_16505(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %443, i64 %446, ptr nonnull readonly align 4 %3, ptr align 1 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [3072 x i8], align 16
  %.not95 = icmp ult i64 %1, 8
  br i1 %.not95, label %.loopexit, label %.lr.ph100.preheader

.lr.ph100.preheader:                              ; preds = %4
  %6 = lshr i64 %1, 3
  br label %.lr.ph100

.lr.ph100:                                        ; preds = %42, %.lr.ph100.preheader
  %.198 = phi ptr [ %.2, %42 ], [ %0, %.lr.ph100.preheader ]
  %.027997 = phi ptr [ %.1280, %42 ], [ %0, %.lr.ph100.preheader ]
  %.028496 = phi i64 [ %.1285, %42 ], [ %6, %.lr.ph100.preheader ]
  %7 = add i64 %.028496, -1
  %8 = getelementptr inbounds i8, ptr %.198, i64 8
  %9 = load ptr, ptr %.198, align 8
  %10 = load ptr, ptr %8, align 8
  %11 = tail call i8 %2(ptr align 1 %3, ptr align 1 %9, ptr align 1 %10) #15
  %12 = icmp eq i8 %11, 1
  %13 = zext i1 %12 to i4
  %14 = getelementptr inbounds i8, ptr %.198, i64 16
  %15 = getelementptr inbounds i8, ptr %.198, i64 24
  %16 = load ptr, ptr %14, align 8
  %17 = load ptr, ptr %15, align 8
  %18 = tail call i8 %2(ptr align 1 %3, ptr align 1 %16, ptr align 1 %17) #15
  %19 = icmp eq i8 %18, 1
  %20 = zext i1 %19 to i4
  %21 = getelementptr inbounds i8, ptr %.198, i64 32
  %22 = getelementptr inbounds i8, ptr %.198, i64 40
  %23 = load ptr, ptr %21, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %2(ptr align 1 %3, ptr align 1 %23, ptr align 1 %24) #15
  %26 = icmp eq i8 %25, 1
  %27 = zext i1 %26 to i4
  %28 = getelementptr inbounds i8, ptr %.198, i64 48
  %29 = getelementptr inbounds i8, ptr %.198, i64 56
  %30 = load ptr, ptr %28, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %2(ptr align 1 %3, ptr align 1 %30, ptr align 1 %31) #15
  %33 = icmp eq i8 %32, 1
  %34 = zext i1 %33 to i4
  %35 = select i1 %19, i4 2, i4 0
  %36 = select i1 %26, i4 4, i4 0
  %37 = select i1 %33, i4 -8, i4 0
  %38 = or i4 %35, %36
  %39 = or i4 %38, %37
  %40 = or i4 %39, %13
  %41 = zext i4 %40 to i32
  switch i32 %41, label %.outer.preheader [
    i32 0, label %43
    i32 15, label %56
  ]

42:                                               ; preds = %327, %.critedge21, %73, %.critedge
  %.1285 = phi i64 [ %172, %327 ], [ %105, %.critedge21 ], [ %.2286, %73 ], [ %7, %.critedge ]
  %.1280 = phi ptr [ %.3282.ph264, %327 ], [ %.3282.ph264, %.critedge21 ], [ %.3282.ph264, %73 ], [ %.027997, %.critedge ]
  %.2 = phi ptr [ %328, %327 ], [ %168, %.critedge21 ], [ %101, %73 ], [ %55, %.critedge ]
  %.not = icmp eq i64 %.1285, 0
  br i1 %.not, label %.loopexit, label %.lr.ph100

43:                                               ; preds = %.lr.ph100
  %sunkaddr = getelementptr inbounds i8, ptr %.198, i64 8
  %44 = load ptr, ptr %sunkaddr, align 8
  %sunkaddr561 = getelementptr inbounds i8, ptr %.198, i64 16
  %45 = load ptr, ptr %sunkaddr561, align 8
  %46 = tail call i8 %2(ptr align 1 %3, ptr align 1 %44, ptr align 1 %45) #15
  %.not328 = icmp eq i8 %46, 1
  br i1 %.not328, label %.critedge, label %47

47:                                               ; preds = %43
  %sunkaddr562 = getelementptr inbounds i8, ptr %.198, i64 24
  %48 = load ptr, ptr %sunkaddr562, align 8
  %sunkaddr563 = getelementptr inbounds i8, ptr %.198, i64 32
  %49 = load ptr, ptr %sunkaddr563, align 8
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %48, ptr align 1 %49) #15
  %.not329 = icmp eq i8 %50, 1
  br i1 %.not329, label %.critedge, label %51

51:                                               ; preds = %47
  %sunkaddr564 = getelementptr inbounds i8, ptr %.198, i64 40
  %52 = load ptr, ptr %sunkaddr564, align 8
  %sunkaddr565 = getelementptr inbounds i8, ptr %.198, i64 48
  %53 = load ptr, ptr %sunkaddr565, align 8
  %54 = tail call i8 %2(ptr align 1 %3, ptr align 1 %52, ptr align 1 %53) #15
  %.not330 = icmp eq i8 %54, 1
  br i1 %.not330, label %.critedge, label %.outer.preheader

.critedge:                                        ; preds = %51, %47, %43
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %.198, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %55 = getelementptr inbounds i8, ptr %.198, i64 64
  br label %42

56:                                               ; preds = %.lr.ph100
  %sunkaddr566 = getelementptr inbounds i8, ptr %.198, i64 8
  %57 = load ptr, ptr %sunkaddr566, align 8
  %sunkaddr567 = getelementptr inbounds i8, ptr %.198, i64 16
  %58 = load ptr, ptr %sunkaddr567, align 8
  %59 = tail call i8 %2(ptr align 1 %3, ptr align 1 %57, ptr align 1 %58) #15
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %.critedge4

61:                                               ; preds = %56
  %sunkaddr568 = getelementptr inbounds i8, ptr %.198, i64 24
  %62 = load ptr, ptr %sunkaddr568, align 8
  %sunkaddr569 = getelementptr inbounds i8, ptr %.198, i64 32
  %63 = load ptr, ptr %sunkaddr569, align 8
  %64 = tail call i8 %2(ptr align 1 %3, ptr align 1 %62, ptr align 1 %63) #15
  %65 = icmp eq i8 %64, 1
  br i1 %65, label %66, label %.critedge4

66:                                               ; preds = %61
  %sunkaddr570 = getelementptr inbounds i8, ptr %.198, i64 40
  %67 = load ptr, ptr %sunkaddr570, align 8
  %sunkaddr571 = getelementptr inbounds i8, ptr %.198, i64 48
  %68 = load ptr, ptr %sunkaddr571, align 8
  %69 = tail call i8 %2(ptr align 1 %3, ptr align 1 %67, ptr align 1 %68) #15
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %.outer.preheader, label %.critedge4

.critedge4:                                       ; preds = %66, %61, %56
  br label %.outer.preheader

.outer.preheader:                                 ; preds = %.critedge4, %66, %51, %.lr.ph100
  %.1299.ph263.ph = phi i2 [ -2, %.critedge4 ], [ -2, %.lr.ph100 ], [ 0, %51 ], [ 1, %66 ]
  %.3282.ph264.ph = phi ptr [ %.027997, %.critedge4 ], [ %.027997, %.lr.ph100 ], [ %.027997, %51 ], [ %.198, %66 ]
  br label %.outer

.outer:                                           ; preds = %297, %155, %.outer.preheader
  %.1299.ph263 = phi i2 [ %.1299.ph263.ph, %.outer.preheader ], [ 1, %297 ], [ 1, %155 ]
  %.0296.ph = phi i4 [ %34, %.outer.preheader ], [ %199, %297 ], [ %132, %155 ]
  %.0294.ph = phi i4 [ %27, %.outer.preheader ], [ %192, %297 ], [ %125, %155 ]
  %.0292.ph = phi i4 [ %20, %.outer.preheader ], [ %185, %297 ], [ %118, %155 ]
  %.0290.ph = phi i4 [ %13, %.outer.preheader ], [ %178, %297 ], [ %111, %155 ]
  %.2286.ph = phi i64 [ %7, %.outer.preheader ], [ %172, %297 ], [ %105, %155 ]
  %.3282.ph264 = phi ptr [ %.3282.ph264.ph, %.outer.preheader ], [ %170, %297 ], [ %103, %155 ]
  %.3.ph = phi ptr [ %.198, %.outer.preheader ], [ %170, %297 ], [ %103, %155 ]
  %uglygep60 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep248 = getelementptr i8, ptr %.3282.ph264, i64 8
  br label %.backedge

.backedge:                                        ; preds = %283, %270, %164, %155, %150, %145, %136, %.outer
  %.1299 = phi i2 [ %.1299.ph263, %.outer ], [ 0, %164 ], [ 1, %270 ], [ 0, %283 ], [ -2, %150 ], [ -2, %136 ], [ -2, %145 ], [ -2, %155 ]
  %.0296 = phi i4 [ %.0296.ph, %.outer ], [ %132, %164 ], [ %199, %270 ], [ %199, %283 ], [ %132, %150 ], [ %132, %136 ], [ %132, %145 ], [ %132, %155 ]
  %.0294 = phi i4 [ %.0294.ph, %.outer ], [ %125, %164 ], [ %192, %270 ], [ %192, %283 ], [ %125, %150 ], [ %125, %136 ], [ %125, %145 ], [ %125, %155 ]
  %.0292 = phi i4 [ %.0292.ph, %.outer ], [ %118, %164 ], [ %185, %270 ], [ %185, %283 ], [ %118, %150 ], [ %118, %136 ], [ %118, %145 ], [ %118, %155 ]
  %.0290 = phi i4 [ %.0290.ph, %.outer ], [ %111, %164 ], [ %178, %270 ], [ %178, %283 ], [ %111, %150 ], [ %111, %136 ], [ %111, %145 ], [ %111, %155 ]
  %.2286 = phi i64 [ %.2286.ph, %.outer ], [ %105, %164 ], [ %172, %270 ], [ %172, %283 ], [ %105, %150 ], [ %105, %136 ], [ %105, %145 ], [ %105, %155 ]
  %.3 = phi ptr [ %.3.ph, %.outer ], [ %103, %164 ], [ %170, %270 ], [ %170, %283 ], [ %103, %150 ], [ %103, %136 ], [ %103, %145 ], [ %103, %155 ]
  %71 = zext i2 %.1299 to i32
  switch i32 %71, label %72 [
    i32 2, label %73
    i32 0, label %102
    i32 1, label %169
  ]

72:                                               ; preds = %.backedge
  unreachable

73:                                               ; preds = %.backedge
  %74 = icmp eq i4 %.0290, 0
  %. = select i1 %74, i64 8, i64 0
  %.7 = select i1 %74, i64 0, i64 8
  %75 = getelementptr inbounds i8, ptr %.3, i64 %.
  %76 = load i64, ptr %75, align 8
  %77 = getelementptr inbounds i8, ptr %.3, i64 %.7
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %.3, align 8
  %79 = getelementptr inbounds i8, ptr %.3, i64 8
  store i64 %76, ptr %79, align 8
  %80 = getelementptr inbounds i8, ptr %.3, i64 16
  %81 = icmp eq i4 %.0292, 0
  %.8 = select i1 %81, i64 8, i64 0
  %.9 = select i1 %81, i64 0, i64 8
  %82 = getelementptr inbounds i8, ptr %80, i64 %.8
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds i8, ptr %80, i64 %.9
  %85 = load i64, ptr %84, align 8
  store i64 %85, ptr %80, align 8
  %86 = getelementptr inbounds i8, ptr %.3, i64 24
  store i64 %83, ptr %86, align 8
  %87 = getelementptr inbounds i8, ptr %.3, i64 32
  %88 = icmp eq i4 %.0294, 0
  %.10 = select i1 %88, i64 8, i64 0
  %.11 = select i1 %88, i64 0, i64 8
  %89 = getelementptr inbounds i8, ptr %87, i64 %.10
  %90 = load i64, ptr %89, align 8
  %91 = getelementptr inbounds i8, ptr %87, i64 %.11
  %92 = load i64, ptr %91, align 8
  store i64 %92, ptr %87, align 8
  %93 = getelementptr inbounds i8, ptr %.3, i64 40
  store i64 %90, ptr %93, align 8
  %94 = getelementptr inbounds i8, ptr %.3, i64 48
  %95 = icmp eq i4 %.0296, 0
  %.12 = select i1 %95, i64 8, i64 0
  %.13 = select i1 %95, i64 0, i64 8
  %96 = getelementptr inbounds i8, ptr %94, i64 %.12
  %97 = load i64, ptr %96, align 8
  %98 = getelementptr inbounds i8, ptr %94, i64 %.13
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %94, align 8
  %100 = getelementptr inbounds i8, ptr %.3, i64 56
  store i64 %97, ptr %100, align 8
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %.3, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %101 = getelementptr inbounds i8, ptr %.3, i64 64
  br label %42

102:                                              ; preds = %.backedge
  %103 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not319 = icmp eq i64 %.2286, 0
  br i1 %.not319, label %.loopexit, label %104

104:                                              ; preds = %102
  %105 = add i64 %.2286, -1
  %106 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr572 = getelementptr inbounds i8, ptr %.3, i64 64
  %107 = load ptr, ptr %sunkaddr572, align 8
  %108 = load ptr, ptr %106, align 8
  %109 = tail call i8 %2(ptr align 1 %3, ptr align 1 %107, ptr align 1 %108) #15
  %110 = icmp eq i8 %109, 1
  %111 = zext i1 %110 to i4
  %112 = getelementptr inbounds i8, ptr %.3, i64 80
  %113 = getelementptr inbounds i8, ptr %.3, i64 88
  %114 = load ptr, ptr %112, align 8
  %115 = load ptr, ptr %113, align 8
  %116 = tail call i8 %2(ptr align 1 %3, ptr align 1 %114, ptr align 1 %115) #15
  %117 = icmp eq i8 %116, 1
  %118 = zext i1 %117 to i4
  %119 = getelementptr inbounds i8, ptr %.3, i64 96
  %120 = getelementptr inbounds i8, ptr %.3, i64 104
  %121 = load ptr, ptr %119, align 8
  %122 = load ptr, ptr %120, align 8
  %123 = tail call i8 %2(ptr align 1 %3, ptr align 1 %121, ptr align 1 %122) #15
  %124 = icmp eq i8 %123, 1
  %125 = zext i1 %124 to i4
  %126 = getelementptr inbounds i8, ptr %.3, i64 112
  %127 = getelementptr inbounds i8, ptr %.3, i64 120
  %128 = load ptr, ptr %126, align 8
  %129 = load ptr, ptr %127, align 8
  %130 = tail call i8 %2(ptr align 1 %3, ptr align 1 %128, ptr align 1 %129) #15
  %131 = icmp eq i8 %130, 1
  %132 = zext i1 %131 to i4
  %133 = or i4 %118, %111
  %134 = or i4 %133, %125
  %135 = or i4 %134, %132
  %.not320 = icmp eq i4 %135, 0
  br i1 %.not320, label %141, label %136

136:                                              ; preds = %104
  %137 = add nuw nsw i4 %118, %111
  %138 = add nuw nsw i4 %137, %125
  %139 = add nuw nsw i4 %138, %132
  %140 = icmp eq i4 %139, 4
  br i1 %140, label %145, label %.backedge

141:                                              ; preds = %104
  %sunkaddr573 = getelementptr inbounds i8, ptr %.3, i64 72
  %142 = load ptr, ptr %sunkaddr573, align 8
  %sunkaddr574 = getelementptr inbounds i8, ptr %.3, i64 80
  %143 = load ptr, ptr %sunkaddr574, align 8
  %144 = tail call i8 %2(ptr align 1 %3, ptr align 1 %142, ptr align 1 %143) #15
  %.not321 = icmp eq i8 %144, 1
  br i1 %.not321, label %.critedge21, label %160

145:                                              ; preds = %136
  %sunkaddr575 = getelementptr inbounds i8, ptr %.3, i64 72
  %146 = load ptr, ptr %sunkaddr575, align 8
  %sunkaddr576 = getelementptr inbounds i8, ptr %.3, i64 80
  %147 = load ptr, ptr %sunkaddr576, align 8
  %148 = tail call i8 %2(ptr align 1 %3, ptr align 1 %146, ptr align 1 %147) #15
  %149 = icmp eq i8 %148, 1
  br i1 %149, label %150, label %.backedge

150:                                              ; preds = %145
  %sunkaddr577 = getelementptr inbounds i8, ptr %.3, i64 88
  %151 = load ptr, ptr %sunkaddr577, align 8
  %sunkaddr578 = getelementptr inbounds i8, ptr %.3, i64 96
  %152 = load ptr, ptr %sunkaddr578, align 8
  %153 = tail call i8 %2(ptr align 1 %3, ptr align 1 %151, ptr align 1 %152) #15
  %154 = icmp eq i8 %153, 1
  br i1 %154, label %155, label %.backedge

155:                                              ; preds = %150
  %sunkaddr579 = getelementptr inbounds i8, ptr %.3, i64 104
  %156 = load ptr, ptr %sunkaddr579, align 8
  %sunkaddr580 = getelementptr inbounds i8, ptr %.3, i64 112
  %157 = load ptr, ptr %sunkaddr580, align 8
  %158 = tail call i8 %2(ptr align 1 %3, ptr align 1 %156, ptr align 1 %157) #15
  %159 = icmp eq i8 %158, 1
  br i1 %159, label %.outer, label %.backedge

160:                                              ; preds = %141
  %sunkaddr581 = getelementptr inbounds i8, ptr %.3, i64 88
  %161 = load ptr, ptr %sunkaddr581, align 8
  %sunkaddr582 = getelementptr inbounds i8, ptr %.3, i64 96
  %162 = load ptr, ptr %sunkaddr582, align 8
  %163 = tail call i8 %2(ptr align 1 %3, ptr align 1 %161, ptr align 1 %162) #15
  %.not322 = icmp eq i8 %163, 1
  br i1 %.not322, label %.critedge21, label %164

164:                                              ; preds = %160
  %sunkaddr583 = getelementptr inbounds i8, ptr %.3, i64 104
  %165 = load ptr, ptr %sunkaddr583, align 8
  %sunkaddr584 = getelementptr inbounds i8, ptr %.3, i64 112
  %166 = load ptr, ptr %sunkaddr584, align 8
  %167 = tail call i8 %2(ptr align 1 %3, ptr align 1 %165, ptr align 1 %166) #15
  %.not323 = icmp eq i8 %167, 1
  br i1 %.not323, label %.critedge21, label %.backedge

.critedge21:                                      ; preds = %164, %160, %141
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %103, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %168 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %42

169:                                              ; preds = %.backedge
  %170 = getelementptr inbounds i8, ptr %.3, i64 64
  %.not306 = icmp eq i64 %.2286, 0
  br i1 %.not306, label %203, label %171

171:                                              ; preds = %169
  %172 = add i64 %.2286, -1
  %173 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr585 = getelementptr inbounds i8, ptr %.3, i64 64
  %174 = load ptr, ptr %sunkaddr585, align 8
  %175 = load ptr, ptr %173, align 8
  %176 = tail call i8 %2(ptr align 1 %3, ptr align 1 %174, ptr align 1 %175) #15
  %177 = icmp ne i8 %176, 1
  %178 = zext i1 %177 to i4
  %179 = getelementptr inbounds i8, ptr %.3, i64 80
  %180 = getelementptr inbounds i8, ptr %.3, i64 88
  %181 = load ptr, ptr %179, align 8
  %182 = load ptr, ptr %180, align 8
  %183 = tail call i8 %2(ptr align 1 %3, ptr align 1 %181, ptr align 1 %182) #15
  %184 = icmp ne i8 %183, 1
  %185 = zext i1 %184 to i4
  %186 = getelementptr inbounds i8, ptr %.3, i64 96
  %187 = getelementptr inbounds i8, ptr %.3, i64 104
  %188 = load ptr, ptr %186, align 8
  %189 = load ptr, ptr %187, align 8
  %190 = tail call i8 %2(ptr align 1 %3, ptr align 1 %188, ptr align 1 %189) #15
  %191 = icmp ne i8 %190, 1
  %192 = zext i1 %191 to i4
  %193 = getelementptr inbounds i8, ptr %.3, i64 112
  %194 = getelementptr inbounds i8, ptr %.3, i64 120
  %195 = load ptr, ptr %193, align 8
  %196 = load ptr, ptr %194, align 8
  %197 = tail call i8 %2(ptr align 1 %3, ptr align 1 %195, ptr align 1 %196) #15
  %198 = icmp ne i8 %197, 1
  %199 = zext i1 %198 to i4
  %200 = or i4 %185, %178
  %201 = or i4 %200, %192
  %202 = or i4 %201, %199
  %.not315 = icmp eq i4 %202, 0
  br i1 %.not315, label %254, label %.critedge25

203:                                              ; preds = %169
  %204 = and i64 %1, 7
  %205 = icmp eq i64 %204, 7
  br i1 %205, label %386, label %.critedge55

.critedge25:                                      ; preds = %270, %265, %260, %254, %171
  %206 = ptrtoint ptr %.3282.ph264 to i64
  %207 = getelementptr inbounds i8, ptr %.3, i64 56
  %208 = ptrtoint ptr %207 to i64
  %209 = sub nuw i64 %208, %206
  %210 = lshr i64 %209, 4
  %211 = shl nuw nsw i64 %210, 3
  %212 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %211
  %213 = sub nsw i64 0, %211
  %214 = getelementptr inbounds i8, ptr %207, i64 %213
  %215 = and i64 %209, 16
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %238, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %238, %.critedge25
  %.027.i = phi ptr [ %242, %238 ], [ %214, %.critedge25 ]
  %.025.i = phi ptr [ %241, %238 ], [ %212, %.critedge25 ]
  %.0.i = phi i64 [ %243, %238 ], [ %210, %.critedge25 ]
  %217 = load i64, ptr %.3282.ph264, align 8
  %218 = load i64, ptr %207, align 8
  store i64 %218, ptr %.3282.ph264, align 8
  store i64 %217, ptr %207, align 8
  %219 = load i64, ptr %.025.i, align 8
  %220 = load i64, ptr %.027.i, align 8
  store i64 %220, ptr %.025.i, align 8
  store i64 %219, ptr %.027.i, align 8
  %221 = icmp ult i64 %.0.i, 2
  br i1 %221, label %sort.quad_reversal.exit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %._crit_edge.i
  %222 = lshr i64 %.0.i, 1
  %min.iters.check = icmp ult i64 %.0.i, 44
  br i1 %min.iters.check, label %.lr.ph.preheader465, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %.lr.ph.preheader
  %223 = add nsw i64 %222, -1
  %uglygep = getelementptr i8, ptr %.3, i64 48
  %mul.result.neg = mul i64 %223, -8
  %224 = getelementptr i8, ptr %uglygep, i64 %mul.result.neg
  %225 = icmp ugt ptr %224, %uglygep
  %uglygep56 = getelementptr i8, ptr %.025.i, i64 -8
  %mul.result58.neg = mul i64 %223, -8
  %mul.overflow59 = icmp ugt i64 %223, 2305843009213693951
  %226 = getelementptr i8, ptr %uglygep56, i64 %mul.result58.neg
  %227 = icmp ugt ptr %226, %uglygep56
  %228 = or i1 %227, %mul.overflow59
  %229 = or i1 %225, %228
  br i1 %229, label %.lr.ph.preheader465, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %230 = shl i64 %222, 3
  %uglygep61 = getelementptr i8, ptr %uglygep60, i64 %230
  %uglygep62 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep63 = getelementptr i8, ptr %uglygep62, i64 %230
  %uglygep64 = getelementptr i8, ptr %.3, i64 56
  %231 = mul i64 %222, -8
  %uglygep65 = getelementptr i8, ptr %uglygep64, i64 %231
  %uglygep66 = getelementptr i8, ptr %.025.i, i64 %231
  %bound0 = icmp ult ptr %uglygep60, %uglygep63
  %bound1 = icmp ult ptr %uglygep62, %uglygep61
  %found.conflict = and i1 %bound0, %bound1
  %bound067 = icmp ult ptr %uglygep60, %207
  %bound168 = icmp ult ptr %uglygep65, %uglygep61
  %found.conflict69 = and i1 %bound067, %bound168
  %conflict.rdx = or i1 %found.conflict, %found.conflict69
  %bound070 = icmp ult ptr %uglygep60, %.025.i
  %bound171 = icmp ult ptr %uglygep66, %uglygep61
  %found.conflict72 = and i1 %bound070, %bound171
  %conflict.rdx73 = or i1 %conflict.rdx, %found.conflict72
  %bound074 = icmp ult ptr %uglygep62, %207
  %bound175 = icmp ult ptr %uglygep65, %uglygep63
  %found.conflict76 = and i1 %bound074, %bound175
  %conflict.rdx77 = or i1 %conflict.rdx73, %found.conflict76
  %bound078 = icmp ult ptr %uglygep62, %.025.i
  %bound179 = icmp ult ptr %uglygep66, %uglygep63
  %found.conflict80 = and i1 %bound078, %bound179
  %conflict.rdx81 = or i1 %conflict.rdx77, %found.conflict80
  %bound082 = icmp ult ptr %uglygep65, %.025.i
  %bound183 = icmp ult ptr %uglygep66, %207
  %found.conflict84 = and i1 %bound082, %bound183
  %conflict.rdx85 = or i1 %conflict.rdx81, %found.conflict84
  br i1 %conflict.rdx85, label %.lr.ph.preheader465, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %232 = lshr i64 %.0.i, 1
  %n.vec = and i64 %222, 9223372036854775806
  %ind.end = and i64 %232, 1
  %233 = shl i64 %n.vec, 3
  %ind.end86 = getelementptr i8, ptr %.3282.ph264, i64 %233
  %234 = mul i64 %n.vec, -8
  %ind.end88 = getelementptr i8, ptr %.025.i, i64 %234
  %235 = shl i64 %n.vec, 3
  %ind.end90 = getelementptr i8, ptr %.027.i, i64 %235
  %236 = mul i64 %n.vec, -8
  %ind.end92 = getelementptr i8, ptr %207, i64 %236
  %next.gep95245 = getelementptr i8, ptr %.027.i, i64 8
  %uglygep526 = getelementptr i8, ptr %.3, i64 40
  %uglygep531 = getelementptr i8, ptr %.025.i, i64 -16
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv536 = phi i64 [ %lsr.iv.next537, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv534 = phi ptr [ %uglygep535, %vector.body ], [ %next.gep248, %vector.ph ]
  %lsr.iv532 = phi ptr [ %uglygep533, %vector.body ], [ %uglygep531, %vector.ph ]
  %lsr.iv529 = phi ptr [ %uglygep530, %vector.body ], [ %next.gep95245, %vector.ph ]
  %lsr.iv527 = phi ptr [ %uglygep528, %vector.body ], [ %uglygep526, %vector.ph ]
  %wide.load = load <2 x i64>, ptr %lsr.iv534, align 8, !alias.scope !474, !noalias !477
  %wide.load97 = load <2 x i64>, ptr %lsr.iv527, align 8, !alias.scope !481, !noalias !482
  %reverse = shufflevector <2 x i64> %wide.load97, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse, ptr %lsr.iv534, align 8, !alias.scope !474, !noalias !477
  %reverse98 = shufflevector <2 x i64> %wide.load, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse98, ptr %lsr.iv527, align 8, !alias.scope !481, !noalias !482
  %wide.load99 = load <2 x i64>, ptr %lsr.iv532, align 8, !alias.scope !482
  %reverse100 = shufflevector <2 x i64> %wide.load99, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load101 = load <2 x i64>, ptr %lsr.iv529, align 8, !alias.scope !483, !noalias !484
  %reverse102 = shufflevector <2 x i64> %wide.load101, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse102, ptr %lsr.iv532, align 8, !alias.scope !482
  store <2 x i64> %reverse100, ptr %lsr.iv529, align 8, !alias.scope !483, !noalias !484
  %uglygep528 = getelementptr i8, ptr %lsr.iv527, i64 -16
  %uglygep530 = getelementptr i8, ptr %lsr.iv529, i64 16
  %uglygep533 = getelementptr i8, ptr %lsr.iv532, i64 -16
  %uglygep535 = getelementptr i8, ptr %lsr.iv534, i64 16
  %lsr.iv.next537 = add nsw i64 %lsr.iv536, -2
  %237 = icmp eq i64 %lsr.iv.next537, 0
  br i1 %237, label %middle.block, label %vector.body, !llvm.loop !485

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %222, %n.vec
  br i1 %cmp.n, label %sort.quad_reversal.exit, label %.lr.ph.preheader465

.lr.ph.preheader465:                              ; preds = %middle.block, %vector.memcheck, %vector.scevcheck, %.lr.ph.preheader
  %.1.i94.ph = phi i64 [ %ind.end, %middle.block ], [ %222, %.lr.ph.preheader ], [ %222, %vector.scevcheck ], [ %222, %vector.memcheck ]
  %.024.i93.ph = phi ptr [ %ind.end86, %middle.block ], [ %.3282.ph264, %.lr.ph.preheader ], [ %.3282.ph264, %vector.scevcheck ], [ %.3282.ph264, %vector.memcheck ]
  %.126.i92.ph = phi ptr [ %ind.end88, %middle.block ], [ %.025.i, %.lr.ph.preheader ], [ %.025.i, %vector.scevcheck ], [ %.025.i, %vector.memcheck ]
  %.128.i91.ph = phi ptr [ %ind.end90, %middle.block ], [ %.027.i, %.lr.ph.preheader ], [ %.027.i, %vector.scevcheck ], [ %.027.i, %vector.memcheck ]
  %.029.i90.ph = phi ptr [ %ind.end92, %middle.block ], [ %207, %.lr.ph.preheader ], [ %207, %vector.scevcheck ], [ %207, %vector.memcheck ]
  %uglygep538 = getelementptr i8, ptr %.024.i93.ph, i64 8
  %uglygep541 = getelementptr i8, ptr %.126.i92.ph, i64 -8
  %uglygep544 = getelementptr i8, ptr %.128.i91.ph, i64 8
  %uglygep547 = getelementptr i8, ptr %.029.i90.ph, i64 -8
  br label %.lr.ph

238:                                              ; preds = %.critedge25
  %239 = load i64, ptr %212, align 8
  %240 = load i64, ptr %214, align 8
  store i64 %240, ptr %212, align 8
  %241 = getelementptr inbounds i8, ptr %212, i64 -8
  store i64 %239, ptr %214, align 8
  %242 = getelementptr inbounds i8, ptr %214, i64 8
  %243 = add nsw i64 %210, -1
  br label %._crit_edge.i

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader465
  %lsr.iv548 = phi ptr [ %uglygep547, %.lr.ph.preheader465 ], [ %uglygep549, %.lr.ph ]
  %lsr.iv545 = phi ptr [ %uglygep544, %.lr.ph.preheader465 ], [ %uglygep546, %.lr.ph ]
  %lsr.iv542 = phi ptr [ %uglygep541, %.lr.ph.preheader465 ], [ %uglygep543, %.lr.ph ]
  %lsr.iv539 = phi ptr [ %uglygep538, %.lr.ph.preheader465 ], [ %uglygep540, %.lr.ph ]
  %.1.i94 = phi i64 [ %244, %.lr.ph ], [ %.1.i94.ph, %.lr.ph.preheader465 ]
  %244 = add nsw i64 %.1.i94, -1
  %245 = load i64, ptr %lsr.iv539, align 8
  %246 = load i64, ptr %lsr.iv548, align 8
  store i64 %246, ptr %lsr.iv539, align 8
  store i64 %245, ptr %lsr.iv548, align 8
  %247 = load i64, ptr %lsr.iv542, align 8
  %248 = load i64, ptr %lsr.iv545, align 8
  store i64 %248, ptr %lsr.iv542, align 8
  store i64 %247, ptr %lsr.iv545, align 8
  %uglygep540 = getelementptr i8, ptr %lsr.iv539, i64 8
  %uglygep543 = getelementptr i8, ptr %lsr.iv542, i64 -8
  %uglygep546 = getelementptr i8, ptr %lsr.iv545, i64 8
  %uglygep549 = getelementptr i8, ptr %lsr.iv548, i64 -8
  %249 = icmp eq i64 %244, 0
  br i1 %249, label %sort.quad_reversal.exit, label %.lr.ph, !llvm.loop !486

sort.quad_reversal.exit:                          ; preds = %.lr.ph, %middle.block, %._crit_edge.i
  %250 = add nuw nsw i4 %185, %178
  %251 = add nuw nsw i4 %250, %192
  %252 = add nuw i4 %251, %199
  %253 = zext i4 %252 to i32
  switch i32 %253, label %.critedge37 [
    i32 4, label %275
    i32 0, label %287
  ]

254:                                              ; preds = %171
  %255 = getelementptr inbounds i8, ptr %.3, i64 56
  %256 = load ptr, ptr %255, align 8
  %sunkaddr586 = getelementptr inbounds i8, ptr %.3, i64 64
  %257 = load ptr, ptr %sunkaddr586, align 8
  %258 = tail call i8 %2(ptr align 1 %3, ptr align 1 %256, ptr align 1 %257) #15
  %259 = icmp eq i8 %258, 1
  br i1 %259, label %260, label %.critedge25

260:                                              ; preds = %254
  %sunkaddr587 = getelementptr inbounds i8, ptr %.3, i64 72
  %261 = load ptr, ptr %sunkaddr587, align 8
  %sunkaddr588 = getelementptr inbounds i8, ptr %.3, i64 80
  %262 = load ptr, ptr %sunkaddr588, align 8
  %263 = tail call i8 %2(ptr align 1 %3, ptr align 1 %261, ptr align 1 %262) #15
  %264 = icmp eq i8 %263, 1
  br i1 %264, label %265, label %.critedge25

265:                                              ; preds = %260
  %sunkaddr589 = getelementptr inbounds i8, ptr %.3, i64 88
  %266 = load ptr, ptr %sunkaddr589, align 8
  %sunkaddr590 = getelementptr inbounds i8, ptr %.3, i64 96
  %267 = load ptr, ptr %sunkaddr590, align 8
  %268 = tail call i8 %2(ptr align 1 %3, ptr align 1 %266, ptr align 1 %267) #15
  %269 = icmp eq i8 %268, 1
  br i1 %269, label %270, label %.critedge25

270:                                              ; preds = %265
  %sunkaddr591 = getelementptr inbounds i8, ptr %.3, i64 104
  %271 = load ptr, ptr %sunkaddr591, align 8
  %sunkaddr592 = getelementptr inbounds i8, ptr %.3, i64 112
  %272 = load ptr, ptr %sunkaddr592, align 8
  %273 = tail call i8 %2(ptr align 1 %3, ptr align 1 %271, ptr align 1 %272) #15
  %274 = icmp eq i8 %273, 1
  br i1 %274, label %.backedge, label %.critedge25

275:                                              ; preds = %sort.quad_reversal.exit
  %sunkaddr593 = getelementptr inbounds i8, ptr %.3, i64 72
  %276 = load ptr, ptr %sunkaddr593, align 8
  %sunkaddr594 = getelementptr inbounds i8, ptr %.3, i64 80
  %277 = load ptr, ptr %sunkaddr594, align 8
  %278 = tail call i8 %2(ptr align 1 %3, ptr align 1 %276, ptr align 1 %277) #15
  %.not316 = icmp eq i8 %278, 1
  br i1 %.not316, label %.critedge37, label %279

279:                                              ; preds = %275
  %sunkaddr595 = getelementptr inbounds i8, ptr %.3, i64 88
  %280 = load ptr, ptr %sunkaddr595, align 8
  %sunkaddr596 = getelementptr inbounds i8, ptr %.3, i64 96
  %281 = load ptr, ptr %sunkaddr596, align 8
  %282 = tail call i8 %2(ptr align 1 %3, ptr align 1 %280, ptr align 1 %281) #15
  %.not317 = icmp eq i8 %282, 1
  br i1 %.not317, label %.critedge37, label %283

283:                                              ; preds = %279
  %sunkaddr597 = getelementptr inbounds i8, ptr %.3, i64 104
  %284 = load ptr, ptr %sunkaddr597, align 8
  %sunkaddr598 = getelementptr inbounds i8, ptr %.3, i64 112
  %285 = load ptr, ptr %sunkaddr598, align 8
  %286 = tail call i8 %2(ptr align 1 %3, ptr align 1 %284, ptr align 1 %285) #15
  %.not318 = icmp eq i8 %286, 1
  br i1 %.not318, label %.critedge37, label %.backedge

287:                                              ; preds = %sort.quad_reversal.exit
  %sunkaddr599 = getelementptr inbounds i8, ptr %.3, i64 72
  %288 = load ptr, ptr %sunkaddr599, align 8
  %sunkaddr600 = getelementptr inbounds i8, ptr %.3, i64 80
  %289 = load ptr, ptr %sunkaddr600, align 8
  %290 = tail call i8 %2(ptr align 1 %3, ptr align 1 %288, ptr align 1 %289) #15
  %291 = icmp eq i8 %290, 1
  br i1 %291, label %292, label %.critedge37

292:                                              ; preds = %287
  %sunkaddr601 = getelementptr inbounds i8, ptr %.3, i64 88
  %293 = load ptr, ptr %sunkaddr601, align 8
  %sunkaddr602 = getelementptr inbounds i8, ptr %.3, i64 96
  %294 = load ptr, ptr %sunkaddr602, align 8
  %295 = tail call i8 %2(ptr align 1 %3, ptr align 1 %293, ptr align 1 %294) #15
  %296 = icmp eq i8 %295, 1
  br i1 %296, label %297, label %.critedge37

297:                                              ; preds = %292
  %sunkaddr603 = getelementptr inbounds i8, ptr %.3, i64 104
  %298 = load ptr, ptr %sunkaddr603, align 8
  %sunkaddr604 = getelementptr inbounds i8, ptr %.3, i64 112
  %299 = load ptr, ptr %sunkaddr604, align 8
  %300 = tail call i8 %2(ptr align 1 %3, ptr align 1 %298, ptr align 1 %299) #15
  %301 = icmp eq i8 %300, 1
  br i1 %301, label %.outer, label %.critedge37

.critedge37:                                      ; preds = %297, %292, %287, %283, %279, %275, %sort.quad_reversal.exit
  %302 = icmp ne i8 %197, 1
  %303 = icmp ne i8 %190, 1
  %304 = icmp ne i8 %183, 1
  %305 = icmp ne i8 %176, 1
  %306 = getelementptr inbounds i8, ptr %.3, i64 120
  %.42 = select i1 %305, i64 0, i64 8
  %.43 = select i1 %305, i64 8, i64 0
  %307 = getelementptr inbounds i8, ptr %170, i64 %.43
  %308 = load i64, ptr %307, align 8
  %309 = getelementptr inbounds i8, ptr %170, i64 %.42
  %310 = load i64, ptr %309, align 8
  %sunkaddr605 = getelementptr inbounds i8, ptr %.3, i64 64
  store i64 %310, ptr %sunkaddr605, align 8
  %sunkaddr606 = getelementptr inbounds i8, ptr %.3, i64 72
  store i64 %308, ptr %sunkaddr606, align 8
  %.44 = select i1 %304, i64 0, i64 8
  %.45 = select i1 %304, i64 8, i64 0
  %311 = getelementptr inbounds i8, ptr %179, i64 %.45
  %312 = load i64, ptr %311, align 8
  %313 = getelementptr inbounds i8, ptr %179, i64 %.44
  %314 = load i64, ptr %313, align 8
  %sunkaddr607 = getelementptr inbounds i8, ptr %.3, i64 80
  store i64 %314, ptr %sunkaddr607, align 8
  %sunkaddr608 = getelementptr inbounds i8, ptr %.3, i64 88
  store i64 %312, ptr %sunkaddr608, align 8
  %.46 = select i1 %303, i64 0, i64 8
  %.47 = select i1 %303, i64 8, i64 0
  %315 = getelementptr inbounds i8, ptr %186, i64 %.47
  %316 = load i64, ptr %315, align 8
  %317 = getelementptr inbounds i8, ptr %186, i64 %.46
  %318 = load i64, ptr %317, align 8
  %sunkaddr609 = getelementptr inbounds i8, ptr %.3, i64 96
  store i64 %318, ptr %sunkaddr609, align 8
  %sunkaddr610 = getelementptr inbounds i8, ptr %.3, i64 104
  store i64 %316, ptr %sunkaddr610, align 8
  %.48 = select i1 %302, i64 0, i64 8
  %.49 = select i1 %302, i64 8, i64 0
  %319 = getelementptr inbounds i8, ptr %193, i64 %.49
  %320 = load i64, ptr %319, align 8
  %321 = getelementptr inbounds i8, ptr %193, i64 %.48
  %322 = load i64, ptr %321, align 8
  %sunkaddr611 = getelementptr inbounds i8, ptr %.3, i64 112
  store i64 %322, ptr %sunkaddr611, align 8
  store i64 %320, ptr %306, align 8
  %323 = inttoptr i64 %308 to ptr
  %324 = inttoptr i64 %314 to ptr
  %325 = tail call i8 %2(ptr align 1 %3, ptr align 1 %323, ptr align 1 %324) #15
  %326 = icmp eq i8 %325, 1
  br i1 %326, label %.critedge51, label %329

327:                                              ; preds = %.critedge51, %334
  %328 = getelementptr inbounds i8, ptr %.3, i64 128
  br label %42

329:                                              ; preds = %.critedge37
  %sunkaddr612 = getelementptr inbounds i8, ptr %.3, i64 88
  %330 = load ptr, ptr %sunkaddr612, align 8
  %sunkaddr613 = getelementptr inbounds i8, ptr %.3, i64 96
  %331 = load ptr, ptr %sunkaddr613, align 8
  %332 = tail call i8 %2(ptr align 1 %3, ptr align 1 %330, ptr align 1 %331) #15
  %333 = icmp eq i8 %332, 1
  br i1 %333, label %.critedge51, label %334

334:                                              ; preds = %329
  %sunkaddr614 = getelementptr inbounds i8, ptr %.3, i64 104
  %335 = load ptr, ptr %sunkaddr614, align 8
  %sunkaddr615 = getelementptr inbounds i8, ptr %.3, i64 112
  %336 = load ptr, ptr %sunkaddr615, align 8
  %337 = tail call i8 %2(ptr align 1 %3, ptr align 1 %335, ptr align 1 %336) #15
  %338 = icmp eq i8 %337, 1
  br i1 %338, label %.critedge51, label %327

.critedge51:                                      ; preds = %334, %329, %.critedge37
  call fastcc void @sort.quad_swap_merge__anon_16497(ptr nonnull align 1 %170, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %327

339:                                              ; preds = %.critedge65.thread, %.critedge63.thread, %.critedge61.thread, %.critedge59.thread, %.critedge57.thread, %.critedge55.thread, %386
  %340 = getelementptr inbounds i8, ptr %.3, i64 56
  %341 = ptrtoint ptr %340 to i64
  %342 = ptrtoint ptr %.3282.ph264 to i64
  %343 = sub nuw i64 %341, %342
  %344 = lshr i64 %343, 4
  %345 = shl nuw nsw i64 %344, 3
  %346 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %345
  %347 = sub nsw i64 0, %345
  %348 = getelementptr inbounds i8, ptr %340, i64 %347
  %349 = and i64 %343, 16
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %374, label %._crit_edge.i331

._crit_edge.i331:                                 ; preds = %374, %339
  %.027.i332 = phi ptr [ %378, %374 ], [ %348, %339 ]
  %.025.i333 = phi ptr [ %377, %374 ], [ %346, %339 ]
  %.0.i334 = phi i64 [ %379, %374 ], [ %344, %339 ]
  %351 = load i64, ptr %.3282.ph264, align 8
  %352 = load i64, ptr %340, align 8
  store i64 %352, ptr %.3282.ph264, align 8
  store i64 %351, ptr %340, align 8
  %353 = load i64, ptr %.025.i333, align 8
  %354 = load i64, ptr %.027.i332, align 8
  store i64 %354, ptr %.025.i333, align 8
  store i64 %353, ptr %.027.i332, align 8
  %355 = icmp ult i64 %.0.i334, 2
  br i1 %355, label %.loopexit, label %.lr.ph106.preheader

.lr.ph106.preheader:                              ; preds = %._crit_edge.i331
  %356 = lshr i64 %.0.i334, 1
  %min.iters.check144 = icmp ult i64 %.0.i334, 48
  br i1 %min.iters.check144, label %.lr.ph106.preheader464, label %vector.scevcheck103

vector.scevcheck103:                              ; preds = %.lr.ph106.preheader
  %357 = add nsw i64 %356, -1
  %uglygep104 = getelementptr i8, ptr %.3, i64 48
  %mul.result106.neg = mul i64 %357, -8
  %358 = getelementptr i8, ptr %uglygep104, i64 %mul.result106.neg
  %359 = icmp ugt ptr %358, %uglygep104
  %uglygep108 = getelementptr i8, ptr %.025.i333, i64 -8
  %mul.result110.neg = mul i64 %357, -8
  %mul.overflow111 = icmp ugt i64 %357, 2305843009213693951
  %360 = getelementptr i8, ptr %uglygep108, i64 %mul.result110.neg
  %361 = icmp ugt ptr %360, %uglygep108
  %362 = or i1 %361, %mul.overflow111
  %363 = or i1 %359, %362
  br i1 %363, label %.lr.ph106.preheader464, label %vector.memcheck112

vector.memcheck112:                               ; preds = %vector.scevcheck103
  %uglygep113 = getelementptr i8, ptr %.3282.ph264, i64 8
  %364 = shl i64 %356, 3
  %365 = add i64 %364, 8
  %uglygep114 = getelementptr i8, ptr %.3282.ph264, i64 %365
  %uglygep115 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep116 = getelementptr i8, ptr %.027.i332, i64 %365
  %366 = sub i64 56, %364
  %uglygep117 = getelementptr i8, ptr %.3, i64 %366
  %367 = mul i64 %356, -8
  %uglygep118 = getelementptr i8, ptr %.025.i333, i64 %367
  %bound0119 = icmp ult ptr %uglygep113, %uglygep116
  %bound1120 = icmp ult ptr %uglygep115, %uglygep114
  %found.conflict121 = and i1 %bound0119, %bound1120
  %bound0122 = icmp ult ptr %uglygep113, %340
  %bound1123 = icmp ult ptr %uglygep117, %uglygep114
  %found.conflict124 = and i1 %bound0122, %bound1123
  %conflict.rdx125 = or i1 %found.conflict121, %found.conflict124
  %bound0126 = icmp ult ptr %uglygep113, %.025.i333
  %bound1127 = icmp ult ptr %uglygep118, %uglygep114
  %found.conflict128 = and i1 %bound0126, %bound1127
  %conflict.rdx129 = or i1 %conflict.rdx125, %found.conflict128
  %bound0130 = icmp ult ptr %uglygep115, %340
  %bound1131 = icmp ult ptr %uglygep117, %uglygep116
  %found.conflict132 = and i1 %bound0130, %bound1131
  %conflict.rdx133 = or i1 %conflict.rdx129, %found.conflict132
  %bound0134 = icmp ult ptr %uglygep115, %.025.i333
  %bound1135 = icmp ult ptr %uglygep118, %uglygep116
  %found.conflict136 = and i1 %bound0134, %bound1135
  %conflict.rdx137 = or i1 %conflict.rdx133, %found.conflict136
  %bound0138 = icmp ult ptr %uglygep117, %.025.i333
  %bound1139 = icmp ult ptr %uglygep118, %340
  %found.conflict140 = and i1 %bound0138, %bound1139
  %conflict.rdx141 = or i1 %conflict.rdx137, %found.conflict140
  br i1 %conflict.rdx141, label %.lr.ph106.preheader464, label %vector.ph145

vector.ph145:                                     ; preds = %vector.memcheck112
  %368 = lshr i64 %.0.i334, 1
  %n.vec147 = and i64 %356, 9223372036854775806
  %ind.end148 = and i64 %368, 1
  %369 = shl i64 %n.vec147, 3
  %ind.end150 = getelementptr i8, ptr %.3282.ph264, i64 %369
  %370 = mul i64 %n.vec147, -8
  %ind.end152 = getelementptr i8, ptr %.025.i333, i64 %370
  %371 = shl i64 %n.vec147, 3
  %ind.end154 = getelementptr i8, ptr %.027.i332, i64 %371
  %372 = mul i64 %n.vec147, -8
  %ind.end156 = getelementptr i8, ptr %340, i64 %372
  %next.gep161252 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep163249 = getelementptr i8, ptr %.027.i332, i64 8
  %uglygep514 = getelementptr i8, ptr %.3, i64 40
  %uglygep519 = getelementptr i8, ptr %.025.i333, i64 -16
  br label %vector.body159

vector.body159:                                   ; preds = %vector.body159, %vector.ph145
  %lsr.iv524 = phi i64 [ %lsr.iv.next525, %vector.body159 ], [ %n.vec147, %vector.ph145 ]
  %lsr.iv522 = phi ptr [ %uglygep523, %vector.body159 ], [ %next.gep161252, %vector.ph145 ]
  %lsr.iv520 = phi ptr [ %uglygep521, %vector.body159 ], [ %uglygep519, %vector.ph145 ]
  %lsr.iv517 = phi ptr [ %uglygep518, %vector.body159 ], [ %next.gep163249, %vector.ph145 ]
  %lsr.iv515 = phi ptr [ %uglygep516, %vector.body159 ], [ %uglygep514, %vector.ph145 ]
  %wide.load165 = load <2 x i64>, ptr %lsr.iv522, align 8, !alias.scope !487, !noalias !490
  %wide.load166 = load <2 x i64>, ptr %lsr.iv515, align 8, !alias.scope !494, !noalias !495
  %reverse167 = shufflevector <2 x i64> %wide.load166, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse167, ptr %lsr.iv522, align 8, !alias.scope !487, !noalias !490
  %reverse168 = shufflevector <2 x i64> %wide.load165, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse168, ptr %lsr.iv515, align 8, !alias.scope !494, !noalias !495
  %wide.load169 = load <2 x i64>, ptr %lsr.iv520, align 8, !alias.scope !495
  %reverse170 = shufflevector <2 x i64> %wide.load169, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load171 = load <2 x i64>, ptr %lsr.iv517, align 8, !alias.scope !496, !noalias !497
  %reverse172 = shufflevector <2 x i64> %wide.load171, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse172, ptr %lsr.iv520, align 8, !alias.scope !495
  store <2 x i64> %reverse170, ptr %lsr.iv517, align 8, !alias.scope !496, !noalias !497
  %uglygep516 = getelementptr i8, ptr %lsr.iv515, i64 -16
  %uglygep518 = getelementptr i8, ptr %lsr.iv517, i64 16
  %uglygep521 = getelementptr i8, ptr %lsr.iv520, i64 -16
  %uglygep523 = getelementptr i8, ptr %lsr.iv522, i64 16
  %lsr.iv.next525 = add nsw i64 %lsr.iv524, -2
  %373 = icmp eq i64 %lsr.iv.next525, 0
  br i1 %373, label %middle.block142, label %vector.body159, !llvm.loop !498

middle.block142:                                  ; preds = %vector.body159
  %cmp.n158 = icmp eq i64 %356, %n.vec147
  br i1 %cmp.n158, label %.loopexit, label %.lr.ph106.preheader464

.lr.ph106.preheader464:                           ; preds = %middle.block142, %vector.memcheck112, %vector.scevcheck103, %.lr.ph106.preheader
  %.1.i339105.ph = phi i64 [ %ind.end148, %middle.block142 ], [ %356, %.lr.ph106.preheader ], [ %356, %vector.scevcheck103 ], [ %356, %vector.memcheck112 ]
  %.024.i338104.ph = phi ptr [ %ind.end150, %middle.block142 ], [ %.3282.ph264, %.lr.ph106.preheader ], [ %.3282.ph264, %vector.scevcheck103 ], [ %.3282.ph264, %vector.memcheck112 ]
  %.126.i337103.ph = phi ptr [ %ind.end152, %middle.block142 ], [ %.025.i333, %.lr.ph106.preheader ], [ %.025.i333, %vector.scevcheck103 ], [ %.025.i333, %vector.memcheck112 ]
  %.128.i336102.ph = phi ptr [ %ind.end154, %middle.block142 ], [ %.027.i332, %.lr.ph106.preheader ], [ %.027.i332, %vector.scevcheck103 ], [ %.027.i332, %vector.memcheck112 ]
  %.029.i335101.ph = phi ptr [ %ind.end156, %middle.block142 ], [ %340, %.lr.ph106.preheader ], [ %340, %vector.scevcheck103 ], [ %340, %vector.memcheck112 ]
  %uglygep502 = getelementptr i8, ptr %.024.i338104.ph, i64 8
  %uglygep505 = getelementptr i8, ptr %.126.i337103.ph, i64 -8
  %uglygep508 = getelementptr i8, ptr %.128.i336102.ph, i64 8
  %uglygep511 = getelementptr i8, ptr %.029.i335101.ph, i64 -8
  br label %.lr.ph106

374:                                              ; preds = %339
  %375 = load i64, ptr %346, align 8
  %376 = load i64, ptr %348, align 8
  store i64 %376, ptr %346, align 8
  %377 = getelementptr inbounds i8, ptr %346, i64 -8
  store i64 %375, ptr %348, align 8
  %378 = getelementptr inbounds i8, ptr %348, i64 8
  %379 = add nsw i64 %344, -1
  br label %._crit_edge.i331

.lr.ph106:                                        ; preds = %.lr.ph106, %.lr.ph106.preheader464
  %lsr.iv512 = phi ptr [ %uglygep511, %.lr.ph106.preheader464 ], [ %uglygep513, %.lr.ph106 ]
  %lsr.iv509 = phi ptr [ %uglygep508, %.lr.ph106.preheader464 ], [ %uglygep510, %.lr.ph106 ]
  %lsr.iv506 = phi ptr [ %uglygep505, %.lr.ph106.preheader464 ], [ %uglygep507, %.lr.ph106 ]
  %lsr.iv503 = phi ptr [ %uglygep502, %.lr.ph106.preheader464 ], [ %uglygep504, %.lr.ph106 ]
  %.1.i339105 = phi i64 [ %380, %.lr.ph106 ], [ %.1.i339105.ph, %.lr.ph106.preheader464 ]
  %380 = add nsw i64 %.1.i339105, -1
  %381 = load i64, ptr %lsr.iv503, align 8
  %382 = load i64, ptr %lsr.iv512, align 8
  store i64 %382, ptr %lsr.iv503, align 8
  store i64 %381, ptr %lsr.iv512, align 8
  %383 = load i64, ptr %lsr.iv506, align 8
  %384 = load i64, ptr %lsr.iv509, align 8
  store i64 %384, ptr %lsr.iv506, align 8
  store i64 %383, ptr %lsr.iv509, align 8
  %uglygep504 = getelementptr i8, ptr %lsr.iv503, i64 8
  %uglygep507 = getelementptr i8, ptr %lsr.iv506, i64 -8
  %uglygep510 = getelementptr i8, ptr %lsr.iv509, i64 8
  %uglygep513 = getelementptr i8, ptr %lsr.iv512, i64 -8
  %385 = icmp eq i64 %380, 0
  br i1 %385, label %.loopexit, label %.lr.ph106, !llvm.loop !499

386:                                              ; preds = %203
  %387 = getelementptr inbounds i8, ptr %.3, i64 104
  %388 = getelementptr inbounds i8, ptr %.3, i64 112
  %389 = load ptr, ptr %387, align 8
  %390 = load ptr, ptr %388, align 8
  %391 = tail call i8 %2(ptr align 1 %3, ptr align 1 %389, ptr align 1 %390) #15
  %.not314 = icmp eq i8 %391, 1
  br i1 %.not314, label %.critedge55.thread, label %339

.critedge55:                                      ; preds = %203
  %392 = icmp ugt i64 %204, 5
  br i1 %392, label %.critedge55.thread, label %.critedge57

.critedge55.thread:                               ; preds = %.critedge55, %386
  %393 = getelementptr inbounds i8, ptr %.3, i64 96
  %394 = getelementptr inbounds i8, ptr %.3, i64 104
  %395 = load ptr, ptr %393, align 8
  %396 = load ptr, ptr %394, align 8
  %397 = tail call i8 %2(ptr align 1 %3, ptr align 1 %395, ptr align 1 %396) #15
  %.not313 = icmp eq i8 %397, 1
  br i1 %.not313, label %.critedge57.thread, label %339

.critedge57:                                      ; preds = %.critedge55
  %398 = icmp eq i64 %204, 5
  br i1 %398, label %.critedge57.thread, label %.critedge59

.critedge57.thread:                               ; preds = %.critedge57, %.critedge55.thread
  %399 = getelementptr inbounds i8, ptr %.3, i64 88
  %400 = getelementptr inbounds i8, ptr %.3, i64 96
  %401 = load ptr, ptr %399, align 8
  %402 = load ptr, ptr %400, align 8
  %403 = tail call i8 %2(ptr align 1 %3, ptr align 1 %401, ptr align 1 %402) #15
  %.not312 = icmp eq i8 %403, 1
  br i1 %.not312, label %.critedge59.thread, label %339

.critedge59:                                      ; preds = %.critedge57
  %404 = icmp ugt i64 %204, 3
  br i1 %404, label %.critedge59.thread, label %.critedge61

.critedge59.thread:                               ; preds = %.critedge59, %.critedge57.thread
  %405 = getelementptr inbounds i8, ptr %.3, i64 80
  %406 = getelementptr inbounds i8, ptr %.3, i64 88
  %407 = load ptr, ptr %405, align 8
  %408 = load ptr, ptr %406, align 8
  %409 = tail call i8 %2(ptr align 1 %3, ptr align 1 %407, ptr align 1 %408) #15
  %.not311 = icmp eq i8 %409, 1
  br i1 %.not311, label %.critedge61.thread, label %339

.critedge61:                                      ; preds = %.critedge59
  %410 = icmp eq i64 %204, 3
  br i1 %410, label %.critedge61.thread, label %.critedge63

.critedge61.thread:                               ; preds = %.critedge61, %.critedge59.thread
  %411 = getelementptr inbounds i8, ptr %.3, i64 72
  %412 = getelementptr inbounds i8, ptr %.3, i64 80
  %413 = load ptr, ptr %411, align 8
  %414 = load ptr, ptr %412, align 8
  %415 = tail call i8 %2(ptr align 1 %3, ptr align 1 %413, ptr align 1 %414) #15
  %.not310 = icmp eq i8 %415, 1
  br i1 %.not310, label %.critedge63.thread, label %339

.critedge63:                                      ; preds = %.critedge61
  %416 = icmp ugt i64 %204, 1
  br i1 %416, label %.critedge63.thread, label %.critedge65

.critedge63.thread:                               ; preds = %.critedge63, %.critedge61.thread
  %417 = getelementptr inbounds i8, ptr %.3, i64 72
  %sunkaddr616 = getelementptr inbounds i8, ptr %.3, i64 64
  %418 = load ptr, ptr %sunkaddr616, align 8
  %419 = load ptr, ptr %417, align 8
  %420 = tail call i8 %2(ptr align 1 %3, ptr align 1 %418, ptr align 1 %419) #15
  %.not309 = icmp eq i8 %420, 1
  br i1 %.not309, label %.critedge65.thread, label %339

.critedge65:                                      ; preds = %.critedge63
  %.not307 = icmp eq i64 %204, 0
  br i1 %.not307, label %.critedge67, label %.critedge65.thread

.critedge65.thread:                               ; preds = %.critedge65, %.critedge63.thread
  %421 = getelementptr inbounds i8, ptr %.3, i64 56
  %422 = load ptr, ptr %421, align 8
  %sunkaddr617 = getelementptr inbounds i8, ptr %.3, i64 64
  %423 = load ptr, ptr %sunkaddr617, align 8
  %424 = tail call i8 %2(ptr align 1 %3, ptr align 1 %422, ptr align 1 %423) #15
  %.not308 = icmp eq i8 %424, 1
  br i1 %.not308, label %.critedge67, label %339

.critedge67:                                      ; preds = %.critedge65.thread, %.critedge65
  %425 = shl nuw nsw i64 %204, 3
  %426 = getelementptr inbounds i8, ptr %170, i64 %425
  %427 = getelementptr inbounds i8, ptr %426, i64 -8
  %428 = ptrtoint ptr %427 to i64
  %429 = ptrtoint ptr %.3282.ph264 to i64
  %430 = sub nuw i64 %428, %429
  %431 = lshr i64 %430, 4
  %432 = shl nuw nsw i64 %431, 3
  %433 = getelementptr inbounds i8, ptr %.3282.ph264, i64 %432
  %434 = sub nsw i64 0, %432
  %435 = getelementptr inbounds i8, ptr %427, i64 %434
  %436 = and i64 %430, 16
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %464, label %._crit_edge.i341

._crit_edge.i341:                                 ; preds = %464, %.critedge67
  %.027.i342 = phi ptr [ %468, %464 ], [ %435, %.critedge67 ]
  %.025.i343 = phi ptr [ %467, %464 ], [ %433, %.critedge67 ]
  %.0.i344 = phi i64 [ %469, %464 ], [ %431, %.critedge67 ]
  %438 = load i64, ptr %.3282.ph264, align 8
  %439 = load i64, ptr %427, align 8
  store i64 %439, ptr %.3282.ph264, align 8
  store i64 %438, ptr %427, align 8
  %440 = load i64, ptr %.025.i343, align 8
  %441 = load i64, ptr %.027.i342, align 8
  store i64 %441, ptr %.025.i343, align 8
  store i64 %440, ptr %.027.i342, align 8
  %442 = icmp ult i64 %.0.i344, 2
  br i1 %442, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader

.lr.ph112.preheader:                              ; preds = %._crit_edge.i341
  %443 = lshr i64 %.0.i344, 1
  %min.iters.check215 = icmp ult i64 %.0.i344, 48
  br i1 %min.iters.check215, label %.lr.ph112.preheader463, label %vector.scevcheck174

vector.scevcheck174:                              ; preds = %.lr.ph112.preheader
  %444 = add nsw i64 %443, -1
  %445 = add nuw nsw i64 %425, 48
  %uglygep175 = getelementptr i8, ptr %.3, i64 %445
  %mul.result177.neg = mul i64 %444, -8
  %446 = getelementptr i8, ptr %uglygep175, i64 %mul.result177.neg
  %447 = icmp ugt ptr %446, %uglygep175
  %uglygep179 = getelementptr i8, ptr %.025.i343, i64 -8
  %mul.result181.neg = mul i64 %444, -8
  %mul.overflow182 = icmp ugt i64 %444, 2305843009213693951
  %448 = getelementptr i8, ptr %uglygep179, i64 %mul.result181.neg
  %449 = icmp ugt ptr %448, %uglygep179
  %450 = or i1 %449, %mul.overflow182
  %451 = or i1 %447, %450
  br i1 %451, label %.lr.ph112.preheader463, label %vector.memcheck183

vector.memcheck183:                               ; preds = %vector.scevcheck174
  %uglygep184 = getelementptr i8, ptr %.3282.ph264, i64 8
  %452 = shl i64 %443, 3
  %453 = add i64 %452, 8
  %uglygep185 = getelementptr i8, ptr %.3282.ph264, i64 %453
  %uglygep186 = getelementptr i8, ptr %.027.i342, i64 8
  %uglygep187 = getelementptr i8, ptr %.027.i342, i64 %453
  %454 = add nuw nsw i64 %425, 56
  %455 = sub i64 %454, %452
  %uglygep188 = getelementptr i8, ptr %.3, i64 %455
  %456 = mul i64 %443, -8
  %uglygep189 = getelementptr i8, ptr %.025.i343, i64 %456
  %bound0190 = icmp ult ptr %uglygep184, %uglygep187
  %bound1191 = icmp ult ptr %uglygep186, %uglygep185
  %found.conflict192 = and i1 %bound0190, %bound1191
  %bound0193 = icmp ult ptr %uglygep184, %427
  %bound1194 = icmp ult ptr %uglygep188, %uglygep185
  %found.conflict195 = and i1 %bound0193, %bound1194
  %conflict.rdx196 = or i1 %found.conflict192, %found.conflict195
  %bound0197 = icmp ult ptr %uglygep184, %.025.i343
  %bound1198 = icmp ult ptr %uglygep189, %uglygep185
  %found.conflict199 = and i1 %bound0197, %bound1198
  %conflict.rdx200 = or i1 %conflict.rdx196, %found.conflict199
  %bound0201 = icmp ult ptr %uglygep186, %427
  %bound1202 = icmp ult ptr %uglygep188, %uglygep187
  %found.conflict203 = and i1 %bound0201, %bound1202
  %conflict.rdx204 = or i1 %conflict.rdx200, %found.conflict203
  %bound0205 = icmp ult ptr %uglygep186, %.025.i343
  %bound1206 = icmp ult ptr %uglygep189, %uglygep187
  %found.conflict207 = and i1 %bound0205, %bound1206
  %conflict.rdx208 = or i1 %conflict.rdx204, %found.conflict207
  %bound0209 = icmp ult ptr %uglygep188, %.025.i343
  %bound1210 = icmp ult ptr %uglygep189, %427
  %found.conflict211 = and i1 %bound0209, %bound1210
  %conflict.rdx212 = or i1 %conflict.rdx208, %found.conflict211
  br i1 %conflict.rdx212, label %.lr.ph112.preheader463, label %vector.ph216

vector.ph216:                                     ; preds = %vector.memcheck183
  %457 = lshr i64 %.0.i344, 1
  %n.vec218 = and i64 %443, 9223372036854775806
  %ind.end219 = and i64 %457, 1
  %458 = shl i64 %n.vec218, 3
  %ind.end221 = getelementptr i8, ptr %.3282.ph264, i64 %458
  %459 = mul i64 %n.vec218, -8
  %ind.end223 = getelementptr i8, ptr %.025.i343, i64 %459
  %460 = shl i64 %n.vec218, 3
  %ind.end225 = getelementptr i8, ptr %.027.i342, i64 %460
  %461 = mul i64 %n.vec218, -8
  %ind.end227 = getelementptr i8, ptr %427, i64 %461
  %next.gep232256 = getelementptr i8, ptr %.3282.ph264, i64 8
  %next.gep234253 = getelementptr i8, ptr %.027.i342, i64 8
  %462 = add nuw nsw i64 %425, 40
  %uglygep490 = getelementptr i8, ptr %.3, i64 %462
  %uglygep495 = getelementptr i8, ptr %.025.i343, i64 -16
  br label %vector.body230

vector.body230:                                   ; preds = %vector.body230, %vector.ph216
  %lsr.iv500 = phi i64 [ %lsr.iv.next501, %vector.body230 ], [ %n.vec218, %vector.ph216 ]
  %lsr.iv498 = phi ptr [ %uglygep499, %vector.body230 ], [ %next.gep232256, %vector.ph216 ]
  %lsr.iv496 = phi ptr [ %uglygep497, %vector.body230 ], [ %uglygep495, %vector.ph216 ]
  %lsr.iv493 = phi ptr [ %uglygep494, %vector.body230 ], [ %next.gep234253, %vector.ph216 ]
  %lsr.iv491 = phi ptr [ %uglygep492, %vector.body230 ], [ %uglygep490, %vector.ph216 ]
  %wide.load236 = load <2 x i64>, ptr %lsr.iv498, align 8, !alias.scope !500, !noalias !503
  %wide.load237 = load <2 x i64>, ptr %lsr.iv491, align 8, !alias.scope !507, !noalias !508
  %reverse238 = shufflevector <2 x i64> %wide.load237, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse238, ptr %lsr.iv498, align 8, !alias.scope !500, !noalias !503
  %reverse239 = shufflevector <2 x i64> %wide.load236, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse239, ptr %lsr.iv491, align 8, !alias.scope !507, !noalias !508
  %wide.load240 = load <2 x i64>, ptr %lsr.iv496, align 8, !alias.scope !508
  %reverse241 = shufflevector <2 x i64> %wide.load240, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %wide.load242 = load <2 x i64>, ptr %lsr.iv493, align 8, !alias.scope !509, !noalias !510
  %reverse243 = shufflevector <2 x i64> %wide.load242, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i64> %reverse243, ptr %lsr.iv496, align 8, !alias.scope !508
  store <2 x i64> %reverse241, ptr %lsr.iv493, align 8, !alias.scope !509, !noalias !510
  %uglygep492 = getelementptr i8, ptr %lsr.iv491, i64 -16
  %uglygep494 = getelementptr i8, ptr %lsr.iv493, i64 16
  %uglygep497 = getelementptr i8, ptr %lsr.iv496, i64 -16
  %uglygep499 = getelementptr i8, ptr %lsr.iv498, i64 16
  %lsr.iv.next501 = add nsw i64 %lsr.iv500, -2
  %463 = icmp eq i64 %lsr.iv.next501, 0
  br i1 %463, label %middle.block213, label %vector.body230, !llvm.loop !511

middle.block213:                                  ; preds = %vector.body230
  %cmp.n229 = icmp eq i64 %443, %n.vec218
  br i1 %cmp.n229, label %sort.quad_reversal.exit350, label %.lr.ph112.preheader463

.lr.ph112.preheader463:                           ; preds = %middle.block213, %vector.memcheck183, %vector.scevcheck174, %.lr.ph112.preheader
  %.1.i349111.ph = phi i64 [ %ind.end219, %middle.block213 ], [ %443, %.lr.ph112.preheader ], [ %443, %vector.scevcheck174 ], [ %443, %vector.memcheck183 ]
  %.024.i348110.ph = phi ptr [ %ind.end221, %middle.block213 ], [ %.3282.ph264, %.lr.ph112.preheader ], [ %.3282.ph264, %vector.scevcheck174 ], [ %.3282.ph264, %vector.memcheck183 ]
  %.126.i347109.ph = phi ptr [ %ind.end223, %middle.block213 ], [ %.025.i343, %.lr.ph112.preheader ], [ %.025.i343, %vector.scevcheck174 ], [ %.025.i343, %vector.memcheck183 ]
  %.128.i346108.ph = phi ptr [ %ind.end225, %middle.block213 ], [ %.027.i342, %.lr.ph112.preheader ], [ %.027.i342, %vector.scevcheck174 ], [ %.027.i342, %vector.memcheck183 ]
  %.029.i345107.ph = phi ptr [ %ind.end227, %middle.block213 ], [ %427, %.lr.ph112.preheader ], [ %427, %vector.scevcheck174 ], [ %427, %vector.memcheck183 ]
  %uglygep478 = getelementptr i8, ptr %.024.i348110.ph, i64 8
  %uglygep481 = getelementptr i8, ptr %.126.i347109.ph, i64 -8
  %uglygep484 = getelementptr i8, ptr %.128.i346108.ph, i64 8
  %uglygep487 = getelementptr i8, ptr %.029.i345107.ph, i64 -8
  br label %.lr.ph112

464:                                              ; preds = %.critedge67
  %465 = load i64, ptr %433, align 8
  %466 = load i64, ptr %435, align 8
  store i64 %466, ptr %433, align 8
  %467 = getelementptr inbounds i8, ptr %433, i64 -8
  store i64 %465, ptr %435, align 8
  %468 = getelementptr inbounds i8, ptr %435, i64 8
  %469 = add nsw i64 %431, -1
  br label %._crit_edge.i341

.lr.ph112:                                        ; preds = %.lr.ph112, %.lr.ph112.preheader463
  %lsr.iv488 = phi ptr [ %uglygep487, %.lr.ph112.preheader463 ], [ %uglygep489, %.lr.ph112 ]
  %lsr.iv485 = phi ptr [ %uglygep484, %.lr.ph112.preheader463 ], [ %uglygep486, %.lr.ph112 ]
  %lsr.iv482 = phi ptr [ %uglygep481, %.lr.ph112.preheader463 ], [ %uglygep483, %.lr.ph112 ]
  %lsr.iv479 = phi ptr [ %uglygep478, %.lr.ph112.preheader463 ], [ %uglygep480, %.lr.ph112 ]
  %.1.i349111 = phi i64 [ %470, %.lr.ph112 ], [ %.1.i349111.ph, %.lr.ph112.preheader463 ]
  %470 = add nsw i64 %.1.i349111, -1
  %471 = load i64, ptr %lsr.iv479, align 8
  %472 = load i64, ptr %lsr.iv488, align 8
  store i64 %472, ptr %lsr.iv479, align 8
  store i64 %471, ptr %lsr.iv488, align 8
  %473 = load i64, ptr %lsr.iv482, align 8
  %474 = load i64, ptr %lsr.iv485, align 8
  store i64 %474, ptr %lsr.iv482, align 8
  store i64 %473, ptr %lsr.iv485, align 8
  %uglygep480 = getelementptr i8, ptr %lsr.iv479, i64 8
  %uglygep483 = getelementptr i8, ptr %lsr.iv482, i64 -8
  %uglygep486 = getelementptr i8, ptr %lsr.iv485, i64 8
  %uglygep489 = getelementptr i8, ptr %lsr.iv488, i64 -8
  %475 = icmp eq i64 %470, 0
  br i1 %475, label %sort.quad_reversal.exit350, label %.lr.ph112, !llvm.loop !512

sort.quad_reversal.exit350:                       ; preds = %.lr.ph112, %middle.block213, %._crit_edge.i341
  %476 = icmp eq ptr %.3282.ph264, %0
  br i1 %476, label %common.ret, label %477

common.ret:                                       ; preds = %.loopexit.i, %._crit_edge, %sort.quad_reversal.exit350
  %common.ret.op = phi i1 [ false, %sort.quad_reversal.exit350 ], [ true, %._crit_edge ], [ true, %.loopexit.i ]
  ret i1 %common.ret.op

477:                                              ; preds = %.loopexit, %sort.quad_reversal.exit350
  %.not302113 = icmp ult i64 %1, 32
  br i1 %.not302113, label %._crit_edge, label %.lr.ph116

.lr.ph116:                                        ; preds = %477
  %478 = lshr i64 %1, 5
  %479 = getelementptr inbounds i8, ptr %5, i64 120
  %480 = getelementptr inbounds i8, ptr %5, i64 128
  %481 = getelementptr inbounds i8, ptr %5, i64 248
  %.sroa.gep2 = getelementptr inbounds i8, ptr %5, i64 136
  %.sroa.gep3 = getelementptr inbounds i8, ptr %5, i64 8
  %.167.i.1 = getelementptr inbounds i8, ptr %5, i64 16
  %.167.i.1.sroa.gep = getelementptr inbounds i8, ptr %5, i64 24
  br label %483

.loopexit:                                        ; preds = %.lr.ph106, %middle.block142, %._crit_edge.i331, %102, %42, %4
  %.0.ph = phi ptr [ %170, %._crit_edge.i331 ], [ %0, %4 ], [ %170, %middle.block142 ], [ %170, %.lr.ph106 ], [ %103, %102 ], [ %.2, %42 ]
  %482 = and i64 %1, 7
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %.0.ph, i64 %482, ptr nonnull align 1 %5, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %477

483:                                              ; preds = %491, %.lr.ph116
  %.5115 = phi ptr [ %0, %.lr.ph116 ], [ %493, %491 ]
  %.4288114 = phi i64 [ %478, %.lr.ph116 ], [ %492, %491 ]
  %484 = getelementptr inbounds i8, ptr %.5115, i64 56
  %485 = getelementptr inbounds i8, ptr %.5115, i64 64
  %486 = load ptr, ptr %484, align 8
  %487 = load ptr, ptr %485, align 8
  %488 = call i8 %2(ptr align 1 %3, ptr align 1 %486, ptr align 1 %487) #15
  %.not303 = icmp eq i8 %488, 1
  br i1 %.not303, label %.critedge69, label %494

._crit_edge:                                      ; preds = %491, %477
  %.5.lcssa = phi ptr [ %0, %477 ], [ %493, %491 ]
  %489 = and i64 %1, 31
  %490 = icmp ugt i64 %489, 8
  br i1 %490, label %.preheader.lr.ph.i, label %common.ret

491:                                              ; preds = %sort.parity_merge__anon_16505.exit399, %500
  %492 = add nsw i64 %.4288114, -1
  %493 = getelementptr inbounds i8, ptr %.5115, i64 256
  %.not302 = icmp eq i64 %492, 0
  br i1 %.not302, label %._crit_edge, label %483

494:                                              ; preds = %483
  %495 = getelementptr inbounds i8, ptr %.5115, i64 120
  %496 = getelementptr inbounds i8, ptr %.5115, i64 128
  %497 = load ptr, ptr %495, align 8
  %498 = load ptr, ptr %496, align 8
  %499 = call i8 %2(ptr align 1 %3, ptr align 1 %497, ptr align 1 %498) #15
  %.not304 = icmp eq i8 %499, 1
  br i1 %.not304, label %.critedge69, label %500

500:                                              ; preds = %494
  %501 = getelementptr inbounds i8, ptr %.5115, i64 184
  %502 = getelementptr inbounds i8, ptr %.5115, i64 192
  %503 = load ptr, ptr %501, align 8
  %504 = load ptr, ptr %502, align 8
  %505 = call i8 %2(ptr align 1 %3, ptr align 1 %503, ptr align 1 %504) #15
  %.not305 = icmp eq i8 %505, 1
  br i1 %.not305, label %.critedge69, label %491

.critedge69:                                      ; preds = %500, %494, %483
  %506 = getelementptr inbounds i8, ptr %.5115, i64 120
  %507 = load ptr, ptr %.5115, align 8
  %sunkaddr618 = getelementptr inbounds i8, ptr %.5115, i64 64
  %508 = load ptr, ptr %sunkaddr618, align 8
  %509 = call i8 %2(ptr align 1 %3, ptr align 1 %507, ptr align 1 %508) #15
  %.not.i = icmp eq i8 %509, 1
  %.sroa.speculated21.i = select i1 %.not.i, ptr %485, ptr %.5115
  %510 = load i64, ptr %.sroa.speculated21.i, align 8
  store i64 %510, ptr %5, align 16
  %511 = getelementptr inbounds i8, ptr %.sroa.speculated21.i, i64 8
  %.0..i = select i1 %.not.i, ptr %.5115, ptr %511
  %..061.i = select i1 %.not.i, ptr %511, ptr %485
  %512 = load ptr, ptr %.0..i, align 8
  %513 = load ptr, ptr %..061.i, align 8
  %514 = call i8 %2(ptr align 1 %3, ptr align 1 %512, ptr align 1 %513) #15
  %.not76.i = icmp eq i8 %514, 1
  %.sroa.speculated.i = select i1 %.not76.i, ptr %..061.i, ptr %.0..i
  %515 = load i64, ptr %.sroa.speculated.i, align 8
  %sunkaddr619 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %515, ptr %sunkaddr619, align 8
  %516 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %..364.i = select i1 %.not76.i, ptr %516, ptr %..061.i
  %.3..i = select i1 %.not76.i, ptr %.0..i, ptr %516
  %sunkaddr620 = getelementptr inbounds i8, ptr %.5115, i64 56
  %517 = load ptr, ptr %sunkaddr620, align 8
  %518 = load ptr, ptr %506, align 8
  %519 = call i8 %2(ptr align 1 %3, ptr align 1 %517, ptr align 1 %518) #15
  %520 = icmp eq i8 %519, 1
  %.sroa.speculated40.i621 = select i1 %520, i64 56, i64 120
  %.sroa.speculated40.i = select i1 %520, ptr %484, ptr %506
  %sunkaddr622 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i621
  %521 = load i64, ptr %sunkaddr622, align 8
  %sunkaddr623 = getelementptr inbounds i8, ptr %5, i64 120
  store i64 %521, ptr %sunkaddr623, align 8
  %522 = getelementptr inbounds i8, ptr %.sroa.speculated40.i, i64 -8
  %.171.i = select i1 %520, ptr %506, ptr %522
  %.169.i = select i1 %520, ptr %522, ptr %484
  %523 = load ptr, ptr %.3..i, align 8
  %524 = load ptr, ptr %..364.i, align 8
  %525 = call i8 %2(ptr align 1 %3, ptr align 1 %523, ptr align 1 %524) #15
  %.not76.i.1 = icmp eq i8 %525, 1
  %.sroa.speculated.i.1 = select i1 %.not76.i.1, ptr %..364.i, ptr %.3..i
  %526 = load i64, ptr %.sroa.speculated.i.1, align 8
  %sunkaddr624 = getelementptr inbounds i8, ptr %5, i64 16
  store i64 %526, ptr %sunkaddr624, align 16
  %527 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %..364.i.1 = select i1 %.not76.i.1, ptr %527, ptr %..364.i
  %.3..i.1 = select i1 %.not76.i.1, ptr %.3..i, ptr %527
  %528 = load ptr, ptr %.169.i, align 8
  %529 = load ptr, ptr %.171.i, align 8
  %530 = call i8 %2(ptr align 1 %3, ptr align 1 %528, ptr align 1 %529) #15
  %531 = icmp eq i8 %530, 1
  %.sroa.speculated40.i.1 = select i1 %531, ptr %.169.i, ptr %.171.i
  %532 = load i64, ptr %.sroa.speculated40.i.1, align 8
  %sunkaddr625 = getelementptr inbounds i8, ptr %5, i64 112
  store i64 %532, ptr %sunkaddr625, align 16
  %533 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.1, i64 -8
  %.171.i.1 = select i1 %531, ptr %.171.i, ptr %533
  %.169.i.1 = select i1 %531, ptr %533, ptr %.169.i
  %534 = load ptr, ptr %.3..i.1, align 8
  %535 = load ptr, ptr %..364.i.1, align 8
  %536 = call i8 %2(ptr align 1 %3, ptr align 1 %534, ptr align 1 %535) #15
  %.not76.i.2 = icmp eq i8 %536, 1
  %.sroa.speculated.i.2 = select i1 %.not76.i.2, ptr %..364.i.1, ptr %.3..i.1
  %537 = load i64, ptr %.sroa.speculated.i.2, align 8
  %sunkaddr626 = getelementptr inbounds i8, ptr %5, i64 24
  store i64 %537, ptr %sunkaddr626, align 8
  %538 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %..364.i.2 = select i1 %.not76.i.2, ptr %538, ptr %..364.i.1
  %.3..i.2 = select i1 %.not76.i.2, ptr %.3..i.1, ptr %538
  %539 = load ptr, ptr %.169.i.1, align 8
  %540 = load ptr, ptr %.171.i.1, align 8
  %541 = call i8 %2(ptr align 1 %3, ptr align 1 %539, ptr align 1 %540) #15
  %542 = icmp eq i8 %541, 1
  %.sroa.speculated40.i.2 = select i1 %542, ptr %.169.i.1, ptr %.171.i.1
  %543 = load i64, ptr %.sroa.speculated40.i.2, align 8
  %sunkaddr627 = getelementptr inbounds i8, ptr %5, i64 104
  store i64 %543, ptr %sunkaddr627, align 8
  %544 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.2, i64 -8
  %.171.i.2 = select i1 %542, ptr %.171.i.1, ptr %544
  %.169.i.2 = select i1 %542, ptr %544, ptr %.169.i.1
  %545 = load ptr, ptr %.3..i.2, align 8
  %546 = load ptr, ptr %..364.i.2, align 8
  %547 = call i8 %2(ptr align 1 %3, ptr align 1 %545, ptr align 1 %546) #15
  %.not76.i.3 = icmp eq i8 %547, 1
  %.sroa.speculated.i.3 = select i1 %.not76.i.3, ptr %..364.i.2, ptr %.3..i.2
  %548 = load i64, ptr %.sroa.speculated.i.3, align 8
  %sunkaddr628 = getelementptr inbounds i8, ptr %5, i64 32
  store i64 %548, ptr %sunkaddr628, align 16
  %549 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %..364.i.3 = select i1 %.not76.i.3, ptr %549, ptr %..364.i.2
  %.3..i.3 = select i1 %.not76.i.3, ptr %.3..i.2, ptr %549
  %550 = load ptr, ptr %.169.i.2, align 8
  %551 = load ptr, ptr %.171.i.2, align 8
  %552 = call i8 %2(ptr align 1 %3, ptr align 1 %550, ptr align 1 %551) #15
  %553 = icmp eq i8 %552, 1
  %.sroa.speculated40.i.3 = select i1 %553, ptr %.169.i.2, ptr %.171.i.2
  %554 = load i64, ptr %.sroa.speculated40.i.3, align 8
  %sunkaddr629 = getelementptr inbounds i8, ptr %5, i64 96
  store i64 %554, ptr %sunkaddr629, align 16
  %555 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.3, i64 -8
  %.171.i.3 = select i1 %553, ptr %.171.i.2, ptr %555
  %.169.i.3 = select i1 %553, ptr %555, ptr %.169.i.2
  %556 = load ptr, ptr %.3..i.3, align 8
  %557 = load ptr, ptr %..364.i.3, align 8
  %558 = call i8 %2(ptr align 1 %3, ptr align 1 %556, ptr align 1 %557) #15
  %.not76.i.4 = icmp eq i8 %558, 1
  %.sroa.speculated.i.4 = select i1 %.not76.i.4, ptr %..364.i.3, ptr %.3..i.3
  %559 = load i64, ptr %.sroa.speculated.i.4, align 8
  %sunkaddr630 = getelementptr inbounds i8, ptr %5, i64 40
  store i64 %559, ptr %sunkaddr630, align 8
  %560 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %..364.i.4 = select i1 %.not76.i.4, ptr %560, ptr %..364.i.3
  %.3..i.4 = select i1 %.not76.i.4, ptr %.3..i.3, ptr %560
  %561 = load ptr, ptr %.169.i.3, align 8
  %562 = load ptr, ptr %.171.i.3, align 8
  %563 = call i8 %2(ptr align 1 %3, ptr align 1 %561, ptr align 1 %562) #15
  %564 = icmp eq i8 %563, 1
  %.sroa.speculated40.i.4 = select i1 %564, ptr %.169.i.3, ptr %.171.i.3
  %565 = load i64, ptr %.sroa.speculated40.i.4, align 8
  %sunkaddr631 = getelementptr inbounds i8, ptr %5, i64 88
  store i64 %565, ptr %sunkaddr631, align 8
  %566 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.4, i64 -8
  %.171.i.4 = select i1 %564, ptr %.171.i.3, ptr %566
  %.169.i.4 = select i1 %564, ptr %566, ptr %.169.i.3
  %567 = load ptr, ptr %.3..i.4, align 8
  %568 = load ptr, ptr %..364.i.4, align 8
  %569 = call i8 %2(ptr align 1 %3, ptr align 1 %567, ptr align 1 %568) #15
  %.not76.i.5 = icmp eq i8 %569, 1
  %.sroa.speculated.i.5 = select i1 %.not76.i.5, ptr %..364.i.4, ptr %.3..i.4
  %570 = load i64, ptr %.sroa.speculated.i.5, align 8
  %sunkaddr632 = getelementptr inbounds i8, ptr %5, i64 48
  store i64 %570, ptr %sunkaddr632, align 16
  %571 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %..364.i.5 = select i1 %.not76.i.5, ptr %571, ptr %..364.i.4
  %.3..i.5 = select i1 %.not76.i.5, ptr %.3..i.4, ptr %571
  %572 = load ptr, ptr %.169.i.4, align 8
  %573 = load ptr, ptr %.171.i.4, align 8
  %574 = call i8 %2(ptr align 1 %3, ptr align 1 %572, ptr align 1 %573) #15
  %575 = icmp eq i8 %574, 1
  %.sroa.speculated40.i.5 = select i1 %575, ptr %.169.i.4, ptr %.171.i.4
  %576 = load i64, ptr %.sroa.speculated40.i.5, align 8
  %sunkaddr633 = getelementptr inbounds i8, ptr %5, i64 80
  store i64 %576, ptr %sunkaddr633, align 16
  %577 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.5, i64 -8
  %.171.i.5 = select i1 %575, ptr %.171.i.4, ptr %577
  %.169.i.5 = select i1 %575, ptr %577, ptr %.169.i.4
  %578 = load ptr, ptr %.3..i.5, align 8
  %579 = load ptr, ptr %..364.i.5, align 8
  %580 = call i8 %2(ptr align 1 %3, ptr align 1 %578, ptr align 1 %579) #15
  %.not76.i.6 = icmp eq i8 %580, 1
  %.sroa.speculated.i.6 = select i1 %.not76.i.6, ptr %..364.i.5, ptr %.3..i.5
  %581 = load i64, ptr %.sroa.speculated.i.6, align 8
  %sunkaddr634 = getelementptr inbounds i8, ptr %5, i64 56
  store i64 %581, ptr %sunkaddr634, align 8
  %582 = load ptr, ptr %.169.i.5, align 8
  %583 = load ptr, ptr %.171.i.5, align 8
  %584 = call i8 %2(ptr align 1 %3, ptr align 1 %582, ptr align 1 %583) #15
  %585 = icmp eq i8 %584, 1
  %.sroa.speculated40.i.6 = select i1 %585, ptr %.169.i.5, ptr %.171.i.5
  %586 = load i64, ptr %.sroa.speculated40.i.6, align 8
  %sunkaddr635 = getelementptr inbounds i8, ptr %5, i64 72
  store i64 %586, ptr %sunkaddr635, align 8
  %587 = getelementptr inbounds i8, ptr %.sroa.speculated40.i.6, i64 -8
  %.171.i.6 = select i1 %585, ptr %.171.i.5, ptr %587
  %.169.i.6 = select i1 %585, ptr %587, ptr %.169.i.5
  %588 = load ptr, ptr %.169.i.6, align 8
  %589 = load ptr, ptr %.171.i.6, align 8
  %590 = call i8 %2(ptr align 1 %3, ptr align 1 %588, ptr align 1 %589) #15
  %591 = icmp eq i8 %590, 1
  %.sroa.speculated46.i = select i1 %591, ptr %.169.i.6, ptr %.171.i.6
  %592 = load i64, ptr %.sroa.speculated46.i, align 8
  %sunkaddr636 = getelementptr inbounds i8, ptr %5, i64 64
  store i64 %592, ptr %sunkaddr636, align 16
  %593 = getelementptr inbounds i8, ptr %.5115, i64 128
  %594 = getelementptr inbounds i8, ptr %.5115, i64 192
  %595 = getelementptr inbounds i8, ptr %.5115, i64 184
  %596 = getelementptr inbounds i8, ptr %.5115, i64 248
  %597 = load ptr, ptr %593, align 8
  %598 = load ptr, ptr %594, align 8
  %599 = call i8 %2(ptr align 1 %3, ptr align 1 %597, ptr align 1 %598) #15
  %.not.i353 = icmp eq i8 %599, 1
  %.sroa.speculated21.i354637 = select i1 %.not.i353, i64 192, i64 128
  %.sroa.speculated21.i354 = select i1 %.not.i353, ptr %594, ptr %593
  %sunkaddr638 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated21.i354637
  %600 = load i64, ptr %sunkaddr638, align 8
  %sunkaddr639 = getelementptr inbounds i8, ptr %5, i64 128
  store i64 %600, ptr %sunkaddr639, align 16
  %601 = getelementptr inbounds i8, ptr %.sroa.speculated21.i354, i64 8
  %.0..i355 = select i1 %.not.i353, ptr %593, ptr %601
  %..061.i356 = select i1 %.not.i353, ptr %601, ptr %594
  %602 = load ptr, ptr %.0..i355, align 8
  %603 = load ptr, ptr %..061.i356, align 8
  %604 = call i8 %2(ptr align 1 %3, ptr align 1 %602, ptr align 1 %603) #15
  %.not76.i365 = icmp eq i8 %604, 1
  %.sroa.speculated.i366 = select i1 %.not76.i365, ptr %..061.i356, ptr %.0..i355
  %605 = load i64, ptr %.sroa.speculated.i366, align 8
  %sunkaddr640 = getelementptr inbounds i8, ptr %5, i64 136
  store i64 %605, ptr %sunkaddr640, align 8
  %606 = getelementptr inbounds i8, ptr %.sroa.speculated.i366, i64 8
  %..364.i367 = select i1 %.not76.i365, ptr %606, ptr %..061.i356
  %.3..i368 = select i1 %.not76.i365, ptr %.0..i355, ptr %606
  %607 = load ptr, ptr %595, align 8
  %608 = load ptr, ptr %596, align 8
  %609 = call i8 %2(ptr align 1 %3, ptr align 1 %607, ptr align 1 %608) #15
  %610 = icmp eq i8 %609, 1
  %.sroa.speculated40.i369641 = select i1 %610, i64 184, i64 248
  %.sroa.speculated40.i369 = select i1 %610, ptr %595, ptr %596
  %sunkaddr642 = getelementptr inbounds i8, ptr %.5115, i64 %.sroa.speculated40.i369641
  %611 = load i64, ptr %sunkaddr642, align 8
  %sunkaddr643 = getelementptr inbounds i8, ptr %5, i64 248
  store i64 %611, ptr %sunkaddr643, align 8
  %612 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369, i64 -8
  %.171.i370 = select i1 %610, ptr %596, ptr %612
  %.169.i371 = select i1 %610, ptr %612, ptr %595
  %613 = load ptr, ptr %.3..i368, align 8
  %614 = load ptr, ptr %..364.i367, align 8
  %615 = call i8 %2(ptr align 1 %3, ptr align 1 %613, ptr align 1 %614) #15
  %.not76.i365.1 = icmp eq i8 %615, 1
  %.sroa.speculated.i366.1 = select i1 %.not76.i365.1, ptr %..364.i367, ptr %.3..i368
  %616 = load i64, ptr %.sroa.speculated.i366.1, align 8
  %sunkaddr644 = getelementptr inbounds i8, ptr %5, i64 144
  store i64 %616, ptr %sunkaddr644, align 16
  %617 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.1, i64 8
  %..364.i367.1 = select i1 %.not76.i365.1, ptr %617, ptr %..364.i367
  %.3..i368.1 = select i1 %.not76.i365.1, ptr %.3..i368, ptr %617
  %618 = load ptr, ptr %.169.i371, align 8
  %619 = load ptr, ptr %.171.i370, align 8
  %620 = call i8 %2(ptr align 1 %3, ptr align 1 %618, ptr align 1 %619) #15
  %621 = icmp eq i8 %620, 1
  %.sroa.speculated40.i369.1 = select i1 %621, ptr %.169.i371, ptr %.171.i370
  %622 = load i64, ptr %.sroa.speculated40.i369.1, align 8
  %sunkaddr645 = getelementptr inbounds i8, ptr %5, i64 240
  store i64 %622, ptr %sunkaddr645, align 16
  %623 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.1, i64 -8
  %.171.i370.1 = select i1 %621, ptr %.171.i370, ptr %623
  %.169.i371.1 = select i1 %621, ptr %623, ptr %.169.i371
  %624 = load ptr, ptr %.3..i368.1, align 8
  %625 = load ptr, ptr %..364.i367.1, align 8
  %626 = call i8 %2(ptr align 1 %3, ptr align 1 %624, ptr align 1 %625) #15
  %.not76.i365.2 = icmp eq i8 %626, 1
  %.sroa.speculated.i366.2 = select i1 %.not76.i365.2, ptr %..364.i367.1, ptr %.3..i368.1
  %627 = load i64, ptr %.sroa.speculated.i366.2, align 8
  %sunkaddr646 = getelementptr inbounds i8, ptr %5, i64 152
  store i64 %627, ptr %sunkaddr646, align 8
  %628 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.2, i64 8
  %..364.i367.2 = select i1 %.not76.i365.2, ptr %628, ptr %..364.i367.1
  %.3..i368.2 = select i1 %.not76.i365.2, ptr %.3..i368.1, ptr %628
  %629 = load ptr, ptr %.169.i371.1, align 8
  %630 = load ptr, ptr %.171.i370.1, align 8
  %631 = call i8 %2(ptr align 1 %3, ptr align 1 %629, ptr align 1 %630) #15
  %632 = icmp eq i8 %631, 1
  %.sroa.speculated40.i369.2 = select i1 %632, ptr %.169.i371.1, ptr %.171.i370.1
  %633 = load i64, ptr %.sroa.speculated40.i369.2, align 8
  %sunkaddr647 = getelementptr inbounds i8, ptr %5, i64 232
  store i64 %633, ptr %sunkaddr647, align 8
  %634 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.2, i64 -8
  %.171.i370.2 = select i1 %632, ptr %.171.i370.1, ptr %634
  %.169.i371.2 = select i1 %632, ptr %634, ptr %.169.i371.1
  %635 = load ptr, ptr %.3..i368.2, align 8
  %636 = load ptr, ptr %..364.i367.2, align 8
  %637 = call i8 %2(ptr align 1 %3, ptr align 1 %635, ptr align 1 %636) #15
  %.not76.i365.3 = icmp eq i8 %637, 1
  %.sroa.speculated.i366.3 = select i1 %.not76.i365.3, ptr %..364.i367.2, ptr %.3..i368.2
  %638 = load i64, ptr %.sroa.speculated.i366.3, align 8
  %sunkaddr648 = getelementptr inbounds i8, ptr %5, i64 160
  store i64 %638, ptr %sunkaddr648, align 16
  %639 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.3, i64 8
  %..364.i367.3 = select i1 %.not76.i365.3, ptr %639, ptr %..364.i367.2
  %.3..i368.3 = select i1 %.not76.i365.3, ptr %.3..i368.2, ptr %639
  %640 = load ptr, ptr %.169.i371.2, align 8
  %641 = load ptr, ptr %.171.i370.2, align 8
  %642 = call i8 %2(ptr align 1 %3, ptr align 1 %640, ptr align 1 %641) #15
  %643 = icmp eq i8 %642, 1
  %.sroa.speculated40.i369.3 = select i1 %643, ptr %.169.i371.2, ptr %.171.i370.2
  %644 = load i64, ptr %.sroa.speculated40.i369.3, align 8
  %sunkaddr649 = getelementptr inbounds i8, ptr %5, i64 224
  store i64 %644, ptr %sunkaddr649, align 16
  %645 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.3, i64 -8
  %.171.i370.3 = select i1 %643, ptr %.171.i370.2, ptr %645
  %.169.i371.3 = select i1 %643, ptr %645, ptr %.169.i371.2
  %646 = load ptr, ptr %.3..i368.3, align 8
  %647 = load ptr, ptr %..364.i367.3, align 8
  %648 = call i8 %2(ptr align 1 %3, ptr align 1 %646, ptr align 1 %647) #15
  %.not76.i365.4 = icmp eq i8 %648, 1
  %.sroa.speculated.i366.4 = select i1 %.not76.i365.4, ptr %..364.i367.3, ptr %.3..i368.3
  %649 = load i64, ptr %.sroa.speculated.i366.4, align 8
  %sunkaddr650 = getelementptr inbounds i8, ptr %5, i64 168
  store i64 %649, ptr %sunkaddr650, align 8
  %650 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.4, i64 8
  %..364.i367.4 = select i1 %.not76.i365.4, ptr %650, ptr %..364.i367.3
  %.3..i368.4 = select i1 %.not76.i365.4, ptr %.3..i368.3, ptr %650
  %651 = load ptr, ptr %.169.i371.3, align 8
  %652 = load ptr, ptr %.171.i370.3, align 8
  %653 = call i8 %2(ptr align 1 %3, ptr align 1 %651, ptr align 1 %652) #15
  %654 = icmp eq i8 %653, 1
  %.sroa.speculated40.i369.4 = select i1 %654, ptr %.169.i371.3, ptr %.171.i370.3
  %655 = load i64, ptr %.sroa.speculated40.i369.4, align 8
  %sunkaddr651 = getelementptr inbounds i8, ptr %5, i64 216
  store i64 %655, ptr %sunkaddr651, align 8
  %656 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.4, i64 -8
  %.171.i370.4 = select i1 %654, ptr %.171.i370.3, ptr %656
  %.169.i371.4 = select i1 %654, ptr %656, ptr %.169.i371.3
  %657 = load ptr, ptr %.3..i368.4, align 8
  %658 = load ptr, ptr %..364.i367.4, align 8
  %659 = call i8 %2(ptr align 1 %3, ptr align 1 %657, ptr align 1 %658) #15
  %.not76.i365.5 = icmp eq i8 %659, 1
  %.sroa.speculated.i366.5 = select i1 %.not76.i365.5, ptr %..364.i367.4, ptr %.3..i368.4
  %660 = load i64, ptr %.sroa.speculated.i366.5, align 8
  %sunkaddr652 = getelementptr inbounds i8, ptr %5, i64 176
  store i64 %660, ptr %sunkaddr652, align 16
  %661 = getelementptr inbounds i8, ptr %.sroa.speculated.i366.5, i64 8
  %..364.i367.5 = select i1 %.not76.i365.5, ptr %661, ptr %..364.i367.4
  %.3..i368.5 = select i1 %.not76.i365.5, ptr %.3..i368.4, ptr %661
  %662 = load ptr, ptr %.169.i371.4, align 8
  %663 = load ptr, ptr %.171.i370.4, align 8
  %664 = call i8 %2(ptr align 1 %3, ptr align 1 %662, ptr align 1 %663) #15
  %665 = icmp eq i8 %664, 1
  %.sroa.speculated40.i369.5 = select i1 %665, ptr %.169.i371.4, ptr %.171.i370.4
  %666 = load i64, ptr %.sroa.speculated40.i369.5, align 8
  %sunkaddr653 = getelementptr inbounds i8, ptr %5, i64 208
  store i64 %666, ptr %sunkaddr653, align 16
  %667 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.5, i64 -8
  %.171.i370.5 = select i1 %665, ptr %.171.i370.4, ptr %667
  %.169.i371.5 = select i1 %665, ptr %667, ptr %.169.i371.4
  %668 = load ptr, ptr %.3..i368.5, align 8
  %669 = load ptr, ptr %..364.i367.5, align 8
  %670 = call i8 %2(ptr align 1 %3, ptr align 1 %668, ptr align 1 %669) #15
  %.not76.i365.6 = icmp eq i8 %670, 1
  %.sroa.speculated.i366.6 = select i1 %.not76.i365.6, ptr %..364.i367.5, ptr %.3..i368.5
  %671 = load i64, ptr %.sroa.speculated.i366.6, align 8
  %sunkaddr654 = getelementptr inbounds i8, ptr %5, i64 184
  store i64 %671, ptr %sunkaddr654, align 8
  %672 = load ptr, ptr %.169.i371.5, align 8
  %673 = load ptr, ptr %.171.i370.5, align 8
  %674 = call i8 %2(ptr align 1 %3, ptr align 1 %672, ptr align 1 %673) #15
  %675 = icmp eq i8 %674, 1
  %.sroa.speculated40.i369.6 = select i1 %675, ptr %.169.i371.5, ptr %.171.i370.5
  %676 = load i64, ptr %.sroa.speculated40.i369.6, align 8
  %sunkaddr655 = getelementptr inbounds i8, ptr %5, i64 200
  store i64 %676, ptr %sunkaddr655, align 8
  %677 = getelementptr inbounds i8, ptr %.sroa.speculated40.i369.6, i64 -8
  %.171.i370.6 = select i1 %675, ptr %.171.i370.5, ptr %677
  %.169.i371.6 = select i1 %675, ptr %677, ptr %.169.i371.5
  %678 = load ptr, ptr %.169.i371.6, align 8
  %679 = load ptr, ptr %.171.i370.6, align 8
  %680 = call i8 %2(ptr align 1 %3, ptr align 1 %678, ptr align 1 %679) #15
  %681 = icmp eq i8 %680, 1
  %.sroa.speculated46.i374 = select i1 %681, ptr %.169.i371.6, ptr %.171.i370.6
  %682 = load i64, ptr %.sroa.speculated46.i374, align 8
  %sunkaddr656 = getelementptr inbounds i8, ptr %5, i64 192
  store i64 %682, ptr %sunkaddr656, align 16
  %683 = load ptr, ptr %5, align 16
  %684 = load ptr, ptr %sunkaddr639, align 16
  %685 = call i8 %2(ptr align 1 %3, ptr align 1 %683, ptr align 1 %684) #15
  %.not.i377 = icmp eq i8 %685, 1
  %.val = load i64, ptr %sunkaddr639, align 16
  %.val28 = load i64, ptr %5, align 16
  %686 = select i1 %.not.i377, i64 %.val, i64 %.val28
  store i64 %686, ptr %.5115, align 8
  %.0..i379 = select i1 %.not.i377, ptr %5, ptr %.sroa.gep3
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.v = select i1 %.not.i377, i64 144, i64 16
  %.sroa.speculated21.i378.sroa.sel.sroa.sel = getelementptr inbounds i8, ptr %5, i64 %.sroa.speculated21.i378.sroa.sel.sroa.sel.v
  %.0..i379.sroa.sel = select i1 %.not.i377, ptr %.sroa.gep3, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel, i64 8
  %.0..i379.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep
  %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep = getelementptr inbounds i8, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep, i64 8
  %.0..i379.sroa.sel.sroa.sel.sroa.sel = select i1 %.not.i377, ptr %.167.i.1.sroa.gep, ptr %.sroa.speculated21.i378.sroa.sel.sroa.sel.sroa.gep.sroa.gep
  %..061.i380 = select i1 %.not.i377, ptr %.sroa.gep2, ptr %480
  br label %.cont.i397

.cont.i397:                                       ; preds = %select.end559, %.critedge69
  %lsr.iv474 = phi i64 [ %lsr.iv.next475, %select.end559 ], [ 248, %.critedge69 ]
  %lsr.iv471 = phi i64 [ %lsr.iv.next472, %select.end559 ], [ 8, %.critedge69 ]
  %.37.i381 = phi ptr [ %.3..i392, %select.end559 ], [ %.0..i379, %.critedge69 ]
  %.3646.i382 = phi ptr [ %..364.i391, %select.end559 ], [ %..061.i380, %.critedge69 ]
  %.0684.i384 = phi ptr [ %.169.i395, %select.end559 ], [ %479, %.critedge69 ]
  %.0703.i385 = phi ptr [ %.171.i394, %select.end559 ], [ %481, %.critedge69 ]
  %.37.i381.sroa.phi = phi ptr [ %.3..i392.sroa.sel, %select.end559 ], [ %.0..i379.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel, %select.end559 ], [ %.0..i379.sroa.sel.sroa.sel, %.critedge69 ]
  %.37.i381.sroa.phi.sroa.phi.sroa.phi = phi ptr [ %.3..i392.sroa.sel.sroa.sel.sroa.gep, %select.end559 ], [ %.0..i379.sroa.sel.sroa.sel.sroa.sel, %.critedge69 ]
  %687 = load ptr, ptr %.37.i381, align 8
  %688 = load ptr, ptr %.3646.i382, align 8
  %689 = call i8 %2(ptr align 1 %3, ptr align 1 %687, ptr align 1 %688) #15
  %.sroa.speculated.i390.frozen = freeze i8 %689
  %.not76.i389 = icmp eq i8 %.sroa.speculated.i390.frozen, 1
  br i1 %.not76.i389, label %select.end, label %select.false

select.false:                                     ; preds = %.cont.i397
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont.i397
  %.sroa.speculated.i390 = phi ptr [ %.3646.i382, %.cont.i397 ], [ %.37.i381, %select.false ]
  %..364.i391.idx.frozen = freeze i8 %689
  %690 = icmp eq i8 %..364.i391.idx.frozen, 1
  %691 = load i64, ptr %.sroa.speculated.i390, align 8
  %sunkaddr657 = getelementptr i8, ptr %.5115, i64 %lsr.iv471
  store i64 %691, ptr %sunkaddr657, align 8
  br i1 %690, label %select.end550, label %select.false551

select.false551:                                  ; preds = %select.end
  br label %select.end550

select.end550:                                    ; preds = %select.false551, %select.end
  %..364.i391.idx = phi i64 [ 8, %select.end ], [ 0, %select.false551 ]
  %.3..i392.frozen = freeze i8 %689
  %692 = icmp eq i8 %.3..i392.frozen, 1
  %..364.i391 = getelementptr i8, ptr %.3646.i382, i64 %..364.i391.idx
  br i1 %692, label %select.true.sink, label %select.end552

select.true.sink:                                 ; preds = %select.end550
  %.37.i381.sroa.phi364 = getelementptr inbounds i8, ptr %.37.i381, i64 8
  br label %select.end552

select.end552:                                    ; preds = %select.true.sink, %select.end550
  %.3..i392 = phi ptr [ %.37.i381, %select.true.sink ], [ %.37.i381.sroa.phi, %select.end550 ]
  %.3..i392.sroa.sel = phi ptr [ %.37.i381.sroa.phi364, %select.true.sink ], [ %.37.i381.sroa.phi.sroa.phi, %select.end550 ]
  %.3..i392.sroa.sel.sroa.sel.frozen = freeze i8 %689
  %693 = icmp eq i8 %.3..i392.sroa.sel.sroa.sel.frozen, 1
  br i1 %693, label %select.true.sink554, label %select.end553

select.true.sink554:                              ; preds = %select.end552
  %.37.i381.sroa.phi364.sroa.gep = getelementptr inbounds i8, ptr %.37.i381, i64 16
  br label %select.end553

select.end553:                                    ; preds = %select.true.sink554, %select.end552
  %.3..i392.sroa.sel.sroa.sel = phi ptr [ %.37.i381.sroa.phi364.sroa.gep, %select.true.sink554 ], [ %.37.i381.sroa.phi.sroa.phi.sroa.phi, %select.end552 ]
  %.3..i392.sroa.sel.sroa.sel.sroa.gep = getelementptr inbounds i8, ptr %.3..i392.sroa.sel.sroa.sel, i64 8
  %694 = load ptr, ptr %.0684.i384, align 8
  %695 = load ptr, ptr %.0703.i385, align 8
  %696 = call i8 %2(ptr align 1 %3, ptr align 1 %694, ptr align 1 %695) #15
  %.sroa.speculated40.i393.frozen = freeze i8 %696
  %697 = icmp eq i8 %.sroa.speculated40.i393.frozen, 1
  br i1 %697, label %select.end555, label %select.false556

select.false556:                                  ; preds = %select.end553
  br label %select.end555

select.end555:                                    ; preds = %select.false556, %select.end553
  %.sroa.speculated40.i393 = phi ptr [ %.0684.i384, %select.end553 ], [ %.0703.i385, %select.false556 ]
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v.frozen = freeze i8 %696
  %698 = icmp eq i8 %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v.frozen, 1
  %699 = load i64, ptr %.sroa.speculated40.i393, align 8
  %sunkaddr658 = getelementptr i8, ptr %.5115, i64 %lsr.iv474
  store i64 %699, ptr %sunkaddr658, align 8
  br i1 %698, label %select.end557, label %select.false558

select.false558:                                  ; preds = %select.end555
  br label %select.end557

select.end557:                                    ; preds = %select.false558, %select.end555
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v = phi ptr [ %.0684.i384, %select.end555 ], [ %.0703.i385, %select.false558 ]
  %.171.i394.frozen = freeze i8 %696
  %700 = icmp eq i8 %.171.i394.frozen, 1
  %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 -8
  br i1 %700, label %select.end559, label %select.false560

select.false560:                                  ; preds = %select.end557
  br label %select.end559

select.end559:                                    ; preds = %select.false560, %select.end557
  %.171.i394 = phi ptr [ %.0703.i385, %select.end557 ], [ %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, %select.false560 ]
  %.169.i395 = phi ptr [ %.sroa.speculated40.i393.sroa.sel.v.sroa.sel.v.sroa.sel, %select.end557 ], [ %.0684.i384, %select.false560 ]
  %lsr.iv.next472 = add nuw nsw i64 %lsr.iv471, 8
  %lsr.iv.next475 = add nsw i64 %lsr.iv474, -8
  %exitcond.not.i396 = icmp eq i64 %lsr.iv.next475, 128
  br i1 %exitcond.not.i396, label %sort.parity_merge__anon_16505.exit399, label %.cont.i397

sort.parity_merge__anon_16505.exit399:            ; preds = %select.end559
  %701 = load ptr, ptr %.169.i395, align 8
  %702 = load ptr, ptr %.171.i394, align 8
  %703 = call i8 %2(ptr align 1 %3, ptr align 1 %701, ptr align 1 %702) #15
  %704 = icmp eq i8 %703, 1
  %.sroa.speculated46.i398 = select i1 %704, ptr %.169.i395, ptr %.171.i394
  %705 = load i64, ptr %.sroa.speculated46.i398, align 8
  %uglygep476 = getelementptr i8, ptr %.5115, i64 %lsr.iv.next475
  store i64 %705, ptr %uglygep476, align 8
  br label %491

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  %706 = shl nuw nsw i64 %489, 3
  %707 = getelementptr inbounds i8, ptr %.5.lcssa, i64 %706
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ 8, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %708 = ptrtoint ptr %.5.lcssa to i64
  %709 = ptrtoint ptr %707 to i64
  %710 = shl nuw nsw i64 %.06.i, 3
  %711 = add nuw i64 %710, %708
  %712 = icmp ult i64 %711, %709
  br i1 %712, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw nsw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %713 = ptrtoint ptr %.5.lcssa to i64
  %714 = shl nuw nsw i64 %.06.i, 4
  %715 = shl nuw nsw i64 %.06.i, 1
  %716 = add i64 %713, %714
  %717 = add i64 %713, %710
  br label %721

.loopexit.i:                                      ; preds = %729, %725, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %715, %729 ], [ %715, %725 ]
  %718 = icmp ult i64 %.pre-phi.i, %489
  %719 = icmp ult i64 %.pre-phi.i, 33
  %720 = and i1 %718, %719
  br i1 %720, label %.preheader.i, label %common.ret

721:                                              ; preds = %725, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %725 ], [ 0, %.lr.ph.i ]
  %722 = ptrtoint ptr %707 to i64
  %uglygep470 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  %723 = add i64 %716, %lsr.iv
  %724 = icmp ult i64 %723, %722
  br i1 %724, label %725, label %729

725:                                              ; preds = %721
  %726 = ptrtoint ptr %707 to i64
  call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep470, i64 %715, ptr nonnull align 1 %5, i64 32, i64 %.06.i, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  %lsr.iv.next = add i64 %lsr.iv, %714
  %727 = add i64 %717, %lsr.iv.next
  %728 = icmp ult i64 %727, %726
  br i1 %728, label %721, label %.loopexit.i

729:                                              ; preds = %721
  %730 = sub i64 %706, %lsr.iv
  %731 = lshr i64 %730, 3
  %uglygep469 = getelementptr i8, ptr %.5.lcssa, i64 %lsr.iv
  call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep469, i64 %731, ptr nonnull align 1 %5, i64 32, i64 %.06.i, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  br label %.loopexit.i
}

; Function Attrs: nounwind uwtable
define private fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds i8, ptr %0, i64 %7
  %9 = icmp ugt i64 %1, 127
  %10 = icmp ugt i64 %3, 127
  %11 = select i1 %9, i1 %10, i1 false
  br i1 %11, label %.preheader.lr.ph, label %._crit_edge

.preheader.lr.ph:                                 ; preds = %6
  %uglygep18 = getelementptr i8, ptr %0, i64 -8
  %uglygep27 = getelementptr i8, ptr %0, i64 -8
  br label %.preheader

.preheader:                                       ; preds = %sort.tail_merge__anon_16509.exit25, %.preheader.lr.ph
  %.08 = phi i64 [ 128, %.preheader.lr.ph ], [ %17, %sort.tail_merge__anon_16509.exit25 ]
  %12 = ptrtoint ptr %0 to i64
  %13 = lshr exact i64 %.08, 2
  %14 = lshr exact i64 %.08, 1
  %15 = shl nuw i64 %.08, 1
  %16 = shl i64 %.08, 3
  %17 = shl i64 %.08, 2
  %18 = getelementptr inbounds i8, ptr %2, i64 %17
  %uglygep19 = getelementptr i8, ptr %uglygep18, i64 %15
  %uglygep23 = getelementptr i8, ptr %0, i64 %17
  %19 = add i64 %12, %16
  %20 = mul i64 %.08, 6
  %uglygep28 = getelementptr i8, ptr %uglygep27, i64 %20
  br label %50

._crit_edge:                                      ; preds = %sort.tail_merge__anon_16509.exit25, %6
  %.0.lcssa = phi i64 [ 128, %6 ], [ %17, %sort.tail_merge__anon_16509.exit25 ]
  %21 = lshr exact i64 %.0.lcssa, 2
  %22 = icmp ult i64 %21, %1
  %23 = icmp ule i64 %21, %3
  %24 = select i1 %22, i1 %23, i1 false
  br i1 %24, label %.preheader.lr.ph.i, label %sort.tail_merge__anon_16509.exit

.preheader.lr.ph.i:                               ; preds = %._crit_edge
  br label %.preheader.i

.preheader.i:                                     ; preds = %.loopexit.i, %.preheader.lr.ph.i
  %.06.i = phi i64 [ %21, %.preheader.lr.ph.i ], [ %.pre-phi.i, %.loopexit.i ]
  %25 = ptrtoint ptr %0 to i64
  %26 = ptrtoint ptr %8 to i64
  %27 = shl nuw i64 %.06.i, 3
  %28 = add nuw i64 %27, %25
  %29 = icmp ult i64 %28, %26
  br i1 %29, label %.lr.ph.i, label %.preheader..loopexit_crit_edge.i

.preheader..loopexit_crit_edge.i:                 ; preds = %.preheader.i
  %.pre.i = shl nuw i64 %.06.i, 1
  br label %.loopexit.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %30 = ptrtoint ptr %0 to i64
  %31 = shl nuw i64 %.06.i, 4
  %32 = shl nuw i64 %.06.i, 1
  %33 = add i64 %30, %31
  %34 = add i64 %30, %27
  br label %38

.loopexit.i:                                      ; preds = %46, %42, %.preheader..loopexit_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre.i, %.preheader..loopexit_crit_edge.i ], [ %32, %46 ], [ %32, %42 ]
  %35 = icmp ult i64 %.pre-phi.i, %1
  %36 = icmp ule i64 %.pre-phi.i, %3
  %37 = select i1 %35, i1 %36, i1 false
  br i1 %37, label %.preheader.i, label %sort.tail_merge__anon_16509.exit

38:                                               ; preds = %42, %.lr.ph.i
  %lsr.iv = phi i64 [ %lsr.iv.next, %42 ], [ 0, %.lr.ph.i ]
  %39 = ptrtoint ptr %8 to i64
  %uglygep13 = getelementptr i8, ptr %0, i64 %lsr.iv
  %40 = add i64 %33, %lsr.iv
  %41 = icmp ult i64 %40, %39
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = ptrtoint ptr %8 to i64
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep13, i64 %32, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  %lsr.iv.next = add i64 %lsr.iv, %31
  %44 = add i64 %34, %lsr.iv.next
  %45 = icmp ult i64 %44, %43
  br i1 %45, label %38, label %.loopexit.i

46:                                               ; preds = %38
  %47 = sub i64 %7, %lsr.iv
  %48 = lshr i64 %47, 3
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep, i64 %48, ptr nonnull align 1 %2, i64 %3, i64 %.06.i, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  br label %.loopexit.i

sort.tail_merge__anon_16509.exit:                 ; preds = %.loopexit.i, %._crit_edge
  %49 = lshr exact i64 %.0.lcssa, 1
  ret i64 %49

50:                                               ; preds = %sort.quad_merge_block__anon_16510.exit, %.preheader
  %lsr.iv36 = phi i64 [ %12, %.preheader ], [ %lsr.iv.next37, %sort.quad_merge_block__anon_16510.exit ]
  %lsr.iv32 = phi i64 [ %7, %.preheader ], [ %lsr.iv.next33, %sort.quad_merge_block__anon_16510.exit ]
  %lsr.iv14 = phi i64 [ 0, %.preheader ], [ %lsr.iv.next15, %sort.quad_merge_block__anon_16510.exit ]
  %uglygep16 = getelementptr i8, ptr %0, i64 %lsr.iv14
  %uglygep21 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv14
  %uglygep22 = getelementptr i8, ptr %uglygep21, i64 8
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %uglygep30 = getelementptr i8, ptr %uglygep28, i64 %lsr.iv14
  %uglygep31 = getelementptr i8, ptr %uglygep30, i64 8
  %uglygep20 = getelementptr i8, ptr %uglygep19, i64 %lsr.iv14
  %51 = load ptr, ptr %uglygep20, align 8
  %52 = load ptr, ptr %uglygep22, align 8
  %53 = tail call i8 %4(ptr align 1 %5, ptr align 1 %51, ptr align 1 %52) #15
  %54 = icmp ne i8 %53, 1
  %55 = zext i1 %54 to i2
  %uglygep29 = getelementptr i8, ptr %uglygep28, i64 %lsr.iv14
  %56 = load ptr, ptr %uglygep29, align 8
  %57 = load ptr, ptr %uglygep31, align 8
  %58 = tail call i8 %4(ptr align 1 %5, ptr align 1 %56, ptr align 1 %57) #15
  %.not.i = icmp eq i8 %58, 1
  %59 = select i1 %.not.i, i2 0, i2 -2
  %60 = or i2 %59, %55
  %61 = zext i2 %60 to i32
  switch i32 %61, label %63 [
    i32 0, label %64
    i32 1, label %65
    i32 2, label %66
    i32 3, label %67
  ]

62:                                               ; preds = %71, %66, %65, %64
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %uglygep16, ptr nonnull align 1 %2, i64 %14, i64 %14, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  br label %sort.quad_merge_block__anon_16510.exit

63:                                               ; preds = %50
  unreachable

64:                                               ; preds = %50
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %13, i64 %13, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %18, ptr nonnull align 1 %uglygep24, i64 %13, i64 %13, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  br label %62

65:                                               ; preds = %50
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %17, i1 false)
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %18, ptr nonnull align 1 %uglygep24, i64 %13, i64 %13, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  br label %62

66:                                               ; preds = %50
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %2, ptr nonnull align 1 %uglygep16, i64 %13, i64 %13, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %18, ptr noundef nonnull align 1 dereferenceable(1) %uglygep24, i64 %17, i1 false)
  br label %62

67:                                               ; preds = %50
  %uglygep25 = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %uglygep26 = getelementptr i8, ptr %uglygep25, i64 -8
  %68 = load ptr, ptr %uglygep26, align 8
  %sunkaddr = getelementptr i8, ptr %uglygep23, i64 %lsr.iv14
  %69 = load ptr, ptr %sunkaddr, align 8
  %70 = tail call i8 %4(ptr align 1 %5, ptr align 1 %68, ptr align 1 %69) #15
  %.not6.i = icmp eq i8 %70, 1
  br i1 %.not6.i, label %71, label %sort.quad_merge_block__anon_16510.exit

71:                                               ; preds = %67
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %2, ptr noundef nonnull align 1 dereferenceable(1) %uglygep16, i64 %16, i1 false)
  br label %62

sort.quad_merge_block__anon_16510.exit:           ; preds = %67, %62
  %72 = ptrtoint ptr %8 to i64
  %lsr.iv.next15 = add i64 %lsr.iv14, %16
  %73 = add i64 %19, %lsr.iv.next15
  %lsr.iv.next33 = sub i64 %lsr.iv32, %16
  %74 = icmp ugt i64 %73, %72
  %lsr.iv.next37 = add i64 %lsr.iv36, %16
  br i1 %74, label %75, label %50

75:                                               ; preds = %sort.quad_merge_block__anon_16510.exit
  %76 = sub i64 %7, %lsr.iv.next15
  %77 = lshr i64 %76, 3
  %78 = icmp ult i64 %13, %77
  %79 = icmp ule i64 %13, %3
  %80 = select i1 %78, i1 %79, i1 false
  br i1 %80, label %.preheader.lr.ph.i16, label %sort.tail_merge__anon_16509.exit25

.preheader.lr.ph.i16:                             ; preds = %75
  %81 = ptrtoint ptr %0 to i64
  %82 = lshr i64 %lsr.iv.next33, 3
  %83 = shl nuw i64 %82, 3
  %uglygep34 = getelementptr i8, ptr %0, i64 %83
  %uglygep35 = getelementptr i8, ptr %uglygep34, i64 %lsr.iv.next15
  %84 = lshr i64 %lsr.iv.next33, 3
  %85 = shl nuw i64 %84, 3
  %86 = add i64 %81, %85
  %87 = add i64 %86, %lsr.iv.next15
  %88 = add i64 %81, %lsr.iv.next15
  %uglygep40 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  %uglygep42 = getelementptr i8, ptr %0, i64 %lsr.iv.next15
  %89 = lshr i64 %lsr.iv.next33, 3
  %90 = shl nuw i64 %89, 3
  br label %.preheader.i18

.preheader.i18:                                   ; preds = %.loopexit.i23, %.preheader.lr.ph.i16
  %.06.i17 = phi i64 [ %13, %.preheader.lr.ph.i16 ], [ %.pre-phi.i22, %.loopexit.i23 ]
  %91 = ptrtoint ptr %uglygep35 to i64
  %92 = shl nuw i64 %.06.i17, 3
  %93 = add i64 %88, %92
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %.lr.ph.i21, label %.preheader..loopexit_crit_edge.i20

.preheader..loopexit_crit_edge.i20:               ; preds = %.preheader.i18
  %.pre.i19 = shl nuw i64 %.06.i17, 1
  br label %.loopexit.i23

.lr.ph.i21:                                       ; preds = %.preheader.i18
  %95 = ptrtoint ptr %0 to i64
  %96 = shl nuw i64 %.06.i17, 4
  %97 = shl nuw i64 %.06.i17, 1
  %98 = add i64 %lsr.iv.next37, %96
  %99 = add i64 %95, %92
  %100 = add i64 %lsr.iv.next15, %99
  br label %104

.loopexit.i23:                                    ; preds = %111, %108, %.preheader..loopexit_crit_edge.i20
  %.pre-phi.i22 = phi i64 [ %.pre.i19, %.preheader..loopexit_crit_edge.i20 ], [ %97, %111 ], [ %97, %108 ]
  %101 = icmp ult i64 %.pre-phi.i22, %77
  %102 = icmp ule i64 %.pre-phi.i22, %3
  %103 = select i1 %101, i1 %102, i1 false
  br i1 %103, label %.preheader.i18, label %sort.tail_merge__anon_16509.exit25

104:                                              ; preds = %108, %.lr.ph.i21
  %lsr.iv38 = phi i64 [ %lsr.iv.next39, %108 ], [ 0, %.lr.ph.i21 ]
  %105 = ptrtoint ptr %uglygep35 to i64
  %uglygep43 = getelementptr i8, ptr %uglygep42, i64 %lsr.iv38
  %106 = add i64 %98, %lsr.iv38
  %107 = icmp ult i64 %106, %105
  br i1 %107, label %108, label %111

108:                                              ; preds = %104
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep43, i64 %97, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  %lsr.iv.next39 = add i64 %lsr.iv38, %96
  %109 = add i64 %100, %lsr.iv.next39
  %110 = icmp ult i64 %109, %87
  br i1 %110, label %104, label %.loopexit.i23

111:                                              ; preds = %104
  %112 = sub i64 %90, %lsr.iv38
  %113 = lshr i64 %112, 3
  %uglygep41 = getelementptr i8, ptr %uglygep40, i64 %lsr.iv38
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %uglygep41, i64 %113, ptr nonnull align 1 %2, i64 %3, i64 %.06.i17, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  br label %.loopexit.i23

sort.tail_merge__anon_16509.exit25:               ; preds = %.loopexit.i23, %75
  %114 = icmp ule i64 %17, %1
  %115 = icmp ule i64 %17, %3
  %116 = select i1 %114, i1 %115, i1 false
  br i1 %116, label %.preheader, label %._crit_edge
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = shl i64 %1, 3
  %9 = getelementptr inbounds i8, ptr %0, i64 %8
  %10 = shl nuw i64 %4, 1
  %11 = icmp uge i64 %10, %1
  %12 = sub i64 %1, %4
  %13 = icmp ule i64 %12, %3
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %16, label %.preheader1

.preheader1:                                      ; preds = %7
  %15 = icmp ugt i64 %1, %4
  br i1 %15, label %.preheader.lr.ph, label %common.ret

.preheader.lr.ph:                                 ; preds = %.preheader1
  br label %.preheader

common.ret:                                       ; preds = %.loopexit, %.preheader1
  ret void

16:                                               ; preds = %7
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.0177 = phi i64 [ %4, %.preheader.lr.ph ], [ %26, %.loopexit ]
  %17 = ptrtoint ptr %0 to i64
  %18 = ptrtoint ptr %9 to i64
  %19 = shl nuw i64 %.0177, 3
  %20 = add nuw i64 %19, %17
  %21 = icmp ult i64 %20, %18
  br i1 %21, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.preheader
  %22 = ptrtoint ptr %0 to i64
  %23 = shl nuw i64 %.0177, 4
  %24 = add i64 %22, %23
  %25 = add i64 %22, %19
  br label %28

.loopexit:                                        ; preds = %36, %32, %.preheader
  %26 = shl nuw i64 %.0177, 1
  %27 = icmp ult i64 %26, %1
  br i1 %27, label %.preheader, label %common.ret

28:                                               ; preds = %32, %.lr.ph
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %32 ]
  %29 = ptrtoint ptr %9 to i64
  %uglygep4 = getelementptr i8, ptr %0, i64 %lsr.iv
  %30 = add i64 %24, %lsr.iv
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = ptrtoint ptr %9 to i64
  tail call fastcc void @sort.rotate_merge_block__anon_16512(ptr nonnull align 1 %uglygep4, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %.0177, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  %lsr.iv.next = add i64 %lsr.iv, %23
  %34 = add i64 %25, %lsr.iv.next
  %35 = icmp ult i64 %34, %33
  br i1 %35, label %28, label %.loopexit

36:                                               ; preds = %28
  %37 = sub i64 %8, %lsr.iv
  %38 = lshr i64 %37, 3
  %39 = sub nuw i64 %38, %.0177
  %uglygep = getelementptr i8, ptr %0, i64 %lsr.iv
  tail call fastcc void @sort.rotate_merge_block__anon_16512(ptr nonnull align 1 %uglygep, ptr nonnull align 1 %2, i64 %3, i64 %.0177, i64 %39, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %.loopexit
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quadsort_stack_swap__anon_14852(ptr nonnull align 1 %0, i64 %1, ptr nonnull readonly align 4 %2, ptr align 1 %3) unnamed_addr #4 {
  %5 = alloca [49152 x i8], align 16
  %6 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, i64 512, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %5, i64 512, i64 %6, ptr nonnull readonly align 4 %2, ptr align 1 %3)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = alloca i64, align 8
  %12 = sub i64 0, %7
  %13 = ptrtoint ptr %11 to i64
  %14 = lshr i64 %13, 4
  br label %15

15:                                               ; preds = %sort.quadsort_swap__anon_14855.exit61, %10
  %.053 = phi i64 [ 0, %10 ], [ %145, %sort.quadsort_swap__anon_14855.exit61 ]
  %.052 = phi i64 [ %4, %10 ], [ %145, %sort.quadsort_swap__anon_14855.exit61 ]
  %.051 = phi ptr [ %2, %10 ], [ %0, %sort.quadsort_swap__anon_14855.exit61 ]
  %.0 = phi ptr [ %3, %10 ], [ %16, %sort.quadsort_swap__anon_14855.exit61 ]
  %16 = getelementptr inbounds i8, ptr %.0, i64 %12
  %17 = icmp ult i64 %.052, 2049
  br i1 %17, label %19, label %20

18:                                               ; preds = %sort.median_of_cube_root__anon_16514.exit, %19
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %84

19:                                               ; preds = %15
  call fastcc void @sort.median_of_nine__anon_16513(ptr nonnull align 1 %.051, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9, ptr nonnull align 1 %16)
  br label %18

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  br label %21

21:                                               ; preds = %21, %20
  %.0.i = phi i64 [ 32, %20 ], [ %25, %21 ]
  %22 = mul nuw i64 %.0.i, %.0.i
  %23 = mul nuw i64 %22, %.0.i
  %24 = icmp ult i64 %23, %.052
  %25 = shl nuw i64 %.0.i, 1
  br i1 %24, label %21, label %26

26:                                               ; preds = %21
  %27 = udiv i64 %.052, %.0.i
  store i64 %27, ptr %11, align 8
  %28 = urem i64 %14, %27
  %29 = mul nuw i64 %28, %7
  %30 = getelementptr inbounds i8, ptr %.051, i64 %29
  %31 = icmp eq ptr %.051, %0
  %..i = select i1 %31, ptr %1, ptr %0
  %32 = mul nuw i64 %27, %7
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %33

33:                                               ; preds = %33, %26
  %lsr.iv202 = phi ptr [ %uglygep, %33 ], [ %..i, %26 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %33 ], [ %umax.i, %26 ]
  %.03136.i = phi ptr [ %30, %26 ], [ %34, %33 ]
  call void %8(ptr nonnull align 1 %lsr.iv202, ptr align 1 %.03136.i) #15
  %34 = getelementptr inbounds i8, ptr %.03136.i, i64 %32
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep = getelementptr i8, ptr %lsr.iv202, i64 %7
  %exitcond.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not.i, label %35, label %33

35:                                               ; preds = %33
  %36 = lshr exact i64 %.0.i, 1
  %37 = mul nuw i64 %.0.i, %7
  %38 = getelementptr inbounds i8, ptr %..i, i64 %37
  %39 = icmp ult i64 %.0.i, 192
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %..i, i64 %36, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %41, label %42, label %47

42:                                               ; preds = %40
  %43 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %..i, i64 %36, ptr nonnull align 1 %38, i64 %36, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %..i, i64 %36, ptr nonnull align 1 %38, i64 %36, i64 %43, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %47

44:                                               ; preds = %35
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %..i, i64 %36, ptr nonnull align 1 %38, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  %45 = mul nuw i64 %36, %7
  %46 = getelementptr inbounds i8, ptr %..i, i64 %45
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %46, i64 %36, ptr nonnull align 1 %38, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit34.i

47:                                               ; preds = %42, %40
  %48 = mul nuw i64 %36, %7
  %49 = getelementptr inbounds i8, ptr %..i, i64 %48
  %50 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %49, i64 %36, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %50, label %51, label %sort.quadsort_swap__anon_14855.exit34.i

51:                                               ; preds = %47
  %52 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %49, i64 %36, ptr nonnull align 1 %38, i64 %36, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %49, i64 %36, ptr nonnull align 1 %38, i64 %36, i64 %52, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit34.i

sort.quadsort_swap__anon_14855.exit34.i:          ; preds = %51, %47, %44
  %53 = phi ptr [ %46, %44 ], [ %49, %47 ], [ %49, %51 ]
  %54 = add i64 %.0.i, -1
  %55 = mul nuw i64 %54, %7
  %56 = getelementptr inbounds i8, ptr %..i, i64 %55
  call void %9(ptr align 1 %6, i64 1) #15
  %57 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %56, ptr nonnull align 1 %..i) #15
  %.not.i = icmp eq i8 %57, 1
  br i1 %.not.i, label %58, label %64

58:                                               ; preds = %64, %sort.quadsort_swap__anon_14855.exit34.i
  %59 = phi i1 [ %69, %64 ], [ false, %sort.quadsort_swap__anon_14855.exit34.i ]
  %60 = call i64 @llvm.ctlz.i64(i64 %36, i1 true), !range !368
  %61 = sub nuw nsw i64 64, %60
  call void %9(ptr align 1 %6, i64 %61) #15
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %58
  %.0.in21.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %36, %58 ]
  %.01420.i.i = phi ptr [ %.1.i.i, %.lr.ph.i.i ], [ %..i, %58 ]
  %.01519.i.i = phi ptr [ %.116.i.i, %.lr.ph.i.i ], [ %53, %58 ]
  %.0.i.i = lshr i64 %.0.in21.i.i, 1
  %62 = call i8 %5(ptr align 1 %6, ptr align 1 %.01420.i.i, ptr align 1 %.01519.i.i) #15
  %.not17.i.i = icmp eq i8 %62, 1
  %63 = mul nuw i64 %.0.i.i, %7
  %.116.idx.i.i = select i1 %.not17.i.i, i64 %63, i64 0
  %.116.i.i = getelementptr i8, ptr %.01519.i.i, i64 %.116.idx.i.i
  %.1.idx.i.i = select i1 %.not17.i.i, i64 0, i64 %63
  %.1.i.i = getelementptr i8, ptr %.01420.i.i, i64 %.1.idx.i.i
  %.not.i.i = icmp ult i64 %.0.in21.i.i, 4
  br i1 %.not.i.i, label %sort.median_of_cube_root__anon_16514.exit, label %.lr.ph.i.i

64:                                               ; preds = %sort.quadsort_swap__anon_14855.exit34.i
  %65 = add nsw i64 %36, -1
  %66 = mul nuw i64 %65, %7
  %67 = getelementptr inbounds i8, ptr %..i, i64 %66
  call void %9(ptr align 1 %6, i64 1) #15
  %68 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %67, ptr nonnull align 1 %..i) #15
  %69 = icmp ne i8 %68, 1
  br label %58

sort.median_of_cube_root__anon_16514.exit:        ; preds = %.lr.ph.i.i
  %70 = call i8 %5(ptr align 1 %6, ptr align 1 %.1.i.i, ptr align 1 %.116.i.i) #15
  %71 = icmp eq i8 %70, 1
  %72 = select i1 %71, ptr %.1.i.i, ptr %.116.i.i
  call void %8(ptr nonnull align 1 %16, ptr align 1 %72) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  br i1 %59, label %73, label %18

73:                                               ; preds = %sort.median_of_cube_root__anon_16514.exit
  %74 = icmp eq ptr %.051, %1
  br i1 %74, label %82, label %75

common.ret:                                       ; preds = %200, %198, %196, %195, %181, %174, %164, %162, %161, %86, %80, %78, %77
  ret void

75:                                               ; preds = %82, %73
  %76 = icmp ult i64 %.052, 96
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

78:                                               ; preds = %75
  %79 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %79, label %80, label %common.ret

80:                                               ; preds = %78
  %81 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %81, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

82:                                               ; preds = %73
  %83 = mul nuw i64 %.052, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %83, i1 false)
  br label %75

84:                                               ; preds = %18
  call void %9(ptr align 1 %6, i64 1) #15
  %85 = call i8 %5(ptr align 1 %6, ptr align 1 %.0, ptr align 1 %16) #15
  %.not58 = icmp eq i8 %85, 1
  br i1 %.not58, label %.critedge, label %86

86:                                               ; preds = %84
  call fastcc void @sort.flux_reverse_partition__anon_16515(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

.critedge:                                        ; preds = %84, %18
  call void %9(ptr align 1 %6, i64 %.052) #15
  %.not160.i = icmp ult i64 %.052, 8
  br i1 %.not160.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.0165.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.0131164.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.0143163.i = phi ptr [ %uglygep203, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.0145162.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.0147161.i = phi i64 [ %114, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %87 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143163.i, ptr nonnull align 1 %16) #15
  %.not151.i = icmp eq i8 %87, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.0131164.i, ptr %.0165.i
  call void %8(ptr align 1 %.sroa.speculated78.i, ptr align 1 %.0143163.i) #15
  %88 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 %7
  %..0131.i = select i1 %.not151.i, ptr %88, ptr %.0131164.i
  %.0..i = select i1 %.not151.i, ptr %.0165.i, ptr %88
  %89 = getelementptr inbounds i8, ptr %.0143163.i, i64 %7
  %90 = call i8 %5(ptr align 1 %6, ptr align 1 %89, ptr nonnull align 1 %16) #15
  %.not152.i = icmp eq i8 %90, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  call void %8(ptr align 1 %.sroa.speculated69.i, ptr align 1 %89) #15
  %91 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 %7
  %.2133.i = select i1 %.not152.i, ptr %91, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %91
  %92 = getelementptr inbounds i8, ptr %89, i64 %7
  %93 = call i8 %5(ptr align 1 %6, ptr align 1 %92, ptr nonnull align 1 %16) #15
  %.not153.i = icmp eq i8 %93, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  call void %8(ptr align 1 %.sroa.speculated60.i, ptr align 1 %92) #15
  %94 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 %7
  %.3134.i = select i1 %.not153.i, ptr %94, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %94
  %95 = getelementptr inbounds i8, ptr %92, i64 %7
  %96 = call i8 %5(ptr align 1 %6, ptr align 1 %95, ptr nonnull align 1 %16) #15
  %.not154.i = icmp eq i8 %96, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  call void %8(ptr align 1 %.sroa.speculated51.i, ptr align 1 %95) #15
  %97 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 %7
  %.4135.i = select i1 %.not154.i, ptr %97, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %97
  %98 = getelementptr inbounds i8, ptr %95, i64 %7
  %99 = call i8 %5(ptr align 1 %6, ptr align 1 %98, ptr nonnull align 1 %16) #15
  %.not155.i = icmp eq i8 %99, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  call void %8(ptr align 1 %.sroa.speculated42.i, ptr align 1 %98) #15
  %100 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 %7
  %.5136.i = select i1 %.not155.i, ptr %100, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %100
  %101 = getelementptr inbounds i8, ptr %98, i64 %7
  %102 = call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr nonnull align 1 %16) #15
  %.not156.i = icmp eq i8 %102, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  call void %8(ptr align 1 %.sroa.speculated33.i, ptr align 1 %101) #15
  %103 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 %7
  %.6137.i = select i1 %.not156.i, ptr %103, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %103
  %104 = getelementptr inbounds i8, ptr %101, i64 %7
  %105 = call i8 %5(ptr align 1 %6, ptr align 1 %104, ptr nonnull align 1 %16) #15
  %.not157.i = icmp eq i8 %105, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  call void %8(ptr align 1 %.sroa.speculated24.i, ptr align 1 %104) #15
  %106 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 %7
  %.7138.i = select i1 %.not157.i, ptr %106, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %106
  %107 = getelementptr inbounds i8, ptr %104, i64 %7
  %108 = call i8 %5(ptr align 1 %6, ptr align 1 %107, ptr nonnull align 1 %16) #15
  %.not158.i = icmp eq i8 %108, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  call void %8(ptr align 1 %.sroa.speculated15.i, ptr align 1 %107) #15
  %109 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 %7
  %.8139.i = select i1 %.not158.i, ptr %109, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %109
  %110 = getelementptr inbounds i8, ptr %107, i64 %7
  %111 = icmp eq ptr %.8.i, %0
  %112 = icmp eq ptr %.8139.i, %1
  %113 = select i1 %111, i1 true, i1 %112
  %.1146.i = select i1 %113, i64 %.0147161.i, i64 %.0145162.i
  %114 = add i64 %.0147161.i, 8
  %.not.i59 = icmp ugt i64 %114, %.052
  %uglygep203 = getelementptr i8, ptr %107, i64 %7
  br i1 %.not.i59, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %110, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %115 = and i64 %.052, 7
  %.not175.i = icmp eq i64 %115, 0
  br i1 %.not175.i, label %._crit_edge173.i, label %.cont.i

.cont.i:                                          ; preds = %._crit_edge.i
  %116 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143.lcssa.i, ptr nonnull align 1 %16) #15
  %.not150.i = icmp eq i8 %116, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.0131.lcssa.i, ptr %.0.lcssa.i
  call void %8(ptr align 1 %.sroa.speculated.i, ptr align 1 %.0143.lcssa.i) #15
  %117 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %7
  %.9..i = select i1 %.not150.i, ptr %.0.lcssa.i, ptr %117
  %exitcond.not.i60 = icmp eq i64 %115, 1
  br i1 %exitcond.not.i60, label %._crit_edge173.i, label %.cont.i.1

.cont.i.1:                                        ; preds = %.cont.i
  %118 = icmp eq i8 %116, 1
  %119 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 %7
  %..9140.i = select i1 %118, ptr %117, ptr %.0131.lcssa.i
  %120 = call i8 %5(ptr align 1 %6, ptr align 1 %119, ptr nonnull align 1 %16) #15
  %.not150.i.1 = icmp eq i8 %120, 1
  %.sroa.speculated.i.1 = select i1 %.not150.i.1, ptr %..9140.i, ptr %.9..i
  call void %8(ptr align 1 %.sroa.speculated.i.1, ptr align 1 %119) #15
  %121 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %7
  %.9..i.1 = select i1 %.not150.i.1, ptr %.9..i, ptr %121
  %exitcond.not.i60.1 = icmp eq i64 %115, 2
  br i1 %exitcond.not.i60.1, label %._crit_edge173.i, label %.cont.i.2

.cont.i.2:                                        ; preds = %.cont.i.1
  %122 = icmp eq i8 %120, 1
  %123 = getelementptr inbounds i8, ptr %119, i64 %7
  %..9140.i.1 = select i1 %122, ptr %121, ptr %..9140.i
  %124 = call i8 %5(ptr align 1 %6, ptr align 1 %123, ptr nonnull align 1 %16) #15
  %.not150.i.2 = icmp eq i8 %124, 1
  %.sroa.speculated.i.2 = select i1 %.not150.i.2, ptr %..9140.i.1, ptr %.9..i.1
  call void %8(ptr align 1 %.sroa.speculated.i.2, ptr align 1 %123) #15
  %125 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %7
  %.9..i.2 = select i1 %.not150.i.2, ptr %.9..i.1, ptr %125
  %exitcond.not.i60.2 = icmp eq i64 %115, 3
  br i1 %exitcond.not.i60.2, label %._crit_edge173.i, label %.cont.i.3

.cont.i.3:                                        ; preds = %.cont.i.2
  %126 = icmp eq i8 %124, 1
  %127 = getelementptr inbounds i8, ptr %123, i64 %7
  %..9140.i.2 = select i1 %126, ptr %125, ptr %..9140.i.1
  %128 = call i8 %5(ptr align 1 %6, ptr align 1 %127, ptr nonnull align 1 %16) #15
  %.not150.i.3 = icmp eq i8 %128, 1
  %.sroa.speculated.i.3 = select i1 %.not150.i.3, ptr %..9140.i.2, ptr %.9..i.2
  call void %8(ptr align 1 %.sroa.speculated.i.3, ptr align 1 %127) #15
  %129 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %7
  %.9..i.3 = select i1 %.not150.i.3, ptr %.9..i.2, ptr %129
  %exitcond.not.i60.3 = icmp eq i64 %115, 4
  br i1 %exitcond.not.i60.3, label %._crit_edge173.i, label %.cont.i.4

.cont.i.4:                                        ; preds = %.cont.i.3
  %130 = icmp eq i8 %128, 1
  %131 = getelementptr inbounds i8, ptr %127, i64 %7
  %..9140.i.3 = select i1 %130, ptr %129, ptr %..9140.i.2
  %132 = call i8 %5(ptr align 1 %6, ptr align 1 %131, ptr nonnull align 1 %16) #15
  %.not150.i.4 = icmp eq i8 %132, 1
  %.sroa.speculated.i.4 = select i1 %.not150.i.4, ptr %..9140.i.3, ptr %.9..i.3
  call void %8(ptr align 1 %.sroa.speculated.i.4, ptr align 1 %131) #15
  %133 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %7
  %.9..i.4 = select i1 %.not150.i.4, ptr %.9..i.3, ptr %133
  %exitcond.not.i60.4 = icmp eq i64 %115, 5
  br i1 %exitcond.not.i60.4, label %._crit_edge173.i, label %.cont.i.5

.cont.i.5:                                        ; preds = %.cont.i.4
  %134 = icmp eq i8 %132, 1
  %135 = getelementptr inbounds i8, ptr %131, i64 %7
  %..9140.i.4 = select i1 %134, ptr %133, ptr %..9140.i.3
  %136 = call i8 %5(ptr align 1 %6, ptr align 1 %135, ptr nonnull align 1 %16) #15
  %.not150.i.5 = icmp eq i8 %136, 1
  %.sroa.speculated.i.5 = select i1 %.not150.i.5, ptr %..9140.i.4, ptr %.9..i.4
  call void %8(ptr align 1 %.sroa.speculated.i.5, ptr align 1 %135) #15
  %137 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %7
  %.9..i.5 = select i1 %.not150.i.5, ptr %.9..i.4, ptr %137
  %exitcond.not.i60.5 = icmp eq i64 %115, 6
  br i1 %exitcond.not.i60.5, label %._crit_edge173.i, label %.cont.i.6

.cont.i.6:                                        ; preds = %.cont.i.5
  %138 = icmp eq i8 %136, 1
  %139 = getelementptr inbounds i8, ptr %135, i64 %7
  %..9140.i.5 = select i1 %138, ptr %137, ptr %..9140.i.4
  %140 = call i8 %5(ptr align 1 %6, ptr align 1 %139, ptr nonnull align 1 %16) #15
  %.not150.i.6 = icmp eq i8 %140, 1
  %.sroa.speculated.i.6 = select i1 %.not150.i.6, ptr %..9140.i.5, ptr %.9..i.5
  call void %8(ptr align 1 %.sroa.speculated.i.6, ptr align 1 %139) #15
  %141 = getelementptr inbounds i8, ptr %.sroa.speculated.i.6, i64 %7
  %.9..i.6 = select i1 %.not150.i.6, ptr %.9..i.5, ptr %141
  br label %._crit_edge173.i

._crit_edge173.i:                                 ; preds = %.cont.i.6, %.cont.i.5, %.cont.i.4, %.cont.i.3, %.cont.i.2, %.cont.i.1, %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ], [ %.9..i.1, %.cont.i.1 ], [ %.9..i.2, %.cont.i.2 ], [ %.9..i.3, %.cont.i.3 ], [ %.9..i.4, %.cont.i.4 ], [ %.9..i.5, %.cont.i.5 ], [ %.9..i.6, %.cont.i.6 ]
  %142 = ptrtoint ptr %0 to i64
  %143 = ptrtoint ptr %.9.lcssa.i to i64
  %144 = sub nuw i64 %143, %142
  %145 = udiv i64 %144, %7
  %146 = lshr i64 %.052, 2
  %147 = icmp ule i64 %.0145.lcssa.i, %146
  %148 = icmp eq i64 %.052, %145
  %or.cond.i = select i1 %147, i1 true, i1 %148
  %149 = sub nuw i64 %.052, %145
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16516.exit, label %150

150:                                              ; preds = %._crit_edge173.i
  %151 = mul nuw i64 %145, %7
  %152 = getelementptr inbounds i8, ptr %0, i64 %151
  %153 = mul nuw i64 %149, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %152, ptr nonnull align 1 %1, i64 %153, i1 false)
  %154 = icmp ult i64 %149, 96
  br i1 %154, label %155, label %156

155:                                              ; preds = %150
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %152, i64 %149, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit.i

156:                                              ; preds = %150
  %157 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %152, i64 %149, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %157, label %158, label %sort.quadsort_swap__anon_14855.exit.i

158:                                              ; preds = %156
  %159 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %152, i64 %149, ptr nonnull align 1 %1, i64 %149, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %152, i64 %149, ptr nonnull align 1 %1, i64 %149, i64 %159, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit.i

sort.quadsort_swap__anon_14855.exit.i:            ; preds = %158, %156, %155
  %160 = icmp ult i64 %145, 96
  br i1 %160, label %161, label %162

161:                                              ; preds = %sort.quadsort_swap__anon_14855.exit.i
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %145, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

162:                                              ; preds = %sort.quadsort_swap__anon_14855.exit.i
  %163 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %145, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %163, label %164, label %common.ret

164:                                              ; preds = %162
  %165 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %145, ptr nonnull align 1 %1, i64 %145, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %145, ptr nonnull align 1 %1, i64 %145, i64 %165, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

sort.flux_default_partition__anon_16516.exit:     ; preds = %._crit_edge173.i
  %166 = lshr i64 %149, 5
  %167 = icmp ule i64 %145, %166
  %168 = icmp ult i64 %149, 97
  %169 = or i1 %168, %167
  br i1 %169, label %174, label %176

sort.quadsort_swap__anon_14855.exit61:            ; preds = %190, %188, %187, %176
  %170 = lshr i64 %145, 5
  %171 = icmp ule i64 %149, %170
  %172 = icmp ult i64 %145, 97
  %173 = or i1 %172, %171
  br i1 %173, label %192, label %15

174:                                              ; preds = %sort.flux_default_partition__anon_16516.exit
  %175 = icmp ult i64 %144, %7
  br i1 %175, label %common.ret, label %179

176:                                              ; preds = %sort.flux_default_partition__anon_16516.exit
  %177 = mul nuw i64 %145, %7
  %178 = getelementptr inbounds i8, ptr %0, i64 %177
  call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %178, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %16, i64 %149, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit61

179:                                              ; preds = %174
  %180 = icmp eq i64 %.052, %145
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  call fastcc void @sort.flux_reverse_partition__anon_16515(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

182:                                              ; preds = %179
  %183 = mul nuw i64 %145, %7
  %184 = getelementptr inbounds i8, ptr %0, i64 %183
  %185 = mul nuw i64 %149, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %184, ptr nonnull align 1 %1, i64 %185, i1 false)
  %186 = icmp ult i64 %149, 96
  br i1 %186, label %187, label %188

187:                                              ; preds = %182
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %184, i64 %149, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit61

188:                                              ; preds = %182
  %189 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %184, i64 %149, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %189, label %190, label %sort.quadsort_swap__anon_14855.exit61

190:                                              ; preds = %188
  %191 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %184, i64 %149, ptr nonnull align 1 %1, i64 %149, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %184, i64 %149, ptr nonnull align 1 %1, i64 %149, i64 %191, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %sort.quadsort_swap__anon_14855.exit61

192:                                              ; preds = %sort.quadsort_swap__anon_14855.exit61
  %193 = icmp ult i64 %145, 97
  br i1 %193, label %194, label %200

194:                                              ; preds = %192
  %.not67 = icmp eq i64 %145, 96
  br i1 %.not67, label %196, label %195

195:                                              ; preds = %194
  call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %145, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

196:                                              ; preds = %194
  %197 = call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 96, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %197, label %198, label %common.ret

198:                                              ; preds = %196
  %199 = call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, i64 %199, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret

200:                                              ; preds = %192
  call fastcc void @sort.flux_reverse_partition__anon_16515(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %16, i64 %145, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = mul nuw i64 %6, %2
  %11 = getelementptr inbounds i8, ptr %1, i64 %10
  %12 = sub i64 0, %6
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = mul nuw i64 %6, %3
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = add nuw i64 %2, 1
  %17 = icmp uge i64 %16, %3
  %18 = add nuw i64 %3, 1
  %19 = icmp uge i64 %18, %2
  %20 = select i1 %17, i1 %19, i1 false
  %21 = icmp ugt i64 %2, 31
  %or.cond = select i1 %20, i1 %21, i1 false
  br i1 %or.cond, label %35, label %.critedge

.critedge:                                        ; preds = %48, %43, %40, %35, %9
  %22 = add i64 %2, -1
  %23 = add i64 %22, %3
  %24 = mul nuw i64 %23, %6
  %25 = getelementptr inbounds i8, ptr %0, i64 %24
  %26 = shl nuw i64 %6, 3
  %27 = mul nuw i64 %6, 7
  %28 = sub i64 0, %27
  %29 = shl nuw i64 %6, 4
  %30 = mul i64 %6, -6
  %31 = mul i64 %6, -5
  %32 = mul i64 %6, -4
  %33 = mul i64 %6, -3
  %34 = mul i64 %6, -2
  br label %.loopexit.outer.outer

35:                                               ; preds = %9
  %36 = mul nuw i64 %6, 15
  %37 = getelementptr inbounds i8, ptr %1, i64 %36
  tail call void %8(ptr align 1 %5, i64 1) #15
  %38 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %37, ptr nonnull align 1 %11) #15
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %.critedge

40:                                               ; preds = %35
  %41 = getelementptr inbounds i8, ptr %11, i64 %36
  tail call void %8(ptr align 1 %5, i64 1) #15
  %42 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %41) #15
  %.not262 = icmp eq i8 %42, 1
  br i1 %.not262, label %.critedge, label %43

43:                                               ; preds = %40
  %44 = sub i64 0, %36
  %45 = getelementptr inbounds i8, ptr %15, i64 %44
  tail call void %8(ptr align 1 %5, i64 1) #15
  %46 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %13, ptr nonnull align 1 %45) #15
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %48, label %.critedge

48:                                               ; preds = %43
  %49 = getelementptr inbounds i8, ptr %13, i64 %44
  tail call void %8(ptr align 1 %5, i64 1) #15
  %50 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %49, ptr nonnull align 1 %15) #15
  %.not263 = icmp eq i8 %50, 1
  br i1 %.not263, label %.critedge, label %51

common.ret:                                       ; preds = %.lr.ph314, %.preheader
  ret void

51:                                               ; preds = %48
  tail call fastcc void @sort.parity_merge__anon_16476(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7, ptr nonnull readonly align 4 %8)
  ret void

.loopexit.outer.outer.loopexit:                   ; preds = %124
  %uglygep499 = getelementptr i8, ptr %.2245, i64 %lsr.iv.next497
  %uglygep516 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv.next497
  br label %.loopexit.outer.outer

.loopexit.outer.outer:                            ; preds = %.cont46, %.loopexit.outer.outer.loopexit, %.critedge
  %.0243.ph.ph = phi ptr [ %25, %.critedge ], [ %180, %.cont46 ], [ %uglygep499, %.loopexit.outer.outer.loopexit ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %176, %.cont46 ], [ %.5239, %.loopexit.outer.outer.loopexit ]
  %.0228.ph.ph = phi ptr [ %15, %.critedge ], [ %.5233.7, %.cont46 ], [ %uglygep516, %.loopexit.outer.outer.loopexit ]
  %.0222.ph.ph = phi ptr [ %13, %.critedge ], [ %.5227.7, %.cont46 ], [ %.2224, %.loopexit.outer.outer.loopexit ]
  %.0213.ph.ph = phi ptr [ %11, %.critedge ], [ %..4217.7, %.cont46 ], [ %.3216, %.loopexit.outer.outer.loopexit ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46 ], [ %.2, %.loopexit.outer.outer.loopexit ]
  br label %.loopexit.outer.outer384

.loopexit.outer.outer384:                         ; preds = %102, %.loopexit.outer.outer
  %.0243.ph.ph385 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %102 ]
  %.0234.ph.ph386 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %118, %102 ]
  %.0222.ph.ph387 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %102 ]
  %.0213.ph.ph388 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %119, %102 ]
  %.0.ph.ph389 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %102 ]
  br label %.loopexit.outer

.loopexit.outer.loopexit:                         ; preds = %91
  %uglygep458 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv.next456
  %uglygep475 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv.next456
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %.loopexit.outer.loopexit, %.loopexit.outer.outer384
  %.0243.ph = phi ptr [ %.0243.ph.ph385, %.loopexit.outer.outer384 ], [ %uglygep458, %.loopexit.outer.loopexit ]
  %.0234.ph = phi ptr [ %.0234.ph.ph386, %.loopexit.outer.outer384 ], [ %.3237, %.loopexit.outer.loopexit ]
  %.0222.ph = phi ptr [ %.0222.ph.ph387, %.loopexit.outer.outer384 ], [ %uglygep475, %.loopexit.outer.loopexit ]
  %.0.ph = phi ptr [ %.0.ph.ph389, %.loopexit.outer.outer384 ], [ %.3, %.loopexit.outer.loopexit ]
  br label %.loopexit

.loopexit:                                        ; preds = %68, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %84, %68 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %85, %68 ]
  %52 = ptrtoint ptr %.0222.ph to i64
  %53 = ptrtoint ptr %.0 to i64
  %54 = sub nsw i64 %52, %53
  %55 = icmp sgt i64 %54, %26
  br i1 %55, label %.preheader274.preheader, label %.loopexit272

.preheader274.preheader:                          ; preds = %.loopexit
  %56 = ptrtoint ptr %.0 to i64
  %57 = ptrtoint ptr %.0222.ph to i64
  %58 = sub i64 %57, %56
  br label %.preheader274

.loopexit272.loopexit:                            ; preds = %88
  %uglygep457 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv455
  %uglygep474 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv455
  br label %.loopexit272

.loopexit272:                                     ; preds = %.loopexit272.loopexit, %.loopexit
  %.2245 = phi ptr [ %uglygep457, %.loopexit272.loopexit ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %.loopexit272.loopexit ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %uglygep474, %.loopexit272.loopexit ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %.loopexit272.loopexit ], [ %.0, %.loopexit ]
  %59 = ptrtoint ptr %.0228.ph.ph to i64
  %60 = ptrtoint ptr %.0213.ph.ph388 to i64
  %61 = sub nsw i64 %59, %60
  %62 = icmp sgt i64 %61, %26
  br i1 %62, label %.preheader269.preheader, label %.loopexit267

.preheader269.preheader:                          ; preds = %.loopexit272
  %63 = ptrtoint ptr %.0213.ph.ph388 to i64
  %64 = ptrtoint ptr %.0228.ph.ph to i64
  %65 = sub i64 %64, %63
  br label %.preheader269

.preheader274:                                    ; preds = %68, %.preheader274.preheader
  %lsr.iv477 = phi i64 [ %58, %.preheader274.preheader ], [ %lsr.iv.next478, %68 ]
  %.3237 = phi ptr [ %84, %68 ], [ %.0234, %.preheader274.preheader ]
  %.3 = phi ptr [ %85, %68 ], [ %.0, %.preheader274.preheader ]
  %66 = getelementptr inbounds i8, ptr %.3, i64 %27
  tail call void %8(ptr align 1 %5, i64 1) #15
  %67 = tail call i8 %4(ptr align 1 %5, ptr align 1 %66, ptr align 1 %.0213.ph.ph388) #15
  %.not259 = icmp eq i8 %67, 1
  br i1 %.not259, label %.preheader271, label %68

.preheader271:                                    ; preds = %.preheader274
  %uglygep460 = getelementptr i8, ptr %.0243.ph, i64 %28
  %uglygep462 = getelementptr i8, ptr %.0243.ph, i64 %30
  %uglygep464 = getelementptr i8, ptr %.0243.ph, i64 %31
  %uglygep466 = getelementptr i8, ptr %.0243.ph, i64 %32
  %uglygep468 = getelementptr i8, ptr %.0243.ph, i64 %33
  %uglygep470 = getelementptr i8, ptr %.0243.ph, i64 %34
  %uglygep472 = getelementptr i8, ptr %.0243.ph, i64 %12
  %uglygep481 = getelementptr i8, ptr %.0222.ph, i64 %28
  %uglygep484 = getelementptr i8, ptr %.0222.ph, i64 %30
  %uglygep486 = getelementptr i8, ptr %.0222.ph, i64 %31
  %uglygep488 = getelementptr i8, ptr %.0222.ph, i64 %32
  %uglygep490 = getelementptr i8, ptr %.0222.ph, i64 %33
  %uglygep492 = getelementptr i8, ptr %.0222.ph, i64 %34
  %uglygep494 = getelementptr i8, ptr %.0222.ph, i64 %12
  br label %88

68:                                               ; preds = %.preheader274
  %69 = ptrtoint ptr %.0222.ph to i64
  tail call void %7(ptr align 1 %.3237, ptr align 1 %.3) #15
  %70 = getelementptr inbounds i8, ptr %.3237, i64 %6
  %71 = getelementptr inbounds i8, ptr %.3, i64 %6
  tail call void %7(ptr align 1 %70, ptr align 1 %71) #15
  %72 = getelementptr inbounds i8, ptr %70, i64 %6
  %73 = getelementptr inbounds i8, ptr %71, i64 %6
  tail call void %7(ptr align 1 %72, ptr align 1 %73) #15
  %74 = getelementptr inbounds i8, ptr %72, i64 %6
  %75 = getelementptr inbounds i8, ptr %73, i64 %6
  tail call void %7(ptr align 1 %74, ptr align 1 %75) #15
  %76 = getelementptr inbounds i8, ptr %74, i64 %6
  %77 = getelementptr inbounds i8, ptr %75, i64 %6
  tail call void %7(ptr align 1 %76, ptr align 1 %77) #15
  %78 = getelementptr inbounds i8, ptr %76, i64 %6
  %79 = getelementptr inbounds i8, ptr %77, i64 %6
  tail call void %7(ptr align 1 %78, ptr align 1 %79) #15
  %80 = getelementptr inbounds i8, ptr %78, i64 %6
  %81 = getelementptr inbounds i8, ptr %79, i64 %6
  tail call void %7(ptr align 1 %80, ptr align 1 %81) #15
  %82 = getelementptr inbounds i8, ptr %80, i64 %6
  %83 = getelementptr inbounds i8, ptr %81, i64 %6
  tail call void %7(ptr align 1 %82, ptr align 1 %83) #15
  %84 = getelementptr inbounds i8, ptr %82, i64 %6
  %85 = getelementptr inbounds i8, ptr %83, i64 %6
  %86 = ptrtoint ptr %85 to i64
  %87 = sub nuw i64 %69, %86
  %.not261 = icmp ugt i64 %87, %26
  %lsr.iv.next478 = sub i64 %lsr.iv477, %26
  br i1 %.not261, label %.preheader274, label %.loopexit

88:                                               ; preds = %91, %.preheader271
  %lsr.iv479 = phi i64 [ %lsr.iv477, %.preheader271 ], [ %lsr.iv.next480, %91 ]
  %lsr.iv455 = phi i64 [ 0, %.preheader271 ], [ %lsr.iv.next456, %91 ]
  %uglygep459 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv455
  %uglygep476 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv455
  %uglygep483 = getelementptr i8, ptr %uglygep481, i64 %lsr.iv455
  tail call void %8(ptr align 1 %5, i64 1) #15
  %89 = tail call i8 %4(ptr align 1 %5, ptr align 1 %uglygep483, ptr align 1 %.0228.ph.ph) #15
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %.loopexit272.loopexit

91:                                               ; preds = %88
  tail call void %7(ptr align 1 %uglygep459, ptr align 1 %uglygep476) #15
  %uglygep473 = getelementptr i8, ptr %uglygep472, i64 %lsr.iv455
  %uglygep495 = getelementptr i8, ptr %uglygep494, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep473, ptr align 1 %uglygep495) #15
  %uglygep471 = getelementptr i8, ptr %uglygep470, i64 %lsr.iv455
  %uglygep493 = getelementptr i8, ptr %uglygep492, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep471, ptr align 1 %uglygep493) #15
  %uglygep469 = getelementptr i8, ptr %uglygep468, i64 %lsr.iv455
  %uglygep491 = getelementptr i8, ptr %uglygep490, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep469, ptr align 1 %uglygep491) #15
  %uglygep467 = getelementptr i8, ptr %uglygep466, i64 %lsr.iv455
  %uglygep489 = getelementptr i8, ptr %uglygep488, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep467, ptr align 1 %uglygep489) #15
  %uglygep465 = getelementptr i8, ptr %uglygep464, i64 %lsr.iv455
  %uglygep487 = getelementptr i8, ptr %uglygep486, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep465, ptr align 1 %uglygep487) #15
  %uglygep463 = getelementptr i8, ptr %uglygep462, i64 %lsr.iv455
  %uglygep485 = getelementptr i8, ptr %uglygep484, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep463, ptr align 1 %uglygep485) #15
  %uglygep461 = getelementptr i8, ptr %uglygep460, i64 %lsr.iv455
  %uglygep482 = getelementptr i8, ptr %uglygep481, i64 %lsr.iv455
  tail call void %7(ptr align 1 %uglygep461, ptr align 1 %uglygep482) #15
  %lsr.iv.next456 = sub i64 %lsr.iv455, %26
  %lsr.iv.next480 = sub i64 %lsr.iv479, %26
  %.not260 = icmp ugt i64 %lsr.iv.next480, %26
  br i1 %.not260, label %88, label %.loopexit.outer.loopexit

.loopexit267.loopexit:                            ; preds = %122
  %uglygep498 = getelementptr i8, ptr %.2245, i64 %lsr.iv496
  %uglygep515 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv496
  br label %.loopexit267

.loopexit267:                                     ; preds = %.loopexit267.loopexit, %.loopexit272
  %.4247 = phi ptr [ %uglygep498, %.loopexit267.loopexit ], [ %.2245, %.loopexit272 ]
  %.4238 = phi ptr [ %.5239, %.loopexit267.loopexit ], [ %.2236, %.loopexit272 ]
  %.2230 = phi ptr [ %uglygep515, %.loopexit267.loopexit ], [ %.0228.ph.ph, %.loopexit272 ]
  %.2215 = phi ptr [ %.3216, %.loopexit267.loopexit ], [ %.0213.ph.ph388, %.loopexit272 ]
  %92 = ptrtoint ptr %.4247 to i64
  %93 = ptrtoint ptr %.4238 to i64
  %94 = sub nuw i64 %92, %93
  %95 = icmp ult i64 %94, %29
  br i1 %95, label %.preheader265, label %.cont46

.preheader265:                                    ; preds = %.loopexit267
  %96 = icmp ule ptr %.2, %.2224
  %97 = icmp ule ptr %.2215, %.2230
  %98 = select i1 %96, i1 %97, i1 false
  br i1 %98, label %.cont.preheader, label %.preheader264

.cont.preheader:                                  ; preds = %.preheader265
  br label %.cont

.preheader269:                                    ; preds = %102, %.preheader269.preheader
  %lsr.iv519 = phi i64 [ %65, %.preheader269.preheader ], [ %lsr.iv.next520, %102 ]
  %.5239 = phi ptr [ %118, %102 ], [ %.2236, %.preheader269.preheader ]
  %.3216 = phi ptr [ %119, %102 ], [ %.0213.ph.ph388, %.preheader269.preheader ]
  %99 = getelementptr inbounds i8, ptr %.3216, i64 %27
  tail call void %8(ptr align 1 %5, i64 1) #15
  %100 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %99) #15
  %101 = icmp eq i8 %100, 1
  br i1 %101, label %102, label %.preheader266

.preheader266:                                    ; preds = %.preheader269
  %uglygep501 = getelementptr i8, ptr %.2245, i64 %28
  %uglygep503 = getelementptr i8, ptr %.2245, i64 %30
  %uglygep505 = getelementptr i8, ptr %.2245, i64 %31
  %uglygep507 = getelementptr i8, ptr %.2245, i64 %32
  %uglygep509 = getelementptr i8, ptr %.2245, i64 %33
  %uglygep511 = getelementptr i8, ptr %.2245, i64 %34
  %uglygep513 = getelementptr i8, ptr %.2245, i64 %12
  %uglygep523 = getelementptr i8, ptr %.0228.ph.ph, i64 %28
  %uglygep526 = getelementptr i8, ptr %.0228.ph.ph, i64 %30
  %uglygep528 = getelementptr i8, ptr %.0228.ph.ph, i64 %31
  %uglygep530 = getelementptr i8, ptr %.0228.ph.ph, i64 %32
  %uglygep532 = getelementptr i8, ptr %.0228.ph.ph, i64 %33
  %uglygep534 = getelementptr i8, ptr %.0228.ph.ph, i64 %34
  %uglygep536 = getelementptr i8, ptr %.0228.ph.ph, i64 %12
  br label %122

102:                                              ; preds = %.preheader269
  %103 = ptrtoint ptr %.0228.ph.ph to i64
  tail call void %7(ptr align 1 %.5239, ptr align 1 %.3216) #15
  %104 = getelementptr inbounds i8, ptr %.5239, i64 %6
  %105 = getelementptr inbounds i8, ptr %.3216, i64 %6
  tail call void %7(ptr align 1 %104, ptr align 1 %105) #15
  %106 = getelementptr inbounds i8, ptr %104, i64 %6
  %107 = getelementptr inbounds i8, ptr %105, i64 %6
  tail call void %7(ptr align 1 %106, ptr align 1 %107) #15
  %108 = getelementptr inbounds i8, ptr %106, i64 %6
  %109 = getelementptr inbounds i8, ptr %107, i64 %6
  tail call void %7(ptr align 1 %108, ptr align 1 %109) #15
  %110 = getelementptr inbounds i8, ptr %108, i64 %6
  %111 = getelementptr inbounds i8, ptr %109, i64 %6
  tail call void %7(ptr align 1 %110, ptr align 1 %111) #15
  %112 = getelementptr inbounds i8, ptr %110, i64 %6
  %113 = getelementptr inbounds i8, ptr %111, i64 %6
  tail call void %7(ptr align 1 %112, ptr align 1 %113) #15
  %114 = getelementptr inbounds i8, ptr %112, i64 %6
  %115 = getelementptr inbounds i8, ptr %113, i64 %6
  tail call void %7(ptr align 1 %114, ptr align 1 %115) #15
  %116 = getelementptr inbounds i8, ptr %114, i64 %6
  %117 = getelementptr inbounds i8, ptr %115, i64 %6
  tail call void %7(ptr align 1 %116, ptr align 1 %117) #15
  %118 = getelementptr inbounds i8, ptr %116, i64 %6
  %119 = getelementptr inbounds i8, ptr %117, i64 %6
  %120 = ptrtoint ptr %119 to i64
  %121 = sub nuw i64 %103, %120
  %.not258 = icmp ugt i64 %121, %26
  %lsr.iv.next520 = sub i64 %lsr.iv519, %26
  br i1 %.not258, label %.preheader269, label %.loopexit.outer.outer384

122:                                              ; preds = %124, %.preheader266
  %lsr.iv521 = phi i64 [ %lsr.iv519, %.preheader266 ], [ %lsr.iv.next522, %124 ]
  %lsr.iv496 = phi i64 [ 0, %.preheader266 ], [ %lsr.iv.next497, %124 ]
  %uglygep500 = getelementptr i8, ptr %.2245, i64 %lsr.iv496
  %uglygep517 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv496
  %uglygep525 = getelementptr i8, ptr %uglygep523, i64 %lsr.iv496
  tail call void %8(ptr align 1 %5, i64 1) #15
  %123 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %uglygep525) #15
  %.not256 = icmp eq i8 %123, 1
  br i1 %.not256, label %.loopexit267.loopexit, label %124

124:                                              ; preds = %122
  tail call void %7(ptr align 1 %uglygep500, ptr align 1 %uglygep517) #15
  %uglygep514 = getelementptr i8, ptr %uglygep513, i64 %lsr.iv496
  %uglygep537 = getelementptr i8, ptr %uglygep536, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep514, ptr align 1 %uglygep537) #15
  %uglygep512 = getelementptr i8, ptr %uglygep511, i64 %lsr.iv496
  %uglygep535 = getelementptr i8, ptr %uglygep534, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep512, ptr align 1 %uglygep535) #15
  %uglygep510 = getelementptr i8, ptr %uglygep509, i64 %lsr.iv496
  %uglygep533 = getelementptr i8, ptr %uglygep532, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep510, ptr align 1 %uglygep533) #15
  %uglygep508 = getelementptr i8, ptr %uglygep507, i64 %lsr.iv496
  %uglygep531 = getelementptr i8, ptr %uglygep530, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep508, ptr align 1 %uglygep531) #15
  %uglygep506 = getelementptr i8, ptr %uglygep505, i64 %lsr.iv496
  %uglygep529 = getelementptr i8, ptr %uglygep528, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep506, ptr align 1 %uglygep529) #15
  %uglygep504 = getelementptr i8, ptr %uglygep503, i64 %lsr.iv496
  %uglygep527 = getelementptr i8, ptr %uglygep526, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep504, ptr align 1 %uglygep527) #15
  %uglygep502 = getelementptr i8, ptr %uglygep501, i64 %lsr.iv496
  %uglygep524 = getelementptr i8, ptr %uglygep523, i64 %lsr.iv496
  tail call void %7(ptr align 1 %uglygep502, ptr align 1 %uglygep524) #15
  %lsr.iv.next497 = sub i64 %lsr.iv496, %26
  %lsr.iv.next522 = sub i64 %lsr.iv521, %26
  %.not257 = icmp ugt i64 %lsr.iv.next522, %26
  br i1 %.not257, label %122, label %.loopexit.outer.outer.loopexit

.cont46:                                          ; preds = %.loopexit267
  tail call void %8(ptr align 1 %5, i64 16) #15
  %125 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %.2215) #15
  %.not = icmp eq i8 %125, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  tail call void %7(ptr align 1 %.4238, ptr align 1 %.sroa.speculated42) #15
  %126 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 %6
  %..4217 = select i1 %.not, ptr %126, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %126
  %127 = getelementptr inbounds i8, ptr %.4238, i64 %6
  %128 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %.2230) #15
  %129 = icmp eq i8 %128, 1
  %.sroa.speculated105 = select i1 %129, ptr %.2224, ptr %.2230
  tail call void %7(ptr align 1 %.4247, ptr align 1 %.sroa.speculated105) #15
  %130 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 %12
  %.5233 = select i1 %129, ptr %.2230, ptr %130
  %.5227 = select i1 %129, ptr %130, ptr %.2224
  %131 = getelementptr inbounds i8, ptr %.4247, i64 %12
  %132 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4., ptr align 1 %..4217) #15
  %.not.1 = icmp eq i8 %132, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  tail call void %7(ptr align 1 %127, ptr align 1 %.sroa.speculated42.1) #15
  %133 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 %6
  %..4217.1 = select i1 %.not.1, ptr %133, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %133
  %134 = getelementptr inbounds i8, ptr %127, i64 %6
  %135 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227, ptr align 1 %.5233) #15
  %136 = icmp eq i8 %135, 1
  %.sroa.speculated105.1 = select i1 %136, ptr %.5227, ptr %.5233
  tail call void %7(ptr align 1 %131, ptr align 1 %.sroa.speculated105.1) #15
  %137 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 %12
  %.5233.1 = select i1 %136, ptr %.5233, ptr %137
  %.5227.1 = select i1 %136, ptr %137, ptr %.5227
  %138 = getelementptr inbounds i8, ptr %131, i64 %12
  %139 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..1, ptr align 1 %..4217.1) #15
  %.not.2 = icmp eq i8 %139, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  tail call void %7(ptr align 1 %134, ptr align 1 %.sroa.speculated42.2) #15
  %140 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 %6
  %..4217.2 = select i1 %.not.2, ptr %140, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %140
  %141 = getelementptr inbounds i8, ptr %134, i64 %6
  %142 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.1, ptr align 1 %.5233.1) #15
  %143 = icmp eq i8 %142, 1
  %.sroa.speculated105.2 = select i1 %143, ptr %.5227.1, ptr %.5233.1
  tail call void %7(ptr align 1 %138, ptr align 1 %.sroa.speculated105.2) #15
  %144 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 %12
  %.5233.2 = select i1 %143, ptr %.5233.1, ptr %144
  %.5227.2 = select i1 %143, ptr %144, ptr %.5227.1
  %145 = getelementptr inbounds i8, ptr %138, i64 %12
  %146 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..2, ptr align 1 %..4217.2) #15
  %.not.3 = icmp eq i8 %146, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  tail call void %7(ptr align 1 %141, ptr align 1 %.sroa.speculated42.3) #15
  %147 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 %6
  %..4217.3 = select i1 %.not.3, ptr %147, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %147
  %148 = getelementptr inbounds i8, ptr %141, i64 %6
  %149 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.2, ptr align 1 %.5233.2) #15
  %150 = icmp eq i8 %149, 1
  %.sroa.speculated105.3 = select i1 %150, ptr %.5227.2, ptr %.5233.2
  tail call void %7(ptr align 1 %145, ptr align 1 %.sroa.speculated105.3) #15
  %151 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 %12
  %.5233.3 = select i1 %150, ptr %.5233.2, ptr %151
  %.5227.3 = select i1 %150, ptr %151, ptr %.5227.2
  %152 = getelementptr inbounds i8, ptr %145, i64 %12
  %153 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..3, ptr align 1 %..4217.3) #15
  %.not.4 = icmp eq i8 %153, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  tail call void %7(ptr align 1 %148, ptr align 1 %.sroa.speculated42.4) #15
  %154 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 %6
  %..4217.4 = select i1 %.not.4, ptr %154, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %154
  %155 = getelementptr inbounds i8, ptr %148, i64 %6
  %156 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.3, ptr align 1 %.5233.3) #15
  %157 = icmp eq i8 %156, 1
  %.sroa.speculated105.4 = select i1 %157, ptr %.5227.3, ptr %.5233.3
  tail call void %7(ptr align 1 %152, ptr align 1 %.sroa.speculated105.4) #15
  %158 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 %12
  %.5233.4 = select i1 %157, ptr %.5233.3, ptr %158
  %.5227.4 = select i1 %157, ptr %158, ptr %.5227.3
  %159 = getelementptr inbounds i8, ptr %152, i64 %12
  %160 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..4, ptr align 1 %..4217.4) #15
  %.not.5 = icmp eq i8 %160, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  tail call void %7(ptr align 1 %155, ptr align 1 %.sroa.speculated42.5) #15
  %161 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 %6
  %..4217.5 = select i1 %.not.5, ptr %161, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %161
  %162 = getelementptr inbounds i8, ptr %155, i64 %6
  %163 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.4, ptr align 1 %.5233.4) #15
  %164 = icmp eq i8 %163, 1
  %.sroa.speculated105.5 = select i1 %164, ptr %.5227.4, ptr %.5233.4
  tail call void %7(ptr align 1 %159, ptr align 1 %.sroa.speculated105.5) #15
  %165 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 %12
  %.5233.5 = select i1 %164, ptr %.5233.4, ptr %165
  %.5227.5 = select i1 %164, ptr %165, ptr %.5227.4
  %166 = getelementptr inbounds i8, ptr %159, i64 %12
  %167 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..5, ptr align 1 %..4217.5) #15
  %.not.6 = icmp eq i8 %167, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  tail call void %7(ptr align 1 %162, ptr align 1 %.sroa.speculated42.6) #15
  %168 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 %6
  %..4217.6 = select i1 %.not.6, ptr %168, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %168
  %169 = getelementptr inbounds i8, ptr %162, i64 %6
  %170 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.5, ptr align 1 %.5233.5) #15
  %171 = icmp eq i8 %170, 1
  %.sroa.speculated105.6 = select i1 %171, ptr %.5227.5, ptr %.5233.5
  tail call void %7(ptr align 1 %166, ptr align 1 %.sroa.speculated105.6) #15
  %172 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 %12
  %.5233.6 = select i1 %171, ptr %.5233.5, ptr %172
  %.5227.6 = select i1 %171, ptr %172, ptr %.5227.5
  %173 = getelementptr inbounds i8, ptr %166, i64 %12
  %174 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..6, ptr align 1 %..4217.6) #15
  %.not.7 = icmp eq i8 %174, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  tail call void %7(ptr align 1 %169, ptr align 1 %.sroa.speculated42.7) #15
  %175 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 %6
  %..4217.7 = select i1 %.not.7, ptr %175, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %175
  %176 = getelementptr inbounds i8, ptr %169, i64 %6
  %177 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.6, ptr align 1 %.5233.6) #15
  %178 = icmp eq i8 %177, 1
  %.sroa.speculated105.7 = select i1 %178, ptr %.5227.6, ptr %.5233.6
  tail call void %7(ptr align 1 %173, ptr align 1 %.sroa.speculated105.7) #15
  %179 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 %12
  %.5233.7 = select i1 %178, ptr %.5233.6, ptr %179
  %.5227.7 = select i1 %178, ptr %179, ptr %.5227.6
  %180 = getelementptr inbounds i8, ptr %173, i64 %12
  br label %.loopexit.outer.outer

.preheader264:                                    ; preds = %select.end538, %.preheader265
  %.7241.lcssa = phi ptr [ %.4238, %.preheader265 ], [ %184, %select.end538 ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader265 ], [ %..6219, %select.end538 ]
  %.6.lcssa = phi ptr [ %.2, %.preheader265 ], [ %.6., %select.end538 ]
  %.not253307 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not253307, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader264
  br label %.lr.ph

.cont:                                            ; preds = %select.end538, %.cont.preheader
  %.6304 = phi ptr [ %.6., %select.end538 ], [ %.2, %.cont.preheader ]
  %.6219303 = phi ptr [ %..6219, %select.end538 ], [ %.2215, %.cont.preheader ]
  %.7241302 = phi ptr [ %184, %select.end538 ], [ %.4238, %.cont.preheader ]
  tail call void %8(ptr align 1 %5, i64 1) #15
  %181 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.6304, ptr align 1 %.6219303) #15
  %.sroa.speculated.frozen = freeze i8 %181
  %.not255 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not255, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.6219303, %.cont ], [ %.6304, %select.false ]
  %..6219.frozen = freeze i8 %181
  %182 = icmp eq i8 %..6219.frozen, 1
  tail call void %7(ptr align 1 %.7241302, ptr align 1 %.sroa.speculated) #15
  %183 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  br i1 %182, label %select.end538, label %select.false539

select.false539:                                  ; preds = %select.end
  br label %select.end538

select.end538:                                    ; preds = %select.false539, %select.end
  %..6219 = phi ptr [ %183, %select.end ], [ %.6219303, %select.false539 ]
  %.6. = phi ptr [ %.6304, %select.end ], [ %183, %select.false539 ]
  %184 = getelementptr inbounds i8, ptr %.7241302, i64 %6
  %185 = icmp ule ptr %.6., %.2224
  %186 = icmp ule ptr %..6219, %.2230
  %187 = select i1 %185, i1 %186, i1 false
  br i1 %187, label %.cont, label %.preheader264

.preheader.loopexit:                              ; preds = %.lr.ph
  %uglygep454 = getelementptr i8, ptr %.7241.lcssa, i64 %lsr.iv.next450
  br label %.preheader

.preheader:                                       ; preds = %.preheader.loopexit, %.preheader264
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader264 ], [ %uglygep454, %.preheader.loopexit ]
  %.not254311 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not254311, label %common.ret, label %.lr.ph314.preheader

.lr.ph314.preheader:                              ; preds = %.preheader
  br label %.lr.ph314

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv449 = phi i64 [ 0, %.lr.ph.preheader ], [ %lsr.iv.next450, %.lr.ph ]
  %uglygep451 = getelementptr i8, ptr %.6.lcssa, i64 %lsr.iv449
  %uglygep453 = getelementptr i8, ptr %.7241.lcssa, i64 %lsr.iv449
  tail call void %7(ptr align 1 %uglygep453, ptr align 1 %uglygep451) #15
  %lsr.iv.next450 = add i64 %lsr.iv449, %6
  %uglygep452 = getelementptr i8, ptr %.6.lcssa, i64 %lsr.iv.next450
  %.not253 = icmp ugt ptr %uglygep452, %.2224
  br i1 %.not253, label %.preheader.loopexit, label %.lr.ph

.lr.ph314:                                        ; preds = %.lr.ph314, %.lr.ph314.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph314.preheader ], [ %lsr.iv.next, %.lr.ph314 ]
  %uglygep = getelementptr i8, ptr %.6219.lcssa, i64 %lsr.iv
  %uglygep448 = getelementptr i8, ptr %.8242.lcssa, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep448, ptr align 1 %uglygep) #15
  %lsr.iv.next = add i64 %lsr.iv, %6
  %uglygep447 = getelementptr i8, ptr %.6219.lcssa, i64 %lsr.iv.next
  %.not254 = icmp ugt ptr %uglygep447, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph314
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = alloca i64, align 8
  %11 = sub i64 0, %7
  %12 = ptrtoint ptr %10 to i64
  %13 = lshr i64 %12, 4
  br label %14

14:                                               ; preds = %sort.quadsort_swap__anon_14858.exit61, %9
  %.053 = phi i64 [ 0, %9 ], [ %142, %sort.quadsort_swap__anon_14858.exit61 ]
  %.052 = phi i64 [ %4, %9 ], [ %142, %sort.quadsort_swap__anon_14858.exit61 ]
  %.051 = phi ptr [ %2, %9 ], [ %0, %sort.quadsort_swap__anon_14858.exit61 ]
  %.0 = phi ptr [ %3, %9 ], [ %15, %sort.quadsort_swap__anon_14858.exit61 ]
  %15 = getelementptr inbounds i8, ptr %.0, i64 %11
  %16 = icmp ult i64 %.052, 2049
  br i1 %16, label %18, label %19

17:                                               ; preds = %sort.median_of_cube_root__anon_16522.exit, %18
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %81

18:                                               ; preds = %14
  call fastcc void @sort.median_of_nine__anon_16521(ptr nonnull align 1 %.051, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull align 1 %15)
  br label %17

19:                                               ; preds = %14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  br label %20

20:                                               ; preds = %20, %19
  %.0.i = phi i64 [ 32, %19 ], [ %24, %20 ]
  %21 = mul nuw i64 %.0.i, %.0.i
  %22 = mul nuw i64 %21, %.0.i
  %23 = icmp ult i64 %22, %.052
  %24 = shl nuw i64 %.0.i, 1
  br i1 %23, label %20, label %25

25:                                               ; preds = %20
  %26 = udiv i64 %.052, %.0.i
  store i64 %26, ptr %10, align 8
  %27 = urem i64 %13, %26
  %28 = mul nuw i64 %27, %7
  %29 = getelementptr inbounds i8, ptr %.051, i64 %28
  %30 = icmp eq ptr %.051, %0
  %..i = select i1 %30, ptr %1, ptr %0
  %31 = mul nuw i64 %26, %7
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %32

32:                                               ; preds = %32, %25
  %lsr.iv72 = phi ptr [ %uglygep, %32 ], [ %..i, %25 ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %32 ], [ %umax.i, %25 ]
  %.03136.i = phi ptr [ %29, %25 ], [ %33, %32 ]
  call void %8(ptr nonnull align 1 %lsr.iv72, ptr align 1 %.03136.i) #15
  %33 = getelementptr inbounds i8, ptr %.03136.i, i64 %31
  %lsr.iv.next = add i64 %lsr.iv, -1
  %uglygep = getelementptr i8, ptr %lsr.iv72, i64 %7
  %exitcond.not.i = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not.i, label %34, label %32

34:                                               ; preds = %32
  %35 = lshr exact i64 %.0.i, 1
  %36 = mul nuw i64 %.0.i, %7
  %37 = getelementptr inbounds i8, ptr %..i, i64 %36
  %38 = icmp ult i64 %.0.i, 192
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %..i, i64 %35, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %40, label %41, label %46

41:                                               ; preds = %39
  %42 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %..i, i64 %35, ptr nonnull align 1 %37, i64 %35, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %..i, i64 %35, ptr nonnull align 1 %37, i64 %35, i64 %42, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %46

43:                                               ; preds = %34
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %..i, i64 %35, ptr nonnull align 1 %37, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  %44 = mul nuw i64 %35, %7
  %45 = getelementptr inbounds i8, ptr %..i, i64 %44
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %45, i64 %35, ptr nonnull align 1 %37, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit34.i

46:                                               ; preds = %41, %39
  %47 = mul nuw i64 %35, %7
  %48 = getelementptr inbounds i8, ptr %..i, i64 %47
  %49 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %48, i64 %35, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %49, label %50, label %sort.quadsort_swap__anon_14858.exit34.i

50:                                               ; preds = %46
  %51 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %48, i64 %35, ptr nonnull align 1 %37, i64 %35, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %48, i64 %35, ptr nonnull align 1 %37, i64 %35, i64 %51, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit34.i

sort.quadsort_swap__anon_14858.exit34.i:          ; preds = %50, %46, %43
  %52 = phi ptr [ %45, %43 ], [ %48, %46 ], [ %48, %50 ]
  %53 = add i64 %.0.i, -1
  %54 = mul nuw i64 %53, %7
  %55 = getelementptr inbounds i8, ptr %..i, i64 %54
  %56 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %55, ptr nonnull align 1 %..i) #15
  %.not.i = icmp eq i8 %56, 1
  br i1 %.not.i, label %57, label %61

57:                                               ; preds = %61, %sort.quadsort_swap__anon_14858.exit34.i
  %58 = phi i1 [ %66, %61 ], [ false, %sort.quadsort_swap__anon_14858.exit34.i ]
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %57
  %.0.in4.i.i = phi i64 [ %.0.i.i, %.lr.ph.i.i ], [ %35, %57 ]
  %.0133.i.i = phi ptr [ %.1.i.i, %.lr.ph.i.i ], [ %..i, %57 ]
  %.0142.i.i = phi ptr [ %.115.i.i, %.lr.ph.i.i ], [ %52, %57 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %59 = call i8 %5(ptr align 1 %6, ptr align 1 %.0133.i.i, ptr align 1 %.0142.i.i) #15
  %.not16.i.i = icmp eq i8 %59, 1
  %60 = mul nuw i64 %.0.i.i, %7
  %.115.idx.i.i = select i1 %.not16.i.i, i64 %60, i64 0
  %.115.i.i = getelementptr i8, ptr %.0142.i.i, i64 %.115.idx.i.i
  %.1.idx.i.i = select i1 %.not16.i.i, i64 0, i64 %60
  %.1.i.i = getelementptr i8, ptr %.0133.i.i, i64 %.1.idx.i.i
  %.not.i.i = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i, label %sort.median_of_cube_root__anon_16522.exit, label %.lr.ph.i.i

61:                                               ; preds = %sort.quadsort_swap__anon_14858.exit34.i
  %62 = add nsw i64 %35, -1
  %63 = mul nuw i64 %62, %7
  %64 = getelementptr inbounds i8, ptr %..i, i64 %63
  %65 = call i8 %5(ptr align 1 %6, ptr nonnull align 1 %64, ptr nonnull align 1 %..i) #15
  %66 = icmp ne i8 %65, 1
  br label %57

sort.median_of_cube_root__anon_16522.exit:        ; preds = %.lr.ph.i.i
  %67 = call i8 %5(ptr align 1 %6, ptr align 1 %.1.i.i, ptr align 1 %.115.i.i) #15
  %68 = icmp eq i8 %67, 1
  %69 = select i1 %68, ptr %.1.i.i, ptr %.115.i.i
  call void %8(ptr nonnull align 1 %15, ptr align 1 %69) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  br i1 %58, label %70, label %17

70:                                               ; preds = %sort.median_of_cube_root__anon_16522.exit
  %71 = icmp eq ptr %.051, %1
  br i1 %71, label %79, label %72

common.ret:                                       ; preds = %197, %195, %193, %192, %178, %171, %161, %159, %158, %83, %77, %75, %74
  ret void

72:                                               ; preds = %79, %70
  %73 = icmp ult i64 %.052, 96
  br i1 %73, label %74, label %75

74:                                               ; preds = %72
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

75:                                               ; preds = %72
  %76 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %76, label %77, label %common.ret

77:                                               ; preds = %75
  %78 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %78, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

79:                                               ; preds = %70
  %80 = mul nuw i64 %.052, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %80, i1 false)
  br label %72

81:                                               ; preds = %17
  %82 = call i8 %5(ptr align 1 %6, ptr align 1 %.0, ptr align 1 %15) #15
  %.not58 = icmp eq i8 %82, 1
  br i1 %.not58, label %.critedge, label %83

83:                                               ; preds = %81
  call fastcc void @sort.flux_reverse_partition__anon_16523(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

.critedge:                                        ; preds = %81, %17
  %.not160.i = icmp ult i64 %.052, 8
  br i1 %.not160.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.0165.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.0131164.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.0143163.i = phi ptr [ %uglygep73, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.0145162.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.0147161.i = phi i64 [ %111, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %84 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143163.i, ptr nonnull align 1 %15) #15
  %.not151.i = icmp eq i8 %84, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.0131164.i, ptr %.0165.i
  call void %8(ptr align 1 %.sroa.speculated78.i, ptr align 1 %.0143163.i) #15
  %85 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 %7
  %..0131.i = select i1 %.not151.i, ptr %85, ptr %.0131164.i
  %.0..i = select i1 %.not151.i, ptr %.0165.i, ptr %85
  %86 = getelementptr inbounds i8, ptr %.0143163.i, i64 %7
  %87 = call i8 %5(ptr align 1 %6, ptr align 1 %86, ptr nonnull align 1 %15) #15
  %.not152.i = icmp eq i8 %87, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  call void %8(ptr align 1 %.sroa.speculated69.i, ptr align 1 %86) #15
  %88 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 %7
  %.2133.i = select i1 %.not152.i, ptr %88, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %88
  %89 = getelementptr inbounds i8, ptr %86, i64 %7
  %90 = call i8 %5(ptr align 1 %6, ptr align 1 %89, ptr nonnull align 1 %15) #15
  %.not153.i = icmp eq i8 %90, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  call void %8(ptr align 1 %.sroa.speculated60.i, ptr align 1 %89) #15
  %91 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 %7
  %.3134.i = select i1 %.not153.i, ptr %91, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %91
  %92 = getelementptr inbounds i8, ptr %89, i64 %7
  %93 = call i8 %5(ptr align 1 %6, ptr align 1 %92, ptr nonnull align 1 %15) #15
  %.not154.i = icmp eq i8 %93, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  call void %8(ptr align 1 %.sroa.speculated51.i, ptr align 1 %92) #15
  %94 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 %7
  %.4135.i = select i1 %.not154.i, ptr %94, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %94
  %95 = getelementptr inbounds i8, ptr %92, i64 %7
  %96 = call i8 %5(ptr align 1 %6, ptr align 1 %95, ptr nonnull align 1 %15) #15
  %.not155.i = icmp eq i8 %96, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  call void %8(ptr align 1 %.sroa.speculated42.i, ptr align 1 %95) #15
  %97 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 %7
  %.5136.i = select i1 %.not155.i, ptr %97, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %97
  %98 = getelementptr inbounds i8, ptr %95, i64 %7
  %99 = call i8 %5(ptr align 1 %6, ptr align 1 %98, ptr nonnull align 1 %15) #15
  %.not156.i = icmp eq i8 %99, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  call void %8(ptr align 1 %.sroa.speculated33.i, ptr align 1 %98) #15
  %100 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 %7
  %.6137.i = select i1 %.not156.i, ptr %100, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %100
  %101 = getelementptr inbounds i8, ptr %98, i64 %7
  %102 = call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr nonnull align 1 %15) #15
  %.not157.i = icmp eq i8 %102, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  call void %8(ptr align 1 %.sroa.speculated24.i, ptr align 1 %101) #15
  %103 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 %7
  %.7138.i = select i1 %.not157.i, ptr %103, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %103
  %104 = getelementptr inbounds i8, ptr %101, i64 %7
  %105 = call i8 %5(ptr align 1 %6, ptr align 1 %104, ptr nonnull align 1 %15) #15
  %.not158.i = icmp eq i8 %105, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  call void %8(ptr align 1 %.sroa.speculated15.i, ptr align 1 %104) #15
  %106 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 %7
  %.8139.i = select i1 %.not158.i, ptr %106, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %106
  %107 = getelementptr inbounds i8, ptr %104, i64 %7
  %108 = icmp eq ptr %.8.i, %0
  %109 = icmp eq ptr %.8139.i, %1
  %110 = select i1 %108, i1 true, i1 %109
  %.1146.i = select i1 %110, i64 %.0147161.i, i64 %.0145162.i
  %111 = add i64 %.0147161.i, 8
  %.not.i59 = icmp ugt i64 %111, %.052
  %uglygep73 = getelementptr i8, ptr %104, i64 %7
  br i1 %.not.i59, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %107, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %112 = and i64 %.052, 7
  %.not175.i = icmp eq i64 %112, 0
  br i1 %.not175.i, label %._crit_edge173.i, label %.cont.i

.cont.i:                                          ; preds = %._crit_edge.i
  %113 = call i8 %5(ptr align 1 %6, ptr align 1 %.0143.lcssa.i, ptr nonnull align 1 %15) #15
  %.not150.i = icmp eq i8 %113, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.0131.lcssa.i, ptr %.0.lcssa.i
  call void %8(ptr align 1 %.sroa.speculated.i, ptr align 1 %.0143.lcssa.i) #15
  %114 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 %7
  %.9..i = select i1 %.not150.i, ptr %.0.lcssa.i, ptr %114
  %exitcond.not.i60 = icmp eq i64 %112, 1
  br i1 %exitcond.not.i60, label %._crit_edge173.i, label %.cont.i.1

.cont.i.1:                                        ; preds = %.cont.i
  %115 = icmp eq i8 %113, 1
  %116 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 %7
  %..9140.i = select i1 %115, ptr %114, ptr %.0131.lcssa.i
  %117 = call i8 %5(ptr align 1 %6, ptr align 1 %116, ptr nonnull align 1 %15) #15
  %.not150.i.1 = icmp eq i8 %117, 1
  %.sroa.speculated.i.1 = select i1 %.not150.i.1, ptr %..9140.i, ptr %.9..i
  call void %8(ptr align 1 %.sroa.speculated.i.1, ptr align 1 %116) #15
  %118 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 %7
  %.9..i.1 = select i1 %.not150.i.1, ptr %.9..i, ptr %118
  %exitcond.not.i60.1 = icmp eq i64 %112, 2
  br i1 %exitcond.not.i60.1, label %._crit_edge173.i, label %.cont.i.2

.cont.i.2:                                        ; preds = %.cont.i.1
  %119 = icmp eq i8 %117, 1
  %120 = getelementptr inbounds i8, ptr %116, i64 %7
  %..9140.i.1 = select i1 %119, ptr %118, ptr %..9140.i
  %121 = call i8 %5(ptr align 1 %6, ptr align 1 %120, ptr nonnull align 1 %15) #15
  %.not150.i.2 = icmp eq i8 %121, 1
  %.sroa.speculated.i.2 = select i1 %.not150.i.2, ptr %..9140.i.1, ptr %.9..i.1
  call void %8(ptr align 1 %.sroa.speculated.i.2, ptr align 1 %120) #15
  %122 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 %7
  %.9..i.2 = select i1 %.not150.i.2, ptr %.9..i.1, ptr %122
  %exitcond.not.i60.2 = icmp eq i64 %112, 3
  br i1 %exitcond.not.i60.2, label %._crit_edge173.i, label %.cont.i.3

.cont.i.3:                                        ; preds = %.cont.i.2
  %123 = icmp eq i8 %121, 1
  %124 = getelementptr inbounds i8, ptr %120, i64 %7
  %..9140.i.2 = select i1 %123, ptr %122, ptr %..9140.i.1
  %125 = call i8 %5(ptr align 1 %6, ptr align 1 %124, ptr nonnull align 1 %15) #15
  %.not150.i.3 = icmp eq i8 %125, 1
  %.sroa.speculated.i.3 = select i1 %.not150.i.3, ptr %..9140.i.2, ptr %.9..i.2
  call void %8(ptr align 1 %.sroa.speculated.i.3, ptr align 1 %124) #15
  %126 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 %7
  %.9..i.3 = select i1 %.not150.i.3, ptr %.9..i.2, ptr %126
  %exitcond.not.i60.3 = icmp eq i64 %112, 4
  br i1 %exitcond.not.i60.3, label %._crit_edge173.i, label %.cont.i.4

.cont.i.4:                                        ; preds = %.cont.i.3
  %127 = icmp eq i8 %125, 1
  %128 = getelementptr inbounds i8, ptr %124, i64 %7
  %..9140.i.3 = select i1 %127, ptr %126, ptr %..9140.i.2
  %129 = call i8 %5(ptr align 1 %6, ptr align 1 %128, ptr nonnull align 1 %15) #15
  %.not150.i.4 = icmp eq i8 %129, 1
  %.sroa.speculated.i.4 = select i1 %.not150.i.4, ptr %..9140.i.3, ptr %.9..i.3
  call void %8(ptr align 1 %.sroa.speculated.i.4, ptr align 1 %128) #15
  %130 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 %7
  %.9..i.4 = select i1 %.not150.i.4, ptr %.9..i.3, ptr %130
  %exitcond.not.i60.4 = icmp eq i64 %112, 5
  br i1 %exitcond.not.i60.4, label %._crit_edge173.i, label %.cont.i.5

.cont.i.5:                                        ; preds = %.cont.i.4
  %131 = icmp eq i8 %129, 1
  %132 = getelementptr inbounds i8, ptr %128, i64 %7
  %..9140.i.4 = select i1 %131, ptr %130, ptr %..9140.i.3
  %133 = call i8 %5(ptr align 1 %6, ptr align 1 %132, ptr nonnull align 1 %15) #15
  %.not150.i.5 = icmp eq i8 %133, 1
  %.sroa.speculated.i.5 = select i1 %.not150.i.5, ptr %..9140.i.4, ptr %.9..i.4
  call void %8(ptr align 1 %.sroa.speculated.i.5, ptr align 1 %132) #15
  %134 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 %7
  %.9..i.5 = select i1 %.not150.i.5, ptr %.9..i.4, ptr %134
  %exitcond.not.i60.5 = icmp eq i64 %112, 6
  br i1 %exitcond.not.i60.5, label %._crit_edge173.i, label %.cont.i.6

.cont.i.6:                                        ; preds = %.cont.i.5
  %135 = icmp eq i8 %133, 1
  %136 = getelementptr inbounds i8, ptr %132, i64 %7
  %..9140.i.5 = select i1 %135, ptr %134, ptr %..9140.i.4
  %137 = call i8 %5(ptr align 1 %6, ptr align 1 %136, ptr nonnull align 1 %15) #15
  %.not150.i.6 = icmp eq i8 %137, 1
  %.sroa.speculated.i.6 = select i1 %.not150.i.6, ptr %..9140.i.5, ptr %.9..i.5
  call void %8(ptr align 1 %.sroa.speculated.i.6, ptr align 1 %136) #15
  %138 = getelementptr inbounds i8, ptr %.sroa.speculated.i.6, i64 %7
  %.9..i.6 = select i1 %.not150.i.6, ptr %.9..i.5, ptr %138
  br label %._crit_edge173.i

._crit_edge173.i:                                 ; preds = %.cont.i.6, %.cont.i.5, %.cont.i.4, %.cont.i.3, %.cont.i.2, %.cont.i.1, %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ], [ %.9..i.1, %.cont.i.1 ], [ %.9..i.2, %.cont.i.2 ], [ %.9..i.3, %.cont.i.3 ], [ %.9..i.4, %.cont.i.4 ], [ %.9..i.5, %.cont.i.5 ], [ %.9..i.6, %.cont.i.6 ]
  %139 = ptrtoint ptr %0 to i64
  %140 = ptrtoint ptr %.9.lcssa.i to i64
  %141 = sub nuw i64 %140, %139
  %142 = udiv i64 %141, %7
  %143 = lshr i64 %.052, 2
  %144 = icmp ule i64 %.0145.lcssa.i, %143
  %145 = icmp eq i64 %.052, %142
  %or.cond.i = select i1 %144, i1 true, i1 %145
  %146 = sub nuw i64 %.052, %142
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16524.exit, label %147

147:                                              ; preds = %._crit_edge173.i
  %148 = mul nuw i64 %142, %7
  %149 = getelementptr inbounds i8, ptr %0, i64 %148
  %150 = mul nuw i64 %146, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %149, ptr nonnull align 1 %1, i64 %150, i1 false)
  %151 = icmp ult i64 %146, 96
  br i1 %151, label %152, label %153

152:                                              ; preds = %147
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %149, i64 %146, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit.i

153:                                              ; preds = %147
  %154 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %149, i64 %146, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %154, label %155, label %sort.quadsort_swap__anon_14858.exit.i

155:                                              ; preds = %153
  %156 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %149, i64 %146, ptr nonnull align 1 %1, i64 %146, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %149, i64 %146, ptr nonnull align 1 %1, i64 %146, i64 %156, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit.i

sort.quadsort_swap__anon_14858.exit.i:            ; preds = %155, %153, %152
  %157 = icmp ult i64 %142, 96
  br i1 %157, label %158, label %159

158:                                              ; preds = %sort.quadsort_swap__anon_14858.exit.i
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %142, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

159:                                              ; preds = %sort.quadsort_swap__anon_14858.exit.i
  %160 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %142, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %160, label %161, label %common.ret

161:                                              ; preds = %159
  %162 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %142, ptr nonnull align 1 %1, i64 %142, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %142, ptr nonnull align 1 %1, i64 %142, i64 %162, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

sort.flux_default_partition__anon_16524.exit:     ; preds = %._crit_edge173.i
  %163 = lshr i64 %146, 5
  %164 = icmp ule i64 %142, %163
  %165 = icmp ult i64 %146, 97
  %166 = or i1 %165, %164
  br i1 %166, label %171, label %173

sort.quadsort_swap__anon_14858.exit61:            ; preds = %187, %185, %184, %173
  %167 = lshr i64 %142, 5
  %168 = icmp ule i64 %146, %167
  %169 = icmp ult i64 %142, 97
  %170 = or i1 %169, %168
  br i1 %170, label %189, label %14

171:                                              ; preds = %sort.flux_default_partition__anon_16524.exit
  %172 = icmp ult i64 %141, %7
  br i1 %172, label %common.ret, label %176

173:                                              ; preds = %sort.flux_default_partition__anon_16524.exit
  %174 = mul nuw i64 %142, %7
  %175 = getelementptr inbounds i8, ptr %0, i64 %174
  call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %175, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %15, i64 %146, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit61

176:                                              ; preds = %171
  %177 = icmp eq i64 %.052, %142
  br i1 %177, label %178, label %179

178:                                              ; preds = %176
  call fastcc void @sort.flux_reverse_partition__anon_16523(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

179:                                              ; preds = %176
  %180 = mul nuw i64 %142, %7
  %181 = getelementptr inbounds i8, ptr %0, i64 %180
  %182 = mul nuw i64 %146, %7
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %181, ptr nonnull align 1 %1, i64 %182, i1 false)
  %183 = icmp ult i64 %146, 96
  br i1 %183, label %184, label %185

184:                                              ; preds = %179
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %181, i64 %146, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit61

185:                                              ; preds = %179
  %186 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %181, i64 %146, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %186, label %187, label %sort.quadsort_swap__anon_14858.exit61

187:                                              ; preds = %185
  %188 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %181, i64 %146, ptr nonnull align 1 %1, i64 %146, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %181, i64 %146, ptr nonnull align 1 %1, i64 %146, i64 %188, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %sort.quadsort_swap__anon_14858.exit61

189:                                              ; preds = %sort.quadsort_swap__anon_14858.exit61
  %190 = icmp ult i64 %142, 97
  br i1 %190, label %191, label %197

191:                                              ; preds = %189
  %.not67 = icmp eq i64 %142, 96
  br i1 %.not67, label %193, label %192

192:                                              ; preds = %191
  call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %142, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

193:                                              ; preds = %191
  %194 = call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 96, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %194, label %195, label %common.ret

195:                                              ; preds = %193
  %196 = call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 96, ptr nonnull align 1 %1, i64 96, i64 %196, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret

197:                                              ; preds = %189
  call fastcc void @sort.flux_reverse_partition__anon_16523(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %15, i64 %142, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = mul nuw i64 %6, %2
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = sub i64 0, %6
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = mul nuw i64 %6, %3
  %14 = getelementptr inbounds i8, ptr %12, i64 %13
  %15 = add nuw i64 %2, 1
  %16 = icmp uge i64 %15, %3
  %17 = add nuw i64 %3, 1
  %18 = icmp uge i64 %17, %2
  %19 = select i1 %16, i1 %18, i1 false
  %20 = icmp ugt i64 %2, 31
  %or.cond = select i1 %19, i1 %20, i1 false
  br i1 %or.cond, label %34, label %.critedge

.critedge:                                        ; preds = %47, %42, %39, %34, %8
  %21 = add i64 %2, -1
  %22 = add i64 %21, %3
  %23 = mul nuw i64 %22, %6
  %24 = getelementptr inbounds i8, ptr %0, i64 %23
  %25 = shl nuw i64 %6, 3
  %26 = mul nuw i64 %6, 7
  %27 = sub i64 0, %26
  %28 = shl nuw i64 %6, 4
  %29 = mul i64 %6, -6
  %30 = mul i64 %6, -5
  %31 = mul i64 %6, -4
  %32 = mul i64 %6, -3
  %33 = mul i64 %6, -2
  br label %.loopexit.outer.outer

34:                                               ; preds = %8
  %35 = mul nuw i64 %6, 15
  %36 = getelementptr inbounds i8, ptr %1, i64 %35
  %37 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %36, ptr nonnull align 1 %10) #15
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %.critedge

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, ptr %10, i64 %35
  %41 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %40) #15
  %.not262 = icmp eq i8 %41, 1
  br i1 %.not262, label %.critedge, label %42

42:                                               ; preds = %39
  %43 = sub i64 0, %35
  %44 = getelementptr inbounds i8, ptr %14, i64 %43
  %45 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %12, ptr nonnull align 1 %44) #15
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %.critedge

47:                                               ; preds = %42
  %48 = getelementptr inbounds i8, ptr %12, i64 %43
  %49 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %48, ptr nonnull align 1 %14) #15
  %.not263 = icmp eq i8 %49, 1
  br i1 %.not263, label %.critedge, label %50

common.ret:                                       ; preds = %.lr.ph52, %.preheader
  ret void

50:                                               ; preds = %47
  tail call fastcc void @sort.parity_merge__anon_16486(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nonnull readonly align 4 %7)
  ret void

.loopexit.outer.outer.loopexit:                   ; preds = %179
  %uglygep237 = getelementptr i8, ptr %.2245, i64 %lsr.iv.next235
  %uglygep254 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv.next235
  br label %.loopexit.outer.outer

.loopexit.outer.outer:                            ; preds = %.cont46.preheader, %.loopexit.outer.outer.loopexit, %.critedge
  %.0243.ph.ph = phi ptr [ %24, %.critedge ], [ %150, %.cont46.preheader ], [ %uglygep237, %.loopexit.outer.outer.loopexit ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %146, %.cont46.preheader ], [ %.5239, %.loopexit.outer.outer.loopexit ]
  %.0228.ph.ph = phi ptr [ %14, %.critedge ], [ %.5233.7, %.cont46.preheader ], [ %uglygep254, %.loopexit.outer.outer.loopexit ]
  %.0222.ph.ph = phi ptr [ %12, %.critedge ], [ %.5227.7, %.cont46.preheader ], [ %.2224, %.loopexit.outer.outer.loopexit ]
  %.0213.ph.ph = phi ptr [ %10, %.critedge ], [ %..4217.7, %.cont46.preheader ], [ %.3216, %.loopexit.outer.outer.loopexit ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46.preheader ], [ %.2, %.loopexit.outer.outer.loopexit ]
  br label %.loopexit.outer.outer122

.loopexit.outer.outer122:                         ; preds = %157, %.loopexit.outer.outer
  %.0243.ph.ph123 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %157 ]
  %.0234.ph.ph124 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %173, %157 ]
  %.0222.ph.ph125 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %157 ]
  %.0213.ph.ph126 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %174, %157 ]
  %.0.ph.ph127 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %157 ]
  br label %.loopexit.outer

.loopexit.outer.loopexit:                         ; preds = %90
  %uglygep196 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv.next194
  %uglygep213 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv.next194
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %.loopexit.outer.loopexit, %.loopexit.outer.outer122
  %.0243.ph = phi ptr [ %.0243.ph.ph123, %.loopexit.outer.outer122 ], [ %uglygep196, %.loopexit.outer.loopexit ]
  %.0234.ph = phi ptr [ %.0234.ph.ph124, %.loopexit.outer.outer122 ], [ %.3237, %.loopexit.outer.loopexit ]
  %.0222.ph = phi ptr [ %.0222.ph.ph125, %.loopexit.outer.outer122 ], [ %uglygep213, %.loopexit.outer.loopexit ]
  %.0.ph = phi ptr [ %.0.ph.ph127, %.loopexit.outer.outer122 ], [ %.3, %.loopexit.outer.loopexit ]
  br label %.loopexit

.loopexit:                                        ; preds = %67, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %83, %67 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %84, %67 ]
  %51 = ptrtoint ptr %.0222.ph to i64
  %52 = ptrtoint ptr %.0 to i64
  %53 = sub nsw i64 %51, %52
  %54 = icmp sgt i64 %53, %25
  br i1 %54, label %.preheader12.preheader, label %.loopexit10

.preheader12.preheader:                           ; preds = %.loopexit
  %55 = ptrtoint ptr %.0 to i64
  %56 = ptrtoint ptr %.0222.ph to i64
  %57 = sub i64 %56, %55
  br label %.preheader12

.loopexit10.loopexit:                             ; preds = %87
  %uglygep195 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv193
  %uglygep212 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv193
  br label %.loopexit10

.loopexit10:                                      ; preds = %.loopexit10.loopexit, %.loopexit
  %.2245 = phi ptr [ %uglygep195, %.loopexit10.loopexit ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %.loopexit10.loopexit ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %uglygep212, %.loopexit10.loopexit ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %.loopexit10.loopexit ], [ %.0, %.loopexit ]
  %58 = ptrtoint ptr %.0228.ph.ph to i64
  %59 = ptrtoint ptr %.0213.ph.ph126 to i64
  %60 = sub nsw i64 %58, %59
  %61 = icmp sgt i64 %60, %25
  br i1 %61, label %.preheader7.preheader, label %.loopexit5

.preheader7.preheader:                            ; preds = %.loopexit10
  %62 = ptrtoint ptr %.0213.ph.ph126 to i64
  %63 = ptrtoint ptr %.0228.ph.ph to i64
  %64 = sub i64 %63, %62
  br label %.preheader7

.preheader12:                                     ; preds = %67, %.preheader12.preheader
  %lsr.iv215 = phi i64 [ %57, %.preheader12.preheader ], [ %lsr.iv.next216, %67 ]
  %.3237 = phi ptr [ %83, %67 ], [ %.0234, %.preheader12.preheader ]
  %.3 = phi ptr [ %84, %67 ], [ %.0, %.preheader12.preheader ]
  %65 = getelementptr inbounds i8, ptr %.3, i64 %26
  %66 = tail call i8 %4(ptr align 1 %5, ptr align 1 %65, ptr align 1 %.0213.ph.ph126) #15
  %.not259 = icmp eq i8 %66, 1
  br i1 %.not259, label %.preheader9, label %67

.preheader9:                                      ; preds = %.preheader12
  %uglygep198 = getelementptr i8, ptr %.0243.ph, i64 %27
  %uglygep200 = getelementptr i8, ptr %.0243.ph, i64 %29
  %uglygep202 = getelementptr i8, ptr %.0243.ph, i64 %30
  %uglygep204 = getelementptr i8, ptr %.0243.ph, i64 %31
  %uglygep206 = getelementptr i8, ptr %.0243.ph, i64 %32
  %uglygep208 = getelementptr i8, ptr %.0243.ph, i64 %33
  %uglygep210 = getelementptr i8, ptr %.0243.ph, i64 %11
  %uglygep219 = getelementptr i8, ptr %.0222.ph, i64 %27
  %uglygep222 = getelementptr i8, ptr %.0222.ph, i64 %29
  %uglygep224 = getelementptr i8, ptr %.0222.ph, i64 %30
  %uglygep226 = getelementptr i8, ptr %.0222.ph, i64 %31
  %uglygep228 = getelementptr i8, ptr %.0222.ph, i64 %32
  %uglygep230 = getelementptr i8, ptr %.0222.ph, i64 %33
  %uglygep232 = getelementptr i8, ptr %.0222.ph, i64 %11
  br label %87

67:                                               ; preds = %.preheader12
  %68 = ptrtoint ptr %.0222.ph to i64
  tail call void %7(ptr align 1 %.3237, ptr align 1 %.3) #15
  %69 = getelementptr inbounds i8, ptr %.3237, i64 %6
  %70 = getelementptr inbounds i8, ptr %.3, i64 %6
  tail call void %7(ptr align 1 %69, ptr align 1 %70) #15
  %71 = getelementptr inbounds i8, ptr %69, i64 %6
  %72 = getelementptr inbounds i8, ptr %70, i64 %6
  tail call void %7(ptr align 1 %71, ptr align 1 %72) #15
  %73 = getelementptr inbounds i8, ptr %71, i64 %6
  %74 = getelementptr inbounds i8, ptr %72, i64 %6
  tail call void %7(ptr align 1 %73, ptr align 1 %74) #15
  %75 = getelementptr inbounds i8, ptr %73, i64 %6
  %76 = getelementptr inbounds i8, ptr %74, i64 %6
  tail call void %7(ptr align 1 %75, ptr align 1 %76) #15
  %77 = getelementptr inbounds i8, ptr %75, i64 %6
  %78 = getelementptr inbounds i8, ptr %76, i64 %6
  tail call void %7(ptr align 1 %77, ptr align 1 %78) #15
  %79 = getelementptr inbounds i8, ptr %77, i64 %6
  %80 = getelementptr inbounds i8, ptr %78, i64 %6
  tail call void %7(ptr align 1 %79, ptr align 1 %80) #15
  %81 = getelementptr inbounds i8, ptr %79, i64 %6
  %82 = getelementptr inbounds i8, ptr %80, i64 %6
  tail call void %7(ptr align 1 %81, ptr align 1 %82) #15
  %83 = getelementptr inbounds i8, ptr %81, i64 %6
  %84 = getelementptr inbounds i8, ptr %82, i64 %6
  %85 = ptrtoint ptr %84 to i64
  %86 = sub nuw i64 %68, %85
  %.not261 = icmp ugt i64 %86, %25
  %lsr.iv.next216 = sub i64 %lsr.iv215, %25
  br i1 %.not261, label %.preheader12, label %.loopexit

87:                                               ; preds = %90, %.preheader9
  %lsr.iv217 = phi i64 [ %lsr.iv215, %.preheader9 ], [ %lsr.iv.next218, %90 ]
  %lsr.iv193 = phi i64 [ 0, %.preheader9 ], [ %lsr.iv.next194, %90 ]
  %uglygep197 = getelementptr i8, ptr %.0243.ph, i64 %lsr.iv193
  %uglygep214 = getelementptr i8, ptr %.0222.ph, i64 %lsr.iv193
  %uglygep221 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv193
  %88 = tail call i8 %4(ptr align 1 %5, ptr align 1 %uglygep221, ptr align 1 %.0228.ph.ph) #15
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %90, label %.loopexit10.loopexit

90:                                               ; preds = %87
  tail call void %7(ptr align 1 %uglygep197, ptr align 1 %uglygep214) #15
  %uglygep211 = getelementptr i8, ptr %uglygep210, i64 %lsr.iv193
  %uglygep233 = getelementptr i8, ptr %uglygep232, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep211, ptr align 1 %uglygep233) #15
  %uglygep209 = getelementptr i8, ptr %uglygep208, i64 %lsr.iv193
  %uglygep231 = getelementptr i8, ptr %uglygep230, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep209, ptr align 1 %uglygep231) #15
  %uglygep207 = getelementptr i8, ptr %uglygep206, i64 %lsr.iv193
  %uglygep229 = getelementptr i8, ptr %uglygep228, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep207, ptr align 1 %uglygep229) #15
  %uglygep205 = getelementptr i8, ptr %uglygep204, i64 %lsr.iv193
  %uglygep227 = getelementptr i8, ptr %uglygep226, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep205, ptr align 1 %uglygep227) #15
  %uglygep203 = getelementptr i8, ptr %uglygep202, i64 %lsr.iv193
  %uglygep225 = getelementptr i8, ptr %uglygep224, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep203, ptr align 1 %uglygep225) #15
  %uglygep201 = getelementptr i8, ptr %uglygep200, i64 %lsr.iv193
  %uglygep223 = getelementptr i8, ptr %uglygep222, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep201, ptr align 1 %uglygep223) #15
  %uglygep199 = getelementptr i8, ptr %uglygep198, i64 %lsr.iv193
  %uglygep220 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv193
  tail call void %7(ptr align 1 %uglygep199, ptr align 1 %uglygep220) #15
  %lsr.iv.next194 = sub i64 %lsr.iv193, %25
  %lsr.iv.next218 = sub i64 %lsr.iv217, %25
  %.not260 = icmp ugt i64 %lsr.iv.next218, %25
  br i1 %.not260, label %87, label %.loopexit.outer.loopexit

.loopexit5.loopexit:                              ; preds = %177
  %uglygep236 = getelementptr i8, ptr %.2245, i64 %lsr.iv234
  %uglygep253 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv234
  br label %.loopexit5

.loopexit5:                                       ; preds = %.loopexit5.loopexit, %.loopexit10
  %.4247 = phi ptr [ %uglygep236, %.loopexit5.loopexit ], [ %.2245, %.loopexit10 ]
  %.4238 = phi ptr [ %.5239, %.loopexit5.loopexit ], [ %.2236, %.loopexit10 ]
  %.2230 = phi ptr [ %uglygep253, %.loopexit5.loopexit ], [ %.0228.ph.ph, %.loopexit10 ]
  %.2215 = phi ptr [ %.3216, %.loopexit5.loopexit ], [ %.0213.ph.ph126, %.loopexit10 ]
  %91 = ptrtoint ptr %.4247 to i64
  %92 = ptrtoint ptr %.4238 to i64
  %93 = sub nuw i64 %91, %92
  %94 = icmp ult i64 %93, %28
  br i1 %94, label %.preheader2, label %.cont46.preheader

.cont46.preheader:                                ; preds = %.loopexit5
  %95 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %.2215) #15
  %.not = icmp eq i8 %95, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  tail call void %7(ptr align 1 %.4238, ptr align 1 %.sroa.speculated42) #15
  %96 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 %6
  %..4217 = select i1 %.not, ptr %96, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %96
  %97 = getelementptr inbounds i8, ptr %.4238, i64 %6
  %98 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %.2230) #15
  %99 = icmp eq i8 %98, 1
  %.sroa.speculated105 = select i1 %99, ptr %.2224, ptr %.2230
  tail call void %7(ptr align 1 %.4247, ptr align 1 %.sroa.speculated105) #15
  %100 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 %11
  %.5233 = select i1 %99, ptr %.2230, ptr %100
  %.5227 = select i1 %99, ptr %100, ptr %.2224
  %101 = getelementptr inbounds i8, ptr %.4247, i64 %11
  %102 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4., ptr align 1 %..4217) #15
  %.not.1 = icmp eq i8 %102, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  tail call void %7(ptr align 1 %97, ptr align 1 %.sroa.speculated42.1) #15
  %103 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 %6
  %..4217.1 = select i1 %.not.1, ptr %103, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %103
  %104 = getelementptr inbounds i8, ptr %97, i64 %6
  %105 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227, ptr align 1 %.5233) #15
  %106 = icmp eq i8 %105, 1
  %.sroa.speculated105.1 = select i1 %106, ptr %.5227, ptr %.5233
  tail call void %7(ptr align 1 %101, ptr align 1 %.sroa.speculated105.1) #15
  %107 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 %11
  %.5233.1 = select i1 %106, ptr %.5233, ptr %107
  %.5227.1 = select i1 %106, ptr %107, ptr %.5227
  %108 = getelementptr inbounds i8, ptr %101, i64 %11
  %109 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..1, ptr align 1 %..4217.1) #15
  %.not.2 = icmp eq i8 %109, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  tail call void %7(ptr align 1 %104, ptr align 1 %.sroa.speculated42.2) #15
  %110 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 %6
  %..4217.2 = select i1 %.not.2, ptr %110, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %110
  %111 = getelementptr inbounds i8, ptr %104, i64 %6
  %112 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.1, ptr align 1 %.5233.1) #15
  %113 = icmp eq i8 %112, 1
  %.sroa.speculated105.2 = select i1 %113, ptr %.5227.1, ptr %.5233.1
  tail call void %7(ptr align 1 %108, ptr align 1 %.sroa.speculated105.2) #15
  %114 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 %11
  %.5233.2 = select i1 %113, ptr %.5233.1, ptr %114
  %.5227.2 = select i1 %113, ptr %114, ptr %.5227.1
  %115 = getelementptr inbounds i8, ptr %108, i64 %11
  %116 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..2, ptr align 1 %..4217.2) #15
  %.not.3 = icmp eq i8 %116, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  tail call void %7(ptr align 1 %111, ptr align 1 %.sroa.speculated42.3) #15
  %117 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 %6
  %..4217.3 = select i1 %.not.3, ptr %117, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %117
  %118 = getelementptr inbounds i8, ptr %111, i64 %6
  %119 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.2, ptr align 1 %.5233.2) #15
  %120 = icmp eq i8 %119, 1
  %.sroa.speculated105.3 = select i1 %120, ptr %.5227.2, ptr %.5233.2
  tail call void %7(ptr align 1 %115, ptr align 1 %.sroa.speculated105.3) #15
  %121 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 %11
  %.5233.3 = select i1 %120, ptr %.5233.2, ptr %121
  %.5227.3 = select i1 %120, ptr %121, ptr %.5227.2
  %122 = getelementptr inbounds i8, ptr %115, i64 %11
  %123 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..3, ptr align 1 %..4217.3) #15
  %.not.4 = icmp eq i8 %123, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  tail call void %7(ptr align 1 %118, ptr align 1 %.sroa.speculated42.4) #15
  %124 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 %6
  %..4217.4 = select i1 %.not.4, ptr %124, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %124
  %125 = getelementptr inbounds i8, ptr %118, i64 %6
  %126 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.3, ptr align 1 %.5233.3) #15
  %127 = icmp eq i8 %126, 1
  %.sroa.speculated105.4 = select i1 %127, ptr %.5227.3, ptr %.5233.3
  tail call void %7(ptr align 1 %122, ptr align 1 %.sroa.speculated105.4) #15
  %128 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 %11
  %.5233.4 = select i1 %127, ptr %.5233.3, ptr %128
  %.5227.4 = select i1 %127, ptr %128, ptr %.5227.3
  %129 = getelementptr inbounds i8, ptr %122, i64 %11
  %130 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..4, ptr align 1 %..4217.4) #15
  %.not.5 = icmp eq i8 %130, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  tail call void %7(ptr align 1 %125, ptr align 1 %.sroa.speculated42.5) #15
  %131 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 %6
  %..4217.5 = select i1 %.not.5, ptr %131, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %131
  %132 = getelementptr inbounds i8, ptr %125, i64 %6
  %133 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.4, ptr align 1 %.5233.4) #15
  %134 = icmp eq i8 %133, 1
  %.sroa.speculated105.5 = select i1 %134, ptr %.5227.4, ptr %.5233.4
  tail call void %7(ptr align 1 %129, ptr align 1 %.sroa.speculated105.5) #15
  %135 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 %11
  %.5233.5 = select i1 %134, ptr %.5233.4, ptr %135
  %.5227.5 = select i1 %134, ptr %135, ptr %.5227.4
  %136 = getelementptr inbounds i8, ptr %129, i64 %11
  %137 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..5, ptr align 1 %..4217.5) #15
  %.not.6 = icmp eq i8 %137, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  tail call void %7(ptr align 1 %132, ptr align 1 %.sroa.speculated42.6) #15
  %138 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 %6
  %..4217.6 = select i1 %.not.6, ptr %138, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %138
  %139 = getelementptr inbounds i8, ptr %132, i64 %6
  %140 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.5, ptr align 1 %.5233.5) #15
  %141 = icmp eq i8 %140, 1
  %.sroa.speculated105.6 = select i1 %141, ptr %.5227.5, ptr %.5233.5
  tail call void %7(ptr align 1 %136, ptr align 1 %.sroa.speculated105.6) #15
  %142 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 %11
  %.5233.6 = select i1 %141, ptr %.5233.5, ptr %142
  %.5227.6 = select i1 %141, ptr %142, ptr %.5227.5
  %143 = getelementptr inbounds i8, ptr %136, i64 %11
  %144 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.4..6, ptr align 1 %..4217.6) #15
  %.not.7 = icmp eq i8 %144, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  tail call void %7(ptr align 1 %139, ptr align 1 %.sroa.speculated42.7) #15
  %145 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 %6
  %..4217.7 = select i1 %.not.7, ptr %145, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %145
  %146 = getelementptr inbounds i8, ptr %139, i64 %6
  %147 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.5227.6, ptr align 1 %.5233.6) #15
  %148 = icmp eq i8 %147, 1
  %.sroa.speculated105.7 = select i1 %148, ptr %.5227.6, ptr %.5233.6
  tail call void %7(ptr align 1 %143, ptr align 1 %.sroa.speculated105.7) #15
  %149 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 %11
  %.5233.7 = select i1 %148, ptr %.5233.6, ptr %149
  %.5227.7 = select i1 %148, ptr %149, ptr %.5227.6
  %150 = getelementptr inbounds i8, ptr %143, i64 %11
  br label %.loopexit.outer.outer

.preheader2:                                      ; preds = %.loopexit5
  %151 = icmp ule ptr %.2, %.2224
  %152 = icmp ule ptr %.2215, %.2230
  %153 = select i1 %151, i1 %152, i1 false
  br i1 %153, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader7:                                      ; preds = %157, %.preheader7.preheader
  %lsr.iv257 = phi i64 [ %64, %.preheader7.preheader ], [ %lsr.iv.next258, %157 ]
  %.5239 = phi ptr [ %173, %157 ], [ %.2236, %.preheader7.preheader ]
  %.3216 = phi ptr [ %174, %157 ], [ %.0213.ph.ph126, %.preheader7.preheader ]
  %154 = getelementptr inbounds i8, ptr %.3216, i64 %26
  %155 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2, ptr align 1 %154) #15
  %156 = icmp eq i8 %155, 1
  br i1 %156, label %157, label %.preheader4

.preheader4:                                      ; preds = %.preheader7
  %uglygep239 = getelementptr i8, ptr %.2245, i64 %27
  %uglygep241 = getelementptr i8, ptr %.2245, i64 %29
  %uglygep243 = getelementptr i8, ptr %.2245, i64 %30
  %uglygep245 = getelementptr i8, ptr %.2245, i64 %31
  %uglygep247 = getelementptr i8, ptr %.2245, i64 %32
  %uglygep249 = getelementptr i8, ptr %.2245, i64 %33
  %uglygep251 = getelementptr i8, ptr %.2245, i64 %11
  %uglygep261 = getelementptr i8, ptr %.0228.ph.ph, i64 %27
  %uglygep264 = getelementptr i8, ptr %.0228.ph.ph, i64 %29
  %uglygep266 = getelementptr i8, ptr %.0228.ph.ph, i64 %30
  %uglygep268 = getelementptr i8, ptr %.0228.ph.ph, i64 %31
  %uglygep270 = getelementptr i8, ptr %.0228.ph.ph, i64 %32
  %uglygep272 = getelementptr i8, ptr %.0228.ph.ph, i64 %33
  %uglygep274 = getelementptr i8, ptr %.0228.ph.ph, i64 %11
  br label %177

157:                                              ; preds = %.preheader7
  %158 = ptrtoint ptr %.0228.ph.ph to i64
  tail call void %7(ptr align 1 %.5239, ptr align 1 %.3216) #15
  %159 = getelementptr inbounds i8, ptr %.5239, i64 %6
  %160 = getelementptr inbounds i8, ptr %.3216, i64 %6
  tail call void %7(ptr align 1 %159, ptr align 1 %160) #15
  %161 = getelementptr inbounds i8, ptr %159, i64 %6
  %162 = getelementptr inbounds i8, ptr %160, i64 %6
  tail call void %7(ptr align 1 %161, ptr align 1 %162) #15
  %163 = getelementptr inbounds i8, ptr %161, i64 %6
  %164 = getelementptr inbounds i8, ptr %162, i64 %6
  tail call void %7(ptr align 1 %163, ptr align 1 %164) #15
  %165 = getelementptr inbounds i8, ptr %163, i64 %6
  %166 = getelementptr inbounds i8, ptr %164, i64 %6
  tail call void %7(ptr align 1 %165, ptr align 1 %166) #15
  %167 = getelementptr inbounds i8, ptr %165, i64 %6
  %168 = getelementptr inbounds i8, ptr %166, i64 %6
  tail call void %7(ptr align 1 %167, ptr align 1 %168) #15
  %169 = getelementptr inbounds i8, ptr %167, i64 %6
  %170 = getelementptr inbounds i8, ptr %168, i64 %6
  tail call void %7(ptr align 1 %169, ptr align 1 %170) #15
  %171 = getelementptr inbounds i8, ptr %169, i64 %6
  %172 = getelementptr inbounds i8, ptr %170, i64 %6
  tail call void %7(ptr align 1 %171, ptr align 1 %172) #15
  %173 = getelementptr inbounds i8, ptr %171, i64 %6
  %174 = getelementptr inbounds i8, ptr %172, i64 %6
  %175 = ptrtoint ptr %174 to i64
  %176 = sub nuw i64 %158, %175
  %.not258 = icmp ugt i64 %176, %25
  %lsr.iv.next258 = sub i64 %lsr.iv257, %25
  br i1 %.not258, label %.preheader7, label %.loopexit.outer.outer122

177:                                              ; preds = %179, %.preheader4
  %lsr.iv259 = phi i64 [ %lsr.iv257, %.preheader4 ], [ %lsr.iv.next260, %179 ]
  %lsr.iv234 = phi i64 [ 0, %.preheader4 ], [ %lsr.iv.next235, %179 ]
  %uglygep238 = getelementptr i8, ptr %.2245, i64 %lsr.iv234
  %uglygep255 = getelementptr i8, ptr %.0228.ph.ph, i64 %lsr.iv234
  %uglygep263 = getelementptr i8, ptr %uglygep261, i64 %lsr.iv234
  %178 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.2224, ptr align 1 %uglygep263) #15
  %.not256 = icmp eq i8 %178, 1
  br i1 %.not256, label %.loopexit5.loopexit, label %179

179:                                              ; preds = %177
  tail call void %7(ptr align 1 %uglygep238, ptr align 1 %uglygep255) #15
  %uglygep252 = getelementptr i8, ptr %uglygep251, i64 %lsr.iv234
  %uglygep275 = getelementptr i8, ptr %uglygep274, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep252, ptr align 1 %uglygep275) #15
  %uglygep250 = getelementptr i8, ptr %uglygep249, i64 %lsr.iv234
  %uglygep273 = getelementptr i8, ptr %uglygep272, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep250, ptr align 1 %uglygep273) #15
  %uglygep248 = getelementptr i8, ptr %uglygep247, i64 %lsr.iv234
  %uglygep271 = getelementptr i8, ptr %uglygep270, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep248, ptr align 1 %uglygep271) #15
  %uglygep246 = getelementptr i8, ptr %uglygep245, i64 %lsr.iv234
  %uglygep269 = getelementptr i8, ptr %uglygep268, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep246, ptr align 1 %uglygep269) #15
  %uglygep244 = getelementptr i8, ptr %uglygep243, i64 %lsr.iv234
  %uglygep267 = getelementptr i8, ptr %uglygep266, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep244, ptr align 1 %uglygep267) #15
  %uglygep242 = getelementptr i8, ptr %uglygep241, i64 %lsr.iv234
  %uglygep265 = getelementptr i8, ptr %uglygep264, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep242, ptr align 1 %uglygep265) #15
  %uglygep240 = getelementptr i8, ptr %uglygep239, i64 %lsr.iv234
  %uglygep262 = getelementptr i8, ptr %uglygep261, i64 %lsr.iv234
  tail call void %7(ptr align 1 %uglygep240, ptr align 1 %uglygep262) #15
  %lsr.iv.next235 = sub i64 %lsr.iv234, %25
  %lsr.iv.next260 = sub i64 %lsr.iv259, %25
  %.not257 = icmp ugt i64 %lsr.iv.next260, %25
  br i1 %.not257, label %177, label %.loopexit.outer.outer.loopexit

.preheader1:                                      ; preds = %select.end276, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %183, %select.end276 ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %select.end276 ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %select.end276 ]
  %.not25345 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25345, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %select.end276, %.cont.preheader
  %.642 = phi ptr [ %.6., %select.end276 ], [ %.2, %.cont.preheader ]
  %.621941 = phi ptr [ %..6219, %select.end276 ], [ %.2215, %.cont.preheader ]
  %.724140 = phi ptr [ %183, %select.end276 ], [ %.4238, %.cont.preheader ]
  %180 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.642, ptr align 1 %.621941) #15
  %.sroa.speculated.frozen = freeze i8 %180
  %.not255 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not255, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.621941, %.cont ], [ %.642, %select.false ]
  %..6219.frozen = freeze i8 %180
  %181 = icmp eq i8 %..6219.frozen, 1
  tail call void %7(ptr align 1 %.724140, ptr align 1 %.sroa.speculated) #15
  %182 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  br i1 %181, label %select.end276, label %select.false277

select.false277:                                  ; preds = %select.end
  br label %select.end276

select.end276:                                    ; preds = %select.false277, %select.end
  %..6219 = phi ptr [ %182, %select.end ], [ %.621941, %select.false277 ]
  %.6. = phi ptr [ %.642, %select.end ], [ %182, %select.false277 ]
  %183 = getelementptr inbounds i8, ptr %.724140, i64 %6
  %184 = icmp ule ptr %.6., %.2224
  %185 = icmp ule ptr %..6219, %.2230
  %186 = select i1 %184, i1 %185, i1 false
  br i1 %186, label %.cont, label %.preheader1

.preheader.loopexit:                              ; preds = %.lr.ph
  %uglygep192 = getelementptr i8, ptr %.7241.lcssa, i64 %lsr.iv.next188
  br label %.preheader

.preheader:                                       ; preds = %.preheader.loopexit, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %uglygep192, %.preheader.loopexit ]
  %.not25449 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25449, label %common.ret, label %.lr.ph52.preheader

.lr.ph52.preheader:                               ; preds = %.preheader
  br label %.lr.ph52

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv187 = phi i64 [ 0, %.lr.ph.preheader ], [ %lsr.iv.next188, %.lr.ph ]
  %uglygep189 = getelementptr i8, ptr %.6.lcssa, i64 %lsr.iv187
  %uglygep191 = getelementptr i8, ptr %.7241.lcssa, i64 %lsr.iv187
  tail call void %7(ptr align 1 %uglygep191, ptr align 1 %uglygep189) #15
  %lsr.iv.next188 = add i64 %lsr.iv187, %6
  %uglygep190 = getelementptr i8, ptr %.6.lcssa, i64 %lsr.iv.next188
  %.not253 = icmp ugt ptr %uglygep190, %.2224
  br i1 %.not253, label %.preheader.loopexit, label %.lr.ph

.lr.ph52:                                         ; preds = %.lr.ph52, %.lr.ph52.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph52.preheader ], [ %lsr.iv.next, %.lr.ph52 ]
  %uglygep = getelementptr i8, ptr %.6219.lcssa, i64 %lsr.iv
  %uglygep186 = getelementptr i8, ptr %.8242.lcssa, i64 %lsr.iv
  tail call void %7(ptr align 1 %uglygep186, ptr align 1 %uglygep) #15
  %lsr.iv.next = add i64 %lsr.iv, %6
  %uglygep185 = getelementptr i8, ptr %.6219.lcssa, i64 %lsr.iv.next
  %.not254 = icmp ugt ptr %uglygep185, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph52
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = alloca [864 x i8], align 16
  %10 = alloca i64, align 8
  %11 = ptrtoint ptr %9 to i64
  %12 = lshr i64 %11, 4
  %13 = getelementptr inbounds i8, ptr %9, i64 8
  %14 = getelementptr inbounds i8, ptr %9, i64 16
  %15 = getelementptr inbounds i8, ptr %9, i64 32
  %16 = getelementptr inbounds i8, ptr %9, i64 40
  %17 = getelementptr inbounds i8, ptr %9, i64 48
  br label %18

18:                                               ; preds = %sort.quadsort_swap__anon_14861.exit63, %8
  %.053 = phi i64 [ 0, %8 ], [ %319, %sort.quadsort_swap__anon_14861.exit63 ]
  %.052 = phi i64 [ %4, %8 ], [ %319, %sort.quadsort_swap__anon_14861.exit63 ]
  %.051 = phi ptr [ %2, %8 ], [ %0, %sort.quadsort_swap__anon_14861.exit63 ]
  %.0 = phi ptr [ %3, %8 ], [ %19, %sort.quadsort_swap__anon_14861.exit63 ]
  %19 = getelementptr inbounds i8, ptr %.0, i64 -8
  %20 = icmp ult i64 %.052, 2049
  br i1 %20, label %22, label %135

21:                                               ; preds = %sort.median_of_cube_root__anon_16530.exit, %22
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %211

22:                                               ; preds = %18
  call void @llvm.lifetime.start.p0(i64 864, ptr nonnull %9)
  %.lhs.trunc = trunc i64 %.052 to i16
  %23 = udiv i16 %.lhs.trunc, 9
  %24 = zext i16 %23 to i64
  %25 = shl nuw nsw i64 %24, 3
  %26 = load i64, ptr %.051, align 8
  store i64 %26, ptr %9, align 16
  %27 = getelementptr inbounds i8, ptr %.051, i64 %25
  %28 = load i64, ptr %27, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %28, ptr %sunkaddr, align 8
  %29 = getelementptr inbounds i8, ptr %27, i64 %25
  %30 = load i64, ptr %29, align 8
  %sunkaddr87 = getelementptr inbounds i8, ptr %9, i64 16
  store i64 %30, ptr %sunkaddr87, align 16
  %31 = getelementptr inbounds i8, ptr %29, i64 %25
  %32 = load i64, ptr %31, align 8
  %sunkaddr88 = getelementptr inbounds i8, ptr %9, i64 24
  store i64 %32, ptr %sunkaddr88, align 8
  %33 = getelementptr inbounds i8, ptr %31, i64 %25
  %34 = load i64, ptr %33, align 8
  %sunkaddr89 = getelementptr inbounds i8, ptr %9, i64 32
  store i64 %34, ptr %sunkaddr89, align 16
  %35 = getelementptr inbounds i8, ptr %33, i64 %25
  %36 = load i64, ptr %35, align 8
  %sunkaddr90 = getelementptr inbounds i8, ptr %9, i64 40
  store i64 %36, ptr %sunkaddr90, align 8
  %37 = getelementptr inbounds i8, ptr %35, i64 %25
  %38 = load i64, ptr %37, align 8
  %sunkaddr91 = getelementptr inbounds i8, ptr %9, i64 48
  store i64 %38, ptr %sunkaddr91, align 16
  %39 = getelementptr inbounds i8, ptr %37, i64 %25
  %40 = load i64, ptr %39, align 8
  %sunkaddr92 = getelementptr inbounds i8, ptr %9, i64 56
  store i64 %40, ptr %sunkaddr92, align 8
  %41 = getelementptr inbounds i8, ptr %39, i64 %25
  %42 = load i64, ptr %41, align 8
  call void %7(ptr align 1 %6, i64 4) #15
  %43 = inttoptr i64 %26 to ptr
  %44 = inttoptr i64 %28 to ptr
  %45 = call i8 %5(ptr align 1 %6, ptr align 1 %43, ptr align 1 %44) #15
  %.not.i.i = icmp eq i8 %45, 1
  %..i.i = select i1 %.not.i.i, i64 8, i64 0
  %.1.i.i = select i1 %.not.i.i, i64 0, i64 8
  %46 = getelementptr inbounds i8, ptr %9, i64 %.1.i.i
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds i8, ptr %9, i64 %..i.i
  %49 = load i64, ptr %48, align 8
  store i64 %49, ptr %9, align 16
  store i64 %47, ptr %sunkaddr, align 8
  %50 = inttoptr i64 %30 to ptr
  %51 = inttoptr i64 %32 to ptr
  %52 = call i8 %5(ptr align 1 %6, ptr align 1 %50, ptr align 1 %51) #15
  %.not26.i.i = icmp eq i8 %52, 1
  %.2.i.i = select i1 %.not26.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not26.i.i, i64 0, i64 8
  %53 = getelementptr inbounds i8, ptr %14, i64 %.3.i.i
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %14, i64 %.2.i.i
  %56 = load i64, ptr %55, align 8
  store i64 %56, ptr %sunkaddr87, align 16
  store i64 %54, ptr %sunkaddr88, align 8
  %57 = inttoptr i64 %49 to ptr
  %.cast.i.i = inttoptr i64 %56 to ptr
  %58 = call i8 %5(ptr align 1 %6, ptr align 1 %57, ptr align 1 %.cast.i.i) #15
  %.not27.i.i = icmp eq i8 %58, 1
  %59 = select i1 %.not27.i.i, i64 0, i64 16
  %60 = getelementptr inbounds i8, ptr %9, i64 %59
  %61 = load i64, ptr %60, align 16
  store i64 %61, ptr %sunkaddr87, align 16
  %62 = inttoptr i64 %47 to ptr
  %63 = inttoptr i64 %54 to ptr
  %64 = call i8 %5(ptr align 1 %6, ptr align 1 %62, ptr align 1 %63) #15
  %65 = icmp eq i8 %64, 1
  %66 = select i1 %65, i64 16, i64 0
  %67 = getelementptr inbounds i8, ptr %13, i64 %66
  %68 = load i64, ptr %67, align 8
  store i64 %68, ptr %sunkaddr, align 8
  call void %7(ptr align 1 %6, i64 4) #15
  %69 = inttoptr i64 %34 to ptr
  %70 = inttoptr i64 %36 to ptr
  %71 = call i8 %5(ptr align 1 %6, ptr align 1 %69, ptr align 1 %70) #15
  %.not.i3.i = icmp eq i8 %71, 1
  %..i4.i = select i1 %.not.i3.i, i64 8, i64 0
  %.1.i5.i = select i1 %.not.i3.i, i64 0, i64 8
  %72 = getelementptr inbounds i8, ptr %15, i64 %.1.i5.i
  %73 = load i64, ptr %72, align 8
  %74 = getelementptr inbounds i8, ptr %15, i64 %..i4.i
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %sunkaddr89, align 16
  store i64 %73, ptr %sunkaddr90, align 8
  %76 = inttoptr i64 %38 to ptr
  %77 = inttoptr i64 %40 to ptr
  %78 = call i8 %5(ptr align 1 %6, ptr align 1 %76, ptr align 1 %77) #15
  %.not26.i6.i = icmp eq i8 %78, 1
  %.2.i7.i = select i1 %.not26.i6.i, i64 8, i64 0
  %.3.i8.i = select i1 %.not26.i6.i, i64 0, i64 8
  %79 = getelementptr inbounds i8, ptr %17, i64 %.3.i8.i
  %80 = load i64, ptr %79, align 8
  %81 = getelementptr inbounds i8, ptr %17, i64 %.2.i7.i
  %82 = load i64, ptr %81, align 8
  store i64 %82, ptr %sunkaddr91, align 16
  store i64 %80, ptr %sunkaddr92, align 8
  %83 = inttoptr i64 %75 to ptr
  %.cast.i9.i = inttoptr i64 %82 to ptr
  %84 = call i8 %5(ptr align 1 %6, ptr align 1 %83, ptr align 1 %.cast.i9.i) #15
  %.not27.i10.i = icmp eq i8 %84, 1
  %85 = select i1 %.not27.i10.i, i64 0, i64 16
  %86 = getelementptr inbounds i8, ptr %15, i64 %85
  %87 = load i64, ptr %86, align 16
  store i64 %87, ptr %sunkaddr91, align 16
  %88 = inttoptr i64 %73 to ptr
  %89 = inttoptr i64 %80 to ptr
  %90 = call i8 %5(ptr align 1 %6, ptr align 1 %88, ptr align 1 %89) #15
  %91 = icmp eq i8 %90, 1
  %92 = select i1 %91, i64 16, i64 0
  %93 = getelementptr inbounds i8, ptr %16, i64 %92
  %94 = load i64, ptr %93, align 8
  store i64 %94, ptr %9, align 16
  store i64 %42, ptr %sunkaddr88, align 8
  call void %7(ptr align 1 %6, i64 4) #15
  %.cast.i = inttoptr i64 %94 to ptr
  %95 = inttoptr i64 %68 to ptr
  %96 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast.i, ptr align 1 %95) #15
  %.not.i11.i = icmp eq i8 %96, 1
  %..i12.i = select i1 %.not.i11.i, i64 8, i64 0
  %.1.i13.i = select i1 %.not.i11.i, i64 0, i64 8
  %97 = getelementptr inbounds i8, ptr %9, i64 %.1.i13.i
  %98 = load i64, ptr %97, align 8
  %99 = getelementptr inbounds i8, ptr %9, i64 %..i12.i
  %100 = load i64, ptr %99, align 8
  store i64 %100, ptr %9, align 16
  store i64 %98, ptr %sunkaddr, align 8
  %101 = inttoptr i64 %61 to ptr
  %102 = inttoptr i64 %42 to ptr
  %103 = call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %102) #15
  %.not26.i14.i = icmp eq i8 %103, 1
  %.2.i15.i = select i1 %.not26.i14.i, i64 8, i64 0
  %.3.i16.i = select i1 %.not26.i14.i, i64 0, i64 8
  %104 = getelementptr inbounds i8, ptr %14, i64 %.3.i16.i
  %105 = load i64, ptr %104, align 8
  %106 = getelementptr inbounds i8, ptr %14, i64 %.2.i15.i
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %sunkaddr87, align 16
  store i64 %105, ptr %sunkaddr88, align 8
  %108 = inttoptr i64 %100 to ptr
  %.cast.i17.i = inttoptr i64 %107 to ptr
  %109 = call i8 %5(ptr align 1 %6, ptr align 1 %108, ptr align 1 %.cast.i17.i) #15
  %.not27.i18.i = icmp eq i8 %109, 1
  %110 = select i1 %.not27.i18.i, i64 0, i64 16
  %111 = getelementptr inbounds i8, ptr %9, i64 %110
  %112 = load i64, ptr %111, align 16
  store i64 %112, ptr %sunkaddr87, align 16
  %113 = inttoptr i64 %98 to ptr
  %114 = inttoptr i64 %105 to ptr
  %115 = call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %114) #15
  %116 = icmp eq i8 %115, 1
  %117 = select i1 %116, i64 16, i64 0
  %118 = getelementptr inbounds i8, ptr %13, i64 %117
  %119 = load i64, ptr %118, align 8
  store i64 %119, ptr %sunkaddr, align 8
  store i64 %87, ptr %9, align 16
  call void %7(ptr align 1 %6, i64 3) #15
  %.cast1.i = inttoptr i64 %87 to ptr
  %.cast2.i = inttoptr i64 %119 to ptr
  %120 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %.cast2.i) #15
  %121 = icmp eq i8 %120, 1
  %122 = inttoptr i64 %112 to ptr
  %123 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %122) #15
  %124 = icmp ne i8 %123, 1
  %125 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast2.i, ptr align 1 %122) #15
  %126 = icmp eq i8 %125, 1
  %127 = xor i1 %121, %124
  %128 = xor i1 %121, %126
  %129 = zext i1 %128 to i64
  %130 = zext i1 %127 to i64
  %131 = add nuw nsw i64 %129, %130
  %132 = shl nuw nsw i64 %131, 3
  %133 = getelementptr inbounds i8, ptr %9, i64 %132
  %134 = load i64, ptr %133, align 8
  store i64 %134, ptr %19, align 8
  call void @llvm.lifetime.end.p0(i64 864, ptr nonnull %9)
  br label %21

135:                                              ; preds = %18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  br label %136

136:                                              ; preds = %136, %135
  %.0.i = phi i64 [ 32, %135 ], [ %140, %136 ]
  %137 = mul nuw i64 %.0.i, %.0.i
  %138 = mul nuw i64 %137, %.0.i
  %139 = icmp ult i64 %138, %.052
  %140 = shl nuw i64 %.0.i, 1
  br i1 %139, label %136, label %141

141:                                              ; preds = %136
  %142 = udiv i64 %.052, %.0.i
  store i64 %142, ptr %9, align 8
  %143 = urem i64 %12, %142
  %144 = shl nuw nsw i64 %143, 3
  %145 = getelementptr inbounds i8, ptr %.051, i64 %144
  %146 = icmp eq ptr %.051, %0
  %..i = select i1 %146, ptr %1, ptr %0
  %147 = shl nuw i64 %142, 3
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %148

148:                                              ; preds = %148, %141
  %.0312.i = phi ptr [ %145, %141 ], [ %151, %148 ]
  %.0321.i = phi i64 [ 0, %141 ], [ %152, %148 ]
  %149 = shl i64 %.0321.i, 3
  %uglygep = getelementptr i8, ptr %..i, i64 %149
  %150 = load i64, ptr %.0312.i, align 8
  store i64 %150, ptr %uglygep, align 8
  %151 = getelementptr inbounds i8, ptr %.0312.i, i64 %147
  %152 = add nuw i64 %.0321.i, 1
  %exitcond.not.i = icmp eq i64 %umax.i, %152
  br i1 %exitcond.not.i, label %153, label %148

153:                                              ; preds = %148
  %154 = lshr exact i64 %.0.i, 1
  %155 = shl i64 %.0.i, 3
  %156 = getelementptr inbounds i8, ptr %..i, i64 %155
  %157 = icmp ult i64 %.0.i, 192
  br i1 %157, label %162, label %158

158:                                              ; preds = %153
  %159 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %..i, i64 %154, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %159, label %160, label %165

160:                                              ; preds = %158
  %161 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %..i, i64 %154, ptr nonnull align 1 %156, i64 %154, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %..i, i64 %154, ptr nonnull align 1 %156, i64 %154, i64 %161, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %165

162:                                              ; preds = %153
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %..i, i64 %154, ptr nonnull align 1 %156, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  %163 = shl nuw nsw i64 %.0.i, 2
  %164 = getelementptr inbounds i8, ptr %..i, i64 %163
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %164, i64 %154, ptr nonnull align 1 %156, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit34.i

165:                                              ; preds = %160, %158
  %166 = shl i64 %.0.i, 2
  %167 = getelementptr inbounds i8, ptr %..i, i64 %166
  %168 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %167, i64 %154, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %168, label %169, label %sort.quadsort_swap__anon_14861.exit34.i

169:                                              ; preds = %165
  %170 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %167, i64 %154, ptr nonnull align 1 %156, i64 %154, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %167, i64 %154, ptr nonnull align 1 %156, i64 %154, i64 %170, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit34.i

sort.quadsort_swap__anon_14861.exit34.i:          ; preds = %169, %165, %162
  %171 = phi ptr [ %164, %162 ], [ %167, %165 ], [ %167, %169 ]
  %172 = phi i64 [ %163, %162 ], [ %166, %165 ], [ %166, %169 ]
  %173 = add i64 %155, -8
  %174 = getelementptr inbounds i8, ptr %..i, i64 %173
  call void %7(ptr align 1 %6, i64 1) #15
  %175 = load ptr, ptr %174, align 8
  %176 = load ptr, ptr %..i, align 8
  %177 = call i8 %5(ptr align 1 %6, ptr align 1 %175, ptr align 1 %176) #15
  %.not.i = icmp eq i8 %177, 1
  br i1 %.not.i, label %178, label %187

178:                                              ; preds = %187, %sort.quadsort_swap__anon_14861.exit34.i
  %179 = phi i1 [ %193, %187 ], [ false, %sort.quadsort_swap__anon_14861.exit34.i ]
  %180 = call i64 @llvm.ctlz.i64(i64 %154, i1 true), !range !368
  %181 = sub nuw nsw i64 64, %180
  call void %7(ptr align 1 %6, i64 %181) #15
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %select.end85, %178
  %.0.in4.i.i = phi i64 [ %.0.i.i, %select.end85 ], [ %154, %178 ]
  %.0143.i.i = phi ptr [ %.1.i.i59, %select.end85 ], [ %..i, %178 ]
  %.0152.i.i = phi ptr [ %.116.i.i, %select.end85 ], [ %171, %178 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %182 = load ptr, ptr %.0143.i.i, align 8
  %183 = load ptr, ptr %.0152.i.i, align 8
  %184 = call i8 %5(ptr align 1 %6, ptr align 1 %182, ptr align 1 %183) #15
  %.116.idx.i.i.frozen = freeze i8 %184
  %.not17.i.i = icmp eq i8 %.116.idx.i.i.frozen, 1
  %185 = shl nuw i64 %.0.i.i, 3
  br i1 %.not17.i.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i.i
  %.116.idx.i.i = phi i64 [ %185, %.lr.ph.i.i ], [ 0, %select.false ]
  %.1.idx.i.i.frozen = freeze i8 %184
  %186 = icmp eq i8 %.1.idx.i.i.frozen, 1
  %.116.i.i = getelementptr i8, ptr %.0152.i.i, i64 %.116.idx.i.i
  br i1 %186, label %select.end85, label %select.false86

select.false86:                                   ; preds = %select.end
  br label %select.end85

select.end85:                                     ; preds = %select.false86, %select.end
  %.1.idx.i.i = phi i64 [ 0, %select.end ], [ %185, %select.false86 ]
  %.1.i.i59 = getelementptr i8, ptr %.0143.i.i, i64 %.1.idx.i.i
  %.not.i.i60 = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i60, label %sort.median_of_cube_root__anon_16530.exit, label %.lr.ph.i.i

187:                                              ; preds = %sort.quadsort_swap__anon_14861.exit34.i
  %188 = add i64 %172, -8
  %189 = getelementptr inbounds i8, ptr %..i, i64 %188
  call void %7(ptr align 1 %6, i64 1) #15
  %190 = load ptr, ptr %189, align 8
  %191 = load ptr, ptr %..i, align 8
  %192 = call i8 %5(ptr align 1 %6, ptr align 1 %190, ptr align 1 %191) #15
  %193 = icmp ne i8 %192, 1
  br label %178

sort.median_of_cube_root__anon_16530.exit:        ; preds = %select.end85
  %194 = load ptr, ptr %.1.i.i59, align 8
  %195 = load ptr, ptr %.116.i.i, align 8
  %196 = call i8 %5(ptr align 1 %6, ptr align 1 %194, ptr align 1 %195) #15
  %197 = icmp eq i8 %196, 1
  %198 = select i1 %197, ptr %.1.i.i59, ptr %.116.i.i
  %199 = load i64, ptr %198, align 8
  store i64 %199, ptr %19, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  br i1 %179, label %200, label %21

200:                                              ; preds = %sort.median_of_cube_root__anon_16530.exit
  %201 = icmp eq ptr %.051, %1
  br i1 %201, label %209, label %202

common.ret:                                       ; preds = %375, %373, %371, %370, %355, %348, %338, %336, %335, %215, %207, %205, %204
  ret void

202:                                              ; preds = %209, %200
  %203 = icmp ult i64 %.052, 96
  br i1 %203, label %204, label %205

204:                                              ; preds = %202
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

205:                                              ; preds = %202
  %206 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %206, label %207, label %common.ret

207:                                              ; preds = %205
  %208 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %208, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

209:                                              ; preds = %200
  %210 = shl nuw i64 %.052, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %210, i1 false)
  br label %202

211:                                              ; preds = %21
  call void %7(ptr align 1 %6, i64 1) #15
  %212 = load ptr, ptr %.0, align 8
  %sunkaddr93 = getelementptr inbounds i8, ptr %.0, i64 -8
  %213 = load ptr, ptr %sunkaddr93, align 8
  %214 = call i8 %5(ptr align 1 %6, ptr align 1 %212, ptr align 1 %213) #15
  %.not58 = icmp eq i8 %214, 1
  br i1 %.not58, label %.critedge, label %215

215:                                              ; preds = %211
  call fastcc void @sort.flux_reverse_partition__anon_16531(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %19, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

.critedge:                                        ; preds = %211, %21
  call void %7(ptr align 1 %6, i64 %.052) #15
  %.not1.i = icmp ult i64 %.052, 8
  br i1 %.not1.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.06.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.01315.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.01434.i = phi ptr [ %uglygep84, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.01453.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.01472.i = phi i64 [ %267, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %216 = load ptr, ptr %.01434.i, align 8
  %217 = load ptr, ptr %19, align 8
  %218 = call i8 %5(ptr align 1 %6, ptr align 1 %216, ptr align 1 %217) #15
  %.not151.i = icmp eq i8 %218, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.01315.i, ptr %.06.i
  %219 = load i64, ptr %.01434.i, align 8
  store i64 %219, ptr %.sroa.speculated78.i, align 8
  %220 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 8
  %..0131.i = select i1 %.not151.i, ptr %220, ptr %.01315.i
  %.0..i = select i1 %.not151.i, ptr %.06.i, ptr %220
  %221 = getelementptr inbounds i8, ptr %.01434.i, i64 8
  %222 = load ptr, ptr %221, align 8
  %223 = load ptr, ptr %19, align 8
  %224 = call i8 %5(ptr align 1 %6, ptr align 1 %222, ptr align 1 %223) #15
  %.not152.i = icmp eq i8 %224, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  %225 = load i64, ptr %221, align 8
  store i64 %225, ptr %.sroa.speculated69.i, align 8
  %226 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 8
  %.2133.i = select i1 %.not152.i, ptr %226, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %226
  %227 = getelementptr inbounds i8, ptr %.01434.i, i64 16
  %228 = load ptr, ptr %227, align 8
  %229 = load ptr, ptr %19, align 8
  %230 = call i8 %5(ptr align 1 %6, ptr align 1 %228, ptr align 1 %229) #15
  %.not153.i = icmp eq i8 %230, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  %231 = load i64, ptr %227, align 8
  store i64 %231, ptr %.sroa.speculated60.i, align 8
  %232 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 8
  %.3134.i = select i1 %.not153.i, ptr %232, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %232
  %233 = getelementptr inbounds i8, ptr %.01434.i, i64 24
  %234 = load ptr, ptr %233, align 8
  %235 = load ptr, ptr %19, align 8
  %236 = call i8 %5(ptr align 1 %6, ptr align 1 %234, ptr align 1 %235) #15
  %.not154.i = icmp eq i8 %236, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  %237 = load i64, ptr %233, align 8
  store i64 %237, ptr %.sroa.speculated51.i, align 8
  %238 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 8
  %.4135.i = select i1 %.not154.i, ptr %238, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %238
  %239 = getelementptr inbounds i8, ptr %.01434.i, i64 32
  %240 = load ptr, ptr %239, align 8
  %241 = load ptr, ptr %19, align 8
  %242 = call i8 %5(ptr align 1 %6, ptr align 1 %240, ptr align 1 %241) #15
  %.not155.i = icmp eq i8 %242, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  %243 = load i64, ptr %239, align 8
  store i64 %243, ptr %.sroa.speculated42.i, align 8
  %244 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 8
  %.5136.i = select i1 %.not155.i, ptr %244, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %244
  %245 = getelementptr inbounds i8, ptr %.01434.i, i64 40
  %246 = load ptr, ptr %245, align 8
  %247 = load ptr, ptr %19, align 8
  %248 = call i8 %5(ptr align 1 %6, ptr align 1 %246, ptr align 1 %247) #15
  %.not156.i = icmp eq i8 %248, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  %249 = load i64, ptr %245, align 8
  store i64 %249, ptr %.sroa.speculated33.i, align 8
  %250 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 8
  %.6137.i = select i1 %.not156.i, ptr %250, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %250
  %251 = getelementptr inbounds i8, ptr %.01434.i, i64 48
  %252 = load ptr, ptr %251, align 8
  %253 = load ptr, ptr %19, align 8
  %254 = call i8 %5(ptr align 1 %6, ptr align 1 %252, ptr align 1 %253) #15
  %.not157.i = icmp eq i8 %254, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  %255 = load i64, ptr %251, align 8
  store i64 %255, ptr %.sroa.speculated24.i, align 8
  %256 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 8
  %.7138.i = select i1 %.not157.i, ptr %256, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %256
  %257 = getelementptr inbounds i8, ptr %.01434.i, i64 56
  %258 = load ptr, ptr %257, align 8
  %259 = load ptr, ptr %19, align 8
  %260 = call i8 %5(ptr align 1 %6, ptr align 1 %258, ptr align 1 %259) #15
  %.not158.i = icmp eq i8 %260, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  %261 = load i64, ptr %257, align 8
  store i64 %261, ptr %.sroa.speculated15.i, align 8
  %262 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 8
  %.8139.i = select i1 %.not158.i, ptr %262, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %262
  %263 = getelementptr inbounds i8, ptr %.01434.i, i64 64
  %264 = icmp eq ptr %.8.i, %0
  %265 = icmp eq ptr %.8139.i, %1
  %266 = select i1 %264, i1 true, i1 %265
  %.1146.i = select i1 %266, i64 %.01472.i, i64 %.01453.i
  %267 = add i64 %.01472.i, 8
  %.not.i61 = icmp ugt i64 %267, %.052
  %uglygep84 = getelementptr i8, ptr %.01434.i, i64 64
  br i1 %.not.i61, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %263, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %268 = and i64 %.052, 7
  %.not16.i = icmp eq i64 %268, 0
  br i1 %.not16.i, label %._crit_edge14.i, label %.cont.i

.cont.i:                                          ; preds = %._crit_edge.i
  %269 = load ptr, ptr %.0143.lcssa.i, align 8
  %270 = load ptr, ptr %19, align 8
  %271 = call i8 %5(ptr align 1 %6, ptr align 1 %269, ptr align 1 %270) #15
  %.not150.i = icmp eq i8 %271, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.0131.lcssa.i, ptr %.0.lcssa.i
  %272 = load i64, ptr %.0143.lcssa.i, align 8
  store i64 %272, ptr %.sroa.speculated.i, align 8
  %273 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %.9..i = select i1 %.not150.i, ptr %.0.lcssa.i, ptr %273
  %exitcond.not.i62 = icmp eq i64 %268, 1
  br i1 %exitcond.not.i62, label %._crit_edge14.i, label %.cont.i.1

.cont.i.1:                                        ; preds = %.cont.i
  %274 = icmp eq i8 %271, 1
  %275 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 8
  %..9140.i = select i1 %274, ptr %273, ptr %.0131.lcssa.i
  %276 = load ptr, ptr %275, align 8
  %277 = load ptr, ptr %19, align 8
  %278 = call i8 %5(ptr align 1 %6, ptr align 1 %276, ptr align 1 %277) #15
  %.not150.i.1 = icmp eq i8 %278, 1
  %.sroa.speculated.i.1 = select i1 %.not150.i.1, ptr %..9140.i, ptr %.9..i
  %279 = load i64, ptr %275, align 8
  store i64 %279, ptr %.sroa.speculated.i.1, align 8
  %280 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %.9..i.1 = select i1 %.not150.i.1, ptr %.9..i, ptr %280
  %exitcond.not.i62.1 = icmp eq i64 %268, 2
  br i1 %exitcond.not.i62.1, label %._crit_edge14.i, label %.cont.i.2

.cont.i.2:                                        ; preds = %.cont.i.1
  %281 = icmp eq i8 %278, 1
  %282 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 16
  %..9140.i.1 = select i1 %281, ptr %280, ptr %..9140.i
  %283 = load ptr, ptr %282, align 8
  %284 = load ptr, ptr %19, align 8
  %285 = call i8 %5(ptr align 1 %6, ptr align 1 %283, ptr align 1 %284) #15
  %.not150.i.2 = icmp eq i8 %285, 1
  %.sroa.speculated.i.2 = select i1 %.not150.i.2, ptr %..9140.i.1, ptr %.9..i.1
  %286 = load i64, ptr %282, align 8
  store i64 %286, ptr %.sroa.speculated.i.2, align 8
  %287 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %.9..i.2 = select i1 %.not150.i.2, ptr %.9..i.1, ptr %287
  %exitcond.not.i62.2 = icmp eq i64 %268, 3
  br i1 %exitcond.not.i62.2, label %._crit_edge14.i, label %.cont.i.3

.cont.i.3:                                        ; preds = %.cont.i.2
  %288 = icmp eq i8 %285, 1
  %289 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 24
  %..9140.i.2 = select i1 %288, ptr %287, ptr %..9140.i.1
  %290 = load ptr, ptr %289, align 8
  %291 = load ptr, ptr %19, align 8
  %292 = call i8 %5(ptr align 1 %6, ptr align 1 %290, ptr align 1 %291) #15
  %.not150.i.3 = icmp eq i8 %292, 1
  %.sroa.speculated.i.3 = select i1 %.not150.i.3, ptr %..9140.i.2, ptr %.9..i.2
  %293 = load i64, ptr %289, align 8
  store i64 %293, ptr %.sroa.speculated.i.3, align 8
  %294 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %.9..i.3 = select i1 %.not150.i.3, ptr %.9..i.2, ptr %294
  %exitcond.not.i62.3 = icmp eq i64 %268, 4
  br i1 %exitcond.not.i62.3, label %._crit_edge14.i, label %.cont.i.4

.cont.i.4:                                        ; preds = %.cont.i.3
  %295 = icmp eq i8 %292, 1
  %296 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 32
  %..9140.i.3 = select i1 %295, ptr %294, ptr %..9140.i.2
  %297 = load ptr, ptr %296, align 8
  %298 = load ptr, ptr %19, align 8
  %299 = call i8 %5(ptr align 1 %6, ptr align 1 %297, ptr align 1 %298) #15
  %.not150.i.4 = icmp eq i8 %299, 1
  %.sroa.speculated.i.4 = select i1 %.not150.i.4, ptr %..9140.i.3, ptr %.9..i.3
  %300 = load i64, ptr %296, align 8
  store i64 %300, ptr %.sroa.speculated.i.4, align 8
  %301 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %.9..i.4 = select i1 %.not150.i.4, ptr %.9..i.3, ptr %301
  %exitcond.not.i62.4 = icmp eq i64 %268, 5
  br i1 %exitcond.not.i62.4, label %._crit_edge14.i, label %.cont.i.5

.cont.i.5:                                        ; preds = %.cont.i.4
  %302 = icmp eq i8 %299, 1
  %303 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 40
  %..9140.i.4 = select i1 %302, ptr %301, ptr %..9140.i.3
  %304 = load ptr, ptr %303, align 8
  %305 = load ptr, ptr %19, align 8
  %306 = call i8 %5(ptr align 1 %6, ptr align 1 %304, ptr align 1 %305) #15
  %.not150.i.5 = icmp eq i8 %306, 1
  %.sroa.speculated.i.5 = select i1 %.not150.i.5, ptr %..9140.i.4, ptr %.9..i.4
  %307 = load i64, ptr %303, align 8
  store i64 %307, ptr %.sroa.speculated.i.5, align 8
  %308 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %.9..i.5 = select i1 %.not150.i.5, ptr %.9..i.4, ptr %308
  %exitcond.not.i62.5 = icmp eq i64 %268, 6
  br i1 %exitcond.not.i62.5, label %._crit_edge14.i, label %.cont.i.6

.cont.i.6:                                        ; preds = %.cont.i.5
  %309 = icmp eq i8 %306, 1
  %310 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 48
  %..9140.i.5 = select i1 %309, ptr %308, ptr %..9140.i.4
  %311 = load ptr, ptr %310, align 8
  %312 = load ptr, ptr %19, align 8
  %313 = call i8 %5(ptr align 1 %6, ptr align 1 %311, ptr align 1 %312) #15
  %.not150.i.6 = icmp eq i8 %313, 1
  %.sroa.speculated.i.6 = select i1 %.not150.i.6, ptr %..9140.i.5, ptr %.9..i.5
  %314 = load i64, ptr %310, align 8
  store i64 %314, ptr %.sroa.speculated.i.6, align 8
  %315 = getelementptr inbounds i8, ptr %.sroa.speculated.i.6, i64 8
  %.9..i.6 = select i1 %.not150.i.6, ptr %.9..i.5, ptr %315
  br label %._crit_edge14.i

._crit_edge14.i:                                  ; preds = %.cont.i.6, %.cont.i.5, %.cont.i.4, %.cont.i.3, %.cont.i.2, %.cont.i.1, %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ], [ %.9..i.1, %.cont.i.1 ], [ %.9..i.2, %.cont.i.2 ], [ %.9..i.3, %.cont.i.3 ], [ %.9..i.4, %.cont.i.4 ], [ %.9..i.5, %.cont.i.5 ], [ %.9..i.6, %.cont.i.6 ]
  %316 = ptrtoint ptr %0 to i64
  %317 = ptrtoint ptr %.9.lcssa.i to i64
  %318 = sub nuw i64 %317, %316
  %319 = lshr i64 %318, 3
  %320 = lshr i64 %.052, 2
  %321 = icmp ule i64 %.0145.lcssa.i, %320
  %322 = icmp eq i64 %.052, %319
  %or.cond.i = select i1 %321, i1 true, i1 %322
  %323 = sub nuw i64 %.052, %319
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16532.exit, label %324

324:                                              ; preds = %._crit_edge14.i
  %325 = and i64 %318, -8
  %326 = getelementptr inbounds i8, ptr %0, i64 %325
  %327 = shl nuw i64 %323, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %326, ptr nonnull align 1 %1, i64 %327, i1 false)
  %328 = icmp ult i64 %323, 96
  br i1 %328, label %329, label %330

329:                                              ; preds = %324
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %326, i64 %323, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit.i

330:                                              ; preds = %324
  %331 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %326, i64 %323, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %331, label %332, label %sort.quadsort_swap__anon_14861.exit.i

332:                                              ; preds = %330
  %333 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %326, i64 %323, ptr nonnull align 1 %1, i64 %323, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %326, i64 %323, ptr nonnull align 1 %1, i64 %323, i64 %333, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit.i

sort.quadsort_swap__anon_14861.exit.i:            ; preds = %332, %330, %329
  %334 = icmp ult i64 %318, 768
  br i1 %334, label %335, label %336

335:                                              ; preds = %sort.quadsort_swap__anon_14861.exit.i
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

336:                                              ; preds = %sort.quadsort_swap__anon_14861.exit.i
  %337 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %319, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %337, label %338, label %common.ret

338:                                              ; preds = %336
  %339 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, i64 %319, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, i64 %319, i64 %339, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

sort.flux_default_partition__anon_16532.exit:     ; preds = %._crit_edge14.i
  %340 = lshr i64 %323, 5
  %341 = icmp ule i64 %319, %340
  %342 = icmp ult i64 %323, 97
  %343 = or i1 %342, %341
  br i1 %343, label %348, label %350

sort.quadsort_swap__anon_14861.exit63:            ; preds = %364, %362, %361, %350
  %344 = lshr i64 %318, 8
  %345 = icmp ule i64 %323, %344
  %346 = icmp ult i64 %318, 776
  %347 = or i1 %346, %345
  br i1 %347, label %366, label %18

348:                                              ; preds = %sort.flux_default_partition__anon_16532.exit
  %349 = icmp ult i64 %318, 8
  br i1 %349, label %common.ret, label %353

350:                                              ; preds = %sort.flux_default_partition__anon_16532.exit
  %351 = and i64 %318, -8
  %352 = getelementptr inbounds i8, ptr %0, i64 %351
  call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %352, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %19, i64 %323, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit63

353:                                              ; preds = %348
  %354 = icmp eq i64 %.052, %319
  br i1 %354, label %355, label %356

355:                                              ; preds = %353
  call fastcc void @sort.flux_reverse_partition__anon_16531(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %19, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

356:                                              ; preds = %353
  %357 = and i64 %318, -8
  %358 = getelementptr inbounds i8, ptr %0, i64 %357
  %359 = shl nuw i64 %323, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %358, ptr nonnull align 1 %1, i64 %359, i1 false)
  %360 = icmp ult i64 %323, 96
  br i1 %360, label %361, label %362

361:                                              ; preds = %356
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %358, i64 %323, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit63

362:                                              ; preds = %356
  %363 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %358, i64 %323, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %363, label %364, label %sort.quadsort_swap__anon_14861.exit63

364:                                              ; preds = %362
  %365 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %358, i64 %323, ptr nonnull align 1 %1, i64 %323, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %358, i64 %323, ptr nonnull align 1 %1, i64 %323, i64 %365, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %sort.quadsort_swap__anon_14861.exit63

366:                                              ; preds = %sort.quadsort_swap__anon_14861.exit63
  %367 = icmp ult i64 %318, 776
  br i1 %367, label %368, label %375

368:                                              ; preds = %366
  %369 = icmp ult i64 %318, 768
  br i1 %369, label %370, label %371

370:                                              ; preds = %368
  call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

371:                                              ; preds = %368
  %372 = call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %319, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %372, label %373, label %common.ret

373:                                              ; preds = %371
  %374 = call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, i64 %319, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %319, ptr nonnull align 1 %1, i64 %319, i64 %374, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret

375:                                              ; preds = %366
  call fastcc void @sort.flux_reverse_partition__anon_16531(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %19, i64 %319, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = shl nuw i64 %2, 3
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = shl nuw i64 %3, 3
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = add nuw i64 %2, 1
  %14 = icmp uge i64 %13, %3
  %15 = add nuw i64 %3, 1
  %16 = icmp uge i64 %15, %2
  %17 = select i1 %14, i1 %16, i1 false
  %18 = icmp ugt i64 %2, 31
  %or.cond = select i1 %17, i1 %18, i1 false
  br i1 %or.cond, label %23, label %.critedge

.critedge:                                        ; preds = %40, %34, %29, %23, %7
  %19 = add nuw i64 %3, %2
  %20 = shl i64 %19, 3
  %21 = add i64 %20, -8
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  br label %.loopexit.outer.outer

23:                                               ; preds = %7
  %24 = getelementptr inbounds i8, ptr %1, i64 120
  tail call void %6(ptr align 1 %5, i64 1) #15
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %9, align 8
  %27 = tail call i8 %4(ptr align 1 %5, ptr align 1 %25, ptr align 1 %26) #15
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %29, label %.critedge

29:                                               ; preds = %23
  %30 = getelementptr inbounds i8, ptr %9, i64 120
  tail call void %6(ptr align 1 %5, i64 1) #15
  %31 = load ptr, ptr %1, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %4(ptr align 1 %5, ptr align 1 %31, ptr align 1 %32) #15
  %.not258 = icmp eq i8 %33, 1
  br i1 %.not258, label %.critedge, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, ptr %12, i64 -120
  tail call void %6(ptr align 1 %5, i64 1) #15
  %36 = load ptr, ptr %10, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = tail call i8 %4(ptr align 1 %5, ptr align 1 %36, ptr align 1 %37) #15
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %.critedge

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, ptr %10, i64 -120
  tail call void %6(ptr align 1 %5, i64 1) #15
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %12, align 8
  %44 = tail call i8 %4(ptr align 1 %5, ptr align 1 %42, ptr align 1 %43) #15
  %.not259 = icmp eq i8 %44, 1
  br i1 %.not259, label %.critedge, label %45

common.ret:                                       ; preds = %.lr.ph47, %.preheader
  ret void

45:                                               ; preds = %40
  tail call fastcc void @sort.parity_merge__anon_16495(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 4 %4, ptr align 1 %5, ptr nonnull readonly align 4 %6)
  ret void

.loopexit.outer.outer:                            ; preds = %.cont46, %162, %.critedge
  %.0243.ph.ph = phi ptr [ %22, %.critedge ], [ %290, %.cont46 ], [ %184, %162 ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %283, %.cont46 ], [ %.5239, %162 ]
  %.0228.ph.ph = phi ptr [ %12, %.critedge ], [ %.5233.7, %.cont46 ], [ %185, %162 ]
  %.0222.ph.ph = phi ptr [ %10, %.critedge ], [ %.5227.7, %.cont46 ], [ %.2224, %162 ]
  %.0213.ph.ph = phi ptr [ %9, %.critedge ], [ %..4217.7, %.cont46 ], [ %.3216, %162 ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46 ], [ %.2, %162 ]
  br label %.loopexit.outer.outer27

.loopexit.outer.outer27:                          ; preds = %129, %.loopexit.outer.outer
  %.0243.ph.ph28 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %129 ]
  %.0234.ph.ph29 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %152, %129 ]
  %.0222.ph.ph30 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %129 ]
  %.0213.ph.ph31 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %153, %129 ]
  %.0.ph.ph32 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %129 ]
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %92, %.loopexit.outer.outer27
  %.0243.ph = phi ptr [ %.0243.ph.ph28, %.loopexit.outer.outer27 ], [ %114, %92 ]
  %.0234.ph = phi ptr [ %.0234.ph.ph29, %.loopexit.outer.outer27 ], [ %.3237, %92 ]
  %.0222.ph = phi ptr [ %.0222.ph.ph30, %.loopexit.outer.outer27 ], [ %115, %92 ]
  %.0.ph = phi ptr [ %.0.ph.ph32, %.loopexit.outer.outer27 ], [ %.3, %92 ]
  br label %.loopexit

.loopexit:                                        ; preds = %58, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %81, %58 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %82, %58 ]
  %46 = ptrtoint ptr %.0222.ph to i64
  %47 = ptrtoint ptr %.0 to i64
  %48 = sub nsw i64 %46, %47
  %49 = icmp sgt i64 %48, 64
  br i1 %49, label %.preheader11.preheader, label %.loopexit9

.preheader11.preheader:                           ; preds = %.loopexit
  br label %.preheader11

.loopexit9:                                       ; preds = %86, %.loopexit
  %.2245 = phi ptr [ %.3246, %86 ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %86 ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %.3225, %86 ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %86 ], [ %.0, %.loopexit ]
  %50 = ptrtoint ptr %.0228.ph.ph to i64
  %51 = ptrtoint ptr %.0213.ph.ph31 to i64
  %52 = sub nsw i64 %50, %51
  %53 = icmp sgt i64 %52, 64
  br i1 %53, label %.preheader6.preheader, label %.loopexit4

.preheader6.preheader:                            ; preds = %.loopexit9
  br label %.preheader6

.preheader11:                                     ; preds = %58, %.preheader11.preheader
  %lsr.iv = phi i64 [ %48, %.preheader11.preheader ], [ %lsr.iv.next, %58 ]
  %.3237 = phi ptr [ %81, %58 ], [ %.0234, %.preheader11.preheader ]
  %.3 = phi ptr [ %82, %58 ], [ %.0, %.preheader11.preheader ]
  %54 = getelementptr inbounds i8, ptr %.3, i64 56
  tail call void %6(ptr align 1 %5, i64 1) #15
  %55 = load ptr, ptr %54, align 8
  %56 = load ptr, ptr %.0213.ph.ph31, align 8
  %57 = tail call i8 %4(ptr align 1 %5, ptr align 1 %55, ptr align 1 %56) #15
  %.not257 = icmp eq i8 %57, 1
  br i1 %.not257, label %.preheader8, label %58

.preheader8:                                      ; preds = %.preheader11
  br label %86

58:                                               ; preds = %.preheader11
  %59 = ptrtoint ptr %.0222.ph to i64
  %60 = load i64, ptr %.3, align 8
  store i64 %60, ptr %.3237, align 8
  %61 = getelementptr inbounds i8, ptr %.3237, i64 8
  %62 = getelementptr inbounds i8, ptr %.3, i64 8
  %63 = load i64, ptr %62, align 8
  store i64 %63, ptr %61, align 8
  %64 = getelementptr inbounds i8, ptr %.3237, i64 16
  %65 = getelementptr inbounds i8, ptr %.3, i64 16
  %66 = load i64, ptr %65, align 8
  store i64 %66, ptr %64, align 8
  %67 = getelementptr inbounds i8, ptr %.3237, i64 24
  %68 = getelementptr inbounds i8, ptr %.3, i64 24
  %69 = load i64, ptr %68, align 8
  store i64 %69, ptr %67, align 8
  %70 = getelementptr inbounds i8, ptr %.3237, i64 32
  %71 = getelementptr inbounds i8, ptr %.3, i64 32
  %72 = load i64, ptr %71, align 8
  store i64 %72, ptr %70, align 8
  %73 = getelementptr inbounds i8, ptr %.3237, i64 40
  %74 = getelementptr inbounds i8, ptr %.3, i64 40
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %73, align 8
  %76 = getelementptr inbounds i8, ptr %.3237, i64 48
  %77 = getelementptr inbounds i8, ptr %.3, i64 48
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %76, align 8
  %79 = getelementptr inbounds i8, ptr %.3237, i64 56
  %sunkaddr = getelementptr inbounds i8, ptr %.3, i64 56
  %80 = load i64, ptr %sunkaddr, align 8
  store i64 %80, ptr %79, align 8
  %81 = getelementptr inbounds i8, ptr %.3237, i64 64
  %82 = getelementptr inbounds i8, ptr %.3, i64 64
  %83 = ptrtoint ptr %82 to i64
  %84 = sub nuw i64 %59, %83
  %85 = icmp ult i64 %84, 65
  %lsr.iv.next = add i64 %lsr.iv, -64
  br i1 %85, label %.loopexit, label %.preheader11

86:                                               ; preds = %92, %.preheader8
  %lsr.iv90 = phi i64 [ %lsr.iv, %.preheader8 ], [ %lsr.iv.next91, %92 ]
  %.3246 = phi ptr [ %114, %92 ], [ %.0243.ph, %.preheader8 ]
  %.3225 = phi ptr [ %115, %92 ], [ %.0222.ph, %.preheader8 ]
  %87 = getelementptr inbounds i8, ptr %.3225, i64 -56
  tail call void %6(ptr align 1 %5, i64 1) #15
  %88 = load ptr, ptr %87, align 8
  %89 = load ptr, ptr %.0228.ph.ph, align 8
  %90 = tail call i8 %4(ptr align 1 %5, ptr align 1 %88, ptr align 1 %89) #15
  %91 = icmp eq i8 %90, 1
  br i1 %91, label %92, label %.loopexit9

92:                                               ; preds = %86
  %93 = load i64, ptr %.3225, align 8
  store i64 %93, ptr %.3246, align 8
  %94 = getelementptr inbounds i8, ptr %.3246, i64 -8
  %95 = getelementptr inbounds i8, ptr %.3225, i64 -8
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %94, align 8
  %97 = getelementptr inbounds i8, ptr %.3246, i64 -16
  %98 = getelementptr inbounds i8, ptr %.3225, i64 -16
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %97, align 8
  %100 = getelementptr inbounds i8, ptr %.3246, i64 -24
  %101 = getelementptr inbounds i8, ptr %.3225, i64 -24
  %102 = load i64, ptr %101, align 8
  store i64 %102, ptr %100, align 8
  %103 = getelementptr inbounds i8, ptr %.3246, i64 -32
  %104 = getelementptr inbounds i8, ptr %.3225, i64 -32
  %105 = load i64, ptr %104, align 8
  store i64 %105, ptr %103, align 8
  %106 = getelementptr inbounds i8, ptr %.3246, i64 -40
  %107 = getelementptr inbounds i8, ptr %.3225, i64 -40
  %108 = load i64, ptr %107, align 8
  store i64 %108, ptr %106, align 8
  %109 = getelementptr inbounds i8, ptr %.3246, i64 -48
  %110 = getelementptr inbounds i8, ptr %.3225, i64 -48
  %111 = load i64, ptr %110, align 8
  store i64 %111, ptr %109, align 8
  %112 = getelementptr inbounds i8, ptr %.3246, i64 -56
  %sunkaddr98 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %113 = load i64, ptr %sunkaddr98, align 8
  store i64 %113, ptr %112, align 8
  %114 = getelementptr inbounds i8, ptr %.3246, i64 -64
  %115 = getelementptr inbounds i8, ptr %.3225, i64 -64
  %lsr.iv.next91 = add i64 %lsr.iv90, -64
  %116 = icmp ult i64 %lsr.iv.next91, 65
  br i1 %116, label %.loopexit.outer, label %86

.loopexit4:                                       ; preds = %157, %.loopexit9
  %.4247 = phi ptr [ %.5248, %157 ], [ %.2245, %.loopexit9 ]
  %.4238 = phi ptr [ %.5239, %157 ], [ %.2236, %.loopexit9 ]
  %.2230 = phi ptr [ %.3231, %157 ], [ %.0228.ph.ph, %.loopexit9 ]
  %.2215 = phi ptr [ %.3216, %157 ], [ %.0213.ph.ph31, %.loopexit9 ]
  %117 = ptrtoint ptr %.4247 to i64
  %118 = ptrtoint ptr %.4238 to i64
  %119 = sub nuw i64 %117, %118
  %120 = icmp ult i64 %119, 128
  br i1 %120, label %.preheader2, label %.cont46

.preheader2:                                      ; preds = %.loopexit4
  %121 = icmp ule ptr %.2, %.2224
  %122 = icmp ule ptr %.2215, %.2230
  %123 = select i1 %121, i1 %122, i1 false
  br i1 %123, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader6:                                      ; preds = %129, %.preheader6.preheader
  %lsr.iv92 = phi i64 [ %52, %.preheader6.preheader ], [ %lsr.iv.next93, %129 ]
  %.5239 = phi ptr [ %152, %129 ], [ %.2236, %.preheader6.preheader ]
  %.3216 = phi ptr [ %153, %129 ], [ %.0213.ph.ph31, %.preheader6.preheader ]
  %124 = getelementptr inbounds i8, ptr %.3216, i64 56
  tail call void %6(ptr align 1 %5, i64 1) #15
  %125 = load ptr, ptr %.2, align 8
  %126 = load ptr, ptr %124, align 8
  %127 = tail call i8 %4(ptr align 1 %5, ptr align 1 %125, ptr align 1 %126) #15
  %128 = icmp eq i8 %127, 1
  br i1 %128, label %129, label %.preheader3

.preheader3:                                      ; preds = %.preheader6
  br label %157

129:                                              ; preds = %.preheader6
  %130 = ptrtoint ptr %.0228.ph.ph to i64
  %131 = load i64, ptr %.3216, align 8
  store i64 %131, ptr %.5239, align 8
  %132 = getelementptr inbounds i8, ptr %.5239, i64 8
  %133 = getelementptr inbounds i8, ptr %.3216, i64 8
  %134 = load i64, ptr %133, align 8
  store i64 %134, ptr %132, align 8
  %135 = getelementptr inbounds i8, ptr %.5239, i64 16
  %136 = getelementptr inbounds i8, ptr %.3216, i64 16
  %137 = load i64, ptr %136, align 8
  store i64 %137, ptr %135, align 8
  %138 = getelementptr inbounds i8, ptr %.5239, i64 24
  %139 = getelementptr inbounds i8, ptr %.3216, i64 24
  %140 = load i64, ptr %139, align 8
  store i64 %140, ptr %138, align 8
  %141 = getelementptr inbounds i8, ptr %.5239, i64 32
  %142 = getelementptr inbounds i8, ptr %.3216, i64 32
  %143 = load i64, ptr %142, align 8
  store i64 %143, ptr %141, align 8
  %144 = getelementptr inbounds i8, ptr %.5239, i64 40
  %145 = getelementptr inbounds i8, ptr %.3216, i64 40
  %146 = load i64, ptr %145, align 8
  store i64 %146, ptr %144, align 8
  %147 = getelementptr inbounds i8, ptr %.5239, i64 48
  %148 = getelementptr inbounds i8, ptr %.3216, i64 48
  %149 = load i64, ptr %148, align 8
  store i64 %149, ptr %147, align 8
  %150 = getelementptr inbounds i8, ptr %.5239, i64 56
  %sunkaddr99 = getelementptr inbounds i8, ptr %.3216, i64 56
  %151 = load i64, ptr %sunkaddr99, align 8
  store i64 %151, ptr %150, align 8
  %152 = getelementptr inbounds i8, ptr %.5239, i64 64
  %153 = getelementptr inbounds i8, ptr %.3216, i64 64
  %154 = ptrtoint ptr %153 to i64
  %155 = sub nuw i64 %130, %154
  %156 = icmp ult i64 %155, 65
  %lsr.iv.next93 = add i64 %lsr.iv92, -64
  br i1 %156, label %.loopexit.outer.outer27, label %.preheader6

157:                                              ; preds = %162, %.preheader3
  %lsr.iv94 = phi i64 [ %lsr.iv92, %.preheader3 ], [ %lsr.iv.next95, %162 ]
  %.5248 = phi ptr [ %184, %162 ], [ %.2245, %.preheader3 ]
  %.3231 = phi ptr [ %185, %162 ], [ %.0228.ph.ph, %.preheader3 ]
  %158 = getelementptr inbounds i8, ptr %.3231, i64 -56
  tail call void %6(ptr align 1 %5, i64 1) #15
  %159 = load ptr, ptr %.2224, align 8
  %160 = load ptr, ptr %158, align 8
  %161 = tail call i8 %4(ptr align 1 %5, ptr align 1 %159, ptr align 1 %160) #15
  %.not256 = icmp eq i8 %161, 1
  br i1 %.not256, label %.loopexit4, label %162

162:                                              ; preds = %157
  %163 = load i64, ptr %.3231, align 8
  store i64 %163, ptr %.5248, align 8
  %164 = getelementptr inbounds i8, ptr %.5248, i64 -8
  %165 = getelementptr inbounds i8, ptr %.3231, i64 -8
  %166 = load i64, ptr %165, align 8
  store i64 %166, ptr %164, align 8
  %167 = getelementptr inbounds i8, ptr %.5248, i64 -16
  %168 = getelementptr inbounds i8, ptr %.3231, i64 -16
  %169 = load i64, ptr %168, align 8
  store i64 %169, ptr %167, align 8
  %170 = getelementptr inbounds i8, ptr %.5248, i64 -24
  %171 = getelementptr inbounds i8, ptr %.3231, i64 -24
  %172 = load i64, ptr %171, align 8
  store i64 %172, ptr %170, align 8
  %173 = getelementptr inbounds i8, ptr %.5248, i64 -32
  %174 = getelementptr inbounds i8, ptr %.3231, i64 -32
  %175 = load i64, ptr %174, align 8
  store i64 %175, ptr %173, align 8
  %176 = getelementptr inbounds i8, ptr %.5248, i64 -40
  %177 = getelementptr inbounds i8, ptr %.3231, i64 -40
  %178 = load i64, ptr %177, align 8
  store i64 %178, ptr %176, align 8
  %179 = getelementptr inbounds i8, ptr %.5248, i64 -48
  %180 = getelementptr inbounds i8, ptr %.3231, i64 -48
  %181 = load i64, ptr %180, align 8
  store i64 %181, ptr %179, align 8
  %182 = getelementptr inbounds i8, ptr %.5248, i64 -56
  %sunkaddr100 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %183 = load i64, ptr %sunkaddr100, align 8
  store i64 %183, ptr %182, align 8
  %184 = getelementptr inbounds i8, ptr %.5248, i64 -64
  %185 = getelementptr inbounds i8, ptr %.3231, i64 -64
  %lsr.iv.next95 = add i64 %lsr.iv94, -64
  %186 = icmp ult i64 %lsr.iv.next95, 65
  br i1 %186, label %.loopexit.outer.outer, label %157

.cont46:                                          ; preds = %.loopexit4
  tail call void %6(ptr align 1 %5, i64 16) #15
  %187 = load ptr, ptr %.2, align 8
  %188 = load ptr, ptr %.2215, align 8
  %189 = tail call i8 %4(ptr align 1 %5, ptr align 1 %187, ptr align 1 %188) #15
  %.not = icmp eq i8 %189, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  %190 = load i64, ptr %.sroa.speculated42, align 8
  store i64 %190, ptr %.4238, align 8
  %191 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 8
  %..4217 = select i1 %.not, ptr %191, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %191
  %192 = getelementptr inbounds i8, ptr %.4238, i64 8
  %193 = load ptr, ptr %.2224, align 8
  %194 = load ptr, ptr %.2230, align 8
  %195 = tail call i8 %4(ptr align 1 %5, ptr align 1 %193, ptr align 1 %194) #15
  %196 = icmp eq i8 %195, 1
  %.sroa.speculated105 = select i1 %196, ptr %.2224, ptr %.2230
  %197 = load i64, ptr %.sroa.speculated105, align 8
  store i64 %197, ptr %.4247, align 8
  %198 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 -8
  %.5233 = select i1 %196, ptr %.2230, ptr %198
  %.5227 = select i1 %196, ptr %198, ptr %.2224
  %199 = getelementptr inbounds i8, ptr %.4247, i64 -8
  %200 = load ptr, ptr %.4., align 8
  %201 = load ptr, ptr %..4217, align 8
  %202 = tail call i8 %4(ptr align 1 %5, ptr align 1 %200, ptr align 1 %201) #15
  %.not.1 = icmp eq i8 %202, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  %203 = load i64, ptr %.sroa.speculated42.1, align 8
  store i64 %203, ptr %192, align 8
  %204 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 8
  %..4217.1 = select i1 %.not.1, ptr %204, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %204
  %205 = getelementptr inbounds i8, ptr %.4238, i64 16
  %206 = load ptr, ptr %.5227, align 8
  %207 = load ptr, ptr %.5233, align 8
  %208 = tail call i8 %4(ptr align 1 %5, ptr align 1 %206, ptr align 1 %207) #15
  %209 = icmp eq i8 %208, 1
  %.sroa.speculated105.1 = select i1 %209, ptr %.5227, ptr %.5233
  %210 = load i64, ptr %.sroa.speculated105.1, align 8
  store i64 %210, ptr %199, align 8
  %211 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 -8
  %.5233.1 = select i1 %209, ptr %.5233, ptr %211
  %.5227.1 = select i1 %209, ptr %211, ptr %.5227
  %212 = getelementptr inbounds i8, ptr %.4247, i64 -16
  %213 = load ptr, ptr %.4..1, align 8
  %214 = load ptr, ptr %..4217.1, align 8
  %215 = tail call i8 %4(ptr align 1 %5, ptr align 1 %213, ptr align 1 %214) #15
  %.not.2 = icmp eq i8 %215, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  %216 = load i64, ptr %.sroa.speculated42.2, align 8
  store i64 %216, ptr %205, align 8
  %217 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 8
  %..4217.2 = select i1 %.not.2, ptr %217, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %217
  %218 = getelementptr inbounds i8, ptr %.4238, i64 24
  %219 = load ptr, ptr %.5227.1, align 8
  %220 = load ptr, ptr %.5233.1, align 8
  %221 = tail call i8 %4(ptr align 1 %5, ptr align 1 %219, ptr align 1 %220) #15
  %222 = icmp eq i8 %221, 1
  %.sroa.speculated105.2 = select i1 %222, ptr %.5227.1, ptr %.5233.1
  %223 = load i64, ptr %.sroa.speculated105.2, align 8
  store i64 %223, ptr %212, align 8
  %224 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 -8
  %.5233.2 = select i1 %222, ptr %.5233.1, ptr %224
  %.5227.2 = select i1 %222, ptr %224, ptr %.5227.1
  %225 = getelementptr inbounds i8, ptr %.4247, i64 -24
  %226 = load ptr, ptr %.4..2, align 8
  %227 = load ptr, ptr %..4217.2, align 8
  %228 = tail call i8 %4(ptr align 1 %5, ptr align 1 %226, ptr align 1 %227) #15
  %.not.3 = icmp eq i8 %228, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  %229 = load i64, ptr %.sroa.speculated42.3, align 8
  store i64 %229, ptr %218, align 8
  %230 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 8
  %..4217.3 = select i1 %.not.3, ptr %230, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %230
  %231 = getelementptr inbounds i8, ptr %.4238, i64 32
  %232 = load ptr, ptr %.5227.2, align 8
  %233 = load ptr, ptr %.5233.2, align 8
  %234 = tail call i8 %4(ptr align 1 %5, ptr align 1 %232, ptr align 1 %233) #15
  %235 = icmp eq i8 %234, 1
  %.sroa.speculated105.3 = select i1 %235, ptr %.5227.2, ptr %.5233.2
  %236 = load i64, ptr %.sroa.speculated105.3, align 8
  store i64 %236, ptr %225, align 8
  %237 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 -8
  %.5233.3 = select i1 %235, ptr %.5233.2, ptr %237
  %.5227.3 = select i1 %235, ptr %237, ptr %.5227.2
  %238 = getelementptr inbounds i8, ptr %.4247, i64 -32
  %239 = load ptr, ptr %.4..3, align 8
  %240 = load ptr, ptr %..4217.3, align 8
  %241 = tail call i8 %4(ptr align 1 %5, ptr align 1 %239, ptr align 1 %240) #15
  %.not.4 = icmp eq i8 %241, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  %242 = load i64, ptr %.sroa.speculated42.4, align 8
  store i64 %242, ptr %231, align 8
  %243 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 8
  %..4217.4 = select i1 %.not.4, ptr %243, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %243
  %244 = getelementptr inbounds i8, ptr %.4238, i64 40
  %245 = load ptr, ptr %.5227.3, align 8
  %246 = load ptr, ptr %.5233.3, align 8
  %247 = tail call i8 %4(ptr align 1 %5, ptr align 1 %245, ptr align 1 %246) #15
  %248 = icmp eq i8 %247, 1
  %.sroa.speculated105.4 = select i1 %248, ptr %.5227.3, ptr %.5233.3
  %249 = load i64, ptr %.sroa.speculated105.4, align 8
  store i64 %249, ptr %238, align 8
  %250 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 -8
  %.5233.4 = select i1 %248, ptr %.5233.3, ptr %250
  %.5227.4 = select i1 %248, ptr %250, ptr %.5227.3
  %251 = getelementptr inbounds i8, ptr %.4247, i64 -40
  %252 = load ptr, ptr %.4..4, align 8
  %253 = load ptr, ptr %..4217.4, align 8
  %254 = tail call i8 %4(ptr align 1 %5, ptr align 1 %252, ptr align 1 %253) #15
  %.not.5 = icmp eq i8 %254, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  %255 = load i64, ptr %.sroa.speculated42.5, align 8
  store i64 %255, ptr %244, align 8
  %256 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 8
  %..4217.5 = select i1 %.not.5, ptr %256, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %256
  %257 = getelementptr inbounds i8, ptr %.4238, i64 48
  %258 = load ptr, ptr %.5227.4, align 8
  %259 = load ptr, ptr %.5233.4, align 8
  %260 = tail call i8 %4(ptr align 1 %5, ptr align 1 %258, ptr align 1 %259) #15
  %261 = icmp eq i8 %260, 1
  %.sroa.speculated105.5 = select i1 %261, ptr %.5227.4, ptr %.5233.4
  %262 = load i64, ptr %.sroa.speculated105.5, align 8
  store i64 %262, ptr %251, align 8
  %263 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 -8
  %.5233.5 = select i1 %261, ptr %.5233.4, ptr %263
  %.5227.5 = select i1 %261, ptr %263, ptr %.5227.4
  %264 = getelementptr inbounds i8, ptr %.4247, i64 -48
  %265 = load ptr, ptr %.4..5, align 8
  %266 = load ptr, ptr %..4217.5, align 8
  %267 = tail call i8 %4(ptr align 1 %5, ptr align 1 %265, ptr align 1 %266) #15
  %.not.6 = icmp eq i8 %267, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  %268 = load i64, ptr %.sroa.speculated42.6, align 8
  store i64 %268, ptr %257, align 8
  %269 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 8
  %..4217.6 = select i1 %.not.6, ptr %269, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %269
  %270 = getelementptr inbounds i8, ptr %.4238, i64 56
  %271 = load ptr, ptr %.5227.5, align 8
  %272 = load ptr, ptr %.5233.5, align 8
  %273 = tail call i8 %4(ptr align 1 %5, ptr align 1 %271, ptr align 1 %272) #15
  %274 = icmp eq i8 %273, 1
  %.sroa.speculated105.6 = select i1 %274, ptr %.5227.5, ptr %.5233.5
  %275 = load i64, ptr %.sroa.speculated105.6, align 8
  store i64 %275, ptr %264, align 8
  %276 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 -8
  %.5233.6 = select i1 %274, ptr %.5233.5, ptr %276
  %.5227.6 = select i1 %274, ptr %276, ptr %.5227.5
  %277 = getelementptr inbounds i8, ptr %.4247, i64 -56
  %278 = load ptr, ptr %.4..6, align 8
  %279 = load ptr, ptr %..4217.6, align 8
  %280 = tail call i8 %4(ptr align 1 %5, ptr align 1 %278, ptr align 1 %279) #15
  %.not.7 = icmp eq i8 %280, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  %281 = load i64, ptr %.sroa.speculated42.7, align 8
  store i64 %281, ptr %270, align 8
  %282 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 8
  %..4217.7 = select i1 %.not.7, ptr %282, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %282
  %283 = getelementptr inbounds i8, ptr %.4238, i64 64
  %284 = load ptr, ptr %.5227.6, align 8
  %285 = load ptr, ptr %.5233.6, align 8
  %286 = tail call i8 %4(ptr align 1 %5, ptr align 1 %284, ptr align 1 %285) #15
  %287 = icmp eq i8 %286, 1
  %.sroa.speculated105.7 = select i1 %287, ptr %.5227.6, ptr %.5233.6
  %288 = load i64, ptr %.sroa.speculated105.7, align 8
  store i64 %288, ptr %277, align 8
  %289 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 -8
  %.5233.7 = select i1 %287, ptr %.5233.6, ptr %289
  %.5227.7 = select i1 %287, ptr %289, ptr %.5227.6
  %290 = getelementptr inbounds i8, ptr %.4247, i64 -64
  br label %.loopexit.outer.outer

.preheader1:                                      ; preds = %select.end96, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %297, %select.end96 ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %select.end96 ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %select.end96 ]
  %.not25340 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25340, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %select.end96, %.cont.preheader
  %.637 = phi ptr [ %.6., %select.end96 ], [ %.2, %.cont.preheader ]
  %.621936 = phi ptr [ %..6219, %select.end96 ], [ %.2215, %.cont.preheader ]
  %.724135 = phi ptr [ %297, %select.end96 ], [ %.4238, %.cont.preheader ]
  tail call void %6(ptr align 1 %5, i64 1) #15
  %291 = load ptr, ptr %.637, align 8
  %292 = load ptr, ptr %.621936, align 8
  %293 = tail call i8 %4(ptr align 1 %5, ptr align 1 %291, ptr align 1 %292) #15
  %.sroa.speculated.frozen = freeze i8 %293
  %.not255 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not255, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.621936, %.cont ], [ %.637, %select.false ]
  %..6219.frozen = freeze i8 %293
  %294 = icmp eq i8 %..6219.frozen, 1
  %295 = load i64, ptr %.sroa.speculated, align 8
  store i64 %295, ptr %.724135, align 8
  %296 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  br i1 %294, label %select.end96, label %select.false97

select.false97:                                   ; preds = %select.end
  br label %select.end96

select.end96:                                     ; preds = %select.false97, %select.end
  %..6219 = phi ptr [ %296, %select.end ], [ %.621936, %select.false97 ]
  %.6. = phi ptr [ %.637, %select.end ], [ %296, %select.false97 ]
  %297 = getelementptr inbounds i8, ptr %.724135, i64 8
  %298 = icmp ule ptr %.6., %.2224
  %299 = icmp ule ptr %..6219, %.2230
  %300 = select i1 %298, i1 %299, i1 false
  br i1 %300, label %.cont, label %.preheader1

.preheader:                                       ; preds = %.lr.ph, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %302, %.lr.ph ]
  %.not25444 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25444, label %common.ret, label %.lr.ph47.preheader

.lr.ph47.preheader:                               ; preds = %.preheader
  br label %.lr.ph47

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.842 = phi ptr [ %303, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.824241 = phi ptr [ %302, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  %301 = load i64, ptr %.842, align 8
  store i64 %301, ptr %.824241, align 8
  %302 = getelementptr inbounds i8, ptr %.824241, i64 8
  %303 = getelementptr inbounds i8, ptr %.842, i64 8
  %.not253 = icmp ugt ptr %303, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph47:                                         ; preds = %.lr.ph47, %.lr.ph47.preheader
  %.822146 = phi ptr [ %306, %.lr.ph47 ], [ %.6219.lcssa, %.lr.ph47.preheader ]
  %.945 = phi ptr [ %305, %.lr.ph47 ], [ %.8242.lcssa, %.lr.ph47.preheader ]
  %304 = load i64, ptr %.822146, align 8
  store i64 %304, ptr %.945, align 8
  %305 = getelementptr inbounds i8, ptr %.945, i64 8
  %306 = getelementptr inbounds i8, ptr %.822146, i64 8
  %.not254 = icmp ugt ptr %306, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph47
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca [864 x i8], align 16
  %9 = alloca i64, align 8
  %10 = ptrtoint ptr %8 to i64
  %11 = lshr i64 %10, 4
  %12 = getelementptr inbounds i8, ptr %8, i64 8
  %13 = getelementptr inbounds i8, ptr %8, i64 16
  %14 = getelementptr inbounds i8, ptr %8, i64 32
  %15 = getelementptr inbounds i8, ptr %8, i64 40
  %16 = getelementptr inbounds i8, ptr %8, i64 48
  br label %17

17:                                               ; preds = %sort.quadsort_swap__anon_14864.exit63, %7
  %.053 = phi i64 [ 0, %7 ], [ %316, %sort.quadsort_swap__anon_14864.exit63 ]
  %.052 = phi i64 [ %4, %7 ], [ %316, %sort.quadsort_swap__anon_14864.exit63 ]
  %.051 = phi ptr [ %2, %7 ], [ %0, %sort.quadsort_swap__anon_14864.exit63 ]
  %.0 = phi ptr [ %3, %7 ], [ %18, %sort.quadsort_swap__anon_14864.exit63 ]
  %18 = getelementptr inbounds i8, ptr %.0, i64 -8
  %19 = icmp ult i64 %.052, 2049
  br i1 %19, label %21, label %134

20:                                               ; preds = %sort.median_of_cube_root__anon_16538.exit, %21
  %.in = phi i64 [ %196, %sort.median_of_cube_root__anon_16538.exit ], [ %133, %21 ]
  %.not = icmp eq i64 %.053, 0
  br i1 %.not, label %.critedge, label %208

21:                                               ; preds = %17
  call void @llvm.lifetime.start.p0(i64 864, ptr nonnull %8)
  %.lhs.trunc = trunc i64 %.052 to i16
  %22 = udiv i16 %.lhs.trunc, 9
  %23 = zext i16 %22 to i64
  %24 = shl nuw nsw i64 %23, 3
  %25 = load i64, ptr %.051, align 8
  store i64 %25, ptr %8, align 16
  %26 = getelementptr inbounds i8, ptr %.051, i64 %24
  %27 = load i64, ptr %26, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %27, ptr %sunkaddr, align 8
  %28 = getelementptr inbounds i8, ptr %26, i64 %24
  %29 = load i64, ptr %28, align 8
  %sunkaddr87 = getelementptr inbounds i8, ptr %8, i64 16
  store i64 %29, ptr %sunkaddr87, align 16
  %30 = getelementptr inbounds i8, ptr %28, i64 %24
  %31 = load i64, ptr %30, align 8
  %sunkaddr88 = getelementptr inbounds i8, ptr %8, i64 24
  store i64 %31, ptr %sunkaddr88, align 8
  %32 = getelementptr inbounds i8, ptr %30, i64 %24
  %33 = load i64, ptr %32, align 8
  %sunkaddr89 = getelementptr inbounds i8, ptr %8, i64 32
  store i64 %33, ptr %sunkaddr89, align 16
  %34 = getelementptr inbounds i8, ptr %32, i64 %24
  %35 = load i64, ptr %34, align 8
  %sunkaddr90 = getelementptr inbounds i8, ptr %8, i64 40
  store i64 %35, ptr %sunkaddr90, align 8
  %36 = getelementptr inbounds i8, ptr %34, i64 %24
  %37 = load i64, ptr %36, align 8
  %sunkaddr91 = getelementptr inbounds i8, ptr %8, i64 48
  store i64 %37, ptr %sunkaddr91, align 16
  %38 = getelementptr inbounds i8, ptr %36, i64 %24
  %39 = load i64, ptr %38, align 8
  %sunkaddr92 = getelementptr inbounds i8, ptr %8, i64 56
  store i64 %39, ptr %sunkaddr92, align 8
  %40 = getelementptr inbounds i8, ptr %38, i64 %24
  %41 = load i64, ptr %40, align 8
  %42 = inttoptr i64 %25 to ptr
  %43 = inttoptr i64 %27 to ptr
  %44 = call i8 %5(ptr align 1 %6, ptr align 1 %42, ptr align 1 %43) #15
  %.not.i.i = icmp eq i8 %44, 1
  %..i.i = select i1 %.not.i.i, i64 8, i64 0
  %.1.i.i = select i1 %.not.i.i, i64 0, i64 8
  %45 = getelementptr inbounds i8, ptr %8, i64 %.1.i.i
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds i8, ptr %8, i64 %..i.i
  %48 = load i64, ptr %47, align 8
  store i64 %48, ptr %8, align 16
  store i64 %46, ptr %sunkaddr, align 8
  %49 = inttoptr i64 %29 to ptr
  %50 = inttoptr i64 %31 to ptr
  %51 = call i8 %5(ptr align 1 %6, ptr align 1 %49, ptr align 1 %50) #15
  %.not26.i.i = icmp eq i8 %51, 1
  %.2.i.i = select i1 %.not26.i.i, i64 8, i64 0
  %.3.i.i = select i1 %.not26.i.i, i64 0, i64 8
  %52 = getelementptr inbounds i8, ptr %13, i64 %.3.i.i
  %53 = load i64, ptr %52, align 8
  %54 = getelementptr inbounds i8, ptr %13, i64 %.2.i.i
  %55 = load i64, ptr %54, align 8
  store i64 %55, ptr %sunkaddr87, align 16
  store i64 %53, ptr %sunkaddr88, align 8
  %56 = inttoptr i64 %48 to ptr
  %.cast.i.i = inttoptr i64 %55 to ptr
  %57 = call i8 %5(ptr align 1 %6, ptr align 1 %56, ptr align 1 %.cast.i.i) #15
  %.not27.i.i = icmp eq i8 %57, 1
  %58 = select i1 %.not27.i.i, i64 0, i64 16
  %59 = getelementptr inbounds i8, ptr %8, i64 %58
  %60 = load i64, ptr %59, align 16
  store i64 %60, ptr %sunkaddr87, align 16
  %61 = inttoptr i64 %46 to ptr
  %62 = inttoptr i64 %53 to ptr
  %63 = call i8 %5(ptr align 1 %6, ptr align 1 %61, ptr align 1 %62) #15
  %64 = icmp eq i8 %63, 1
  %65 = select i1 %64, i64 16, i64 0
  %66 = getelementptr inbounds i8, ptr %12, i64 %65
  %67 = load i64, ptr %66, align 8
  store i64 %67, ptr %sunkaddr, align 8
  %68 = inttoptr i64 %33 to ptr
  %69 = inttoptr i64 %35 to ptr
  %70 = call i8 %5(ptr align 1 %6, ptr align 1 %68, ptr align 1 %69) #15
  %.not.i3.i = icmp eq i8 %70, 1
  %..i4.i = select i1 %.not.i3.i, i64 8, i64 0
  %.1.i5.i = select i1 %.not.i3.i, i64 0, i64 8
  %71 = getelementptr inbounds i8, ptr %14, i64 %.1.i5.i
  %72 = load i64, ptr %71, align 8
  %73 = getelementptr inbounds i8, ptr %14, i64 %..i4.i
  %74 = load i64, ptr %73, align 8
  store i64 %74, ptr %sunkaddr89, align 16
  store i64 %72, ptr %sunkaddr90, align 8
  %75 = inttoptr i64 %37 to ptr
  %76 = inttoptr i64 %39 to ptr
  %77 = call i8 %5(ptr align 1 %6, ptr align 1 %75, ptr align 1 %76) #15
  %.not26.i6.i = icmp eq i8 %77, 1
  %.2.i7.i = select i1 %.not26.i6.i, i64 8, i64 0
  %.3.i8.i = select i1 %.not26.i6.i, i64 0, i64 8
  %78 = getelementptr inbounds i8, ptr %16, i64 %.3.i8.i
  %79 = load i64, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %16, i64 %.2.i7.i
  %81 = load i64, ptr %80, align 8
  store i64 %81, ptr %sunkaddr91, align 16
  store i64 %79, ptr %sunkaddr92, align 8
  %82 = inttoptr i64 %74 to ptr
  %.cast.i9.i = inttoptr i64 %81 to ptr
  %83 = call i8 %5(ptr align 1 %6, ptr align 1 %82, ptr align 1 %.cast.i9.i) #15
  %.not27.i10.i = icmp eq i8 %83, 1
  %84 = select i1 %.not27.i10.i, i64 0, i64 16
  %85 = getelementptr inbounds i8, ptr %14, i64 %84
  %86 = load i64, ptr %85, align 16
  store i64 %86, ptr %sunkaddr91, align 16
  %87 = inttoptr i64 %72 to ptr
  %88 = inttoptr i64 %79 to ptr
  %89 = call i8 %5(ptr align 1 %6, ptr align 1 %87, ptr align 1 %88) #15
  %90 = icmp eq i8 %89, 1
  %91 = select i1 %90, i64 16, i64 0
  %92 = getelementptr inbounds i8, ptr %15, i64 %91
  %93 = load i64, ptr %92, align 8
  store i64 %93, ptr %8, align 16
  store i64 %41, ptr %sunkaddr88, align 8
  %.cast.i = inttoptr i64 %93 to ptr
  %94 = inttoptr i64 %67 to ptr
  %95 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast.i, ptr align 1 %94) #15
  %.not.i11.i = icmp eq i8 %95, 1
  %..i12.i = select i1 %.not.i11.i, i64 8, i64 0
  %.1.i13.i = select i1 %.not.i11.i, i64 0, i64 8
  %96 = getelementptr inbounds i8, ptr %8, i64 %.1.i13.i
  %97 = load i64, ptr %96, align 8
  %98 = getelementptr inbounds i8, ptr %8, i64 %..i12.i
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %8, align 16
  store i64 %97, ptr %sunkaddr, align 8
  %100 = inttoptr i64 %60 to ptr
  %101 = inttoptr i64 %41 to ptr
  %102 = call i8 %5(ptr align 1 %6, ptr align 1 %100, ptr align 1 %101) #15
  %.not26.i14.i = icmp eq i8 %102, 1
  %.2.i15.i = select i1 %.not26.i14.i, i64 8, i64 0
  %.3.i16.i = select i1 %.not26.i14.i, i64 0, i64 8
  %103 = getelementptr inbounds i8, ptr %13, i64 %.3.i16.i
  %104 = load i64, ptr %103, align 8
  %105 = getelementptr inbounds i8, ptr %13, i64 %.2.i15.i
  %106 = load i64, ptr %105, align 8
  store i64 %106, ptr %sunkaddr87, align 16
  store i64 %104, ptr %sunkaddr88, align 8
  %107 = inttoptr i64 %99 to ptr
  %.cast.i17.i = inttoptr i64 %106 to ptr
  %108 = call i8 %5(ptr align 1 %6, ptr align 1 %107, ptr align 1 %.cast.i17.i) #15
  %.not27.i18.i = icmp eq i8 %108, 1
  %109 = select i1 %.not27.i18.i, i64 0, i64 16
  %110 = getelementptr inbounds i8, ptr %8, i64 %109
  %111 = load i64, ptr %110, align 16
  store i64 %111, ptr %sunkaddr87, align 16
  %112 = inttoptr i64 %97 to ptr
  %113 = inttoptr i64 %104 to ptr
  %114 = call i8 %5(ptr align 1 %6, ptr align 1 %112, ptr align 1 %113) #15
  %115 = icmp eq i8 %114, 1
  %116 = select i1 %115, i64 16, i64 0
  %117 = getelementptr inbounds i8, ptr %12, i64 %116
  %118 = load i64, ptr %117, align 8
  store i64 %118, ptr %sunkaddr, align 8
  store i64 %86, ptr %8, align 16
  %.cast1.i = inttoptr i64 %86 to ptr
  %.cast2.i = inttoptr i64 %118 to ptr
  %119 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %.cast2.i) #15
  %120 = icmp eq i8 %119, 1
  %121 = inttoptr i64 %111 to ptr
  %122 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast1.i, ptr align 1 %121) #15
  %123 = icmp ne i8 %122, 1
  %124 = call i8 %5(ptr align 1 %6, ptr align 1 %.cast2.i, ptr align 1 %121) #15
  %125 = icmp eq i8 %124, 1
  %126 = xor i1 %120, %123
  %127 = xor i1 %120, %125
  %128 = zext i1 %127 to i64
  %129 = zext i1 %126 to i64
  %130 = add nuw nsw i64 %128, %129
  %131 = shl nuw nsw i64 %130, 3
  %132 = getelementptr inbounds i8, ptr %8, i64 %131
  %133 = load i64, ptr %132, align 8
  store i64 %133, ptr %18, align 8
  call void @llvm.lifetime.end.p0(i64 864, ptr nonnull %8)
  br label %20

134:                                              ; preds = %17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  br label %135

135:                                              ; preds = %135, %134
  %.0.i = phi i64 [ 32, %134 ], [ %139, %135 ]
  %136 = mul nuw i64 %.0.i, %.0.i
  %137 = mul nuw i64 %136, %.0.i
  %138 = icmp ult i64 %137, %.052
  %139 = shl nuw i64 %.0.i, 1
  br i1 %138, label %135, label %140

140:                                              ; preds = %135
  %141 = udiv i64 %.052, %.0.i
  store i64 %141, ptr %8, align 8
  %142 = urem i64 %11, %141
  %143 = shl nuw nsw i64 %142, 3
  %144 = getelementptr inbounds i8, ptr %.051, i64 %143
  %145 = icmp eq ptr %.051, %0
  %..i = select i1 %145, ptr %1, ptr %0
  %146 = shl nuw i64 %141, 3
  %umax.i = call i64 @llvm.umax.i64(i64 %.0.i, i64 1)
  br label %147

147:                                              ; preds = %147, %140
  %.0312.i = phi ptr [ %144, %140 ], [ %150, %147 ]
  %.0321.i = phi i64 [ 0, %140 ], [ %151, %147 ]
  %148 = shl i64 %.0321.i, 3
  %uglygep = getelementptr i8, ptr %..i, i64 %148
  %149 = load i64, ptr %.0312.i, align 8
  store i64 %149, ptr %uglygep, align 8
  %150 = getelementptr inbounds i8, ptr %.0312.i, i64 %146
  %151 = add nuw i64 %.0321.i, 1
  %exitcond.not.i = icmp eq i64 %umax.i, %151
  br i1 %exitcond.not.i, label %152, label %147

152:                                              ; preds = %147
  %153 = lshr exact i64 %.0.i, 1
  %154 = shl i64 %.0.i, 3
  %155 = getelementptr inbounds i8, ptr %..i, i64 %154
  %156 = icmp ult i64 %.0.i, 192
  br i1 %156, label %161, label %157

157:                                              ; preds = %152
  %158 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %..i, i64 %153, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %158, label %159, label %164

159:                                              ; preds = %157
  %160 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %..i, i64 %153, ptr nonnull align 1 %155, i64 %153, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %..i, i64 %153, ptr nonnull align 1 %155, i64 %153, i64 %160, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %164

161:                                              ; preds = %152
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %..i, i64 %153, ptr nonnull align 1 %155, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  %162 = shl nuw nsw i64 %.0.i, 2
  %163 = getelementptr inbounds i8, ptr %..i, i64 %162
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %163, i64 %153, ptr nonnull align 1 %155, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit34.i

164:                                              ; preds = %159, %157
  %165 = shl i64 %.0.i, 2
  %166 = getelementptr inbounds i8, ptr %..i, i64 %165
  %167 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %166, i64 %153, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %167, label %168, label %sort.quadsort_swap__anon_14864.exit34.i

168:                                              ; preds = %164
  %169 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %166, i64 %153, ptr nonnull align 1 %155, i64 %153, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %166, i64 %153, ptr nonnull align 1 %155, i64 %153, i64 %169, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit34.i

sort.quadsort_swap__anon_14864.exit34.i:          ; preds = %168, %164, %161
  %170 = phi ptr [ %163, %161 ], [ %166, %164 ], [ %166, %168 ]
  %171 = phi i64 [ %162, %161 ], [ %165, %164 ], [ %165, %168 ]
  %172 = add i64 %154, -8
  %173 = getelementptr inbounds i8, ptr %..i, i64 %172
  %174 = load ptr, ptr %173, align 8
  %175 = load ptr, ptr %..i, align 8
  %176 = call i8 %5(ptr align 1 %6, ptr align 1 %174, ptr align 1 %175) #15
  %.not.i = icmp eq i8 %176, 1
  br i1 %.not.i, label %177, label %184

177:                                              ; preds = %184, %sort.quadsort_swap__anon_14864.exit34.i
  %178 = phi i1 [ %190, %184 ], [ false, %sort.quadsort_swap__anon_14864.exit34.i ]
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %select.end85, %177
  %.0.in4.i.i = phi i64 [ %.0.i.i, %select.end85 ], [ %153, %177 ]
  %.0133.i.i = phi ptr [ %.1.i.i59, %select.end85 ], [ %..i, %177 ]
  %.0142.i.i = phi ptr [ %.115.i.i, %select.end85 ], [ %170, %177 ]
  %.0.i.i = lshr i64 %.0.in4.i.i, 1
  %179 = load ptr, ptr %.0133.i.i, align 8
  %180 = load ptr, ptr %.0142.i.i, align 8
  %181 = call i8 %5(ptr align 1 %6, ptr align 1 %179, ptr align 1 %180) #15
  %.115.idx.i.i.frozen = freeze i8 %181
  %.not16.i.i = icmp eq i8 %.115.idx.i.i.frozen, 1
  %182 = shl nuw i64 %.0.i.i, 3
  br i1 %.not16.i.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i.i
  %.115.idx.i.i = phi i64 [ %182, %.lr.ph.i.i ], [ 0, %select.false ]
  %.1.idx.i.i.frozen = freeze i8 %181
  %183 = icmp eq i8 %.1.idx.i.i.frozen, 1
  %.115.i.i = getelementptr i8, ptr %.0142.i.i, i64 %.115.idx.i.i
  br i1 %183, label %select.end85, label %select.false86

select.false86:                                   ; preds = %select.end
  br label %select.end85

select.end85:                                     ; preds = %select.false86, %select.end
  %.1.idx.i.i = phi i64 [ 0, %select.end ], [ %182, %select.false86 ]
  %.1.i.i59 = getelementptr i8, ptr %.0133.i.i, i64 %.1.idx.i.i
  %.not.i.i60 = icmp ult i64 %.0.in4.i.i, 4
  br i1 %.not.i.i60, label %sort.median_of_cube_root__anon_16538.exit, label %.lr.ph.i.i

184:                                              ; preds = %sort.quadsort_swap__anon_14864.exit34.i
  %185 = add i64 %171, -8
  %186 = getelementptr inbounds i8, ptr %..i, i64 %185
  %187 = load ptr, ptr %186, align 8
  %188 = load ptr, ptr %..i, align 8
  %189 = call i8 %5(ptr align 1 %6, ptr align 1 %187, ptr align 1 %188) #15
  %190 = icmp ne i8 %189, 1
  br label %177

sort.median_of_cube_root__anon_16538.exit:        ; preds = %select.end85
  %191 = load ptr, ptr %.1.i.i59, align 8
  %192 = load ptr, ptr %.115.i.i, align 8
  %193 = call i8 %5(ptr align 1 %6, ptr align 1 %191, ptr align 1 %192) #15
  %194 = icmp eq i8 %193, 1
  %195 = select i1 %194, ptr %.1.i.i59, ptr %.115.i.i
  %196 = load i64, ptr %195, align 8
  store i64 %196, ptr %18, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br i1 %178, label %197, label %20

197:                                              ; preds = %sort.median_of_cube_root__anon_16538.exit
  %198 = icmp eq ptr %.051, %1
  br i1 %198, label %206, label %199

common.ret:                                       ; preds = %372, %370, %368, %367, %352, %345, %335, %333, %332, %212, %204, %202, %201
  ret void

199:                                              ; preds = %206, %197
  %200 = icmp ult i64 %.052, 96
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

202:                                              ; preds = %199
  %203 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %203, label %204, label %common.ret

204:                                              ; preds = %202
  %205 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %.052, ptr nonnull align 1 %1, i64 %.052, i64 %205, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

206:                                              ; preds = %197
  %207 = shl nuw i64 %.052, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %207, i1 false)
  br label %199

208:                                              ; preds = %20
  %209 = inttoptr i64 %.in to ptr
  %210 = load ptr, ptr %.0, align 8
  %211 = call i8 %5(ptr align 1 %6, ptr align 1 %210, ptr align 1 %209) #15
  %.not58 = icmp eq i8 %211, 1
  br i1 %.not58, label %.critedge, label %212

212:                                              ; preds = %208
  call fastcc void @sort.flux_reverse_partition__anon_16539(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %18, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

.critedge:                                        ; preds = %208, %20
  %.not1.i = icmp ult i64 %.052, 8
  br i1 %.not1.i, label %._crit_edge.i, label %.cont82.i.preheader

.cont82.i.preheader:                              ; preds = %.critedge
  br label %.cont82.i

.cont82.i:                                        ; preds = %.cont82.i, %.cont82.i.preheader
  %.06.i = phi ptr [ %.8.i, %.cont82.i ], [ %0, %.cont82.i.preheader ]
  %.01315.i = phi ptr [ %.8139.i, %.cont82.i ], [ %1, %.cont82.i.preheader ]
  %.01434.i = phi ptr [ %uglygep84, %.cont82.i ], [ %.051, %.cont82.i.preheader ]
  %.01453.i = phi i64 [ %.1146.i, %.cont82.i ], [ 0, %.cont82.i.preheader ]
  %.01472.i = phi i64 [ %264, %.cont82.i ], [ 8, %.cont82.i.preheader ]
  %213 = load ptr, ptr %.01434.i, align 8
  %214 = load ptr, ptr %18, align 8
  %215 = call i8 %5(ptr align 1 %6, ptr align 1 %213, ptr align 1 %214) #15
  %.not151.i = icmp eq i8 %215, 1
  %.sroa.speculated78.i = select i1 %.not151.i, ptr %.01315.i, ptr %.06.i
  %216 = load i64, ptr %.01434.i, align 8
  store i64 %216, ptr %.sroa.speculated78.i, align 8
  %217 = getelementptr inbounds i8, ptr %.sroa.speculated78.i, i64 8
  %..0131.i = select i1 %.not151.i, ptr %217, ptr %.01315.i
  %.0..i = select i1 %.not151.i, ptr %.06.i, ptr %217
  %218 = getelementptr inbounds i8, ptr %.01434.i, i64 8
  %219 = load ptr, ptr %218, align 8
  %220 = load ptr, ptr %18, align 8
  %221 = call i8 %5(ptr align 1 %6, ptr align 1 %219, ptr align 1 %220) #15
  %.not152.i = icmp eq i8 %221, 1
  %.sroa.speculated69.i = select i1 %.not152.i, ptr %..0131.i, ptr %.0..i
  %222 = load i64, ptr %218, align 8
  store i64 %222, ptr %.sroa.speculated69.i, align 8
  %223 = getelementptr inbounds i8, ptr %.sroa.speculated69.i, i64 8
  %.2133.i = select i1 %.not152.i, ptr %223, ptr %..0131.i
  %.2.i = select i1 %.not152.i, ptr %.0..i, ptr %223
  %224 = getelementptr inbounds i8, ptr %.01434.i, i64 16
  %225 = load ptr, ptr %224, align 8
  %226 = load ptr, ptr %18, align 8
  %227 = call i8 %5(ptr align 1 %6, ptr align 1 %225, ptr align 1 %226) #15
  %.not153.i = icmp eq i8 %227, 1
  %.sroa.speculated60.i = select i1 %.not153.i, ptr %.2133.i, ptr %.2.i
  %228 = load i64, ptr %224, align 8
  store i64 %228, ptr %.sroa.speculated60.i, align 8
  %229 = getelementptr inbounds i8, ptr %.sroa.speculated60.i, i64 8
  %.3134.i = select i1 %.not153.i, ptr %229, ptr %.2133.i
  %.3.i = select i1 %.not153.i, ptr %.2.i, ptr %229
  %230 = getelementptr inbounds i8, ptr %.01434.i, i64 24
  %231 = load ptr, ptr %230, align 8
  %232 = load ptr, ptr %18, align 8
  %233 = call i8 %5(ptr align 1 %6, ptr align 1 %231, ptr align 1 %232) #15
  %.not154.i = icmp eq i8 %233, 1
  %.sroa.speculated51.i = select i1 %.not154.i, ptr %.3134.i, ptr %.3.i
  %234 = load i64, ptr %230, align 8
  store i64 %234, ptr %.sroa.speculated51.i, align 8
  %235 = getelementptr inbounds i8, ptr %.sroa.speculated51.i, i64 8
  %.4135.i = select i1 %.not154.i, ptr %235, ptr %.3134.i
  %.4.i = select i1 %.not154.i, ptr %.3.i, ptr %235
  %236 = getelementptr inbounds i8, ptr %.01434.i, i64 32
  %237 = load ptr, ptr %236, align 8
  %238 = load ptr, ptr %18, align 8
  %239 = call i8 %5(ptr align 1 %6, ptr align 1 %237, ptr align 1 %238) #15
  %.not155.i = icmp eq i8 %239, 1
  %.sroa.speculated42.i = select i1 %.not155.i, ptr %.4135.i, ptr %.4.i
  %240 = load i64, ptr %236, align 8
  store i64 %240, ptr %.sroa.speculated42.i, align 8
  %241 = getelementptr inbounds i8, ptr %.sroa.speculated42.i, i64 8
  %.5136.i = select i1 %.not155.i, ptr %241, ptr %.4135.i
  %.5.i = select i1 %.not155.i, ptr %.4.i, ptr %241
  %242 = getelementptr inbounds i8, ptr %.01434.i, i64 40
  %243 = load ptr, ptr %242, align 8
  %244 = load ptr, ptr %18, align 8
  %245 = call i8 %5(ptr align 1 %6, ptr align 1 %243, ptr align 1 %244) #15
  %.not156.i = icmp eq i8 %245, 1
  %.sroa.speculated33.i = select i1 %.not156.i, ptr %.5136.i, ptr %.5.i
  %246 = load i64, ptr %242, align 8
  store i64 %246, ptr %.sroa.speculated33.i, align 8
  %247 = getelementptr inbounds i8, ptr %.sroa.speculated33.i, i64 8
  %.6137.i = select i1 %.not156.i, ptr %247, ptr %.5136.i
  %.6.i = select i1 %.not156.i, ptr %.5.i, ptr %247
  %248 = getelementptr inbounds i8, ptr %.01434.i, i64 48
  %249 = load ptr, ptr %248, align 8
  %250 = load ptr, ptr %18, align 8
  %251 = call i8 %5(ptr align 1 %6, ptr align 1 %249, ptr align 1 %250) #15
  %.not157.i = icmp eq i8 %251, 1
  %.sroa.speculated24.i = select i1 %.not157.i, ptr %.6137.i, ptr %.6.i
  %252 = load i64, ptr %248, align 8
  store i64 %252, ptr %.sroa.speculated24.i, align 8
  %253 = getelementptr inbounds i8, ptr %.sroa.speculated24.i, i64 8
  %.7138.i = select i1 %.not157.i, ptr %253, ptr %.6137.i
  %.7.i = select i1 %.not157.i, ptr %.6.i, ptr %253
  %254 = getelementptr inbounds i8, ptr %.01434.i, i64 56
  %255 = load ptr, ptr %254, align 8
  %256 = load ptr, ptr %18, align 8
  %257 = call i8 %5(ptr align 1 %6, ptr align 1 %255, ptr align 1 %256) #15
  %.not158.i = icmp eq i8 %257, 1
  %.sroa.speculated15.i = select i1 %.not158.i, ptr %.7138.i, ptr %.7.i
  %258 = load i64, ptr %254, align 8
  store i64 %258, ptr %.sroa.speculated15.i, align 8
  %259 = getelementptr inbounds i8, ptr %.sroa.speculated15.i, i64 8
  %.8139.i = select i1 %.not158.i, ptr %259, ptr %.7138.i
  %.8.i = select i1 %.not158.i, ptr %.7.i, ptr %259
  %260 = getelementptr inbounds i8, ptr %.01434.i, i64 64
  %261 = icmp eq ptr %.8.i, %0
  %262 = icmp eq ptr %.8139.i, %1
  %263 = select i1 %261, i1 true, i1 %262
  %.1146.i = select i1 %263, i64 %.01472.i, i64 %.01453.i
  %264 = add i64 %.01472.i, 8
  %.not.i61 = icmp ugt i64 %264, %.052
  %uglygep84 = getelementptr i8, ptr %.01434.i, i64 64
  br i1 %.not.i61, label %._crit_edge.i, label %.cont82.i

._crit_edge.i:                                    ; preds = %.cont82.i, %.critedge
  %.0145.lcssa.i = phi i64 [ 0, %.critedge ], [ %.1146.i, %.cont82.i ]
  %.0143.lcssa.i = phi ptr [ %.051, %.critedge ], [ %260, %.cont82.i ]
  %.0131.lcssa.i = phi ptr [ %1, %.critedge ], [ %.8139.i, %.cont82.i ]
  %.0.lcssa.i = phi ptr [ %0, %.critedge ], [ %.8.i, %.cont82.i ]
  %265 = and i64 %.052, 7
  %.not16.i = icmp eq i64 %265, 0
  br i1 %.not16.i, label %._crit_edge14.i, label %.cont.i

.cont.i:                                          ; preds = %._crit_edge.i
  %266 = load ptr, ptr %.0143.lcssa.i, align 8
  %267 = load ptr, ptr %18, align 8
  %268 = call i8 %5(ptr align 1 %6, ptr align 1 %266, ptr align 1 %267) #15
  %.not150.i = icmp eq i8 %268, 1
  %.sroa.speculated.i = select i1 %.not150.i, ptr %.0131.lcssa.i, ptr %.0.lcssa.i
  %269 = load i64, ptr %.0143.lcssa.i, align 8
  store i64 %269, ptr %.sroa.speculated.i, align 8
  %270 = getelementptr inbounds i8, ptr %.sroa.speculated.i, i64 8
  %.9..i = select i1 %.not150.i, ptr %.0.lcssa.i, ptr %270
  %exitcond.not.i62 = icmp eq i64 %265, 1
  br i1 %exitcond.not.i62, label %._crit_edge14.i, label %.cont.i.1

.cont.i.1:                                        ; preds = %.cont.i
  %271 = icmp eq i8 %268, 1
  %272 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 8
  %..9140.i = select i1 %271, ptr %270, ptr %.0131.lcssa.i
  %273 = load ptr, ptr %272, align 8
  %274 = load ptr, ptr %18, align 8
  %275 = call i8 %5(ptr align 1 %6, ptr align 1 %273, ptr align 1 %274) #15
  %.not150.i.1 = icmp eq i8 %275, 1
  %.sroa.speculated.i.1 = select i1 %.not150.i.1, ptr %..9140.i, ptr %.9..i
  %276 = load i64, ptr %272, align 8
  store i64 %276, ptr %.sroa.speculated.i.1, align 8
  %277 = getelementptr inbounds i8, ptr %.sroa.speculated.i.1, i64 8
  %.9..i.1 = select i1 %.not150.i.1, ptr %.9..i, ptr %277
  %exitcond.not.i62.1 = icmp eq i64 %265, 2
  br i1 %exitcond.not.i62.1, label %._crit_edge14.i, label %.cont.i.2

.cont.i.2:                                        ; preds = %.cont.i.1
  %278 = icmp eq i8 %275, 1
  %279 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 16
  %..9140.i.1 = select i1 %278, ptr %277, ptr %..9140.i
  %280 = load ptr, ptr %279, align 8
  %281 = load ptr, ptr %18, align 8
  %282 = call i8 %5(ptr align 1 %6, ptr align 1 %280, ptr align 1 %281) #15
  %.not150.i.2 = icmp eq i8 %282, 1
  %.sroa.speculated.i.2 = select i1 %.not150.i.2, ptr %..9140.i.1, ptr %.9..i.1
  %283 = load i64, ptr %279, align 8
  store i64 %283, ptr %.sroa.speculated.i.2, align 8
  %284 = getelementptr inbounds i8, ptr %.sroa.speculated.i.2, i64 8
  %.9..i.2 = select i1 %.not150.i.2, ptr %.9..i.1, ptr %284
  %exitcond.not.i62.2 = icmp eq i64 %265, 3
  br i1 %exitcond.not.i62.2, label %._crit_edge14.i, label %.cont.i.3

.cont.i.3:                                        ; preds = %.cont.i.2
  %285 = icmp eq i8 %282, 1
  %286 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 24
  %..9140.i.2 = select i1 %285, ptr %284, ptr %..9140.i.1
  %287 = load ptr, ptr %286, align 8
  %288 = load ptr, ptr %18, align 8
  %289 = call i8 %5(ptr align 1 %6, ptr align 1 %287, ptr align 1 %288) #15
  %.not150.i.3 = icmp eq i8 %289, 1
  %.sroa.speculated.i.3 = select i1 %.not150.i.3, ptr %..9140.i.2, ptr %.9..i.2
  %290 = load i64, ptr %286, align 8
  store i64 %290, ptr %.sroa.speculated.i.3, align 8
  %291 = getelementptr inbounds i8, ptr %.sroa.speculated.i.3, i64 8
  %.9..i.3 = select i1 %.not150.i.3, ptr %.9..i.2, ptr %291
  %exitcond.not.i62.3 = icmp eq i64 %265, 4
  br i1 %exitcond.not.i62.3, label %._crit_edge14.i, label %.cont.i.4

.cont.i.4:                                        ; preds = %.cont.i.3
  %292 = icmp eq i8 %289, 1
  %293 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 32
  %..9140.i.3 = select i1 %292, ptr %291, ptr %..9140.i.2
  %294 = load ptr, ptr %293, align 8
  %295 = load ptr, ptr %18, align 8
  %296 = call i8 %5(ptr align 1 %6, ptr align 1 %294, ptr align 1 %295) #15
  %.not150.i.4 = icmp eq i8 %296, 1
  %.sroa.speculated.i.4 = select i1 %.not150.i.4, ptr %..9140.i.3, ptr %.9..i.3
  %297 = load i64, ptr %293, align 8
  store i64 %297, ptr %.sroa.speculated.i.4, align 8
  %298 = getelementptr inbounds i8, ptr %.sroa.speculated.i.4, i64 8
  %.9..i.4 = select i1 %.not150.i.4, ptr %.9..i.3, ptr %298
  %exitcond.not.i62.4 = icmp eq i64 %265, 5
  br i1 %exitcond.not.i62.4, label %._crit_edge14.i, label %.cont.i.5

.cont.i.5:                                        ; preds = %.cont.i.4
  %299 = icmp eq i8 %296, 1
  %300 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 40
  %..9140.i.4 = select i1 %299, ptr %298, ptr %..9140.i.3
  %301 = load ptr, ptr %300, align 8
  %302 = load ptr, ptr %18, align 8
  %303 = call i8 %5(ptr align 1 %6, ptr align 1 %301, ptr align 1 %302) #15
  %.not150.i.5 = icmp eq i8 %303, 1
  %.sroa.speculated.i.5 = select i1 %.not150.i.5, ptr %..9140.i.4, ptr %.9..i.4
  %304 = load i64, ptr %300, align 8
  store i64 %304, ptr %.sroa.speculated.i.5, align 8
  %305 = getelementptr inbounds i8, ptr %.sroa.speculated.i.5, i64 8
  %.9..i.5 = select i1 %.not150.i.5, ptr %.9..i.4, ptr %305
  %exitcond.not.i62.5 = icmp eq i64 %265, 6
  br i1 %exitcond.not.i62.5, label %._crit_edge14.i, label %.cont.i.6

.cont.i.6:                                        ; preds = %.cont.i.5
  %306 = icmp eq i8 %303, 1
  %307 = getelementptr inbounds i8, ptr %.0143.lcssa.i, i64 48
  %..9140.i.5 = select i1 %306, ptr %305, ptr %..9140.i.4
  %308 = load ptr, ptr %307, align 8
  %309 = load ptr, ptr %18, align 8
  %310 = call i8 %5(ptr align 1 %6, ptr align 1 %308, ptr align 1 %309) #15
  %.not150.i.6 = icmp eq i8 %310, 1
  %.sroa.speculated.i.6 = select i1 %.not150.i.6, ptr %..9140.i.5, ptr %.9..i.5
  %311 = load i64, ptr %307, align 8
  store i64 %311, ptr %.sroa.speculated.i.6, align 8
  %312 = getelementptr inbounds i8, ptr %.sroa.speculated.i.6, i64 8
  %.9..i.6 = select i1 %.not150.i.6, ptr %.9..i.5, ptr %312
  br label %._crit_edge14.i

._crit_edge14.i:                                  ; preds = %.cont.i.6, %.cont.i.5, %.cont.i.4, %.cont.i.3, %.cont.i.2, %.cont.i.1, %.cont.i, %._crit_edge.i
  %.9.lcssa.i = phi ptr [ %.0.lcssa.i, %._crit_edge.i ], [ %.9..i, %.cont.i ], [ %.9..i.1, %.cont.i.1 ], [ %.9..i.2, %.cont.i.2 ], [ %.9..i.3, %.cont.i.3 ], [ %.9..i.4, %.cont.i.4 ], [ %.9..i.5, %.cont.i.5 ], [ %.9..i.6, %.cont.i.6 ]
  %313 = ptrtoint ptr %0 to i64
  %314 = ptrtoint ptr %.9.lcssa.i to i64
  %315 = sub nuw i64 %314, %313
  %316 = lshr i64 %315, 3
  %317 = lshr i64 %.052, 2
  %318 = icmp ule i64 %.0145.lcssa.i, %317
  %319 = icmp eq i64 %.052, %316
  %or.cond.i = select i1 %318, i1 true, i1 %319
  %320 = sub nuw i64 %.052, %316
  br i1 %or.cond.i, label %sort.flux_default_partition__anon_16540.exit, label %321

321:                                              ; preds = %._crit_edge14.i
  %322 = and i64 %315, -8
  %323 = getelementptr inbounds i8, ptr %0, i64 %322
  %324 = shl nuw i64 %320, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %323, ptr nonnull align 1 %1, i64 %324, i1 false)
  %325 = icmp ult i64 %320, 96
  br i1 %325, label %326, label %327

326:                                              ; preds = %321
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %323, i64 %320, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit.i

327:                                              ; preds = %321
  %328 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %323, i64 %320, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %328, label %329, label %sort.quadsort_swap__anon_14864.exit.i

329:                                              ; preds = %327
  %330 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %323, i64 %320, ptr nonnull align 1 %1, i64 %320, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %323, i64 %320, ptr nonnull align 1 %1, i64 %320, i64 %330, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit.i

sort.quadsort_swap__anon_14864.exit.i:            ; preds = %329, %327, %326
  %331 = icmp ult i64 %315, 768
  br i1 %331, label %332, label %333

332:                                              ; preds = %sort.quadsort_swap__anon_14864.exit.i
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

333:                                              ; preds = %sort.quadsort_swap__anon_14864.exit.i
  %334 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %316, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %334, label %335, label %common.ret

335:                                              ; preds = %333
  %336 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, i64 %316, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, i64 %316, i64 %336, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

sort.flux_default_partition__anon_16540.exit:     ; preds = %._crit_edge14.i
  %337 = lshr i64 %320, 5
  %338 = icmp ule i64 %316, %337
  %339 = icmp ult i64 %320, 97
  %340 = or i1 %339, %338
  br i1 %340, label %345, label %347

sort.quadsort_swap__anon_14864.exit63:            ; preds = %361, %359, %358, %347
  %341 = lshr i64 %315, 8
  %342 = icmp ule i64 %320, %341
  %343 = icmp ult i64 %315, 776
  %344 = or i1 %343, %342
  br i1 %344, label %363, label %17

345:                                              ; preds = %sort.flux_default_partition__anon_16540.exit
  %346 = icmp ult i64 %315, 8
  br i1 %346, label %common.ret, label %350

347:                                              ; preds = %sort.flux_default_partition__anon_16540.exit
  %348 = and i64 %315, -8
  %349 = getelementptr inbounds i8, ptr %0, i64 %348
  call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %349, ptr nonnull align 1 %1, ptr nonnull align 1 %1, ptr nonnull align 1 %18, i64 %320, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit63

350:                                              ; preds = %345
  %351 = icmp eq i64 %.052, %316
  br i1 %351, label %352, label %353

352:                                              ; preds = %350
  call fastcc void @sort.flux_reverse_partition__anon_16539(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %18, i64 %.052, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

353:                                              ; preds = %350
  %354 = and i64 %315, -8
  %355 = getelementptr inbounds i8, ptr %0, i64 %354
  %356 = shl nuw i64 %320, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %355, ptr nonnull align 1 %1, i64 %356, i1 false)
  %357 = icmp ult i64 %320, 96
  br i1 %357, label %358, label %359

358:                                              ; preds = %353
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %355, i64 %320, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit63

359:                                              ; preds = %353
  %360 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %355, i64 %320, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %360, label %361, label %sort.quadsort_swap__anon_14864.exit63

361:                                              ; preds = %359
  %362 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %355, i64 %320, ptr nonnull align 1 %1, i64 %320, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %355, i64 %320, ptr nonnull align 1 %1, i64 %320, i64 %362, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %sort.quadsort_swap__anon_14864.exit63

363:                                              ; preds = %sort.quadsort_swap__anon_14864.exit63
  %364 = icmp ult i64 %315, 776
  br i1 %364, label %365, label %372

365:                                              ; preds = %363
  %366 = icmp ult i64 %315, 768
  br i1 %366, label %367, label %368

367:                                              ; preds = %365
  call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

368:                                              ; preds = %365
  %369 = call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %316, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %369, label %370, label %common.ret

370:                                              ; preds = %368
  %371 = call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, i64 %316, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %316, ptr nonnull align 1 %1, i64 %316, i64 %371, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret

372:                                              ; preds = %363
  call fastcc void @sort.flux_reverse_partition__anon_16539(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %18, i64 %316, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl nuw i64 %2, 3
  %8 = getelementptr inbounds i8, ptr %1, i64 %7
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = shl nuw i64 %3, 3
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = add nuw i64 %2, 1
  %13 = icmp uge i64 %12, %3
  %14 = add nuw i64 %3, 1
  %15 = icmp uge i64 %14, %2
  %16 = select i1 %13, i1 %15, i1 false
  %17 = icmp ugt i64 %2, 31
  %or.cond = select i1 %16, i1 %17, i1 false
  br i1 %or.cond, label %22, label %.critedge

.critedge:                                        ; preds = %39, %33, %28, %22, %6
  %18 = add nuw i64 %3, %2
  %19 = shl i64 %18, 3
  %20 = add i64 %19, -8
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  br label %.loopexit.outer.outer

22:                                               ; preds = %6
  %23 = getelementptr inbounds i8, ptr %1, i64 120
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %8, align 8
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %24, ptr align 1 %25) #15
  %27 = icmp eq i8 %26, 1
  br i1 %27, label %28, label %.critedge

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, ptr %8, i64 120
  %30 = load ptr, ptr %1, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %4(ptr align 1 %5, ptr align 1 %30, ptr align 1 %31) #15
  %.not258 = icmp eq i8 %32, 1
  br i1 %.not258, label %.critedge, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, ptr %11, i64 -120
  %35 = load ptr, ptr %9, align 8
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i8 %4(ptr align 1 %5, ptr align 1 %35, ptr align 1 %36) #15
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %.critedge

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, ptr %9, i64 -120
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %11, align 8
  %43 = tail call i8 %4(ptr align 1 %5, ptr align 1 %41, ptr align 1 %42) #15
  %.not259 = icmp eq i8 %43, 1
  br i1 %.not259, label %.critedge, label %44

common.ret:                                       ; preds = %.lr.ph48, %.preheader
  ret void

44:                                               ; preds = %39
  tail call fastcc void @sort.parity_merge__anon_16505(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nonnull readonly align 4 %4, ptr align 1 %5)
  ret void

.loopexit.outer.outer:                            ; preds = %265, %.cont46.preheader, %.critedge
  %.0243.ph.ph = phi ptr [ %21, %.critedge ], [ %223, %.cont46.preheader ], [ %287, %265 ]
  %.0234.ph.ph = phi ptr [ %0, %.critedge ], [ %216, %.cont46.preheader ], [ %.5239, %265 ]
  %.0228.ph.ph = phi ptr [ %11, %.critedge ], [ %.5233.7, %.cont46.preheader ], [ %288, %265 ]
  %.0222.ph.ph = phi ptr [ %9, %.critedge ], [ %.5227.7, %.cont46.preheader ], [ %.2224, %265 ]
  %.0213.ph.ph = phi ptr [ %8, %.critedge ], [ %..4217.7, %.cont46.preheader ], [ %.3216, %265 ]
  %.0.ph.ph = phi ptr [ %1, %.critedge ], [ %.4..7, %.cont46.preheader ], [ %.2, %265 ]
  br label %.loopexit.outer.outer27

.loopexit.outer.outer27:                          ; preds = %232, %.loopexit.outer.outer
  %.0243.ph.ph28 = phi ptr [ %.0243.ph.ph, %.loopexit.outer.outer ], [ %.2245, %232 ]
  %.0234.ph.ph29 = phi ptr [ %.0234.ph.ph, %.loopexit.outer.outer ], [ %255, %232 ]
  %.0222.ph.ph30 = phi ptr [ %.0222.ph.ph, %.loopexit.outer.outer ], [ %.2224, %232 ]
  %.0213.ph.ph31 = phi ptr [ %.0213.ph.ph, %.loopexit.outer.outer ], [ %256, %232 ]
  %.0.ph.ph32 = phi ptr [ %.0.ph.ph, %.loopexit.outer.outer ], [ %.2, %232 ]
  br label %.loopexit.outer

.loopexit.outer:                                  ; preds = %91, %.loopexit.outer.outer27
  %.0243.ph = phi ptr [ %.0243.ph.ph28, %.loopexit.outer.outer27 ], [ %113, %91 ]
  %.0234.ph = phi ptr [ %.0234.ph.ph29, %.loopexit.outer.outer27 ], [ %.3237, %91 ]
  %.0222.ph = phi ptr [ %.0222.ph.ph30, %.loopexit.outer.outer27 ], [ %114, %91 ]
  %.0.ph = phi ptr [ %.0.ph.ph32, %.loopexit.outer.outer27 ], [ %.3, %91 ]
  br label %.loopexit

.loopexit:                                        ; preds = %57, %.loopexit.outer
  %.0234 = phi ptr [ %.0234.ph, %.loopexit.outer ], [ %80, %57 ]
  %.0 = phi ptr [ %.0.ph, %.loopexit.outer ], [ %81, %57 ]
  %45 = ptrtoint ptr %.0222.ph to i64
  %46 = ptrtoint ptr %.0 to i64
  %47 = sub nsw i64 %45, %46
  %48 = icmp sgt i64 %47, 64
  br i1 %48, label %.preheader12.preheader, label %.loopexit10

.preheader12.preheader:                           ; preds = %.loopexit
  br label %.preheader12

.loopexit10:                                      ; preds = %85, %.loopexit
  %.2245 = phi ptr [ %.3246, %85 ], [ %.0243.ph, %.loopexit ]
  %.2236 = phi ptr [ %.3237, %85 ], [ %.0234, %.loopexit ]
  %.2224 = phi ptr [ %.3225, %85 ], [ %.0222.ph, %.loopexit ]
  %.2 = phi ptr [ %.3, %85 ], [ %.0, %.loopexit ]
  %49 = ptrtoint ptr %.0228.ph.ph to i64
  %50 = ptrtoint ptr %.0213.ph.ph31 to i64
  %51 = sub nsw i64 %49, %50
  %52 = icmp sgt i64 %51, 64
  br i1 %52, label %.preheader7.preheader, label %.loopexit5

.preheader7.preheader:                            ; preds = %.loopexit10
  br label %.preheader7

.preheader12:                                     ; preds = %57, %.preheader12.preheader
  %lsr.iv = phi i64 [ %47, %.preheader12.preheader ], [ %lsr.iv.next, %57 ]
  %.3237 = phi ptr [ %80, %57 ], [ %.0234, %.preheader12.preheader ]
  %.3 = phi ptr [ %81, %57 ], [ %.0, %.preheader12.preheader ]
  %53 = getelementptr inbounds i8, ptr %.3, i64 56
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr %.0213.ph.ph31, align 8
  %56 = tail call i8 %4(ptr align 1 %5, ptr align 1 %54, ptr align 1 %55) #15
  %.not257 = icmp eq i8 %56, 1
  br i1 %.not257, label %.preheader9, label %57

.preheader9:                                      ; preds = %.preheader12
  br label %85

57:                                               ; preds = %.preheader12
  %58 = ptrtoint ptr %.0222.ph to i64
  %59 = load i64, ptr %.3, align 8
  store i64 %59, ptr %.3237, align 8
  %60 = getelementptr inbounds i8, ptr %.3237, i64 8
  %61 = getelementptr inbounds i8, ptr %.3, i64 8
  %62 = load i64, ptr %61, align 8
  store i64 %62, ptr %60, align 8
  %63 = getelementptr inbounds i8, ptr %.3237, i64 16
  %64 = getelementptr inbounds i8, ptr %.3, i64 16
  %65 = load i64, ptr %64, align 8
  store i64 %65, ptr %63, align 8
  %66 = getelementptr inbounds i8, ptr %.3237, i64 24
  %67 = getelementptr inbounds i8, ptr %.3, i64 24
  %68 = load i64, ptr %67, align 8
  store i64 %68, ptr %66, align 8
  %69 = getelementptr inbounds i8, ptr %.3237, i64 32
  %70 = getelementptr inbounds i8, ptr %.3, i64 32
  %71 = load i64, ptr %70, align 8
  store i64 %71, ptr %69, align 8
  %72 = getelementptr inbounds i8, ptr %.3237, i64 40
  %73 = getelementptr inbounds i8, ptr %.3, i64 40
  %74 = load i64, ptr %73, align 8
  store i64 %74, ptr %72, align 8
  %75 = getelementptr inbounds i8, ptr %.3237, i64 48
  %76 = getelementptr inbounds i8, ptr %.3, i64 48
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %75, align 8
  %78 = getelementptr inbounds i8, ptr %.3237, i64 56
  %sunkaddr = getelementptr inbounds i8, ptr %.3, i64 56
  %79 = load i64, ptr %sunkaddr, align 8
  store i64 %79, ptr %78, align 8
  %80 = getelementptr inbounds i8, ptr %.3237, i64 64
  %81 = getelementptr inbounds i8, ptr %.3, i64 64
  %82 = ptrtoint ptr %81 to i64
  %83 = sub nuw i64 %58, %82
  %84 = icmp ult i64 %83, 65
  %lsr.iv.next = add i64 %lsr.iv, -64
  br i1 %84, label %.loopexit, label %.preheader12

85:                                               ; preds = %91, %.preheader9
  %lsr.iv90 = phi i64 [ %lsr.iv, %.preheader9 ], [ %lsr.iv.next91, %91 ]
  %.3246 = phi ptr [ %113, %91 ], [ %.0243.ph, %.preheader9 ]
  %.3225 = phi ptr [ %114, %91 ], [ %.0222.ph, %.preheader9 ]
  %86 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %87 = load ptr, ptr %86, align 8
  %88 = load ptr, ptr %.0228.ph.ph, align 8
  %89 = tail call i8 %4(ptr align 1 %5, ptr align 1 %87, ptr align 1 %88) #15
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %.loopexit10

91:                                               ; preds = %85
  %92 = load i64, ptr %.3225, align 8
  store i64 %92, ptr %.3246, align 8
  %93 = getelementptr inbounds i8, ptr %.3246, i64 -8
  %94 = getelementptr inbounds i8, ptr %.3225, i64 -8
  %95 = load i64, ptr %94, align 8
  store i64 %95, ptr %93, align 8
  %96 = getelementptr inbounds i8, ptr %.3246, i64 -16
  %97 = getelementptr inbounds i8, ptr %.3225, i64 -16
  %98 = load i64, ptr %97, align 8
  store i64 %98, ptr %96, align 8
  %99 = getelementptr inbounds i8, ptr %.3246, i64 -24
  %100 = getelementptr inbounds i8, ptr %.3225, i64 -24
  %101 = load i64, ptr %100, align 8
  store i64 %101, ptr %99, align 8
  %102 = getelementptr inbounds i8, ptr %.3246, i64 -32
  %103 = getelementptr inbounds i8, ptr %.3225, i64 -32
  %104 = load i64, ptr %103, align 8
  store i64 %104, ptr %102, align 8
  %105 = getelementptr inbounds i8, ptr %.3246, i64 -40
  %106 = getelementptr inbounds i8, ptr %.3225, i64 -40
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %105, align 8
  %108 = getelementptr inbounds i8, ptr %.3246, i64 -48
  %109 = getelementptr inbounds i8, ptr %.3225, i64 -48
  %110 = load i64, ptr %109, align 8
  store i64 %110, ptr %108, align 8
  %111 = getelementptr inbounds i8, ptr %.3246, i64 -56
  %sunkaddr98 = getelementptr inbounds i8, ptr %.3225, i64 -56
  %112 = load i64, ptr %sunkaddr98, align 8
  store i64 %112, ptr %111, align 8
  %113 = getelementptr inbounds i8, ptr %.3246, i64 -64
  %114 = getelementptr inbounds i8, ptr %.3225, i64 -64
  %lsr.iv.next91 = add i64 %lsr.iv90, -64
  %115 = icmp ult i64 %lsr.iv.next91, 65
  br i1 %115, label %.loopexit.outer, label %85

.loopexit5:                                       ; preds = %260, %.loopexit10
  %.4247 = phi ptr [ %.5248, %260 ], [ %.2245, %.loopexit10 ]
  %.4238 = phi ptr [ %.5239, %260 ], [ %.2236, %.loopexit10 ]
  %.2230 = phi ptr [ %.3231, %260 ], [ %.0228.ph.ph, %.loopexit10 ]
  %.2215 = phi ptr [ %.3216, %260 ], [ %.0213.ph.ph31, %.loopexit10 ]
  %116 = ptrtoint ptr %.4247 to i64
  %117 = ptrtoint ptr %.4238 to i64
  %118 = sub nuw i64 %116, %117
  %119 = icmp ult i64 %118, 128
  br i1 %119, label %.preheader2, label %.cont46.preheader

.cont46.preheader:                                ; preds = %.loopexit5
  %120 = load ptr, ptr %.2, align 8
  %121 = load ptr, ptr %.2215, align 8
  %122 = tail call i8 %4(ptr align 1 %5, ptr align 1 %120, ptr align 1 %121) #15
  %.not = icmp eq i8 %122, 1
  %.sroa.speculated42 = select i1 %.not, ptr %.2215, ptr %.2
  %123 = load i64, ptr %.sroa.speculated42, align 8
  store i64 %123, ptr %.4238, align 8
  %124 = getelementptr inbounds i8, ptr %.sroa.speculated42, i64 8
  %..4217 = select i1 %.not, ptr %124, ptr %.2215
  %.4. = select i1 %.not, ptr %.2, ptr %124
  %125 = getelementptr inbounds i8, ptr %.4238, i64 8
  %126 = load ptr, ptr %.2224, align 8
  %127 = load ptr, ptr %.2230, align 8
  %128 = tail call i8 %4(ptr align 1 %5, ptr align 1 %126, ptr align 1 %127) #15
  %129 = icmp eq i8 %128, 1
  %.sroa.speculated105 = select i1 %129, ptr %.2224, ptr %.2230
  %130 = load i64, ptr %.sroa.speculated105, align 8
  store i64 %130, ptr %.4247, align 8
  %131 = getelementptr inbounds i8, ptr %.sroa.speculated105, i64 -8
  %.5233 = select i1 %129, ptr %.2230, ptr %131
  %.5227 = select i1 %129, ptr %131, ptr %.2224
  %132 = getelementptr inbounds i8, ptr %.4247, i64 -8
  %133 = load ptr, ptr %.4., align 8
  %134 = load ptr, ptr %..4217, align 8
  %135 = tail call i8 %4(ptr align 1 %5, ptr align 1 %133, ptr align 1 %134) #15
  %.not.1 = icmp eq i8 %135, 1
  %.sroa.speculated42.1 = select i1 %.not.1, ptr %..4217, ptr %.4.
  %136 = load i64, ptr %.sroa.speculated42.1, align 8
  store i64 %136, ptr %125, align 8
  %137 = getelementptr inbounds i8, ptr %.sroa.speculated42.1, i64 8
  %..4217.1 = select i1 %.not.1, ptr %137, ptr %..4217
  %.4..1 = select i1 %.not.1, ptr %.4., ptr %137
  %138 = getelementptr inbounds i8, ptr %.4238, i64 16
  %139 = load ptr, ptr %.5227, align 8
  %140 = load ptr, ptr %.5233, align 8
  %141 = tail call i8 %4(ptr align 1 %5, ptr align 1 %139, ptr align 1 %140) #15
  %142 = icmp eq i8 %141, 1
  %.sroa.speculated105.1 = select i1 %142, ptr %.5227, ptr %.5233
  %143 = load i64, ptr %.sroa.speculated105.1, align 8
  store i64 %143, ptr %132, align 8
  %144 = getelementptr inbounds i8, ptr %.sroa.speculated105.1, i64 -8
  %.5233.1 = select i1 %142, ptr %.5233, ptr %144
  %.5227.1 = select i1 %142, ptr %144, ptr %.5227
  %145 = getelementptr inbounds i8, ptr %.4247, i64 -16
  %146 = load ptr, ptr %.4..1, align 8
  %147 = load ptr, ptr %..4217.1, align 8
  %148 = tail call i8 %4(ptr align 1 %5, ptr align 1 %146, ptr align 1 %147) #15
  %.not.2 = icmp eq i8 %148, 1
  %.sroa.speculated42.2 = select i1 %.not.2, ptr %..4217.1, ptr %.4..1
  %149 = load i64, ptr %.sroa.speculated42.2, align 8
  store i64 %149, ptr %138, align 8
  %150 = getelementptr inbounds i8, ptr %.sroa.speculated42.2, i64 8
  %..4217.2 = select i1 %.not.2, ptr %150, ptr %..4217.1
  %.4..2 = select i1 %.not.2, ptr %.4..1, ptr %150
  %151 = getelementptr inbounds i8, ptr %.4238, i64 24
  %152 = load ptr, ptr %.5227.1, align 8
  %153 = load ptr, ptr %.5233.1, align 8
  %154 = tail call i8 %4(ptr align 1 %5, ptr align 1 %152, ptr align 1 %153) #15
  %155 = icmp eq i8 %154, 1
  %.sroa.speculated105.2 = select i1 %155, ptr %.5227.1, ptr %.5233.1
  %156 = load i64, ptr %.sroa.speculated105.2, align 8
  store i64 %156, ptr %145, align 8
  %157 = getelementptr inbounds i8, ptr %.sroa.speculated105.2, i64 -8
  %.5233.2 = select i1 %155, ptr %.5233.1, ptr %157
  %.5227.2 = select i1 %155, ptr %157, ptr %.5227.1
  %158 = getelementptr inbounds i8, ptr %.4247, i64 -24
  %159 = load ptr, ptr %.4..2, align 8
  %160 = load ptr, ptr %..4217.2, align 8
  %161 = tail call i8 %4(ptr align 1 %5, ptr align 1 %159, ptr align 1 %160) #15
  %.not.3 = icmp eq i8 %161, 1
  %.sroa.speculated42.3 = select i1 %.not.3, ptr %..4217.2, ptr %.4..2
  %162 = load i64, ptr %.sroa.speculated42.3, align 8
  store i64 %162, ptr %151, align 8
  %163 = getelementptr inbounds i8, ptr %.sroa.speculated42.3, i64 8
  %..4217.3 = select i1 %.not.3, ptr %163, ptr %..4217.2
  %.4..3 = select i1 %.not.3, ptr %.4..2, ptr %163
  %164 = getelementptr inbounds i8, ptr %.4238, i64 32
  %165 = load ptr, ptr %.5227.2, align 8
  %166 = load ptr, ptr %.5233.2, align 8
  %167 = tail call i8 %4(ptr align 1 %5, ptr align 1 %165, ptr align 1 %166) #15
  %168 = icmp eq i8 %167, 1
  %.sroa.speculated105.3 = select i1 %168, ptr %.5227.2, ptr %.5233.2
  %169 = load i64, ptr %.sroa.speculated105.3, align 8
  store i64 %169, ptr %158, align 8
  %170 = getelementptr inbounds i8, ptr %.sroa.speculated105.3, i64 -8
  %.5233.3 = select i1 %168, ptr %.5233.2, ptr %170
  %.5227.3 = select i1 %168, ptr %170, ptr %.5227.2
  %171 = getelementptr inbounds i8, ptr %.4247, i64 -32
  %172 = load ptr, ptr %.4..3, align 8
  %173 = load ptr, ptr %..4217.3, align 8
  %174 = tail call i8 %4(ptr align 1 %5, ptr align 1 %172, ptr align 1 %173) #15
  %.not.4 = icmp eq i8 %174, 1
  %.sroa.speculated42.4 = select i1 %.not.4, ptr %..4217.3, ptr %.4..3
  %175 = load i64, ptr %.sroa.speculated42.4, align 8
  store i64 %175, ptr %164, align 8
  %176 = getelementptr inbounds i8, ptr %.sroa.speculated42.4, i64 8
  %..4217.4 = select i1 %.not.4, ptr %176, ptr %..4217.3
  %.4..4 = select i1 %.not.4, ptr %.4..3, ptr %176
  %177 = getelementptr inbounds i8, ptr %.4238, i64 40
  %178 = load ptr, ptr %.5227.3, align 8
  %179 = load ptr, ptr %.5233.3, align 8
  %180 = tail call i8 %4(ptr align 1 %5, ptr align 1 %178, ptr align 1 %179) #15
  %181 = icmp eq i8 %180, 1
  %.sroa.speculated105.4 = select i1 %181, ptr %.5227.3, ptr %.5233.3
  %182 = load i64, ptr %.sroa.speculated105.4, align 8
  store i64 %182, ptr %171, align 8
  %183 = getelementptr inbounds i8, ptr %.sroa.speculated105.4, i64 -8
  %.5233.4 = select i1 %181, ptr %.5233.3, ptr %183
  %.5227.4 = select i1 %181, ptr %183, ptr %.5227.3
  %184 = getelementptr inbounds i8, ptr %.4247, i64 -40
  %185 = load ptr, ptr %.4..4, align 8
  %186 = load ptr, ptr %..4217.4, align 8
  %187 = tail call i8 %4(ptr align 1 %5, ptr align 1 %185, ptr align 1 %186) #15
  %.not.5 = icmp eq i8 %187, 1
  %.sroa.speculated42.5 = select i1 %.not.5, ptr %..4217.4, ptr %.4..4
  %188 = load i64, ptr %.sroa.speculated42.5, align 8
  store i64 %188, ptr %177, align 8
  %189 = getelementptr inbounds i8, ptr %.sroa.speculated42.5, i64 8
  %..4217.5 = select i1 %.not.5, ptr %189, ptr %..4217.4
  %.4..5 = select i1 %.not.5, ptr %.4..4, ptr %189
  %190 = getelementptr inbounds i8, ptr %.4238, i64 48
  %191 = load ptr, ptr %.5227.4, align 8
  %192 = load ptr, ptr %.5233.4, align 8
  %193 = tail call i8 %4(ptr align 1 %5, ptr align 1 %191, ptr align 1 %192) #15
  %194 = icmp eq i8 %193, 1
  %.sroa.speculated105.5 = select i1 %194, ptr %.5227.4, ptr %.5233.4
  %195 = load i64, ptr %.sroa.speculated105.5, align 8
  store i64 %195, ptr %184, align 8
  %196 = getelementptr inbounds i8, ptr %.sroa.speculated105.5, i64 -8
  %.5233.5 = select i1 %194, ptr %.5233.4, ptr %196
  %.5227.5 = select i1 %194, ptr %196, ptr %.5227.4
  %197 = getelementptr inbounds i8, ptr %.4247, i64 -48
  %198 = load ptr, ptr %.4..5, align 8
  %199 = load ptr, ptr %..4217.5, align 8
  %200 = tail call i8 %4(ptr align 1 %5, ptr align 1 %198, ptr align 1 %199) #15
  %.not.6 = icmp eq i8 %200, 1
  %.sroa.speculated42.6 = select i1 %.not.6, ptr %..4217.5, ptr %.4..5
  %201 = load i64, ptr %.sroa.speculated42.6, align 8
  store i64 %201, ptr %190, align 8
  %202 = getelementptr inbounds i8, ptr %.sroa.speculated42.6, i64 8
  %..4217.6 = select i1 %.not.6, ptr %202, ptr %..4217.5
  %.4..6 = select i1 %.not.6, ptr %.4..5, ptr %202
  %203 = getelementptr inbounds i8, ptr %.4238, i64 56
  %204 = load ptr, ptr %.5227.5, align 8
  %205 = load ptr, ptr %.5233.5, align 8
  %206 = tail call i8 %4(ptr align 1 %5, ptr align 1 %204, ptr align 1 %205) #15
  %207 = icmp eq i8 %206, 1
  %.sroa.speculated105.6 = select i1 %207, ptr %.5227.5, ptr %.5233.5
  %208 = load i64, ptr %.sroa.speculated105.6, align 8
  store i64 %208, ptr %197, align 8
  %209 = getelementptr inbounds i8, ptr %.sroa.speculated105.6, i64 -8
  %.5233.6 = select i1 %207, ptr %.5233.5, ptr %209
  %.5227.6 = select i1 %207, ptr %209, ptr %.5227.5
  %210 = getelementptr inbounds i8, ptr %.4247, i64 -56
  %211 = load ptr, ptr %.4..6, align 8
  %212 = load ptr, ptr %..4217.6, align 8
  %213 = tail call i8 %4(ptr align 1 %5, ptr align 1 %211, ptr align 1 %212) #15
  %.not.7 = icmp eq i8 %213, 1
  %.sroa.speculated42.7 = select i1 %.not.7, ptr %..4217.6, ptr %.4..6
  %214 = load i64, ptr %.sroa.speculated42.7, align 8
  store i64 %214, ptr %203, align 8
  %215 = getelementptr inbounds i8, ptr %.sroa.speculated42.7, i64 8
  %..4217.7 = select i1 %.not.7, ptr %215, ptr %..4217.6
  %.4..7 = select i1 %.not.7, ptr %.4..6, ptr %215
  %216 = getelementptr inbounds i8, ptr %.4238, i64 64
  %217 = load ptr, ptr %.5227.6, align 8
  %218 = load ptr, ptr %.5233.6, align 8
  %219 = tail call i8 %4(ptr align 1 %5, ptr align 1 %217, ptr align 1 %218) #15
  %220 = icmp eq i8 %219, 1
  %.sroa.speculated105.7 = select i1 %220, ptr %.5227.6, ptr %.5233.6
  %221 = load i64, ptr %.sroa.speculated105.7, align 8
  store i64 %221, ptr %210, align 8
  %222 = getelementptr inbounds i8, ptr %.sroa.speculated105.7, i64 -8
  %.5233.7 = select i1 %220, ptr %.5233.6, ptr %222
  %.5227.7 = select i1 %220, ptr %222, ptr %.5227.6
  %223 = getelementptr inbounds i8, ptr %.4247, i64 -64
  br label %.loopexit.outer.outer

.preheader2:                                      ; preds = %.loopexit5
  %224 = icmp ule ptr %.2, %.2224
  %225 = icmp ule ptr %.2215, %.2230
  %226 = select i1 %224, i1 %225, i1 false
  br i1 %226, label %.cont.preheader, label %.preheader1

.cont.preheader:                                  ; preds = %.preheader2
  br label %.cont

.preheader7:                                      ; preds = %232, %.preheader7.preheader
  %lsr.iv92 = phi i64 [ %51, %.preheader7.preheader ], [ %lsr.iv.next93, %232 ]
  %.5239 = phi ptr [ %255, %232 ], [ %.2236, %.preheader7.preheader ]
  %.3216 = phi ptr [ %256, %232 ], [ %.0213.ph.ph31, %.preheader7.preheader ]
  %227 = getelementptr inbounds i8, ptr %.3216, i64 56
  %228 = load ptr, ptr %.2, align 8
  %229 = load ptr, ptr %227, align 8
  %230 = tail call i8 %4(ptr align 1 %5, ptr align 1 %228, ptr align 1 %229) #15
  %231 = icmp eq i8 %230, 1
  br i1 %231, label %232, label %.preheader4

.preheader4:                                      ; preds = %.preheader7
  br label %260

232:                                              ; preds = %.preheader7
  %233 = ptrtoint ptr %.0228.ph.ph to i64
  %234 = load i64, ptr %.3216, align 8
  store i64 %234, ptr %.5239, align 8
  %235 = getelementptr inbounds i8, ptr %.5239, i64 8
  %236 = getelementptr inbounds i8, ptr %.3216, i64 8
  %237 = load i64, ptr %236, align 8
  store i64 %237, ptr %235, align 8
  %238 = getelementptr inbounds i8, ptr %.5239, i64 16
  %239 = getelementptr inbounds i8, ptr %.3216, i64 16
  %240 = load i64, ptr %239, align 8
  store i64 %240, ptr %238, align 8
  %241 = getelementptr inbounds i8, ptr %.5239, i64 24
  %242 = getelementptr inbounds i8, ptr %.3216, i64 24
  %243 = load i64, ptr %242, align 8
  store i64 %243, ptr %241, align 8
  %244 = getelementptr inbounds i8, ptr %.5239, i64 32
  %245 = getelementptr inbounds i8, ptr %.3216, i64 32
  %246 = load i64, ptr %245, align 8
  store i64 %246, ptr %244, align 8
  %247 = getelementptr inbounds i8, ptr %.5239, i64 40
  %248 = getelementptr inbounds i8, ptr %.3216, i64 40
  %249 = load i64, ptr %248, align 8
  store i64 %249, ptr %247, align 8
  %250 = getelementptr inbounds i8, ptr %.5239, i64 48
  %251 = getelementptr inbounds i8, ptr %.3216, i64 48
  %252 = load i64, ptr %251, align 8
  store i64 %252, ptr %250, align 8
  %253 = getelementptr inbounds i8, ptr %.5239, i64 56
  %sunkaddr99 = getelementptr inbounds i8, ptr %.3216, i64 56
  %254 = load i64, ptr %sunkaddr99, align 8
  store i64 %254, ptr %253, align 8
  %255 = getelementptr inbounds i8, ptr %.5239, i64 64
  %256 = getelementptr inbounds i8, ptr %.3216, i64 64
  %257 = ptrtoint ptr %256 to i64
  %258 = sub nuw i64 %233, %257
  %259 = icmp ult i64 %258, 65
  %lsr.iv.next93 = add i64 %lsr.iv92, -64
  br i1 %259, label %.loopexit.outer.outer27, label %.preheader7

260:                                              ; preds = %265, %.preheader4
  %lsr.iv94 = phi i64 [ %lsr.iv92, %.preheader4 ], [ %lsr.iv.next95, %265 ]
  %.5248 = phi ptr [ %287, %265 ], [ %.2245, %.preheader4 ]
  %.3231 = phi ptr [ %288, %265 ], [ %.0228.ph.ph, %.preheader4 ]
  %261 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %262 = load ptr, ptr %.2224, align 8
  %263 = load ptr, ptr %261, align 8
  %264 = tail call i8 %4(ptr align 1 %5, ptr align 1 %262, ptr align 1 %263) #15
  %.not256 = icmp eq i8 %264, 1
  br i1 %.not256, label %.loopexit5, label %265

265:                                              ; preds = %260
  %266 = load i64, ptr %.3231, align 8
  store i64 %266, ptr %.5248, align 8
  %267 = getelementptr inbounds i8, ptr %.5248, i64 -8
  %268 = getelementptr inbounds i8, ptr %.3231, i64 -8
  %269 = load i64, ptr %268, align 8
  store i64 %269, ptr %267, align 8
  %270 = getelementptr inbounds i8, ptr %.5248, i64 -16
  %271 = getelementptr inbounds i8, ptr %.3231, i64 -16
  %272 = load i64, ptr %271, align 8
  store i64 %272, ptr %270, align 8
  %273 = getelementptr inbounds i8, ptr %.5248, i64 -24
  %274 = getelementptr inbounds i8, ptr %.3231, i64 -24
  %275 = load i64, ptr %274, align 8
  store i64 %275, ptr %273, align 8
  %276 = getelementptr inbounds i8, ptr %.5248, i64 -32
  %277 = getelementptr inbounds i8, ptr %.3231, i64 -32
  %278 = load i64, ptr %277, align 8
  store i64 %278, ptr %276, align 8
  %279 = getelementptr inbounds i8, ptr %.5248, i64 -40
  %280 = getelementptr inbounds i8, ptr %.3231, i64 -40
  %281 = load i64, ptr %280, align 8
  store i64 %281, ptr %279, align 8
  %282 = getelementptr inbounds i8, ptr %.5248, i64 -48
  %283 = getelementptr inbounds i8, ptr %.3231, i64 -48
  %284 = load i64, ptr %283, align 8
  store i64 %284, ptr %282, align 8
  %285 = getelementptr inbounds i8, ptr %.5248, i64 -56
  %sunkaddr100 = getelementptr inbounds i8, ptr %.3231, i64 -56
  %286 = load i64, ptr %sunkaddr100, align 8
  store i64 %286, ptr %285, align 8
  %287 = getelementptr inbounds i8, ptr %.5248, i64 -64
  %288 = getelementptr inbounds i8, ptr %.3231, i64 -64
  %lsr.iv.next95 = add i64 %lsr.iv94, -64
  %289 = icmp ult i64 %lsr.iv.next95, 65
  br i1 %289, label %.loopexit.outer.outer, label %260

.preheader1:                                      ; preds = %select.end96, %.preheader2
  %.7241.lcssa = phi ptr [ %.4238, %.preheader2 ], [ %296, %select.end96 ]
  %.6219.lcssa = phi ptr [ %.2215, %.preheader2 ], [ %..6219, %select.end96 ]
  %.6.lcssa = phi ptr [ %.2, %.preheader2 ], [ %.6., %select.end96 ]
  %.not25341 = icmp ugt ptr %.6.lcssa, %.2224
  br i1 %.not25341, label %.preheader, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader1
  br label %.lr.ph

.cont:                                            ; preds = %select.end96, %.cont.preheader
  %.638 = phi ptr [ %.6., %select.end96 ], [ %.2, %.cont.preheader ]
  %.621937 = phi ptr [ %..6219, %select.end96 ], [ %.2215, %.cont.preheader ]
  %.724136 = phi ptr [ %296, %select.end96 ], [ %.4238, %.cont.preheader ]
  %290 = load ptr, ptr %.638, align 8
  %291 = load ptr, ptr %.621937, align 8
  %292 = tail call i8 %4(ptr align 1 %5, ptr align 1 %290, ptr align 1 %291) #15
  %.sroa.speculated.frozen = freeze i8 %292
  %.not255 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not255, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.621937, %.cont ], [ %.638, %select.false ]
  %..6219.frozen = freeze i8 %292
  %293 = icmp eq i8 %..6219.frozen, 1
  %294 = load i64, ptr %.sroa.speculated, align 8
  store i64 %294, ptr %.724136, align 8
  %295 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  br i1 %293, label %select.end96, label %select.false97

select.false97:                                   ; preds = %select.end
  br label %select.end96

select.end96:                                     ; preds = %select.false97, %select.end
  %..6219 = phi ptr [ %295, %select.end ], [ %.621937, %select.false97 ]
  %.6. = phi ptr [ %.638, %select.end ], [ %295, %select.false97 ]
  %296 = getelementptr inbounds i8, ptr %.724136, i64 8
  %297 = icmp ule ptr %.6., %.2224
  %298 = icmp ule ptr %..6219, %.2230
  %299 = select i1 %297, i1 %298, i1 false
  br i1 %299, label %.cont, label %.preheader1

.preheader:                                       ; preds = %.lr.ph, %.preheader1
  %.8242.lcssa = phi ptr [ %.7241.lcssa, %.preheader1 ], [ %301, %.lr.ph ]
  %.not25445 = icmp ugt ptr %.6219.lcssa, %.2230
  br i1 %.not25445, label %common.ret, label %.lr.ph48.preheader

.lr.ph48.preheader:                               ; preds = %.preheader
  br label %.lr.ph48

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.843 = phi ptr [ %302, %.lr.ph ], [ %.6.lcssa, %.lr.ph.preheader ]
  %.824242 = phi ptr [ %301, %.lr.ph ], [ %.7241.lcssa, %.lr.ph.preheader ]
  %300 = load i64, ptr %.843, align 8
  store i64 %300, ptr %.824242, align 8
  %301 = getelementptr inbounds i8, ptr %.824242, i64 8
  %302 = getelementptr inbounds i8, ptr %.843, i64 8
  %.not253 = icmp ugt ptr %302, %.2224
  br i1 %.not253, label %.preheader, label %.lr.ph

.lr.ph48:                                         ; preds = %.lr.ph48, %.lr.ph48.preheader
  %.822147 = phi ptr [ %305, %.lr.ph48 ], [ %.6219.lcssa, %.lr.ph48.preheader ]
  %.946 = phi ptr [ %304, %.lr.ph48 ], [ %.8242.lcssa, %.lr.ph48.preheader ]
  %303 = load i64, ptr %.822147, align 8
  store i64 %303, ptr %.946, align 8
  %304 = getelementptr inbounds i8, ptr %.946, i64 8
  %305 = getelementptr inbounds i8, ptr %.822147, i64 8
  %.not254 = icmp ugt ptr %305, %.2230
  br i1 %.not254, label %common.ret, label %.lr.ph48
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16476(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
._crit_edge:
  %.pre = add i64 %2, -1
  %9 = mul nuw i64 %6, %2
  %10 = getelementptr inbounds i8, ptr %1, i64 %9
  %11 = sub i64 0, %6
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = mul nuw i64 %6, %3
  %14 = getelementptr inbounds i8, ptr %12, i64 %13
  %15 = add i64 %.pre, %3
  %16 = mul nuw i64 %15, %6
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  %18 = icmp ult i64 %2, %3
  br i1 %18, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %._crit_edge
  %.066 = phi ptr [ %25, %.cont16 ], [ %0, %._crit_edge ]
  %.061 = phi ptr [ %., %.cont16 ], [ %10, %._crit_edge ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %._crit_edge ]
  %19 = shl nuw i64 %2, 1
  tail call void %8(ptr align 1 %5, i64 %19) #15
  %20 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0, ptr nonnull align 1 %.061) #15
  %.not = icmp eq i8 %20, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  tail call void %7(ptr align 1 %.066, ptr align 1 %.sroa.speculated21) #15
  %.not88 = icmp eq i64 %.pre, 0
  br i1 %.not88, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %21 = icmp eq i8 %20, 1
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 %6
  %.0. = select i1 %21, ptr %.0, ptr %22
  %..061 = select i1 %21, ptr %22, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 %6
  br label %.cont

.cont16:                                          ; preds = %._crit_edge
  tail call void %8(ptr align 1 %5, i64 1) #15
  %23 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %10) #15
  %.not77 = icmp eq i8 %23, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %10, ptr %1
  tail call void %7(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated12) #15
  %24 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 %6
  %. = select i1 %.not77, ptr %24, ptr %10
  %.78 = select i1 %.not77, ptr %1, ptr %24
  %25 = getelementptr inbounds i8, ptr %0, i64 %6
  br label %.cont25

.cont:                                            ; preds = %select.end95, %.cont.preheader
  %lsr.iv90 = phi i64 [ %.pre, %.cont.preheader ], [ %lsr.iv.next, %select.end95 ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep89, %select.end95 ]
  %.385 = phi ptr [ %.3., %select.end95 ], [ %.0., %.cont.preheader ]
  %.36484 = phi ptr [ %..364, %select.end95 ], [ %..061, %.cont.preheader ]
  %.06882 = phi ptr [ %.169, %select.end95 ], [ %12, %.cont.preheader ]
  %.07081 = phi ptr [ %.171, %select.end95 ], [ %14, %.cont.preheader ]
  %.07280 = phi ptr [ %33, %select.end95 ], [ %17, %.cont.preheader ]
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.385, ptr align 1 %.36484) #15
  %.sroa.speculated.frozen = freeze i8 %26
  %.not76 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not76, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.36484, %.cont ], [ %.385, %select.false ]
  %..364.frozen = freeze i8 %26
  %27 = icmp eq i8 %..364.frozen, 1
  tail call void %7(ptr align 1 %lsr.iv, ptr align 1 %.sroa.speculated) #15
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  br i1 %27, label %select.end91, label %select.false92

select.false92:                                   ; preds = %select.end
  br label %select.end91

select.end91:                                     ; preds = %select.false92, %select.end
  %..364 = phi ptr [ %28, %select.end ], [ %.36484, %select.false92 ]
  %.3. = phi ptr [ %.385, %select.end ], [ %28, %select.false92 ]
  %29 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.06882, ptr align 1 %.07081) #15
  %.sroa.speculated40.frozen = freeze i8 %29
  %30 = icmp eq i8 %.sroa.speculated40.frozen, 1
  br i1 %30, label %select.end93, label %select.false94

select.false94:                                   ; preds = %select.end91
  br label %select.end93

select.end93:                                     ; preds = %select.false94, %select.end91
  %.sroa.speculated40 = phi ptr [ %.06882, %select.end91 ], [ %.07081, %select.false94 ]
  %.171.frozen = freeze i8 %29
  %31 = icmp eq i8 %.171.frozen, 1
  tail call void %7(ptr align 1 %.07280, ptr align 1 %.sroa.speculated40) #15
  %32 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 %11
  br i1 %31, label %select.end95, label %select.false96

select.false96:                                   ; preds = %select.end93
  br label %select.end95

select.end95:                                     ; preds = %select.false96, %select.end93
  %.171 = phi ptr [ %.07081, %select.end93 ], [ %32, %select.false96 ]
  %.169 = phi ptr [ %32, %select.end93 ], [ %.06882, %select.false96 ]
  %33 = getelementptr inbounds i8, ptr %.07280, i64 %11
  %uglygep89 = getelementptr i8, ptr %lsr.iv, i64 %6
  %lsr.iv.next = add i64 %lsr.iv90, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %select.end95, %.cont25
  %.072.lcssa = phi ptr [ %17, %.cont25 ], [ %33, %select.end95 ]
  %.070.lcssa = phi ptr [ %14, %.cont25 ], [ %.171, %select.end95 ]
  %.068.lcssa = phi ptr [ %12, %.cont25 ], [ %.169, %select.end95 ]
  %34 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.068.lcssa, ptr align 1 %.070.lcssa) #15
  %35 = icmp eq i8 %34, 1
  %.sroa.speculated46 = select i1 %35, ptr %.068.lcssa, ptr %.070.lcssa
  tail call void %7(ptr align 1 %.072.lcssa, ptr align 1 %.sroa.speculated46) #15
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quad_swap_merge__anon_16478(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5) unnamed_addr #4 {
.cont19:
  %6 = shl nuw i64 %4, 1
  %7 = getelementptr inbounds i8, ptr %0, i64 %6
  %8 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %0, ptr nonnull align 1 %7) #15
  %.not = icmp eq i8 %8, 1
  %.sroa.speculated15 = select i1 %.not, ptr %7, ptr %0
  tail call void %5(ptr nonnull align 1 %1, ptr nonnull align 1 %.sroa.speculated15) #15
  %9 = getelementptr inbounds i8, ptr %.sroa.speculated15, i64 %4
  %. = select i1 %.not, ptr %9, ptr %7
  %.187 = select i1 %.not, ptr %0, ptr %9
  %10 = getelementptr inbounds i8, ptr %1, i64 %4
  %11 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.187, ptr nonnull align 1 %.) #15
  %.not180 = icmp eq i8 %11, 1
  %12 = select i1 %.not180, ptr %., ptr %.187
  tail call void %5(ptr nonnull align 1 %10, ptr nonnull align 1 %12) #15
  %13 = getelementptr inbounds i8, ptr %0, i64 %4
  %14 = mul nuw i64 %4, 3
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = getelementptr inbounds i8, ptr %1, i64 %14
  %17 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %13, ptr nonnull align 1 %15) #15
  %18 = icmp eq i8 %17, 1
  %.sroa.speculated = select i1 %18, ptr %13, ptr %15
  tail call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %.sroa.speculated) #15
  %19 = sub i64 0, %4
  %20 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %19
  %.1164 = select i1 %18, ptr %15, ptr %20
  %.1 = select i1 %18, ptr %20, ptr %13
  %21 = getelementptr inbounds i8, ptr %16, i64 %19
  %22 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.1, ptr nonnull align 1 %.1164) #15
  %23 = icmp eq i8 %22, 1
  %.0165 = select i1 %23, ptr %.1, ptr %.1164
  tail call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %.0165) #15
  %24 = shl nuw i64 %4, 2
  %25 = getelementptr inbounds i8, ptr %1, i64 %24
  %26 = getelementptr inbounds i8, ptr %0, i64 %24
  %27 = getelementptr inbounds i8, ptr %26, i64 %6
  %28 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %26, ptr nonnull align 1 %27) #15
  %.not181 = icmp eq i8 %28, 1
  %.sroa.speculated50 = select i1 %.not181, ptr %27, ptr %26
  tail call void %5(ptr nonnull align 1 %25, ptr nonnull align 1 %.sroa.speculated50) #15
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %4
  %.0168 = select i1 %.not181, ptr %29, ptr %27
  %.0166 = select i1 %.not181, ptr %26, ptr %29
  %30 = getelementptr inbounds i8, ptr %25, i64 %4
  %31 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.0166, ptr nonnull align 1 %.0168) #15
  %.not182 = icmp eq i8 %31, 1
  %32 = select i1 %.not182, ptr %.0168, ptr %.0166
  tail call void %5(ptr nonnull align 1 %30, ptr align 1 %32) #15
  %33 = getelementptr inbounds i8, ptr %26, i64 %4
  %34 = getelementptr inbounds i8, ptr %26, i64 %14
  %35 = getelementptr inbounds i8, ptr %25, i64 %14
  %36 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %33, ptr nonnull align 1 %34) #15
  %37 = icmp eq i8 %36, 1
  %.sroa.speculated41 = select i1 %37, ptr %33, ptr %34
  tail call void %5(ptr nonnull align 1 %35, ptr nonnull align 1 %.sroa.speculated41) #15
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %19
  %.1169 = select i1 %37, ptr %34, ptr %38
  %.1167 = select i1 %37, ptr %38, ptr %33
  %39 = getelementptr inbounds i8, ptr %35, i64 %19
  %40 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.1167, ptr nonnull align 1 %.1169) #15
  %41 = icmp eq i8 %40, 1
  %.0170 = select i1 %41, ptr %.1167, ptr %.1169
  tail call void %5(ptr nonnull align 1 %39, ptr align 1 %.0170) #15
  %42 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %1, ptr nonnull align 1 %25) #15
  %.not183 = icmp eq i8 %42, 1
  %.sroa.speculated128 = select i1 %.not183, ptr %25, ptr %1
  tail call void %5(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated128) #15
  %43 = getelementptr inbounds i8, ptr %.sroa.speculated128, i64 %4
  %.0173 = select i1 %.not183, ptr %43, ptr %25
  %.0171 = select i1 %.not183, ptr %1, ptr %43
  %44 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.0171, ptr nonnull align 1 %.0173) #15
  %.not184 = icmp eq i8 %44, 1
  %.sroa.speculated119 = select i1 %.not184, ptr %.0173, ptr %.0171
  tail call void %5(ptr nonnull align 1 %13, ptr nonnull align 1 %.sroa.speculated119) #15
  %45 = getelementptr inbounds i8, ptr %.sroa.speculated119, i64 %4
  %.1174 = select i1 %.not184, ptr %45, ptr %.0173
  %.1172 = select i1 %.not184, ptr %.0171, ptr %45
  %46 = getelementptr inbounds i8, ptr %13, i64 %4
  %47 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.1172, ptr align 1 %.1174) #15
  %.not185 = icmp eq i8 %47, 1
  %.sroa.speculated110 = select i1 %.not185, ptr %.1174, ptr %.1172
  tail call void %5(ptr nonnull align 1 %46, ptr align 1 %.sroa.speculated110) #15
  %48 = getelementptr inbounds i8, ptr %.sroa.speculated110, i64 %4
  %.2175 = select i1 %.not185, ptr %48, ptr %.1174
  %.2 = select i1 %.not185, ptr %.1172, ptr %48
  %49 = getelementptr inbounds i8, ptr %46, i64 %4
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.2, ptr align 1 %.2175) #15
  %.not186 = icmp eq i8 %50, 1
  %51 = select i1 %.not186, ptr %.2175, ptr %.2
  tail call void %5(ptr nonnull align 1 %49, ptr align 1 %51) #15
  %52 = mul nuw i64 %4, 7
  %53 = getelementptr inbounds i8, ptr %1, i64 %52
  %54 = getelementptr inbounds i8, ptr %0, i64 %52
  %55 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %53) #15
  %56 = icmp eq i8 %55, 1
  %.sroa.speculated101 = select i1 %56, ptr %16, ptr %53
  tail call void %5(ptr nonnull align 1 %54, ptr nonnull align 1 %.sroa.speculated101) #15
  %57 = getelementptr inbounds i8, ptr %.sroa.speculated101, i64 %19
  %.3176 = select i1 %56, ptr %53, ptr %57
  %.3 = select i1 %56, ptr %57, ptr %16
  %58 = getelementptr inbounds i8, ptr %54, i64 %19
  %59 = tail call i8 %2(ptr align 1 %3, ptr nonnull align 1 %.3, ptr nonnull align 1 %.3176) #15
  %60 = icmp eq i8 %59, 1
  %.sroa.speculated92 = select i1 %60, ptr %.3, ptr %.3176
  tail call void %5(ptr nonnull align 1 %58, ptr nonnull align 1 %.sroa.speculated92) #15
  %61 = getelementptr inbounds i8, ptr %.sroa.speculated92, i64 %19
  %.4177 = select i1 %60, ptr %.3176, ptr %61
  %.4 = select i1 %60, ptr %61, ptr %.3
  %62 = getelementptr inbounds i8, ptr %58, i64 %19
  %63 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.4, ptr align 1 %.4177) #15
  %64 = icmp eq i8 %63, 1
  %.sroa.speculated83 = select i1 %64, ptr %.4, ptr %.4177
  tail call void %5(ptr nonnull align 1 %62, ptr align 1 %.sroa.speculated83) #15
  %65 = getelementptr inbounds i8, ptr %.sroa.speculated83, i64 %19
  %.5178 = select i1 %64, ptr %.4177, ptr %65
  %.5 = select i1 %64, ptr %65, ptr %.4
  %66 = tail call i8 %2(ptr align 1 %3, ptr align 1 %.5, ptr align 1 %.5178) #15
  %67 = icmp eq i8 %66, 1
  %.0179 = select i1 %67, ptr %.5, ptr %.5178
  %68 = getelementptr inbounds i8, ptr %62, i64 %19
  tail call void %5(ptr nonnull align 1 %68, ptr align 1 %.0179) #15
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = icmp eq i64 %1, %4
  br i1 %16, label %common.ret, label %17

common.ret:                                       ; preds = %181, %.preheader, %17, %10
  ret void

17:                                               ; preds = %10
  %18 = add i64 %4, -1
  %19 = mul nuw i64 %18, %7
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %15, align 8
  %21 = add i64 %1, -1
  %22 = mul nuw i64 %21, %7
  %23 = getelementptr inbounds i8, ptr %0, i64 %22
  tail call void %9(ptr align 1 %6, i64 1) #15
  %24 = getelementptr inbounds i8, ptr %20, i64 %7
  %25 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %20, ptr nonnull align 1 %24) #15
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %17
  %27 = sub nuw i64 %1, %4
  %28 = icmp ule i64 %1, %3
  %29 = icmp ugt i64 %27, 63
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %27, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  %32 = mul nuw i64 %7, %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %32, i1 false)
  ret void

33:                                               ; preds = %26
  %34 = mul nuw i64 %27, %7
  %35 = mul nuw i64 %7, %4
  %36 = getelementptr inbounds i8, ptr %0, i64 %35
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %36, i64 %34, i1 false)
  %37 = add i64 %27, -1
  %38 = mul nuw i64 %37, %7
  %39 = getelementptr inbounds i8, ptr %2, i64 %38
  store ptr %39, ptr %13, align 8
  %40 = shl nuw i64 %7, 4
  %41 = getelementptr inbounds i8, ptr %0, i64 %40
  %42 = getelementptr inbounds i8, ptr %2, i64 %40
  %43 = icmp sgt i64 %19, %40
  %44 = icmp sgt i64 %38, %40
  %45 = select i1 %43, i1 %44, i1 false
  br i1 %45, label %.preheader29.lr.ph, label %.loopexit31

.preheader29.lr.ph:                               ; preds = %33
  %.neg = mul i64 %7, -15
  %46 = sub i64 0, %7
  %47 = mul i64 %7, -14
  %48 = mul i64 %7, -13
  %49 = mul i64 %7, -12
  %50 = mul i64 %7, -11
  %51 = mul i64 %7, -10
  %52 = mul i64 %7, -9
  %53 = mul i64 %7, -8
  %54 = mul i64 %7, -7
  %55 = mul i64 %7, -6
  %56 = mul i64 %7, -5
  %57 = mul i64 %7, -4
  %58 = mul i64 %7, -3
  %59 = mul i64 %7, -2
  %60 = mul i64 %7, -14
  %61 = mul i64 %7, -13
  %62 = mul i64 %7, -12
  %63 = mul i64 %7, -11
  %64 = mul i64 %7, -10
  %65 = mul i64 %7, -9
  %66 = mul i64 %7, -8
  %67 = mul i64 %7, -7
  %68 = mul i64 %7, -6
  %69 = mul i64 %7, -5
  %70 = mul i64 %7, -4
  %71 = mul i64 %7, -3
  %72 = mul i64 %7, -2
  br label %.preheader29

.loopexit28:                                      ; preds = %99
  %uglygep313 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next256
  store ptr %uglygep313, ptr %15, align 8
  %uglygep263 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv182
  %uglygep264 = getelementptr i8, ptr %uglygep263, i64 %lsr.iv.next256
  store ptr %uglygep264, ptr %14, align 8
  %uglygep219 = getelementptr i8, ptr %.promoted, i64 %lsr.iv182
  %uglygep261 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv182
  %uglygep262 = getelementptr i8, ptr %uglygep261, i64 %lsr.iv.next256
  %uglygep312 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next256
  br label %75

.loopexit30:                                      ; preds = %95
  %uglygep222 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next183
  store ptr %uglygep222, ptr %13, align 8
  %uglygep187 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next183
  store ptr %uglygep187, ptr %14, align 8
  %uglygep186 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next183
  %uglygep221 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next183
  br label %75

.loopexit31:                                      ; preds = %.loopexit, %33
  %73 = phi ptr [ %20, %33 ], [ %88, %.loopexit ]
  %74 = phi ptr [ %39, %33 ], [ %90, %.loopexit ]
  %.lcssa4648.lcssa = phi ptr [ %23, %33 ], [ %107, %.loopexit ]
  store ptr %.lcssa4648.lcssa, ptr %14, align 8
  br label %75

75:                                               ; preds = %.loopexit31, %.loopexit30, %.loopexit28
  %.promoted5285 = phi ptr [ %.lcssa4648.lcssa, %.loopexit31 ], [ %uglygep186, %.loopexit30 ], [ %uglygep262, %.loopexit28 ]
  %76 = phi ptr [ %73, %.loopexit31 ], [ %.promoted39, %.loopexit30 ], [ %uglygep312, %.loopexit28 ]
  %77 = phi ptr [ %74, %.loopexit31 ], [ %uglygep221, %.loopexit30 ], [ %uglygep219, %.loopexit28 ]
  %78 = ptrtoint ptr %2 to i64
  %79 = add nuw i64 %78, %7
  %80 = ptrtoint ptr %0 to i64
  %81 = add nuw i64 %80, %7
  %82 = ptrtoint ptr %77 to i64
  %83 = icmp ult i64 %79, %82
  %84 = ptrtoint ptr %76 to i64
  %85 = icmp ult i64 %81, %84
  %86 = select i1 %83, i1 %85, i1 false
  br i1 %86, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %75
  %87 = sub i64 0, %7
  br label %140

.loopexit:                                        ; preds = %106
  %88 = load ptr, ptr %15, align 8
  %89 = icmp ugt ptr %88, %41
  %90 = load ptr, ptr %13, align 8
  %91 = icmp ugt ptr %90, %42
  %92 = select i1 %89, i1 %91, i1 false
  br i1 %92, label %.preheader29, label %.loopexit31

.preheader29:                                     ; preds = %.loopexit, %.preheader29.lr.ph
  %.promoted = phi ptr [ %39, %.preheader29.lr.ph ], [ %90, %.loopexit ]
  %.promoted39 = phi ptr [ %20, %.preheader29.lr.ph ], [ %88, %.loopexit ]
  %.lcssa464850 = phi ptr [ %23, %.preheader29.lr.ph ], [ %107, %.loopexit ]
  %uglygep188 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep190 = getelementptr i8, ptr %.lcssa464850, i64 %47
  %uglygep192 = getelementptr i8, ptr %.lcssa464850, i64 %48
  %uglygep194 = getelementptr i8, ptr %.lcssa464850, i64 %49
  %uglygep196 = getelementptr i8, ptr %.lcssa464850, i64 %50
  %uglygep198 = getelementptr i8, ptr %.lcssa464850, i64 %51
  %uglygep200 = getelementptr i8, ptr %.lcssa464850, i64 %52
  %uglygep202 = getelementptr i8, ptr %.lcssa464850, i64 %53
  %uglygep204 = getelementptr i8, ptr %.lcssa464850, i64 %54
  %uglygep206 = getelementptr i8, ptr %.lcssa464850, i64 %55
  %uglygep208 = getelementptr i8, ptr %.lcssa464850, i64 %56
  %uglygep210 = getelementptr i8, ptr %.lcssa464850, i64 %57
  %uglygep212 = getelementptr i8, ptr %.lcssa464850, i64 %58
  %uglygep214 = getelementptr i8, ptr %.lcssa464850, i64 %59
  %uglygep216 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep224 = getelementptr i8, ptr %.promoted, i64 %.neg
  %uglygep227 = getelementptr i8, ptr %.promoted, i64 %47
  %uglygep229 = getelementptr i8, ptr %.promoted, i64 %48
  %uglygep231 = getelementptr i8, ptr %.promoted, i64 %49
  %uglygep233 = getelementptr i8, ptr %.promoted, i64 %50
  %uglygep235 = getelementptr i8, ptr %.promoted, i64 %51
  %uglygep237 = getelementptr i8, ptr %.promoted, i64 %52
  %uglygep239 = getelementptr i8, ptr %.promoted, i64 %53
  %uglygep241 = getelementptr i8, ptr %.promoted, i64 %54
  %uglygep243 = getelementptr i8, ptr %.promoted, i64 %55
  %uglygep245 = getelementptr i8, ptr %.promoted, i64 %56
  %uglygep247 = getelementptr i8, ptr %.promoted, i64 %57
  %uglygep249 = getelementptr i8, ptr %.promoted, i64 %58
  %uglygep251 = getelementptr i8, ptr %.promoted, i64 %59
  %uglygep253 = getelementptr i8, ptr %.promoted, i64 %46
  br label %93

93:                                               ; preds = %95, %.preheader29
  %lsr.iv182 = phi i64 [ 0, %.preheader29 ], [ %lsr.iv.next183, %95 ]
  %uglygep185 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv182
  %uglygep220 = getelementptr i8, ptr %.promoted, i64 %lsr.iv182
  %uglygep225 = getelementptr i8, ptr %uglygep224, i64 %lsr.iv182
  tail call void %9(ptr align 1 %6, i64 1) #15
  %94 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %.promoted39, ptr align 1 %uglygep225) #15
  %.not21 = icmp eq i8 %94, 1
  br i1 %.not21, label %.preheader27, label %95

.preheader27:                                     ; preds = %93
  %uglygep218 = getelementptr i8, ptr %.promoted, i64 %lsr.iv182
  store ptr %uglygep218, ptr %13, align 8
  %uglygep259 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv182
  %uglygep265 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep266 = getelementptr i8, ptr %uglygep265, i64 %lsr.iv182
  %uglygep268 = getelementptr i8, ptr %.lcssa464850, i64 %60
  %uglygep269 = getelementptr i8, ptr %uglygep268, i64 %lsr.iv182
  %uglygep271 = getelementptr i8, ptr %.lcssa464850, i64 %61
  %uglygep272 = getelementptr i8, ptr %uglygep271, i64 %lsr.iv182
  %uglygep274 = getelementptr i8, ptr %.lcssa464850, i64 %62
  %uglygep275 = getelementptr i8, ptr %uglygep274, i64 %lsr.iv182
  %uglygep277 = getelementptr i8, ptr %.lcssa464850, i64 %63
  %uglygep278 = getelementptr i8, ptr %uglygep277, i64 %lsr.iv182
  %uglygep280 = getelementptr i8, ptr %.lcssa464850, i64 %64
  %uglygep281 = getelementptr i8, ptr %uglygep280, i64 %lsr.iv182
  %uglygep283 = getelementptr i8, ptr %.lcssa464850, i64 %65
  %uglygep284 = getelementptr i8, ptr %uglygep283, i64 %lsr.iv182
  %uglygep286 = getelementptr i8, ptr %.lcssa464850, i64 %66
  %uglygep287 = getelementptr i8, ptr %uglygep286, i64 %lsr.iv182
  %uglygep289 = getelementptr i8, ptr %.lcssa464850, i64 %67
  %uglygep290 = getelementptr i8, ptr %uglygep289, i64 %lsr.iv182
  %uglygep292 = getelementptr i8, ptr %.lcssa464850, i64 %68
  %uglygep293 = getelementptr i8, ptr %uglygep292, i64 %lsr.iv182
  %uglygep295 = getelementptr i8, ptr %.lcssa464850, i64 %69
  %uglygep296 = getelementptr i8, ptr %uglygep295, i64 %lsr.iv182
  %uglygep298 = getelementptr i8, ptr %.lcssa464850, i64 %70
  %uglygep299 = getelementptr i8, ptr %uglygep298, i64 %lsr.iv182
  %uglygep301 = getelementptr i8, ptr %.lcssa464850, i64 %71
  %uglygep302 = getelementptr i8, ptr %uglygep301, i64 %lsr.iv182
  %uglygep304 = getelementptr i8, ptr %.lcssa464850, i64 %72
  %uglygep305 = getelementptr i8, ptr %uglygep304, i64 %lsr.iv182
  %uglygep307 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep308 = getelementptr i8, ptr %uglygep307, i64 %lsr.iv182
  %uglygep315 = getelementptr i8, ptr %.promoted39, i64 %.neg
  %uglygep318 = getelementptr i8, ptr %.promoted39, i64 %60
  %uglygep320 = getelementptr i8, ptr %.promoted39, i64 %61
  %uglygep322 = getelementptr i8, ptr %.promoted39, i64 %62
  %uglygep324 = getelementptr i8, ptr %.promoted39, i64 %63
  %uglygep326 = getelementptr i8, ptr %.promoted39, i64 %64
  %uglygep328 = getelementptr i8, ptr %.promoted39, i64 %65
  %uglygep330 = getelementptr i8, ptr %.promoted39, i64 %66
  %uglygep332 = getelementptr i8, ptr %.promoted39, i64 %67
  %uglygep334 = getelementptr i8, ptr %.promoted39, i64 %68
  %uglygep336 = getelementptr i8, ptr %.promoted39, i64 %69
  %uglygep338 = getelementptr i8, ptr %.promoted39, i64 %70
  %uglygep340 = getelementptr i8, ptr %.promoted39, i64 %71
  %uglygep342 = getelementptr i8, ptr %.promoted39, i64 %72
  %uglygep344 = getelementptr i8, ptr %.promoted39, i64 %46
  br label %96

95:                                               ; preds = %93
  tail call void %8(ptr align 1 %uglygep185, ptr align 1 %uglygep220) #15
  %uglygep217 = getelementptr i8, ptr %uglygep216, i64 %lsr.iv182
  %uglygep254 = getelementptr i8, ptr %uglygep253, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep217, ptr align 1 %uglygep254) #15
  %uglygep215 = getelementptr i8, ptr %uglygep214, i64 %lsr.iv182
  %uglygep252 = getelementptr i8, ptr %uglygep251, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep215, ptr align 1 %uglygep252) #15
  %uglygep213 = getelementptr i8, ptr %uglygep212, i64 %lsr.iv182
  %uglygep250 = getelementptr i8, ptr %uglygep249, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep213, ptr align 1 %uglygep250) #15
  %uglygep211 = getelementptr i8, ptr %uglygep210, i64 %lsr.iv182
  %uglygep248 = getelementptr i8, ptr %uglygep247, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep211, ptr align 1 %uglygep248) #15
  %uglygep209 = getelementptr i8, ptr %uglygep208, i64 %lsr.iv182
  %uglygep246 = getelementptr i8, ptr %uglygep245, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep209, ptr align 1 %uglygep246) #15
  %uglygep207 = getelementptr i8, ptr %uglygep206, i64 %lsr.iv182
  %uglygep244 = getelementptr i8, ptr %uglygep243, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep207, ptr align 1 %uglygep244) #15
  %uglygep205 = getelementptr i8, ptr %uglygep204, i64 %lsr.iv182
  %uglygep242 = getelementptr i8, ptr %uglygep241, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep205, ptr align 1 %uglygep242) #15
  %uglygep203 = getelementptr i8, ptr %uglygep202, i64 %lsr.iv182
  %uglygep240 = getelementptr i8, ptr %uglygep239, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep203, ptr align 1 %uglygep240) #15
  %uglygep201 = getelementptr i8, ptr %uglygep200, i64 %lsr.iv182
  %uglygep238 = getelementptr i8, ptr %uglygep237, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep201, ptr align 1 %uglygep238) #15
  %uglygep199 = getelementptr i8, ptr %uglygep198, i64 %lsr.iv182
  %uglygep236 = getelementptr i8, ptr %uglygep235, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep199, ptr align 1 %uglygep236) #15
  %uglygep197 = getelementptr i8, ptr %uglygep196, i64 %lsr.iv182
  %uglygep234 = getelementptr i8, ptr %uglygep233, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep197, ptr align 1 %uglygep234) #15
  %uglygep195 = getelementptr i8, ptr %uglygep194, i64 %lsr.iv182
  %uglygep232 = getelementptr i8, ptr %uglygep231, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep195, ptr align 1 %uglygep232) #15
  %uglygep193 = getelementptr i8, ptr %uglygep192, i64 %lsr.iv182
  %uglygep230 = getelementptr i8, ptr %uglygep229, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep193, ptr align 1 %uglygep230) #15
  %uglygep191 = getelementptr i8, ptr %uglygep190, i64 %lsr.iv182
  %uglygep228 = getelementptr i8, ptr %uglygep227, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep191, ptr align 1 %uglygep228) #15
  %uglygep189 = getelementptr i8, ptr %uglygep188, i64 %lsr.iv182
  %uglygep226 = getelementptr i8, ptr %uglygep224, i64 %lsr.iv182
  tail call void %8(ptr align 1 %uglygep189, ptr align 1 %uglygep226) #15
  %lsr.iv.next183 = sub i64 %lsr.iv182, %40
  %uglygep223 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next183
  %.not25 = icmp ugt ptr %uglygep223, %42
  br i1 %.not25, label %93, label %.loopexit30

96:                                               ; preds = %99, %.preheader27
  %lsr.iv255 = phi i64 [ 0, %.preheader27 ], [ %lsr.iv.next256, %99 ]
  %uglygep260 = getelementptr i8, ptr %uglygep259, i64 %lsr.iv255
  %uglygep311 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv255
  %uglygep316 = getelementptr i8, ptr %uglygep315, i64 %lsr.iv255
  tail call void %9(ptr align 1 %6, i64 1) #15
  %97 = tail call i8 %5(ptr align 1 %6, ptr align 1 %uglygep316, ptr align 1 %uglygep218) #15
  %98 = icmp eq i8 %97, 1
  br i1 %98, label %99, label %.preheader26

.preheader26:                                     ; preds = %96
  %uglygep310 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv255
  store ptr %uglygep310, ptr %15, align 8
  %uglygep257 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv182
  %uglygep258 = getelementptr i8, ptr %uglygep257, i64 %lsr.iv255
  br label %100

99:                                               ; preds = %96
  tail call void %8(ptr align 1 %uglygep260, ptr align 1 %uglygep311) #15
  %uglygep309 = getelementptr i8, ptr %uglygep308, i64 %lsr.iv255
  %uglygep345 = getelementptr i8, ptr %uglygep344, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep309, ptr align 1 %uglygep345) #15
  %uglygep306 = getelementptr i8, ptr %uglygep305, i64 %lsr.iv255
  %uglygep343 = getelementptr i8, ptr %uglygep342, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep306, ptr align 1 %uglygep343) #15
  %uglygep303 = getelementptr i8, ptr %uglygep302, i64 %lsr.iv255
  %uglygep341 = getelementptr i8, ptr %uglygep340, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep303, ptr align 1 %uglygep341) #15
  %uglygep300 = getelementptr i8, ptr %uglygep299, i64 %lsr.iv255
  %uglygep339 = getelementptr i8, ptr %uglygep338, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep300, ptr align 1 %uglygep339) #15
  %uglygep297 = getelementptr i8, ptr %uglygep296, i64 %lsr.iv255
  %uglygep337 = getelementptr i8, ptr %uglygep336, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep297, ptr align 1 %uglygep337) #15
  %uglygep294 = getelementptr i8, ptr %uglygep293, i64 %lsr.iv255
  %uglygep335 = getelementptr i8, ptr %uglygep334, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep294, ptr align 1 %uglygep335) #15
  %uglygep291 = getelementptr i8, ptr %uglygep290, i64 %lsr.iv255
  %uglygep333 = getelementptr i8, ptr %uglygep332, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep291, ptr align 1 %uglygep333) #15
  %uglygep288 = getelementptr i8, ptr %uglygep287, i64 %lsr.iv255
  %uglygep331 = getelementptr i8, ptr %uglygep330, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep288, ptr align 1 %uglygep331) #15
  %uglygep285 = getelementptr i8, ptr %uglygep284, i64 %lsr.iv255
  %uglygep329 = getelementptr i8, ptr %uglygep328, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep285, ptr align 1 %uglygep329) #15
  %uglygep282 = getelementptr i8, ptr %uglygep281, i64 %lsr.iv255
  %uglygep327 = getelementptr i8, ptr %uglygep326, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep282, ptr align 1 %uglygep327) #15
  %uglygep279 = getelementptr i8, ptr %uglygep278, i64 %lsr.iv255
  %uglygep325 = getelementptr i8, ptr %uglygep324, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep279, ptr align 1 %uglygep325) #15
  %uglygep276 = getelementptr i8, ptr %uglygep275, i64 %lsr.iv255
  %uglygep323 = getelementptr i8, ptr %uglygep322, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep276, ptr align 1 %uglygep323) #15
  %uglygep273 = getelementptr i8, ptr %uglygep272, i64 %lsr.iv255
  %uglygep321 = getelementptr i8, ptr %uglygep320, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep273, ptr align 1 %uglygep321) #15
  %uglygep270 = getelementptr i8, ptr %uglygep269, i64 %lsr.iv255
  %uglygep319 = getelementptr i8, ptr %uglygep318, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep270, ptr align 1 %uglygep319) #15
  %uglygep267 = getelementptr i8, ptr %uglygep266, i64 %lsr.iv255
  %uglygep317 = getelementptr i8, ptr %uglygep315, i64 %lsr.iv255
  tail call void %8(ptr align 1 %uglygep267, ptr align 1 %uglygep317) #15
  %lsr.iv.next256 = sub i64 %lsr.iv255, %40
  %uglygep314 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next256
  %.not24 = icmp ugt ptr %uglygep314, %41
  br i1 %.not24, label %96, label %.loopexit28

100:                                              ; preds = %106, %.preheader26
  %lsr.iv346 = phi i64 [ -8, %.preheader26 ], [ %math, %106 ]
  %101 = phi ptr [ %107, %106 ], [ %uglygep258, %.preheader26 ]
  %102 = load ptr, ptr %15, align 8
  %103 = load ptr, ptr %13, align 8
  %104 = getelementptr inbounds i8, ptr %103, i64 %46
  tail call void %9(ptr align 1 %6, i64 1) #15
  %105 = tail call i8 %5(ptr align 1 %6, ptr align 1 %102, ptr align 1 %104) #15
  %.not22 = icmp eq i8 %105, 1
  br i1 %.not22, label %113, label %109

106:                                              ; preds = %select.end354, %117, %109
  %107 = phi ptr [ %119, %117 ], [ %132, %select.end354 ], [ %111, %109 ]
  %108 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv346, i64 1)
  %math = extractvalue { i64, i1 } %108, 0
  %ov = extractvalue { i64, i1 } %108, 1
  br i1 %ov, label %.loopexit, label %100

109:                                              ; preds = %100
  tail call void %8(ptr align 1 %101, ptr align 1 %103) #15
  %110 = getelementptr inbounds i8, ptr %101, i64 %46
  tail call void %8(ptr align 1 %110, ptr align 1 %104) #15
  %111 = getelementptr inbounds i8, ptr %110, i64 %46
  %112 = getelementptr inbounds i8, ptr %104, i64 %46
  store ptr %112, ptr %13, align 8
  br label %106

113:                                              ; preds = %100
  %114 = getelementptr inbounds i8, ptr %102, i64 %46
  tail call void %9(ptr align 1 %6, i64 1) #15
  %115 = tail call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr align 1 %103) #15
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %121

117:                                              ; preds = %113
  tail call void %8(ptr align 1 %101, ptr align 1 %102) #15
  %118 = getelementptr inbounds i8, ptr %101, i64 %46
  tail call void %8(ptr align 1 %118, ptr align 1 %114) #15
  %119 = getelementptr inbounds i8, ptr %118, i64 %46
  %120 = getelementptr inbounds i8, ptr %114, i64 %46
  store ptr %120, ptr %15, align 8
  br label %106

121:                                              ; preds = %113
  tail call void %9(ptr align 1 %6, i64 2) #15
  %122 = tail call i8 %5(ptr align 1 %6, ptr align 1 %102, ptr align 1 %103) #15
  %..frozen = freeze i8 %122
  %.not23 = icmp eq i8 %..frozen, 1
  br i1 %.not23, label %select.end352, label %select.false353

select.false353:                                  ; preds = %121
  br label %select.end352

select.end352:                                    ; preds = %select.false353, %121
  %. = phi i64 [ 0, %121 ], [ %7, %select.false353 ]
  %.1 = phi i64 [ %7, %121 ], [ 0, %select.false353 ]
  %123 = getelementptr inbounds i8, ptr %101, i64 %46
  %124 = getelementptr inbounds i8, ptr %123, i64 %.
  tail call void %8(ptr align 1 %124, ptr align 1 %103) #15
  store ptr %104, ptr %13, align 8
  %125 = getelementptr inbounds i8, ptr %123, i64 %.1
  tail call void %8(ptr align 1 %125, ptr align 1 %102) #15
  store ptr %114, ptr %15, align 8
  %126 = getelementptr inbounds i8, ptr %123, i64 %46
  %127 = tail call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr align 1 %104) #15
  %.2.frozen = freeze i8 %127
  %128 = icmp eq i8 %.2.frozen, 1
  br i1 %128, label %select.end354, label %select.false355

select.false355:                                  ; preds = %select.end352
  br label %select.end354

select.end354:                                    ; preds = %select.false355, %select.end352
  %.2 = phi ptr [ %15, %select.end352 ], [ %13, %select.false355 ]
  %129 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %126, ptr align 1 %129) #15
  %130 = load ptr, ptr %.2, align 8
  %131 = getelementptr inbounds i8, ptr %130, i64 %46
  store ptr %131, ptr %.2, align 8
  %132 = getelementptr inbounds i8, ptr %126, i64 %46
  br label %106

._crit_edge.loopexit:                             ; preds = %select.end350
  %133 = getelementptr inbounds i8, ptr %152, i64 %87
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %75
  %134 = phi ptr [ %76, %75 ], [ %.pre86.pre, %.._crit_edge.loopexit_crit_edge ], [ %162, %._crit_edge.loopexit ]
  %135 = phi ptr [ %77, %75 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %159, %._crit_edge.loopexit ]
  %.promoted52 = phi ptr [ %.promoted5285, %75 ], [ %.promoted52.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %133, %._crit_edge.loopexit ]
  %136 = icmp uge ptr %135, %2
  %137 = icmp uge ptr %134, %0
  %138 = select i1 %136, i1 %137, i1 false
  br i1 %138, label %.lr.ph55, label %.preheader

.lr.ph55:                                         ; preds = %._crit_edge
  %139 = sub i64 0, %7
  br label %166

140:                                              ; preds = %select.end350, %.lr.ph
  store ptr %0, ptr %12, align 8
  store ptr %2, ptr %11, align 8
  %141 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16701(ptr nonnull align 8 %14, ptr nonnull readonly align 8 %12, ptr nonnull align 8 %15, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %13, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %141, label %.._crit_edge.loopexit_crit_edge, label %142

.._crit_edge.loopexit_crit_edge:                  ; preds = %140
  %.promoted52.pre.pre = load ptr, ptr %14, align 8
  %.pre.pre = load ptr, ptr %13, align 8
  %.pre86.pre = load ptr, ptr %15, align 8
  br label %._crit_edge

142:                                              ; preds = %140
  tail call void %9(ptr align 1 %6, i64 2) #15
  %143 = load ptr, ptr %15, align 8
  %144 = load ptr, ptr %13, align 8
  %145 = tail call i8 %5(ptr align 1 %6, ptr align 1 %143, ptr align 1 %144) #15
  %.3.frozen = freeze i8 %145
  %.not20 = icmp eq i8 %.3.frozen, 1
  br i1 %.not20, label %select.end348, label %select.false349

select.false349:                                  ; preds = %142
  br label %select.end348

select.end348:                                    ; preds = %select.false349, %142
  %.3 = phi i64 [ 0, %142 ], [ %7, %select.false349 ]
  %.4 = phi i64 [ %7, %142 ], [ 0, %select.false349 ]
  %146 = load ptr, ptr %14, align 8
  %147 = getelementptr inbounds i8, ptr %146, i64 %87
  %148 = getelementptr inbounds i8, ptr %147, i64 %.3
  tail call void %8(ptr align 1 %148, ptr align 1 %144) #15
  %149 = getelementptr inbounds i8, ptr %144, i64 %87
  store ptr %149, ptr %13, align 8
  %150 = getelementptr inbounds i8, ptr %147, i64 %.4
  tail call void %8(ptr align 1 %150, ptr align 1 %143) #15
  %151 = getelementptr inbounds i8, ptr %143, i64 %87
  store ptr %151, ptr %15, align 8
  %152 = getelementptr inbounds i8, ptr %147, i64 %87
  %153 = tail call i8 %5(ptr align 1 %6, ptr align 1 %151, ptr align 1 %149) #15
  %.5.frozen = freeze i8 %153
  %154 = icmp eq i8 %.5.frozen, 1
  br i1 %154, label %select.end350, label %select.false351

select.false351:                                  ; preds = %select.end348
  br label %select.end350

select.end350:                                    ; preds = %select.false351, %select.end348
  %.5 = phi ptr [ %15, %select.end348 ], [ %13, %select.false351 ]
  %155 = load ptr, ptr %.5, align 8
  tail call void %8(ptr align 1 %152, ptr align 1 %155) #15
  %156 = load ptr, ptr %.5, align 8
  %157 = getelementptr inbounds i8, ptr %156, i64 %87
  store ptr %157, ptr %.5, align 8
  %158 = getelementptr inbounds i8, ptr %152, i64 %87
  store ptr %158, ptr %14, align 8
  %159 = load ptr, ptr %13, align 8
  %160 = ptrtoint ptr %159 to i64
  %161 = icmp ult i64 %79, %160
  %162 = load ptr, ptr %15, align 8
  %163 = ptrtoint ptr %162 to i64
  %164 = icmp ult i64 %81, %163
  %165 = select i1 %161, i1 %164, i1 false
  br i1 %165, label %140, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted57 = phi ptr [ %135, %._crit_edge ], [ %176, %select.end ]
  %.lcssa53 = phi ptr [ %.promoted52, %._crit_edge ], [ %175, %select.end ]
  %.not1961 = icmp ult ptr %.promoted57, %2
  br i1 %.not1961, label %common.ret, label %.lr.ph62

.lr.ph62:                                         ; preds = %.preheader
  br label %181

166:                                              ; preds = %select.end, %.lr.ph55
  %167 = phi ptr [ %134, %.lr.ph55 ], [ %178, %select.end ]
  %168 = phi ptr [ %135, %.lr.ph55 ], [ %176, %select.end ]
  %169 = phi ptr [ %.promoted52, %.lr.ph55 ], [ %175, %select.end ]
  tail call void %9(ptr align 1 %6, i64 1) #15
  %170 = tail call i8 %5(ptr align 1 %6, ptr align 1 %167, ptr align 1 %168) #15
  %.6.frozen = freeze i8 %170
  %171 = icmp eq i8 %.6.frozen, 1
  br i1 %171, label %select.end, label %select.false

select.false:                                     ; preds = %166
  br label %select.end

select.end:                                       ; preds = %select.false, %166
  %.6 = phi ptr [ %15, %166 ], [ %13, %select.false ]
  %172 = load ptr, ptr %.6, align 8
  tail call void %8(ptr align 1 %169, ptr align 1 %172) #15
  %173 = load ptr, ptr %.6, align 8
  %174 = getelementptr inbounds i8, ptr %173, i64 %139
  store ptr %174, ptr %.6, align 8
  %175 = getelementptr inbounds i8, ptr %169, i64 %139
  %176 = load ptr, ptr %13, align 8
  %177 = icmp uge ptr %176, %2
  %178 = load ptr, ptr %15, align 8
  %179 = icmp uge ptr %178, %0
  %180 = select i1 %177, i1 %179, i1 false
  br i1 %180, label %166, label %.preheader

181:                                              ; preds = %181, %.lr.ph62
  %lsr.iv = phi i64 [ 0, %.lr.ph62 ], [ %lsr.iv.next, %181 ]
  %uglygep180 = getelementptr i8, ptr %.promoted57, i64 %lsr.iv
  %uglygep181 = getelementptr i8, ptr %.lcssa53, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep181, ptr align 1 %uglygep180) #15
  %lsr.iv.next = sub i64 %lsr.iv, %7
  %uglygep = getelementptr i8, ptr %.promoted57, i64 %lsr.iv.next
  %.not19 = icmp ult ptr %uglygep, %2
  br i1 %.not19, label %common.ret, label %181
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16484(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9) unnamed_addr #4 {
  tail call void %9(ptr align 1 %6, i64 1) #15
  %11 = add i64 %3, -1
  %12 = mul nuw i64 %11, %7
  %13 = getelementptr inbounds i8, ptr %0, i64 %12
  %14 = mul nuw i64 %3, %7
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %13, ptr nonnull align 1 %15) #15
  %.not123 = icmp eq i8 %16, 1
  br i1 %.not123, label %.lr.ph, label %common.ret

.lr.ph:                                           ; preds = %10
  %17 = sub i64 0, %7
  br label %18

common.ret:                                       ; preds = %.critedge9, %44, %10
  ret void

18:                                               ; preds = %.critedge9, %.lr.ph
  %19 = phi ptr [ %15, %.lr.ph ], [ %118, %.critedge9 ]
  %.tr107126 = phi i64 [ %4, %.lr.ph ], [ %43, %.critedge9 ]
  %.tr106125 = phi i64 [ %3, %.lr.ph ], [ %20, %.critedge9 ]
  %.tr124 = phi ptr [ %0, %.lr.ph ], [ %112, %.critedge9 ]
  %20 = lshr i64 %.tr106125, 1
  %21 = sub nuw i64 %.tr106125, %20
  %22 = mul i64 %21, %7
  %23 = getelementptr i8, ptr %.tr124, i64 %22
  %24 = mul nuw i64 %.tr107126, %7
  %25 = getelementptr inbounds i8, ptr %19, i64 %24
  %26 = add i64 %.tr107126, -1
  %27 = tail call i64 @llvm.ctlz.i64(i64 %26, i1 false), !range !368
  %28 = sub nuw nsw i64 65, %27
  tail call void %9(ptr align 1 %6, i64 %28) #15
  %29 = icmp ugt i64 %.tr107126, 1
  br i1 %29, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16702.exit

.lr.ph.i.preheader:                               ; preds = %18
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.end, %.lr.ph.i.preheader
  %.013.i = phi i64 [ %35, %select.end ], [ %.tr107126, %.lr.ph.i.preheader ]
  %.0912.i = phi ptr [ %spec.select.i, %select.end ], [ %25, %.lr.ph.i.preheader ]
  %30 = lshr i64 %.013.i, 1
  %31 = mul i64 %30, %7
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i8, ptr %.0912.i, i64 %32
  %34 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr align 1 %33) #15
  %spec.select.i.frozen = freeze i8 %34
  %.not10.i = icmp eq i8 %spec.select.i.frozen, 1
  br i1 %.not10.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i
  %spec.select.i = phi ptr [ %.0912.i, %.lr.ph.i ], [ %33, %select.false ]
  %35 = sub nuw i64 %.013.i, %30
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16702.exit

sort.monobound_binary_first__anon_16702.exit:     ; preds = %select.end, %18
  %.09.lcssa.i = phi ptr [ %25, %18 ], [ %spec.select.i, %select.end ]
  %37 = getelementptr inbounds i8, ptr %.09.lcssa.i, i64 %17
  %38 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr align 1 %37) #15
  %.not.i = icmp eq i8 %38, 1
  %spec.select11.i = select i1 %.not.i, ptr %.09.lcssa.i, ptr %37
  %39 = ptrtoint ptr %spec.select11.i to i64
  %40 = ptrtoint ptr %19 to i64
  %41 = sub nuw i64 %39, %40
  %42 = udiv i64 %41, %7
  %43 = sub nuw i64 %.tr107126, %42
  %.not96 = icmp ult i64 %41, %7
  br i1 %.not96, label %44, label %45

44:                                               ; preds = %.critedge3, %97, %96, %mem.copyBackwards__anon_9784.exit, %sort.monobound_binary_first__anon_16702.exit
  %.not97 = icmp eq i64 %.tr107126, %42
  br i1 %.not97, label %common.ret, label %98

45:                                               ; preds = %sort.monobound_binary_first__anon_16702.exit
  %46 = add nuw i64 %42, %21
  %.not99 = icmp ugt i64 %46, %2
  br i1 %.not99, label %88, label %47

47:                                               ; preds = %45
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr124, i64 %22, i1 false)
  %48 = getelementptr inbounds i8, ptr %1, i64 %22
  %49 = mul nuw i64 %42, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %48, ptr nonnull align 1 %19, i64 %49, i1 false)
  %50 = mul nuw i64 %46, %7
  %51 = getelementptr i8, ptr %.tr124, i64 %50
  %52 = mul nuw i64 %20, %7
  %.not6.i = icmp eq i64 %52, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %47
  %min.iters.check = icmp ult i64 %52, 8
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr124, i64 -1
  %53 = add i64 %.tr106125, %42
  %54 = mul i64 %53, %7
  %uglygep183 = getelementptr i8, ptr %uglygep, i64 %54
  %55 = sub i64 1, %52
  %56 = getelementptr i8, ptr %uglygep183, i64 %55
  %57 = icmp ugt ptr %56, %uglygep183
  %uglygep184 = getelementptr i8, ptr %.tr124, i64 -1
  %58 = mul i64 %.tr106125, %7
  %uglygep185 = getelementptr i8, ptr %uglygep184, i64 %58
  %59 = sub i64 1, %52
  %60 = getelementptr i8, ptr %uglygep185, i64 %59
  %61 = icmp ugt ptr %60, %uglygep185
  %62 = or i1 %57, %61
  br i1 %62, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %63 = ptrtoint ptr %.tr124 to i64
  %64 = add i64 %63, -1
  %65 = mul i64 %.tr106125, %7
  %66 = add i64 %64, %65
  %67 = add i64 %.tr106125, %42
  %68 = mul i64 %67, %7
  %69 = add i64 %64, %68
  %70 = sub i64 %66, %69
  %diff.check = icmp ult i64 %70, 32
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check190 = icmp ult i64 %52, 32
  br i1 %min.iters.check190, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %52, -32
  %uglygep229 = getelementptr i8, ptr %.tr124, i64 -16
  %uglygep230 = getelementptr i8, ptr %uglygep229, i64 %58
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv233 = phi i64 [ %lsr.iv.next, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv = phi ptr [ %uglygep231, %vector.body ], [ %uglygep230, %vector.ph ]
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %71 = xor i64 %index, -1
  %72 = add i64 %52, %71
  %73 = getelementptr inbounds i8, ptr %51, i64 %72
  %wide.load = load <16 x i8>, ptr %lsr.iv, align 1
  %uglygep232 = getelementptr i8, ptr %lsr.iv, i64 -16
  %wide.load191 = load <16 x i8>, ptr %uglygep232, align 1
  %74 = getelementptr inbounds i8, ptr %73, i64 -15
  store <16 x i8> %wide.load, ptr %74, align 1
  %75 = getelementptr inbounds i8, ptr %73, i64 -16
  %76 = getelementptr inbounds i8, ptr %75, i64 -15
  store <16 x i8> %wide.load191, ptr %76, align 1
  %index.next = add nuw i64 %index, 32
  %uglygep231 = getelementptr i8, ptr %lsr.iv, i64 -32
  %lsr.iv.next = add i64 %lsr.iv233, -32
  %77 = icmp eq i64 %lsr.iv.next, 0
  br i1 %77, label %middle.block, label %vector.body, !llvm.loop !513

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %52, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end197 = and i64 %52, 31
  %n.vec.remaining = and i64 %52, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec196 = and i64 %52, -8
  %ind.end = and i64 %52, 7
  %78 = getelementptr i8, ptr %51, i64 -7
  %uglygep234 = getelementptr i8, ptr %.tr124, i64 -8
  %79 = sub i64 %58, %vec.epilog.resume.val
  %uglygep235 = getelementptr i8, ptr %uglygep234, i64 %79
  %80 = sub i64 %vec.epilog.resume.val, %n.vec196
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv238 = phi i64 [ %lsr.iv.next239, %vec.epilog.vector.body ], [ %80, %vec.epilog.ph ]
  %lsr.iv236 = phi ptr [ %uglygep237, %vec.epilog.vector.body ], [ %uglygep235, %vec.epilog.ph ]
  %index199 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next204, %vec.epilog.vector.body ]
  %81 = xor i64 %index199, -1
  %82 = add i64 %52, %81
  %wide.load201 = load <8 x i8>, ptr %lsr.iv236, align 1
  %83 = getelementptr i8, ptr %78, i64 %82
  store <8 x i8> %wide.load201, ptr %83, align 1
  %index.next204 = add nuw i64 %index199, 8
  %uglygep237 = getelementptr i8, ptr %lsr.iv236, i64 -8
  %lsr.iv.next239 = add i64 %lsr.iv238, 8
  %84 = icmp eq i64 %lsr.iv.next239, 0
  br i1 %84, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !514

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n198 = icmp eq i64 %52, %n.vec196
  br i1 %cmp.n198, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end, %vec.epilog.middle.block ], [ %ind.end197, %vec.epilog.iter.check ], [ %52, %vector.scevcheck ], [ %52, %vector.memcheck ], [ %52, %iter.check ]
  %uglygep240 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep241 = getelementptr i8, ptr %uglygep240, i64 %22
  br label %.lr.ph.i103

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %.07.i = phi i64 [ %85, %.lr.ph.i103 ], [ %.07.i.ph, %.lr.ph.i103.preheader ]
  %85 = add i64 %.07.i, -1
  %86 = getelementptr inbounds i8, ptr %51, i64 %85
  %uglygep242 = getelementptr i8, ptr %uglygep241, i64 %.07.i
  %87 = load i8, ptr %uglygep242, align 1
  store i8 %87, ptr %86, align 1
  %.not.i102 = icmp eq i64 %85, 0
  br i1 %.not.i102, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103, !llvm.loop !515

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i103, %vec.epilog.middle.block, %middle.block, %47
  tail call fastcc void @sort.cross_merge__anon_14856(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %21, i64 %42, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %44

88:                                               ; preds = %45
  %89 = add nuw i64 %42, %20
  tail call fastcc void @sort.trinity_rotation(ptr nonnull align 1 %23, i64 %89, ptr nonnull align 1 %1, i64 %2, i64 %20, i64 %7, ptr nonnull readonly align 4 %8)
  %90 = shl nuw i64 %42, 1
  %91 = icmp ult i64 %90, %21
  %92 = shl nuw i64 %21, 1
  %93 = icmp ult i64 %92, %42
  %94 = select i1 %91, i1 true, i1 %93
  br i1 %94, label %95, label %.critedge3

95:                                               ; preds = %88
  %.not100 = icmp ugt i64 %42, %2
  br i1 %.not100, label %.critedge, label %96

96:                                               ; preds = %95
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %.tr124, i64 %46, ptr nonnull align 1 %1, i64 %2, i64 %21, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %44

.critedge:                                        ; preds = %95
  %.not101 = icmp ugt i64 %21, %2
  br i1 %.not101, label %.critedge3, label %97

97:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16703(ptr nonnull align 1 %.tr124, i64 %46, ptr nonnull align 1 %1, i64 %2, i64 %21, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %44

.critedge3:                                       ; preds = %.critedge, %88
  tail call fastcc void @sort.rotate_merge_block__anon_16484(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %2, i64 %21, i64 %42, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br label %44

98:                                               ; preds = %44
  %99 = shl nuw i64 %43, 1
  %100 = icmp ult i64 %99, %20
  %101 = and i64 %.tr106125, -2
  %102 = icmp ult i64 %101, %43
  %103 = or i1 %102, %100
  %104 = icmp ugt i64 %43, %2
  %not. = xor i1 %103, true
  %or.cond12 = select i1 %not., i1 true, i1 %104
  %.pre = add nuw i64 %43, %20
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %108, label %.critedge7

.critedge7:                                       ; preds = %98
  %105 = add nuw i64 %42, %21
  %106 = mul nuw i64 %105, %7
  %107 = getelementptr inbounds i8, ptr %.tr124, i64 %106
  tail call fastcc void @sort.partial_backwards_merge__anon_16483(ptr nonnull align 1 %107, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void

108:                                              ; preds = %98
  %109 = icmp ule i64 %21, %2
  %or.cond14 = select i1 %103, i1 %109, i1 false
  %110 = add nuw i64 %42, %21
  %111 = mul nuw i64 %110, %7
  %112 = getelementptr inbounds i8, ptr %.tr124, i64 %111
  br i1 %or.cond14, label %113, label %.critedge9

113:                                              ; preds = %108
  tail call fastcc void @sort.partial_forward_merge__anon_16703(ptr nonnull align 1 %112, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void

.critedge9:                                       ; preds = %108
  tail call void %9(ptr align 1 %6, i64 1) #15
  %114 = add nsw i64 %20, -1
  %115 = mul nuw i64 %114, %7
  %116 = getelementptr inbounds i8, ptr %112, i64 %115
  %117 = mul nuw i64 %20, %7
  %118 = getelementptr inbounds i8, ptr %112, i64 %117
  %119 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %116, ptr nonnull align 1 %118) #15
  %.not = icmp eq i8 %119, 1
  br i1 %.not, label %18, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16486(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, i64 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
._crit_edge:
  %.pre = add i64 %2, -1
  %8 = mul nuw i64 %6, %2
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = sub i64 0, %6
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = mul nuw i64 %6, %3
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = add i64 %.pre, %3
  %15 = mul nuw i64 %14, %6
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  %17 = icmp ult i64 %2, %3
  br i1 %17, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %._crit_edge
  %.066 = phi ptr [ %23, %.cont16 ], [ %0, %._crit_edge ]
  %.061 = phi ptr [ %., %.cont16 ], [ %9, %._crit_edge ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %._crit_edge ]
  %18 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0, ptr nonnull align 1 %.061) #15
  %.not = icmp eq i8 %18, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  tail call void %7(ptr align 1 %.066, ptr align 1 %.sroa.speculated21) #15
  %.not10 = icmp eq i64 %.pre, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %19 = icmp eq i8 %18, 1
  %20 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 %6
  %.0. = select i1 %19, ptr %.0, ptr %20
  %..061 = select i1 %19, ptr %20, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 %6
  br label %.cont

.cont16:                                          ; preds = %._crit_edge
  %21 = tail call i8 %4(ptr align 1 %5, ptr nonnull align 1 %1, ptr nonnull align 1 %9) #15
  %.not77 = icmp eq i8 %21, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %9, ptr %1
  tail call void %7(ptr nonnull align 1 %0, ptr nonnull align 1 %.sroa.speculated12) #15
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 %6
  %. = select i1 %.not77, ptr %22, ptr %9
  %.78 = select i1 %.not77, ptr %1, ptr %22
  %23 = getelementptr inbounds i8, ptr %0, i64 %6
  br label %.cont25

.cont:                                            ; preds = %select.end17, %.cont.preheader
  %lsr.iv12 = phi i64 [ %.pre, %.cont.preheader ], [ %lsr.iv.next, %select.end17 ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep11, %select.end17 ]
  %.37 = phi ptr [ %.3., %select.end17 ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %select.end17 ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %select.end17 ], [ %11, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %select.end17 ], [ %13, %.cont.preheader ]
  %.0722 = phi ptr [ %31, %select.end17 ], [ %16, %.cont.preheader ]
  %24 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.37, ptr align 1 %.3646) #15
  %.sroa.speculated.frozen = freeze i8 %24
  %.not76 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not76, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.3646, %.cont ], [ %.37, %select.false ]
  %..364.frozen = freeze i8 %24
  %25 = icmp eq i8 %..364.frozen, 1
  tail call void %7(ptr align 1 %lsr.iv, ptr align 1 %.sroa.speculated) #15
  %26 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %6
  br i1 %25, label %select.end13, label %select.false14

select.false14:                                   ; preds = %select.end
  br label %select.end13

select.end13:                                     ; preds = %select.false14, %select.end
  %..364 = phi ptr [ %26, %select.end ], [ %.3646, %select.false14 ]
  %.3. = phi ptr [ %.37, %select.end ], [ %26, %select.false14 ]
  %27 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.0684, ptr align 1 %.0703) #15
  %.sroa.speculated40.frozen = freeze i8 %27
  %28 = icmp eq i8 %.sroa.speculated40.frozen, 1
  br i1 %28, label %select.end15, label %select.false16

select.false16:                                   ; preds = %select.end13
  br label %select.end15

select.end15:                                     ; preds = %select.false16, %select.end13
  %.sroa.speculated40 = phi ptr [ %.0684, %select.end13 ], [ %.0703, %select.false16 ]
  %.171.frozen = freeze i8 %27
  %29 = icmp eq i8 %.171.frozen, 1
  tail call void %7(ptr align 1 %.0722, ptr align 1 %.sroa.speculated40) #15
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 %10
  br i1 %29, label %select.end17, label %select.false18

select.false18:                                   ; preds = %select.end15
  br label %select.end17

select.end17:                                     ; preds = %select.false18, %select.end15
  %.171 = phi ptr [ %.0703, %select.end15 ], [ %30, %select.false18 ]
  %.169 = phi ptr [ %30, %select.end15 ], [ %.0684, %select.false18 ]
  %31 = getelementptr inbounds i8, ptr %.0722, i64 %10
  %uglygep11 = getelementptr i8, ptr %lsr.iv, i64 %6
  %lsr.iv.next = add i64 %lsr.iv12, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %select.end17, %.cont25
  %.072.lcssa = phi ptr [ %16, %.cont25 ], [ %31, %select.end17 ]
  %.070.lcssa = phi ptr [ %13, %.cont25 ], [ %.171, %select.end17 ]
  %.068.lcssa = phi ptr [ %11, %.cont25 ], [ %.169, %select.end17 ]
  %32 = tail call i8 %4(ptr align 1 %5, ptr align 1 %.068.lcssa, ptr align 1 %.070.lcssa) #15
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated46 = select i1 %33, ptr %.068.lcssa, ptr %.070.lcssa
  tail call void %7(ptr align 1 %.072.lcssa, ptr align 1 %.sroa.speculated46) #15
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = icmp eq i64 %1, %4
  br i1 %15, label %common.ret, label %16

common.ret:                                       ; preds = %179, %.preheader, %16, %9
  ret void

16:                                               ; preds = %9
  %17 = add i64 %4, -1
  %18 = mul nuw i64 %17, %7
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %14, align 8
  %20 = add i64 %1, -1
  %21 = mul nuw i64 %20, %7
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  %23 = getelementptr inbounds i8, ptr %19, i64 %7
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %19, ptr nonnull align 1 %23) #15
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %16
  %26 = sub nuw i64 %1, %4
  %27 = icmp ule i64 %1, %3
  %28 = icmp ugt i64 %26, 63
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %26, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  %31 = mul nuw i64 %7, %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %31, i1 false)
  ret void

32:                                               ; preds = %25
  %33 = mul nuw i64 %26, %7
  %34 = mul nuw i64 %7, %4
  %35 = getelementptr inbounds i8, ptr %0, i64 %34
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %35, i64 %33, i1 false)
  %36 = add i64 %26, -1
  %37 = mul nuw i64 %36, %7
  %38 = getelementptr inbounds i8, ptr %2, i64 %37
  store ptr %38, ptr %12, align 8
  %39 = shl nuw i64 %7, 4
  %40 = getelementptr inbounds i8, ptr %0, i64 %39
  %41 = getelementptr inbounds i8, ptr %2, i64 %39
  %42 = icmp sgt i64 %18, %39
  %43 = icmp sgt i64 %37, %39
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %.preheader29.lr.ph, label %.loopexit31

.preheader29.lr.ph:                               ; preds = %32
  %.neg = mul i64 %7, -15
  %45 = sub i64 0, %7
  %46 = mul i64 %7, -14
  %47 = mul i64 %7, -13
  %48 = mul i64 %7, -12
  %49 = mul i64 %7, -11
  %50 = mul i64 %7, -10
  %51 = mul i64 %7, -9
  %52 = mul i64 %7, -8
  %53 = mul i64 %7, -7
  %54 = mul i64 %7, -6
  %55 = mul i64 %7, -5
  %56 = mul i64 %7, -4
  %57 = mul i64 %7, -3
  %58 = mul i64 %7, -2
  %59 = mul i64 %7, -14
  %60 = mul i64 %7, -13
  %61 = mul i64 %7, -12
  %62 = mul i64 %7, -11
  %63 = mul i64 %7, -10
  %64 = mul i64 %7, -9
  %65 = mul i64 %7, -8
  %66 = mul i64 %7, -7
  %67 = mul i64 %7, -6
  %68 = mul i64 %7, -5
  %69 = mul i64 %7, -4
  %70 = mul i64 %7, -3
  %71 = mul i64 %7, -2
  br label %.preheader29

.loopexit28:                                      ; preds = %98
  %uglygep204 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next147
  store ptr %uglygep204, ptr %14, align 8
  %uglygep154 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv73
  %uglygep155 = getelementptr i8, ptr %uglygep154, i64 %lsr.iv.next147
  store ptr %uglygep155, ptr %13, align 8
  %uglygep110 = getelementptr i8, ptr %.promoted, i64 %lsr.iv73
  %uglygep152 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv73
  %uglygep153 = getelementptr i8, ptr %uglygep152, i64 %lsr.iv.next147
  %uglygep203 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next147
  br label %74

.loopexit30:                                      ; preds = %94
  %uglygep113 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next74
  store ptr %uglygep113, ptr %12, align 8
  %uglygep78 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next74
  store ptr %uglygep78, ptr %13, align 8
  %uglygep77 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv.next74
  %uglygep112 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next74
  br label %74

.loopexit31:                                      ; preds = %.loopexit, %32
  %72 = phi ptr [ %19, %32 ], [ %87, %.loopexit ]
  %73 = phi ptr [ %38, %32 ], [ %89, %.loopexit ]
  %.lcssa4648.lcssa = phi ptr [ %22, %32 ], [ %106, %.loopexit ]
  store ptr %.lcssa4648.lcssa, ptr %13, align 8
  br label %74

74:                                               ; preds = %.loopexit31, %.loopexit30, %.loopexit28
  %.promoted5285 = phi ptr [ %.lcssa4648.lcssa, %.loopexit31 ], [ %uglygep77, %.loopexit30 ], [ %uglygep153, %.loopexit28 ]
  %75 = phi ptr [ %72, %.loopexit31 ], [ %.promoted39, %.loopexit30 ], [ %uglygep203, %.loopexit28 ]
  %76 = phi ptr [ %73, %.loopexit31 ], [ %uglygep112, %.loopexit30 ], [ %uglygep110, %.loopexit28 ]
  %77 = ptrtoint ptr %2 to i64
  %78 = add nuw i64 %77, %7
  %79 = ptrtoint ptr %0 to i64
  %80 = add nuw i64 %79, %7
  %81 = ptrtoint ptr %76 to i64
  %82 = icmp ult i64 %78, %81
  %83 = ptrtoint ptr %75 to i64
  %84 = icmp ult i64 %80, %83
  %85 = select i1 %82, i1 %84, i1 false
  br i1 %85, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %74
  %86 = sub i64 0, %7
  br label %139

.loopexit:                                        ; preds = %105
  %87 = load ptr, ptr %14, align 8
  %88 = icmp ugt ptr %87, %40
  %89 = load ptr, ptr %12, align 8
  %90 = icmp ugt ptr %89, %41
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %.preheader29, label %.loopexit31

.preheader29:                                     ; preds = %.loopexit, %.preheader29.lr.ph
  %.promoted = phi ptr [ %38, %.preheader29.lr.ph ], [ %89, %.loopexit ]
  %.promoted39 = phi ptr [ %19, %.preheader29.lr.ph ], [ %87, %.loopexit ]
  %.lcssa464850 = phi ptr [ %22, %.preheader29.lr.ph ], [ %106, %.loopexit ]
  %uglygep79 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep81 = getelementptr i8, ptr %.lcssa464850, i64 %46
  %uglygep83 = getelementptr i8, ptr %.lcssa464850, i64 %47
  %uglygep85 = getelementptr i8, ptr %.lcssa464850, i64 %48
  %uglygep87 = getelementptr i8, ptr %.lcssa464850, i64 %49
  %uglygep89 = getelementptr i8, ptr %.lcssa464850, i64 %50
  %uglygep91 = getelementptr i8, ptr %.lcssa464850, i64 %51
  %uglygep93 = getelementptr i8, ptr %.lcssa464850, i64 %52
  %uglygep95 = getelementptr i8, ptr %.lcssa464850, i64 %53
  %uglygep97 = getelementptr i8, ptr %.lcssa464850, i64 %54
  %uglygep99 = getelementptr i8, ptr %.lcssa464850, i64 %55
  %uglygep101 = getelementptr i8, ptr %.lcssa464850, i64 %56
  %uglygep103 = getelementptr i8, ptr %.lcssa464850, i64 %57
  %uglygep105 = getelementptr i8, ptr %.lcssa464850, i64 %58
  %uglygep107 = getelementptr i8, ptr %.lcssa464850, i64 %45
  %uglygep115 = getelementptr i8, ptr %.promoted, i64 %.neg
  %uglygep118 = getelementptr i8, ptr %.promoted, i64 %46
  %uglygep120 = getelementptr i8, ptr %.promoted, i64 %47
  %uglygep122 = getelementptr i8, ptr %.promoted, i64 %48
  %uglygep124 = getelementptr i8, ptr %.promoted, i64 %49
  %uglygep126 = getelementptr i8, ptr %.promoted, i64 %50
  %uglygep128 = getelementptr i8, ptr %.promoted, i64 %51
  %uglygep130 = getelementptr i8, ptr %.promoted, i64 %52
  %uglygep132 = getelementptr i8, ptr %.promoted, i64 %53
  %uglygep134 = getelementptr i8, ptr %.promoted, i64 %54
  %uglygep136 = getelementptr i8, ptr %.promoted, i64 %55
  %uglygep138 = getelementptr i8, ptr %.promoted, i64 %56
  %uglygep140 = getelementptr i8, ptr %.promoted, i64 %57
  %uglygep142 = getelementptr i8, ptr %.promoted, i64 %58
  %uglygep144 = getelementptr i8, ptr %.promoted, i64 %45
  br label %92

92:                                               ; preds = %94, %.preheader29
  %lsr.iv73 = phi i64 [ 0, %.preheader29 ], [ %lsr.iv.next74, %94 ]
  %uglygep76 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv73
  %uglygep111 = getelementptr i8, ptr %.promoted, i64 %lsr.iv73
  %uglygep116 = getelementptr i8, ptr %uglygep115, i64 %lsr.iv73
  %93 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %.promoted39, ptr align 1 %uglygep116) #15
  %.not21 = icmp eq i8 %93, 1
  br i1 %.not21, label %.preheader27, label %94

.preheader27:                                     ; preds = %92
  %uglygep109 = getelementptr i8, ptr %.promoted, i64 %lsr.iv73
  store ptr %uglygep109, ptr %12, align 8
  %uglygep150 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv73
  %uglygep156 = getelementptr i8, ptr %.lcssa464850, i64 %.neg
  %uglygep157 = getelementptr i8, ptr %uglygep156, i64 %lsr.iv73
  %uglygep159 = getelementptr i8, ptr %.lcssa464850, i64 %59
  %uglygep160 = getelementptr i8, ptr %uglygep159, i64 %lsr.iv73
  %uglygep162 = getelementptr i8, ptr %.lcssa464850, i64 %60
  %uglygep163 = getelementptr i8, ptr %uglygep162, i64 %lsr.iv73
  %uglygep165 = getelementptr i8, ptr %.lcssa464850, i64 %61
  %uglygep166 = getelementptr i8, ptr %uglygep165, i64 %lsr.iv73
  %uglygep168 = getelementptr i8, ptr %.lcssa464850, i64 %62
  %uglygep169 = getelementptr i8, ptr %uglygep168, i64 %lsr.iv73
  %uglygep171 = getelementptr i8, ptr %.lcssa464850, i64 %63
  %uglygep172 = getelementptr i8, ptr %uglygep171, i64 %lsr.iv73
  %uglygep174 = getelementptr i8, ptr %.lcssa464850, i64 %64
  %uglygep175 = getelementptr i8, ptr %uglygep174, i64 %lsr.iv73
  %uglygep177 = getelementptr i8, ptr %.lcssa464850, i64 %65
  %uglygep178 = getelementptr i8, ptr %uglygep177, i64 %lsr.iv73
  %uglygep180 = getelementptr i8, ptr %.lcssa464850, i64 %66
  %uglygep181 = getelementptr i8, ptr %uglygep180, i64 %lsr.iv73
  %uglygep183 = getelementptr i8, ptr %.lcssa464850, i64 %67
  %uglygep184 = getelementptr i8, ptr %uglygep183, i64 %lsr.iv73
  %uglygep186 = getelementptr i8, ptr %.lcssa464850, i64 %68
  %uglygep187 = getelementptr i8, ptr %uglygep186, i64 %lsr.iv73
  %uglygep189 = getelementptr i8, ptr %.lcssa464850, i64 %69
  %uglygep190 = getelementptr i8, ptr %uglygep189, i64 %lsr.iv73
  %uglygep192 = getelementptr i8, ptr %.lcssa464850, i64 %70
  %uglygep193 = getelementptr i8, ptr %uglygep192, i64 %lsr.iv73
  %uglygep195 = getelementptr i8, ptr %.lcssa464850, i64 %71
  %uglygep196 = getelementptr i8, ptr %uglygep195, i64 %lsr.iv73
  %uglygep198 = getelementptr i8, ptr %.lcssa464850, i64 %45
  %uglygep199 = getelementptr i8, ptr %uglygep198, i64 %lsr.iv73
  %uglygep206 = getelementptr i8, ptr %.promoted39, i64 %.neg
  %uglygep209 = getelementptr i8, ptr %.promoted39, i64 %59
  %uglygep211 = getelementptr i8, ptr %.promoted39, i64 %60
  %uglygep213 = getelementptr i8, ptr %.promoted39, i64 %61
  %uglygep215 = getelementptr i8, ptr %.promoted39, i64 %62
  %uglygep217 = getelementptr i8, ptr %.promoted39, i64 %63
  %uglygep219 = getelementptr i8, ptr %.promoted39, i64 %64
  %uglygep221 = getelementptr i8, ptr %.promoted39, i64 %65
  %uglygep223 = getelementptr i8, ptr %.promoted39, i64 %66
  %uglygep225 = getelementptr i8, ptr %.promoted39, i64 %67
  %uglygep227 = getelementptr i8, ptr %.promoted39, i64 %68
  %uglygep229 = getelementptr i8, ptr %.promoted39, i64 %69
  %uglygep231 = getelementptr i8, ptr %.promoted39, i64 %70
  %uglygep233 = getelementptr i8, ptr %.promoted39, i64 %71
  %uglygep235 = getelementptr i8, ptr %.promoted39, i64 %45
  br label %95

94:                                               ; preds = %92
  tail call void %8(ptr align 1 %uglygep76, ptr align 1 %uglygep111) #15
  %uglygep108 = getelementptr i8, ptr %uglygep107, i64 %lsr.iv73
  %uglygep145 = getelementptr i8, ptr %uglygep144, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep108, ptr align 1 %uglygep145) #15
  %uglygep106 = getelementptr i8, ptr %uglygep105, i64 %lsr.iv73
  %uglygep143 = getelementptr i8, ptr %uglygep142, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep106, ptr align 1 %uglygep143) #15
  %uglygep104 = getelementptr i8, ptr %uglygep103, i64 %lsr.iv73
  %uglygep141 = getelementptr i8, ptr %uglygep140, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep104, ptr align 1 %uglygep141) #15
  %uglygep102 = getelementptr i8, ptr %uglygep101, i64 %lsr.iv73
  %uglygep139 = getelementptr i8, ptr %uglygep138, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep102, ptr align 1 %uglygep139) #15
  %uglygep100 = getelementptr i8, ptr %uglygep99, i64 %lsr.iv73
  %uglygep137 = getelementptr i8, ptr %uglygep136, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep100, ptr align 1 %uglygep137) #15
  %uglygep98 = getelementptr i8, ptr %uglygep97, i64 %lsr.iv73
  %uglygep135 = getelementptr i8, ptr %uglygep134, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep98, ptr align 1 %uglygep135) #15
  %uglygep96 = getelementptr i8, ptr %uglygep95, i64 %lsr.iv73
  %uglygep133 = getelementptr i8, ptr %uglygep132, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep96, ptr align 1 %uglygep133) #15
  %uglygep94 = getelementptr i8, ptr %uglygep93, i64 %lsr.iv73
  %uglygep131 = getelementptr i8, ptr %uglygep130, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep94, ptr align 1 %uglygep131) #15
  %uglygep92 = getelementptr i8, ptr %uglygep91, i64 %lsr.iv73
  %uglygep129 = getelementptr i8, ptr %uglygep128, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep92, ptr align 1 %uglygep129) #15
  %uglygep90 = getelementptr i8, ptr %uglygep89, i64 %lsr.iv73
  %uglygep127 = getelementptr i8, ptr %uglygep126, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep90, ptr align 1 %uglygep127) #15
  %uglygep88 = getelementptr i8, ptr %uglygep87, i64 %lsr.iv73
  %uglygep125 = getelementptr i8, ptr %uglygep124, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep88, ptr align 1 %uglygep125) #15
  %uglygep86 = getelementptr i8, ptr %uglygep85, i64 %lsr.iv73
  %uglygep123 = getelementptr i8, ptr %uglygep122, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep86, ptr align 1 %uglygep123) #15
  %uglygep84 = getelementptr i8, ptr %uglygep83, i64 %lsr.iv73
  %uglygep121 = getelementptr i8, ptr %uglygep120, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep84, ptr align 1 %uglygep121) #15
  %uglygep82 = getelementptr i8, ptr %uglygep81, i64 %lsr.iv73
  %uglygep119 = getelementptr i8, ptr %uglygep118, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep82, ptr align 1 %uglygep119) #15
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %lsr.iv73
  %uglygep117 = getelementptr i8, ptr %uglygep115, i64 %lsr.iv73
  tail call void %8(ptr align 1 %uglygep80, ptr align 1 %uglygep117) #15
  %lsr.iv.next74 = sub i64 %lsr.iv73, %39
  %uglygep114 = getelementptr i8, ptr %.promoted, i64 %lsr.iv.next74
  %.not25 = icmp ugt ptr %uglygep114, %41
  br i1 %.not25, label %92, label %.loopexit30

95:                                               ; preds = %98, %.preheader27
  %lsr.iv146 = phi i64 [ 0, %.preheader27 ], [ %lsr.iv.next147, %98 ]
  %uglygep151 = getelementptr i8, ptr %uglygep150, i64 %lsr.iv146
  %uglygep202 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv146
  %uglygep207 = getelementptr i8, ptr %uglygep206, i64 %lsr.iv146
  %96 = tail call i8 %5(ptr align 1 %6, ptr align 1 %uglygep207, ptr align 1 %uglygep109) #15
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %98, label %.preheader26

.preheader26:                                     ; preds = %95
  %uglygep201 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv146
  store ptr %uglygep201, ptr %14, align 8
  %uglygep148 = getelementptr i8, ptr %.lcssa464850, i64 %lsr.iv73
  %uglygep149 = getelementptr i8, ptr %uglygep148, i64 %lsr.iv146
  br label %99

98:                                               ; preds = %95
  tail call void %8(ptr align 1 %uglygep151, ptr align 1 %uglygep202) #15
  %uglygep200 = getelementptr i8, ptr %uglygep199, i64 %lsr.iv146
  %uglygep236 = getelementptr i8, ptr %uglygep235, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep200, ptr align 1 %uglygep236) #15
  %uglygep197 = getelementptr i8, ptr %uglygep196, i64 %lsr.iv146
  %uglygep234 = getelementptr i8, ptr %uglygep233, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep197, ptr align 1 %uglygep234) #15
  %uglygep194 = getelementptr i8, ptr %uglygep193, i64 %lsr.iv146
  %uglygep232 = getelementptr i8, ptr %uglygep231, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep194, ptr align 1 %uglygep232) #15
  %uglygep191 = getelementptr i8, ptr %uglygep190, i64 %lsr.iv146
  %uglygep230 = getelementptr i8, ptr %uglygep229, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep191, ptr align 1 %uglygep230) #15
  %uglygep188 = getelementptr i8, ptr %uglygep187, i64 %lsr.iv146
  %uglygep228 = getelementptr i8, ptr %uglygep227, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep188, ptr align 1 %uglygep228) #15
  %uglygep185 = getelementptr i8, ptr %uglygep184, i64 %lsr.iv146
  %uglygep226 = getelementptr i8, ptr %uglygep225, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep185, ptr align 1 %uglygep226) #15
  %uglygep182 = getelementptr i8, ptr %uglygep181, i64 %lsr.iv146
  %uglygep224 = getelementptr i8, ptr %uglygep223, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep182, ptr align 1 %uglygep224) #15
  %uglygep179 = getelementptr i8, ptr %uglygep178, i64 %lsr.iv146
  %uglygep222 = getelementptr i8, ptr %uglygep221, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep179, ptr align 1 %uglygep222) #15
  %uglygep176 = getelementptr i8, ptr %uglygep175, i64 %lsr.iv146
  %uglygep220 = getelementptr i8, ptr %uglygep219, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep176, ptr align 1 %uglygep220) #15
  %uglygep173 = getelementptr i8, ptr %uglygep172, i64 %lsr.iv146
  %uglygep218 = getelementptr i8, ptr %uglygep217, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep173, ptr align 1 %uglygep218) #15
  %uglygep170 = getelementptr i8, ptr %uglygep169, i64 %lsr.iv146
  %uglygep216 = getelementptr i8, ptr %uglygep215, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep170, ptr align 1 %uglygep216) #15
  %uglygep167 = getelementptr i8, ptr %uglygep166, i64 %lsr.iv146
  %uglygep214 = getelementptr i8, ptr %uglygep213, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep167, ptr align 1 %uglygep214) #15
  %uglygep164 = getelementptr i8, ptr %uglygep163, i64 %lsr.iv146
  %uglygep212 = getelementptr i8, ptr %uglygep211, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep164, ptr align 1 %uglygep212) #15
  %uglygep161 = getelementptr i8, ptr %uglygep160, i64 %lsr.iv146
  %uglygep210 = getelementptr i8, ptr %uglygep209, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep161, ptr align 1 %uglygep210) #15
  %uglygep158 = getelementptr i8, ptr %uglygep157, i64 %lsr.iv146
  %uglygep208 = getelementptr i8, ptr %uglygep206, i64 %lsr.iv146
  tail call void %8(ptr align 1 %uglygep158, ptr align 1 %uglygep208) #15
  %lsr.iv.next147 = sub i64 %lsr.iv146, %39
  %uglygep205 = getelementptr i8, ptr %.promoted39, i64 %lsr.iv.next147
  %.not24 = icmp ugt ptr %uglygep205, %40
  br i1 %.not24, label %95, label %.loopexit28

99:                                               ; preds = %105, %.preheader26
  %lsr.iv237 = phi i64 [ -8, %.preheader26 ], [ %math, %105 ]
  %100 = phi ptr [ %106, %105 ], [ %uglygep149, %.preheader26 ]
  %101 = load ptr, ptr %14, align 8
  %102 = load ptr, ptr %12, align 8
  %103 = getelementptr inbounds i8, ptr %102, i64 %45
  %104 = tail call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %103) #15
  %.not22 = icmp eq i8 %104, 1
  br i1 %.not22, label %112, label %108

105:                                              ; preds = %select.end245, %116, %108
  %106 = phi ptr [ %118, %116 ], [ %131, %select.end245 ], [ %110, %108 ]
  %107 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv237, i64 1)
  %math = extractvalue { i64, i1 } %107, 0
  %ov = extractvalue { i64, i1 } %107, 1
  br i1 %ov, label %.loopexit, label %99

108:                                              ; preds = %99
  tail call void %8(ptr align 1 %100, ptr align 1 %102) #15
  %109 = getelementptr inbounds i8, ptr %100, i64 %45
  tail call void %8(ptr align 1 %109, ptr align 1 %103) #15
  %110 = getelementptr inbounds i8, ptr %109, i64 %45
  %111 = getelementptr inbounds i8, ptr %103, i64 %45
  store ptr %111, ptr %12, align 8
  br label %105

112:                                              ; preds = %99
  %113 = getelementptr inbounds i8, ptr %101, i64 %45
  %114 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %102) #15
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  tail call void %8(ptr align 1 %100, ptr align 1 %101) #15
  %117 = getelementptr inbounds i8, ptr %100, i64 %45
  tail call void %8(ptr align 1 %117, ptr align 1 %113) #15
  %118 = getelementptr inbounds i8, ptr %117, i64 %45
  %119 = getelementptr inbounds i8, ptr %113, i64 %45
  store ptr %119, ptr %14, align 8
  br label %105

120:                                              ; preds = %112
  %121 = tail call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %102) #15
  %..frozen = freeze i8 %121
  %.not23 = icmp eq i8 %..frozen, 1
  br i1 %.not23, label %select.end243, label %select.false244

select.false244:                                  ; preds = %120
  br label %select.end243

select.end243:                                    ; preds = %select.false244, %120
  %. = phi i64 [ 0, %120 ], [ %7, %select.false244 ]
  %.1 = phi i64 [ %7, %120 ], [ 0, %select.false244 ]
  %122 = getelementptr inbounds i8, ptr %100, i64 %45
  %123 = getelementptr inbounds i8, ptr %122, i64 %.
  tail call void %8(ptr align 1 %123, ptr align 1 %102) #15
  store ptr %103, ptr %12, align 8
  %124 = getelementptr inbounds i8, ptr %122, i64 %.1
  tail call void %8(ptr align 1 %124, ptr align 1 %101) #15
  store ptr %113, ptr %14, align 8
  %125 = getelementptr inbounds i8, ptr %122, i64 %45
  %126 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %103) #15
  %.2.frozen = freeze i8 %126
  %127 = icmp eq i8 %.2.frozen, 1
  br i1 %127, label %select.end245, label %select.false246

select.false246:                                  ; preds = %select.end243
  br label %select.end245

select.end245:                                    ; preds = %select.false246, %select.end243
  %.2 = phi ptr [ %14, %select.end243 ], [ %12, %select.false246 ]
  %128 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %125, ptr align 1 %128) #15
  %129 = load ptr, ptr %.2, align 8
  %130 = getelementptr inbounds i8, ptr %129, i64 %45
  store ptr %130, ptr %.2, align 8
  %131 = getelementptr inbounds i8, ptr %125, i64 %45
  br label %105

._crit_edge.loopexit:                             ; preds = %select.end241
  %132 = getelementptr inbounds i8, ptr %150, i64 %86
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %74
  %133 = phi ptr [ %75, %74 ], [ %.pre86.pre, %.._crit_edge.loopexit_crit_edge ], [ %160, %._crit_edge.loopexit ]
  %134 = phi ptr [ %76, %74 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %157, %._crit_edge.loopexit ]
  %.promoted52 = phi ptr [ %.promoted5285, %74 ], [ %.promoted52.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %132, %._crit_edge.loopexit ]
  %135 = icmp uge ptr %134, %2
  %136 = icmp uge ptr %133, %0
  %137 = select i1 %135, i1 %136, i1 false
  br i1 %137, label %.lr.ph55, label %.preheader

.lr.ph55:                                         ; preds = %._crit_edge
  %138 = sub i64 0, %7
  br label %164

139:                                              ; preds = %select.end241, %.lr.ph
  store ptr %0, ptr %11, align 8
  store ptr %2, ptr %10, align 8
  %140 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16712(ptr nonnull align 8 %13, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %14, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %12, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  %.pre.pre = load ptr, ptr %12, align 8
  br i1 %140, label %.._crit_edge.loopexit_crit_edge, label %141

.._crit_edge.loopexit_crit_edge:                  ; preds = %139
  %.promoted52.pre.pre = load ptr, ptr %13, align 8
  %.pre86.pre = load ptr, ptr %14, align 8
  br label %._crit_edge

141:                                              ; preds = %139
  %142 = load ptr, ptr %14, align 8
  %143 = tail call i8 %5(ptr align 1 %6, ptr align 1 %142, ptr align 1 %.pre.pre) #15
  %.3.frozen = freeze i8 %143
  %.not20 = icmp eq i8 %.3.frozen, 1
  br i1 %.not20, label %select.end239, label %select.false240

select.false240:                                  ; preds = %141
  br label %select.end239

select.end239:                                    ; preds = %select.false240, %141
  %.3 = phi i64 [ 0, %141 ], [ %7, %select.false240 ]
  %.4 = phi i64 [ %7, %141 ], [ 0, %select.false240 ]
  %144 = load ptr, ptr %13, align 8
  %145 = getelementptr inbounds i8, ptr %144, i64 %86
  %146 = getelementptr inbounds i8, ptr %145, i64 %.3
  tail call void %8(ptr align 1 %146, ptr align 1 %.pre.pre) #15
  %147 = getelementptr inbounds i8, ptr %.pre.pre, i64 %86
  store ptr %147, ptr %12, align 8
  %148 = getelementptr inbounds i8, ptr %145, i64 %.4
  tail call void %8(ptr align 1 %148, ptr align 1 %142) #15
  %149 = getelementptr inbounds i8, ptr %142, i64 %86
  store ptr %149, ptr %14, align 8
  %150 = getelementptr inbounds i8, ptr %145, i64 %86
  %151 = tail call i8 %5(ptr align 1 %6, ptr align 1 %149, ptr align 1 %147) #15
  %.5.frozen = freeze i8 %151
  %152 = icmp eq i8 %.5.frozen, 1
  br i1 %152, label %select.end241, label %select.false242

select.false242:                                  ; preds = %select.end239
  br label %select.end241

select.end241:                                    ; preds = %select.false242, %select.end239
  %.5 = phi ptr [ %14, %select.end239 ], [ %12, %select.false242 ]
  %153 = load ptr, ptr %.5, align 8
  tail call void %8(ptr align 1 %150, ptr align 1 %153) #15
  %154 = load ptr, ptr %.5, align 8
  %155 = getelementptr inbounds i8, ptr %154, i64 %86
  store ptr %155, ptr %.5, align 8
  %156 = getelementptr inbounds i8, ptr %150, i64 %86
  store ptr %156, ptr %13, align 8
  %157 = load ptr, ptr %12, align 8
  %158 = ptrtoint ptr %157 to i64
  %159 = icmp ult i64 %78, %158
  %160 = load ptr, ptr %14, align 8
  %161 = ptrtoint ptr %160 to i64
  %162 = icmp ult i64 %80, %161
  %163 = select i1 %159, i1 %162, i1 false
  br i1 %163, label %139, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted57 = phi ptr [ %134, %._crit_edge ], [ %174, %select.end ]
  %.lcssa53 = phi ptr [ %.promoted52, %._crit_edge ], [ %173, %select.end ]
  %.not1961 = icmp ult ptr %.promoted57, %2
  br i1 %.not1961, label %common.ret, label %.lr.ph62

.lr.ph62:                                         ; preds = %.preheader
  br label %179

164:                                              ; preds = %select.end, %.lr.ph55
  %165 = phi ptr [ %133, %.lr.ph55 ], [ %176, %select.end ]
  %166 = phi ptr [ %134, %.lr.ph55 ], [ %174, %select.end ]
  %167 = phi ptr [ %.promoted52, %.lr.ph55 ], [ %173, %select.end ]
  %168 = tail call i8 %5(ptr align 1 %6, ptr align 1 %165, ptr align 1 %166) #15
  %.6.frozen = freeze i8 %168
  %169 = icmp eq i8 %.6.frozen, 1
  br i1 %169, label %select.end, label %select.false

select.false:                                     ; preds = %164
  br label %select.end

select.end:                                       ; preds = %select.false, %164
  %.6 = phi ptr [ %14, %164 ], [ %12, %select.false ]
  %170 = load ptr, ptr %.6, align 8
  tail call void %8(ptr align 1 %167, ptr align 1 %170) #15
  %171 = load ptr, ptr %.6, align 8
  %172 = getelementptr inbounds i8, ptr %171, i64 %138
  store ptr %172, ptr %.6, align 8
  %173 = getelementptr inbounds i8, ptr %167, i64 %138
  %174 = load ptr, ptr %12, align 8
  %175 = icmp uge ptr %174, %2
  %176 = load ptr, ptr %14, align 8
  %177 = icmp uge ptr %176, %0
  %178 = select i1 %175, i1 %177, i1 false
  br i1 %178, label %164, label %.preheader

179:                                              ; preds = %179, %.lr.ph62
  %lsr.iv = phi i64 [ 0, %.lr.ph62 ], [ %lsr.iv.next, %179 ]
  %uglygep71 = getelementptr i8, ptr %.promoted57, i64 %lsr.iv
  %uglygep72 = getelementptr i8, ptr %.lcssa53, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep72, ptr align 1 %uglygep71) #15
  %lsr.iv.next = sub i64 %lsr.iv, %7
  %uglygep = getelementptr i8, ptr %.promoted57, i64 %lsr.iv.next
  %.not19 = icmp ult ptr %uglygep, %2
  br i1 %.not19, label %common.ret, label %179
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16493(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = add i64 %3, -1
  %11 = mul nuw i64 %10, %7
  %12 = getelementptr inbounds i8, ptr %0, i64 %11
  %13 = mul nuw i64 %3, %7
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  %15 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %12, ptr nonnull align 1 %14) #15
  %.not123 = icmp eq i8 %15, 1
  br i1 %.not123, label %.lr.ph, label %common.ret

.lr.ph:                                           ; preds = %9
  %16 = sub i64 0, %7
  br label %17

common.ret:                                       ; preds = %.critedge9, %40, %9
  ret void

17:                                               ; preds = %.critedge9, %.lr.ph
  %18 = phi ptr [ %14, %.lr.ph ], [ %114, %.critedge9 ]
  %.tr107126 = phi i64 [ %4, %.lr.ph ], [ %39, %.critedge9 ]
  %.tr106125 = phi i64 [ %3, %.lr.ph ], [ %19, %.critedge9 ]
  %.tr124 = phi ptr [ %0, %.lr.ph ], [ %108, %.critedge9 ]
  %19 = lshr i64 %.tr106125, 1
  %20 = sub nuw i64 %.tr106125, %19
  %21 = mul i64 %20, %7
  %22 = getelementptr i8, ptr %.tr124, i64 %21
  %23 = mul nuw i64 %.tr107126, %7
  %24 = getelementptr inbounds i8, ptr %18, i64 %23
  %25 = icmp ugt i64 %.tr107126, 1
  br i1 %25, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16713.exit

.lr.ph.i.preheader:                               ; preds = %17
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.end, %.lr.ph.i.preheader
  %.02.i = phi i64 [ %31, %select.end ], [ %.tr107126, %.lr.ph.i.preheader ]
  %.081.i = phi ptr [ %spec.select.i, %select.end ], [ %24, %.lr.ph.i.preheader ]
  %26 = lshr i64 %.02.i, 1
  %27 = mul i64 %26, %7
  %28 = sub i64 0, %27
  %29 = getelementptr inbounds i8, ptr %.081.i, i64 %28
  %30 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %22, ptr align 1 %29) #15
  %spec.select.i.frozen = freeze i8 %30
  %.not9.i = icmp eq i8 %spec.select.i.frozen, 1
  br i1 %.not9.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i
  %spec.select.i = phi ptr [ %.081.i, %.lr.ph.i ], [ %29, %select.false ]
  %31 = sub nuw i64 %.02.i, %26
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16713.exit

sort.monobound_binary_first__anon_16713.exit:     ; preds = %select.end, %17
  %.08.lcssa.i = phi ptr [ %24, %17 ], [ %spec.select.i, %select.end ]
  %33 = getelementptr inbounds i8, ptr %.08.lcssa.i, i64 %16
  %34 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %22, ptr align 1 %33) #15
  %.not.i = icmp eq i8 %34, 1
  %spec.select10.i = select i1 %.not.i, ptr %.08.lcssa.i, ptr %33
  %35 = ptrtoint ptr %spec.select10.i to i64
  %36 = ptrtoint ptr %18 to i64
  %37 = sub nuw i64 %35, %36
  %38 = udiv i64 %37, %7
  %39 = sub nuw i64 %.tr107126, %38
  %.not96 = icmp ult i64 %37, %7
  br i1 %.not96, label %40, label %41

40:                                               ; preds = %.critedge3, %93, %92, %mem.copyBackwards__anon_9784.exit, %sort.monobound_binary_first__anon_16713.exit
  %.not97 = icmp eq i64 %.tr107126, %38
  br i1 %.not97, label %common.ret, label %94

41:                                               ; preds = %sort.monobound_binary_first__anon_16713.exit
  %42 = add nuw i64 %38, %20
  %.not99 = icmp ugt i64 %42, %2
  br i1 %.not99, label %84, label %43

43:                                               ; preds = %41
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr124, i64 %21, i1 false)
  %44 = getelementptr inbounds i8, ptr %1, i64 %21
  %45 = mul nuw i64 %38, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %44, ptr nonnull align 1 %18, i64 %45, i1 false)
  %46 = mul nuw i64 %42, %7
  %47 = getelementptr i8, ptr %.tr124, i64 %46
  %48 = mul nuw i64 %19, %7
  %.not6.i = icmp eq i64 %48, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %43
  %min.iters.check = icmp ult i64 %48, 8
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr124, i64 -1
  %49 = add i64 %.tr106125, %38
  %50 = mul i64 %49, %7
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %50
  %51 = sub i64 1, %48
  %52 = getelementptr i8, ptr %uglygep22, i64 %51
  %53 = icmp ugt ptr %52, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr124, i64 -1
  %54 = mul i64 %.tr106125, %7
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %54
  %55 = sub i64 1, %48
  %56 = getelementptr i8, ptr %uglygep24, i64 %55
  %57 = icmp ugt ptr %56, %uglygep24
  %58 = or i1 %53, %57
  br i1 %58, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %59 = ptrtoint ptr %.tr124 to i64
  %60 = add i64 %59, -1
  %61 = mul i64 %.tr106125, %7
  %62 = add i64 %60, %61
  %63 = add i64 %.tr106125, %38
  %64 = mul i64 %63, %7
  %65 = add i64 %60, %64
  %66 = sub i64 %62, %65
  %diff.check = icmp ult i64 %66, 32
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %48, 32
  br i1 %min.iters.check29, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %48, -32
  %uglygep68 = getelementptr i8, ptr %.tr124, i64 -16
  %uglygep69 = getelementptr i8, ptr %uglygep68, i64 %54
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv72 = phi i64 [ %lsr.iv.next, %vector.body ], [ %n.vec, %vector.ph ]
  %lsr.iv = phi ptr [ %uglygep70, %vector.body ], [ %uglygep69, %vector.ph ]
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %67 = xor i64 %index, -1
  %68 = add i64 %48, %67
  %69 = getelementptr inbounds i8, ptr %47, i64 %68
  %wide.load = load <16 x i8>, ptr %lsr.iv, align 1
  %uglygep71 = getelementptr i8, ptr %lsr.iv, i64 -16
  %wide.load30 = load <16 x i8>, ptr %uglygep71, align 1
  %70 = getelementptr inbounds i8, ptr %69, i64 -15
  store <16 x i8> %wide.load, ptr %70, align 1
  %71 = getelementptr inbounds i8, ptr %69, i64 -16
  %72 = getelementptr inbounds i8, ptr %71, i64 -15
  store <16 x i8> %wide.load30, ptr %72, align 1
  %index.next = add nuw i64 %index, 32
  %uglygep70 = getelementptr i8, ptr %lsr.iv, i64 -32
  %lsr.iv.next = add i64 %lsr.iv72, -32
  %73 = icmp eq i64 %lsr.iv.next, 0
  br i1 %73, label %middle.block, label %vector.body, !llvm.loop !516

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %48, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end36 = and i64 %48, 31
  %n.vec.remaining = and i64 %48, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec35 = and i64 %48, -8
  %ind.end = and i64 %48, 7
  %74 = getelementptr i8, ptr %47, i64 -7
  %uglygep73 = getelementptr i8, ptr %.tr124, i64 -8
  %75 = sub i64 %54, %vec.epilog.resume.val
  %uglygep74 = getelementptr i8, ptr %uglygep73, i64 %75
  %76 = sub i64 %vec.epilog.resume.val, %n.vec35
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv77 = phi i64 [ %lsr.iv.next78, %vec.epilog.vector.body ], [ %76, %vec.epilog.ph ]
  %lsr.iv75 = phi ptr [ %uglygep76, %vec.epilog.vector.body ], [ %uglygep74, %vec.epilog.ph ]
  %index38 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next43, %vec.epilog.vector.body ]
  %77 = xor i64 %index38, -1
  %78 = add i64 %48, %77
  %wide.load40 = load <8 x i8>, ptr %lsr.iv75, align 1
  %79 = getelementptr i8, ptr %74, i64 %78
  store <8 x i8> %wide.load40, ptr %79, align 1
  %index.next43 = add nuw i64 %index38, 8
  %uglygep76 = getelementptr i8, ptr %lsr.iv75, i64 -8
  %lsr.iv.next78 = add i64 %lsr.iv77, 8
  %80 = icmp eq i64 %lsr.iv.next78, 0
  br i1 %80, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !517

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n37 = icmp eq i64 %48, %n.vec35
  br i1 %cmp.n37, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end, %vec.epilog.middle.block ], [ %ind.end36, %vec.epilog.iter.check ], [ %48, %vector.scevcheck ], [ %48, %vector.memcheck ], [ %48, %iter.check ]
  %uglygep79 = getelementptr i8, ptr %.tr124, i64 -1
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %21
  br label %.lr.ph.i103

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %.07.i = phi i64 [ %81, %.lr.ph.i103 ], [ %.07.i.ph, %.lr.ph.i103.preheader ]
  %81 = add i64 %.07.i, -1
  %82 = getelementptr inbounds i8, ptr %47, i64 %81
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 %.07.i
  %83 = load i8, ptr %uglygep81, align 1
  store i8 %83, ptr %82, align 1
  %.not.i102 = icmp eq i64 %81, 0
  br i1 %.not.i102, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103, !llvm.loop !518

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i103, %vec.epilog.middle.block, %middle.block, %43
  tail call fastcc void @sort.cross_merge__anon_14859(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %20, i64 %38, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %40

84:                                               ; preds = %41
  %85 = add nuw i64 %38, %19
  tail call fastcc void @sort.trinity_rotation(ptr nonnull align 1 %22, i64 %85, ptr nonnull align 1 %1, i64 %2, i64 %19, i64 %7, ptr nonnull readonly align 4 %8)
  %86 = shl nuw i64 %38, 1
  %87 = icmp ult i64 %86, %20
  %88 = shl nuw i64 %20, 1
  %89 = icmp ult i64 %88, %38
  %90 = select i1 %87, i1 true, i1 %89
  br i1 %90, label %91, label %.critedge3

91:                                               ; preds = %84
  %.not100 = icmp ugt i64 %38, %2
  br i1 %.not100, label %.critedge, label %92

92:                                               ; preds = %91
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %.tr124, i64 %42, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %40

.critedge:                                        ; preds = %91
  %.not101 = icmp ugt i64 %20, %2
  br i1 %.not101, label %.critedge3, label %93

93:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16714(ptr nonnull align 1 %.tr124, i64 %42, ptr nonnull align 1 %1, i64 %2, i64 %20, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %40

.critedge3:                                       ; preds = %.critedge, %84
  tail call fastcc void @sort.rotate_merge_block__anon_16493(ptr nonnull align 1 %.tr124, ptr nonnull align 1 %1, i64 %2, i64 %20, i64 %38, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br label %40

94:                                               ; preds = %40
  %95 = shl nuw i64 %39, 1
  %96 = icmp ult i64 %95, %19
  %97 = and i64 %.tr106125, -2
  %98 = icmp ult i64 %97, %39
  %99 = or i1 %98, %96
  %100 = icmp ugt i64 %39, %2
  %not. = xor i1 %99, true
  %or.cond12 = select i1 %not., i1 true, i1 %100
  %.pre = add nuw i64 %39, %19
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %104, label %.critedge7

.critedge7:                                       ; preds = %94
  %101 = add nuw i64 %38, %20
  %102 = mul nuw i64 %101, %7
  %103 = getelementptr inbounds i8, ptr %.tr124, i64 %102
  tail call fastcc void @sort.partial_backwards_merge__anon_16492(ptr nonnull align 1 %103, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %19, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void

104:                                              ; preds = %94
  %105 = icmp ule i64 %20, %2
  %or.cond14 = select i1 %99, i1 %105, i1 false
  %106 = add nuw i64 %38, %20
  %107 = mul nuw i64 %106, %7
  %108 = getelementptr inbounds i8, ptr %.tr124, i64 %107
  br i1 %or.cond14, label %109, label %.critedge9

109:                                              ; preds = %104
  tail call fastcc void @sort.partial_forward_merge__anon_16714(ptr nonnull align 1 %108, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %19, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void

.critedge9:                                       ; preds = %104
  %110 = add nsw i64 %19, -1
  %111 = mul nuw i64 %110, %7
  %112 = getelementptr inbounds i8, ptr %108, i64 %111
  %113 = mul nuw i64 %19, %7
  %114 = getelementptr inbounds i8, ptr %108, i64 %113
  %115 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %112, ptr nonnull align 1 %114) #15
  %.not = icmp eq i8 %115, 1
  br i1 %.not, label %17, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16495(ptr nocapture nonnull writeonly align 1 %0, ptr nocapture nonnull readonly align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5, ptr nocapture nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = shl nuw i64 %2, 3
  %9 = getelementptr inbounds i8, ptr %1, i64 %8
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = shl nuw i64 %3, 3
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = add nuw i64 %3, %2
  %14 = shl i64 %13, 3
  %15 = add i64 %14, -8
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  %17 = icmp ult i64 %2, %3
  br i1 %17, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %7
  %.066 = phi ptr [ %31, %.cont16 ], [ %0, %7 ]
  %.061 = phi ptr [ %., %.cont16 ], [ %9, %7 ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %7 ]
  %18 = shl nuw i64 %2, 1
  tail call void %6(ptr align 1 %5, i64 %18) #15
  %19 = load ptr, ptr %.0, align 8
  %20 = load ptr, ptr %.061, align 8
  %21 = tail call i8 %4(ptr align 1 %5, ptr align 1 %19, ptr align 1 %20) #15
  %.not = icmp eq i8 %21, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  %22 = load i64, ptr %.sroa.speculated21, align 8
  store i64 %22, ptr %.066, align 8
  %23 = add i64 %2, -1
  %.not10 = icmp eq i64 %23, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %24 = icmp eq i8 %21, 1
  %25 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 8
  %.0. = select i1 %24, ptr %.0, ptr %25
  %..061 = select i1 %24, ptr %25, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 8
  br label %.cont

.cont16:                                          ; preds = %7
  tail call void %6(ptr align 1 %5, i64 1) #15
  %26 = load ptr, ptr %1, align 8
  %27 = load ptr, ptr %9, align 8
  %28 = tail call i8 %4(ptr align 1 %5, ptr align 1 %26, ptr align 1 %27) #15
  %.not77 = icmp eq i8 %28, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %9, ptr %1
  %29 = load i64, ptr %.sroa.speculated12, align 8
  store i64 %29, ptr %0, align 8
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 8
  %. = select i1 %.not77, ptr %30, ptr %9
  %.78 = select i1 %.not77, ptr %1, ptr %30
  %31 = getelementptr inbounds i8, ptr %0, i64 8
  br label %.cont25

.cont:                                            ; preds = %select.end7, %.cont.preheader
  %lsr.iv2 = phi i64 [ %23, %.cont.preheader ], [ %lsr.iv.next, %select.end7 ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep1, %select.end7 ]
  %.37 = phi ptr [ %.3., %select.end7 ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %select.end7 ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %select.end7 ], [ %10, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %select.end7 ], [ %12, %.cont.preheader ]
  %.0722 = phi ptr [ %45, %select.end7 ], [ %16, %.cont.preheader ]
  %32 = load ptr, ptr %.37, align 8
  %33 = load ptr, ptr %.3646, align 8
  %34 = tail call i8 %4(ptr align 1 %5, ptr align 1 %32, ptr align 1 %33) #15
  %.sroa.speculated.frozen = freeze i8 %34
  %.not76 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not76, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.3646, %.cont ], [ %.37, %select.false ]
  %..364.frozen = freeze i8 %34
  %35 = icmp eq i8 %..364.frozen, 1
  %36 = load i64, ptr %.sroa.speculated, align 8
  store i64 %36, ptr %lsr.iv, align 8
  %37 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  br i1 %35, label %select.end3, label %select.false4

select.false4:                                    ; preds = %select.end
  br label %select.end3

select.end3:                                      ; preds = %select.false4, %select.end
  %..364 = phi ptr [ %37, %select.end ], [ %.3646, %select.false4 ]
  %.3. = phi ptr [ %.37, %select.end ], [ %37, %select.false4 ]
  %38 = load ptr, ptr %.0684, align 8
  %39 = load ptr, ptr %.0703, align 8
  %40 = tail call i8 %4(ptr align 1 %5, ptr align 1 %38, ptr align 1 %39) #15
  %.sroa.speculated40.frozen = freeze i8 %40
  %41 = icmp eq i8 %.sroa.speculated40.frozen, 1
  br i1 %41, label %select.end5, label %select.false6

select.false6:                                    ; preds = %select.end3
  br label %select.end5

select.end5:                                      ; preds = %select.false6, %select.end3
  %.sroa.speculated40 = phi ptr [ %.0684, %select.end3 ], [ %.0703, %select.false6 ]
  %.171.frozen = freeze i8 %40
  %42 = icmp eq i8 %.171.frozen, 1
  %43 = load i64, ptr %.sroa.speculated40, align 8
  store i64 %43, ptr %.0722, align 8
  %44 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 -8
  br i1 %42, label %select.end7, label %select.false8

select.false8:                                    ; preds = %select.end5
  br label %select.end7

select.end7:                                      ; preds = %select.false8, %select.end5
  %.171 = phi ptr [ %.0703, %select.end5 ], [ %44, %select.false8 ]
  %.169 = phi ptr [ %44, %select.end5 ], [ %.0684, %select.false8 ]
  %45 = getelementptr inbounds i8, ptr %.0722, i64 -8
  %uglygep1 = getelementptr i8, ptr %lsr.iv, i64 8
  %lsr.iv.next = add i64 %lsr.iv2, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %select.end7, %.cont25
  %.072.lcssa = phi ptr [ %16, %.cont25 ], [ %45, %select.end7 ]
  %.070.lcssa = phi ptr [ %12, %.cont25 ], [ %.171, %select.end7 ]
  %.068.lcssa = phi ptr [ %10, %.cont25 ], [ %.169, %select.end7 ]
  %46 = load ptr, ptr %.068.lcssa, align 8
  %47 = load ptr, ptr %.070.lcssa, align 8
  %48 = tail call i8 %4(ptr align 1 %5, ptr align 1 %46, ptr align 1 %47) #15
  %49 = icmp eq i8 %48, 1
  %.sroa.speculated46 = select i1 %49, ptr %.068.lcssa, ptr %.070.lcssa
  %50 = load i64, ptr %.sroa.speculated46, align 8
  store i64 %50, ptr %.072.lcssa, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.quad_swap_merge__anon_16497(ptr nocapture nonnull align 1 %0, ptr nocapture nonnull align 1 %1, ptr nocapture nonnull readonly align 4 %2, ptr align 1 %3) unnamed_addr #4 {
.cont19:
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load ptr, ptr %0, align 8
  %6 = load ptr, ptr %4, align 8
  %7 = tail call i8 %2(ptr align 1 %3, ptr align 1 %5, ptr align 1 %6) #15
  %.not = icmp eq i8 %7, 1
  %.sroa.speculated151 = select i1 %.not, i64 16, i64 0
  %.sroa.speculated15 = select i1 %.not, ptr %4, ptr %0
  %sunkaddr = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated151
  %8 = load i64, ptr %sunkaddr, align 8
  store i64 %8, ptr %1, align 8
  %9 = getelementptr inbounds i8, ptr %.sroa.speculated15, i64 8
  %. = select i1 %.not, ptr %9, ptr %4
  %.187 = select i1 %.not, ptr %0, ptr %9
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  %11 = load ptr, ptr %.187, align 8
  %12 = load ptr, ptr %., align 8
  %13 = tail call i8 %2(ptr align 1 %3, ptr align 1 %11, ptr align 1 %12) #15
  %.not180 = icmp eq i8 %13, 1
  %14 = select i1 %.not180, ptr %., ptr %.187
  %15 = load i64, ptr %14, align 8
  store i64 %15, ptr %10, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = getelementptr inbounds i8, ptr %0, i64 24
  %18 = getelementptr inbounds i8, ptr %1, i64 24
  %19 = load ptr, ptr %16, align 8
  %20 = load ptr, ptr %17, align 8
  %21 = tail call i8 %2(ptr align 1 %3, ptr align 1 %19, ptr align 1 %20) #15
  %22 = icmp eq i8 %21, 1
  %.sroa.speculated2 = select i1 %22, i64 8, i64 24
  %.sroa.speculated = select i1 %22, ptr %16, ptr %17
  %sunkaddr3 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated2
  %23 = load i64, ptr %sunkaddr3, align 8
  store i64 %23, ptr %18, align 8
  %24 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 -8
  %.1164 = select i1 %22, ptr %17, ptr %24
  %.1 = select i1 %22, ptr %24, ptr %16
  %25 = getelementptr inbounds i8, ptr %1, i64 16
  %26 = load ptr, ptr %.1, align 8
  %27 = load ptr, ptr %.1164, align 8
  %28 = tail call i8 %2(ptr align 1 %3, ptr align 1 %26, ptr align 1 %27) #15
  %29 = icmp eq i8 %28, 1
  %.0165 = select i1 %29, ptr %.1, ptr %.1164
  %30 = load i64, ptr %.0165, align 8
  store i64 %30, ptr %25, align 8
  %31 = getelementptr inbounds i8, ptr %1, i64 32
  %32 = getelementptr inbounds i8, ptr %0, i64 32
  %33 = getelementptr inbounds i8, ptr %0, i64 48
  %34 = load ptr, ptr %32, align 8
  %35 = load ptr, ptr %33, align 8
  %36 = tail call i8 %2(ptr align 1 %3, ptr align 1 %34, ptr align 1 %35) #15
  %.not181 = icmp eq i8 %36, 1
  %.sroa.speculated504 = select i1 %.not181, i64 48, i64 32
  %.sroa.speculated50 = select i1 %.not181, ptr %33, ptr %32
  %sunkaddr5 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated504
  %37 = load i64, ptr %sunkaddr5, align 8
  store i64 %37, ptr %31, align 8
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.0168 = select i1 %.not181, ptr %38, ptr %33
  %.0166 = select i1 %.not181, ptr %32, ptr %38
  %39 = getelementptr inbounds i8, ptr %1, i64 40
  %40 = load ptr, ptr %.0166, align 8
  %41 = load ptr, ptr %.0168, align 8
  %42 = tail call i8 %2(ptr align 1 %3, ptr align 1 %40, ptr align 1 %41) #15
  %.not182 = icmp eq i8 %42, 1
  %43 = select i1 %.not182, ptr %.0168, ptr %.0166
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %39, align 8
  %45 = getelementptr inbounds i8, ptr %0, i64 40
  %46 = getelementptr inbounds i8, ptr %0, i64 56
  %47 = getelementptr inbounds i8, ptr %1, i64 56
  %48 = load ptr, ptr %45, align 8
  %49 = load ptr, ptr %46, align 8
  %50 = tail call i8 %2(ptr align 1 %3, ptr align 1 %48, ptr align 1 %49) #15
  %51 = icmp eq i8 %50, 1
  %.sroa.speculated416 = select i1 %51, i64 40, i64 56
  %.sroa.speculated41 = select i1 %51, ptr %45, ptr %46
  %sunkaddr7 = getelementptr inbounds i8, ptr %0, i64 %.sroa.speculated416
  %52 = load i64, ptr %sunkaddr7, align 8
  store i64 %52, ptr %47, align 8
  %53 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 -8
  %.1169 = select i1 %51, ptr %46, ptr %53
  %.1167 = select i1 %51, ptr %53, ptr %45
  %54 = getelementptr inbounds i8, ptr %1, i64 48
  %55 = load ptr, ptr %.1167, align 8
  %56 = load ptr, ptr %.1169, align 8
  %57 = tail call i8 %2(ptr align 1 %3, ptr align 1 %55, ptr align 1 %56) #15
  %58 = icmp eq i8 %57, 1
  %.0170 = select i1 %58, ptr %.1167, ptr %.1169
  %59 = load i64, ptr %.0170, align 8
  store i64 %59, ptr %54, align 8
  %60 = load ptr, ptr %1, align 8
  %61 = load ptr, ptr %31, align 8
  %62 = tail call i8 %2(ptr align 1 %3, ptr align 1 %60, ptr align 1 %61) #15
  %.not183 = icmp eq i8 %62, 1
  %.sroa.speculated1288 = select i1 %.not183, i64 32, i64 0
  %.sroa.speculated128 = select i1 %.not183, ptr %31, ptr %1
  %sunkaddr9 = getelementptr inbounds i8, ptr %1, i64 %.sroa.speculated1288
  %63 = load i64, ptr %sunkaddr9, align 8
  store i64 %63, ptr %0, align 8
  %64 = getelementptr inbounds i8, ptr %.sroa.speculated128, i64 8
  %.0173 = select i1 %.not183, ptr %64, ptr %31
  %.0171 = select i1 %.not183, ptr %1, ptr %64
  %65 = load ptr, ptr %.0171, align 8
  %66 = load ptr, ptr %.0173, align 8
  %67 = tail call i8 %2(ptr align 1 %3, ptr align 1 %65, ptr align 1 %66) #15
  %.not184 = icmp eq i8 %67, 1
  %.sroa.speculated119 = select i1 %.not184, ptr %.0173, ptr %.0171
  %68 = load i64, ptr %.sroa.speculated119, align 8
  store i64 %68, ptr %16, align 8
  %69 = getelementptr inbounds i8, ptr %.sroa.speculated119, i64 8
  %.1174 = select i1 %.not184, ptr %69, ptr %.0173
  %.1172 = select i1 %.not184, ptr %.0171, ptr %69
  %70 = load ptr, ptr %.1172, align 8
  %71 = load ptr, ptr %.1174, align 8
  %72 = tail call i8 %2(ptr align 1 %3, ptr align 1 %70, ptr align 1 %71) #15
  %.not185 = icmp eq i8 %72, 1
  %.sroa.speculated110 = select i1 %.not185, ptr %.1174, ptr %.1172
  %73 = load i64, ptr %.sroa.speculated110, align 8
  store i64 %73, ptr %4, align 8
  %74 = getelementptr inbounds i8, ptr %.sroa.speculated110, i64 8
  %.2175 = select i1 %.not185, ptr %74, ptr %.1174
  %.2 = select i1 %.not185, ptr %.1172, ptr %74
  %75 = load ptr, ptr %.2, align 8
  %76 = load ptr, ptr %.2175, align 8
  %77 = tail call i8 %2(ptr align 1 %3, ptr align 1 %75, ptr align 1 %76) #15
  %.not186 = icmp eq i8 %77, 1
  %78 = select i1 %.not186, ptr %.2175, ptr %.2
  %79 = load i64, ptr %78, align 8
  store i64 %79, ptr %17, align 8
  %80 = load ptr, ptr %18, align 8
  %81 = load ptr, ptr %47, align 8
  %82 = tail call i8 %2(ptr align 1 %3, ptr align 1 %80, ptr align 1 %81) #15
  %83 = icmp eq i8 %82, 1
  %.sroa.speculated10110 = select i1 %83, i64 24, i64 56
  %.sroa.speculated101 = select i1 %83, ptr %18, ptr %47
  %sunkaddr11 = getelementptr inbounds i8, ptr %1, i64 %.sroa.speculated10110
  %84 = load i64, ptr %sunkaddr11, align 8
  store i64 %84, ptr %46, align 8
  %85 = getelementptr inbounds i8, ptr %.sroa.speculated101, i64 -8
  %.3176 = select i1 %83, ptr %47, ptr %85
  %.3 = select i1 %83, ptr %85, ptr %18
  %86 = load ptr, ptr %.3, align 8
  %87 = load ptr, ptr %.3176, align 8
  %88 = tail call i8 %2(ptr align 1 %3, ptr align 1 %86, ptr align 1 %87) #15
  %89 = icmp eq i8 %88, 1
  %.sroa.speculated92 = select i1 %89, ptr %.3, ptr %.3176
  %90 = load i64, ptr %.sroa.speculated92, align 8
  store i64 %90, ptr %33, align 8
  %91 = getelementptr inbounds i8, ptr %.sroa.speculated92, i64 -8
  %.4177 = select i1 %89, ptr %.3176, ptr %91
  %.4 = select i1 %89, ptr %91, ptr %.3
  %92 = load ptr, ptr %.4, align 8
  %93 = load ptr, ptr %.4177, align 8
  %94 = tail call i8 %2(ptr align 1 %3, ptr align 1 %92, ptr align 1 %93) #15
  %95 = icmp eq i8 %94, 1
  %.sroa.speculated83 = select i1 %95, ptr %.4, ptr %.4177
  %96 = load i64, ptr %.sroa.speculated83, align 8
  store i64 %96, ptr %45, align 8
  %97 = getelementptr inbounds i8, ptr %.sroa.speculated83, i64 -8
  %.5178 = select i1 %95, ptr %.4177, ptr %97
  %.5 = select i1 %95, ptr %97, ptr %.4
  %98 = load ptr, ptr %.5, align 8
  %99 = load ptr, ptr %.5178, align 8
  %100 = tail call i8 %2(ptr align 1 %3, ptr align 1 %98, ptr align 1 %99) #15
  %101 = icmp eq i8 %100, 1
  %.0179 = select i1 %101, ptr %.5, ptr %.5178
  %102 = load i64, ptr %.0179, align 8
  store i64 %102, ptr %32, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = icmp eq i64 %1, %4
  br i1 %14, label %common.ret, label %15

common.ret:                                       ; preds = %.lr.ph31, %.preheader, %15, %8
  ret void

15:                                               ; preds = %8
  %16 = shl i64 %4, 3
  %17 = add i64 %16, -8
  %18 = getelementptr inbounds i8, ptr %0, i64 %17
  store ptr %18, ptr %13, align 8
  %19 = shl i64 %1, 3
  %20 = add i64 %19, -8
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  store ptr %21, ptr %12, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %22 = getelementptr inbounds i8, ptr %0, i64 %16
  %23 = load ptr, ptr %18, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %5(ptr align 1 %6, ptr align 1 %23, ptr align 1 %24) #15
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %15
  %27 = sub nuw i64 %1, %4
  %28 = icmp ule i64 %1, %3
  %29 = icmp ugt i64 %27, 63
  %30 = select i1 %28, i1 %29, i1 false
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %27, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %19, i1 false)
  ret void

32:                                               ; preds = %26
  %33 = shl i64 %27, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %22, i64 %33, i1 false)
  %34 = add i64 %33, -8
  %35 = getelementptr inbounds i8, ptr %2, i64 %34
  store ptr %35, ptr %11, align 8
  %36 = getelementptr inbounds i8, ptr %0, i64 128
  %37 = getelementptr inbounds i8, ptr %2, i64 128
  %38 = icmp sgt i64 %17, 128
  %39 = icmp sgt i64 %34, 128
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %.preheader4.preheader, label %.loopexit6

.preheader4.preheader:                            ; preds = %32
  br label %.preheader4

.loopexit3:                                       ; preds = %118
  %uglygep94 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  store ptr %uglygep94, ptr %13, align 8
  %uglygep61 = getelementptr i8, ptr %59, i64 %lsr.iv.next
  store ptr %uglygep61, ptr %12, align 8
  %.pre = load ptr, ptr %11, align 8
  %uglygep60 = getelementptr i8, ptr %59, i64 %lsr.iv.next
  %uglygep93 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  br label %.loopexit6

.loopexit5:                                       ; preds = %65
  store ptr %112, ptr %11, align 8
  store ptr %111, ptr %12, align 8
  %.pre51 = load ptr, ptr %13, align 8
  br label %.loopexit6

.loopexit6:                                       ; preds = %.loopexit, %.loopexit5, %.loopexit3, %32
  %.promoted2253 = phi ptr [ %21, %32 ], [ %111, %.loopexit5 ], [ %uglygep60, %.loopexit3 ], [ %144, %.loopexit ]
  %41 = phi ptr [ %18, %32 ], [ %.pre51, %.loopexit5 ], [ %uglygep93, %.loopexit3 ], [ %52, %.loopexit ]
  %42 = phi ptr [ %35, %32 ], [ %112, %.loopexit5 ], [ %.pre, %.loopexit3 ], [ %54, %.loopexit ]
  %43 = ptrtoint ptr %2 to i64
  %44 = add nuw i64 %43, 8
  %45 = ptrtoint ptr %0 to i64
  %46 = add nuw i64 %45, 8
  %47 = ptrtoint ptr %42 to i64
  %48 = icmp ult i64 %44, %47
  %49 = ptrtoint ptr %41 to i64
  %50 = icmp ult i64 %46, %49
  %51 = select i1 %48, i1 %50, i1 false
  br i1 %51, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit6
  br label %.lr.ph

.loopexit:                                        ; preds = %143
  store ptr %144, ptr %12, align 8
  %52 = load ptr, ptr %13, align 8
  %53 = icmp ugt ptr %52, %36
  %54 = load ptr, ptr %11, align 8
  %55 = icmp ugt ptr %54, %37
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %.preheader4, label %.loopexit6

.preheader4:                                      ; preds = %.loopexit, %.preheader4.preheader
  %.promoted10 = phi ptr [ %144, %.loopexit ], [ %21, %.preheader4.preheader ]
  %.promoted = phi ptr [ %54, %.loopexit ], [ %35, %.preheader4.preheader ]
  %57 = phi ptr [ %52, %.loopexit ], [ %18, %.preheader4.preheader ]
  br label %58

58:                                               ; preds = %65, %.preheader4
  %59 = phi ptr [ %.promoted10, %.preheader4 ], [ %111, %65 ]
  %60 = phi ptr [ %.promoted, %.preheader4 ], [ %112, %65 ]
  %61 = getelementptr inbounds i8, ptr %60, i64 -120
  tail call void %7(ptr align 1 %6, i64 1) #15
  %62 = load ptr, ptr %57, align 8
  %63 = load ptr, ptr %61, align 8
  %64 = tail call i8 %5(ptr align 1 %6, ptr align 1 %62, ptr align 1 %63) #15
  %.not21 = icmp eq i8 %64, 1
  br i1 %.not21, label %.preheader2, label %65

.preheader2:                                      ; preds = %58
  store ptr %60, ptr %11, align 8
  %.promoted13 = load ptr, ptr %13, align 8
  br label %113

65:                                               ; preds = %58
  %66 = load i64, ptr %60, align 8
  store i64 %66, ptr %59, align 8
  %67 = getelementptr inbounds i8, ptr %59, i64 -8
  %68 = getelementptr inbounds i8, ptr %60, i64 -8
  %69 = load i64, ptr %68, align 8
  store i64 %69, ptr %67, align 8
  %70 = getelementptr inbounds i8, ptr %59, i64 -16
  %71 = getelementptr inbounds i8, ptr %60, i64 -16
  %72 = load i64, ptr %71, align 8
  store i64 %72, ptr %70, align 8
  %73 = getelementptr inbounds i8, ptr %59, i64 -24
  %74 = getelementptr inbounds i8, ptr %60, i64 -24
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %73, align 8
  %76 = getelementptr inbounds i8, ptr %59, i64 -32
  %77 = getelementptr inbounds i8, ptr %60, i64 -32
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %76, align 8
  %79 = getelementptr inbounds i8, ptr %59, i64 -40
  %80 = getelementptr inbounds i8, ptr %60, i64 -40
  %81 = load i64, ptr %80, align 8
  store i64 %81, ptr %79, align 8
  %82 = getelementptr inbounds i8, ptr %59, i64 -48
  %83 = getelementptr inbounds i8, ptr %60, i64 -48
  %84 = load i64, ptr %83, align 8
  store i64 %84, ptr %82, align 8
  %85 = getelementptr inbounds i8, ptr %59, i64 -56
  %86 = getelementptr inbounds i8, ptr %60, i64 -56
  %87 = load i64, ptr %86, align 8
  store i64 %87, ptr %85, align 8
  %88 = getelementptr inbounds i8, ptr %59, i64 -64
  %89 = getelementptr inbounds i8, ptr %60, i64 -64
  %90 = load i64, ptr %89, align 8
  store i64 %90, ptr %88, align 8
  %91 = getelementptr inbounds i8, ptr %59, i64 -72
  %92 = getelementptr inbounds i8, ptr %60, i64 -72
  %93 = load i64, ptr %92, align 8
  store i64 %93, ptr %91, align 8
  %94 = getelementptr inbounds i8, ptr %59, i64 -80
  %95 = getelementptr inbounds i8, ptr %60, i64 -80
  %96 = load i64, ptr %95, align 8
  store i64 %96, ptr %94, align 8
  %97 = getelementptr inbounds i8, ptr %59, i64 -88
  %98 = getelementptr inbounds i8, ptr %60, i64 -88
  %99 = load i64, ptr %98, align 8
  store i64 %99, ptr %97, align 8
  %100 = getelementptr inbounds i8, ptr %59, i64 -96
  %101 = getelementptr inbounds i8, ptr %60, i64 -96
  %102 = load i64, ptr %101, align 8
  store i64 %102, ptr %100, align 8
  %103 = getelementptr inbounds i8, ptr %59, i64 -104
  %104 = getelementptr inbounds i8, ptr %60, i64 -104
  %105 = load i64, ptr %104, align 8
  store i64 %105, ptr %103, align 8
  %106 = getelementptr inbounds i8, ptr %59, i64 -112
  %107 = getelementptr inbounds i8, ptr %60, i64 -112
  %108 = load i64, ptr %107, align 8
  store i64 %108, ptr %106, align 8
  %109 = getelementptr inbounds i8, ptr %59, i64 -120
  %sunkaddr = getelementptr inbounds i8, ptr %60, i64 -120
  %110 = load i64, ptr %sunkaddr, align 8
  store i64 %110, ptr %109, align 8
  %111 = getelementptr inbounds i8, ptr %59, i64 -128
  %112 = getelementptr inbounds i8, ptr %60, i64 -128
  %.not25 = icmp ugt ptr %112, %37
  br i1 %.not25, label %58, label %.loopexit5

113:                                              ; preds = %118, %.preheader2
  %lsr.iv = phi i64 [ 0, %.preheader2 ], [ %lsr.iv.next, %118 ]
  %uglygep62 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep91 = getelementptr i8, ptr %uglygep62, i64 -120
  tail call void %7(ptr align 1 %6, i64 1) #15
  %114 = load ptr, ptr %uglygep91, align 8
  %115 = load ptr, ptr %60, align 8
  %116 = tail call i8 %5(ptr align 1 %6, ptr align 1 %114, ptr align 1 %115) #15
  %117 = icmp eq i8 %116, 1
  br i1 %117, label %118, label %.preheader1

.preheader1:                                      ; preds = %113
  %uglygep92 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  store ptr %uglygep92, ptr %13, align 8
  %uglygep59 = getelementptr i8, ptr %59, i64 %lsr.iv
  store ptr %uglygep59, ptr %12, align 8
  %uglygep = getelementptr i8, ptr %59, i64 %lsr.iv
  br label %135

118:                                              ; preds = %113
  %sunkaddr137 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %119 = load i64, ptr %sunkaddr137, align 8
  %sunkaddr138 = getelementptr i8, ptr %59, i64 %lsr.iv
  store i64 %119, ptr %sunkaddr138, align 8
  %uglygep99 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep100 = getelementptr i8, ptr %uglygep99, i64 -8
  %uglygep89 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep90 = getelementptr i8, ptr %uglygep89, i64 -8
  %120 = load i64, ptr %uglygep90, align 8
  store i64 %120, ptr %uglygep100, align 8
  %uglygep101 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep102 = getelementptr i8, ptr %uglygep101, i64 -16
  %uglygep87 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep88 = getelementptr i8, ptr %uglygep87, i64 -16
  %121 = load i64, ptr %uglygep88, align 8
  store i64 %121, ptr %uglygep102, align 8
  %uglygep103 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep104 = getelementptr i8, ptr %uglygep103, i64 -24
  %uglygep85 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep86 = getelementptr i8, ptr %uglygep85, i64 -24
  %122 = load i64, ptr %uglygep86, align 8
  store i64 %122, ptr %uglygep104, align 8
  %uglygep121 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep122 = getelementptr i8, ptr %uglygep121, i64 -32
  %uglygep83 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep84 = getelementptr i8, ptr %uglygep83, i64 -32
  %123 = load i64, ptr %uglygep84, align 8
  store i64 %123, ptr %uglygep122, align 8
  %uglygep125 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep126 = getelementptr i8, ptr %uglygep125, i64 -40
  %uglygep81 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep82 = getelementptr i8, ptr %uglygep81, i64 -40
  %124 = load i64, ptr %uglygep82, align 8
  store i64 %124, ptr %uglygep126, align 8
  %uglygep123 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep124 = getelementptr i8, ptr %uglygep123, i64 -48
  %uglygep79 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 -48
  %125 = load i64, ptr %uglygep80, align 8
  store i64 %125, ptr %uglygep124, align 8
  %uglygep96 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep97 = getelementptr i8, ptr %uglygep96, i64 -56
  %uglygep77 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep78 = getelementptr i8, ptr %uglygep77, i64 -56
  %126 = load i64, ptr %uglygep78, align 8
  store i64 %126, ptr %uglygep97, align 8
  %uglygep119 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep120 = getelementptr i8, ptr %uglygep119, i64 -64
  %uglygep75 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep76 = getelementptr i8, ptr %uglygep75, i64 -64
  %127 = load i64, ptr %uglygep76, align 8
  store i64 %127, ptr %uglygep120, align 8
  %uglygep117 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep118 = getelementptr i8, ptr %uglygep117, i64 -72
  %uglygep73 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep74 = getelementptr i8, ptr %uglygep73, i64 -72
  %128 = load i64, ptr %uglygep74, align 8
  store i64 %128, ptr %uglygep118, align 8
  %uglygep115 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep116 = getelementptr i8, ptr %uglygep115, i64 -80
  %uglygep71 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep72 = getelementptr i8, ptr %uglygep71, i64 -80
  %129 = load i64, ptr %uglygep72, align 8
  store i64 %129, ptr %uglygep116, align 8
  %uglygep113 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep114 = getelementptr i8, ptr %uglygep113, i64 -88
  %uglygep69 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep70 = getelementptr i8, ptr %uglygep69, i64 -88
  %130 = load i64, ptr %uglygep70, align 8
  store i64 %130, ptr %uglygep114, align 8
  %uglygep111 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep112 = getelementptr i8, ptr %uglygep111, i64 -96
  %uglygep67 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep68 = getelementptr i8, ptr %uglygep67, i64 -96
  %131 = load i64, ptr %uglygep68, align 8
  store i64 %131, ptr %uglygep112, align 8
  %uglygep109 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep110 = getelementptr i8, ptr %uglygep109, i64 -104
  %uglygep65 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep66 = getelementptr i8, ptr %uglygep65, i64 -104
  %132 = load i64, ptr %uglygep66, align 8
  store i64 %132, ptr %uglygep110, align 8
  %uglygep107 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep108 = getelementptr i8, ptr %uglygep107, i64 -112
  %uglygep63 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep64 = getelementptr i8, ptr %uglygep63, i64 -112
  %133 = load i64, ptr %uglygep64, align 8
  store i64 %133, ptr %uglygep108, align 8
  %uglygep105 = getelementptr i8, ptr %59, i64 %lsr.iv
  %uglygep106 = getelementptr i8, ptr %uglygep105, i64 -120
  %sunkaddr139 = getelementptr i8, ptr %uglygep62, i64 -120
  %134 = load i64, ptr %sunkaddr139, align 8
  store i64 %134, ptr %uglygep106, align 8
  %lsr.iv.next = add i64 %lsr.iv, -128
  %uglygep95 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  %.not24 = icmp ugt ptr %uglygep95, %36
  br i1 %.not24, label %113, label %.loopexit3

135:                                              ; preds = %143, %.preheader1
  %lsr.iv127 = phi i64 [ -8, %.preheader1 ], [ %math, %143 ]
  %136 = phi ptr [ %144, %143 ], [ %uglygep, %.preheader1 ]
  %137 = load ptr, ptr %13, align 8
  %138 = load ptr, ptr %11, align 8
  %139 = getelementptr inbounds i8, ptr %138, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %140 = load ptr, ptr %137, align 8
  %141 = load ptr, ptr %139, align 8
  %142 = tail call i8 %5(ptr align 1 %6, ptr align 1 %140, ptr align 1 %141) #15
  %.not22 = icmp eq i8 %142, 1
  br i1 %.not22, label %152, label %146

143:                                              ; preds = %select.end135, %158, %146
  %144 = phi ptr [ %162, %158 ], [ %180, %select.end135 ], [ %150, %146 ]
  %145 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv127, i64 1)
  %math = extractvalue { i64, i1 } %145, 0
  %ov = extractvalue { i64, i1 } %145, 1
  br i1 %ov, label %.loopexit, label %135

146:                                              ; preds = %135
  %147 = load i64, ptr %138, align 8
  store i64 %147, ptr %136, align 8
  %148 = getelementptr inbounds i8, ptr %136, i64 -8
  %sunkaddr140 = getelementptr inbounds i8, ptr %138, i64 -8
  %149 = load i64, ptr %sunkaddr140, align 8
  store i64 %149, ptr %148, align 8
  %150 = getelementptr inbounds i8, ptr %136, i64 -16
  %151 = getelementptr inbounds i8, ptr %138, i64 -16
  store ptr %151, ptr %11, align 8
  br label %143

152:                                              ; preds = %135
  %153 = getelementptr inbounds i8, ptr %137, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %154 = load ptr, ptr %153, align 8
  %155 = load ptr, ptr %138, align 8
  %156 = tail call i8 %5(ptr align 1 %6, ptr align 1 %154, ptr align 1 %155) #15
  %157 = icmp eq i8 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %152
  %159 = load i64, ptr %137, align 8
  store i64 %159, ptr %136, align 8
  %160 = getelementptr inbounds i8, ptr %136, i64 -8
  %sunkaddr141 = getelementptr inbounds i8, ptr %137, i64 -8
  %161 = load i64, ptr %sunkaddr141, align 8
  store i64 %161, ptr %160, align 8
  %162 = getelementptr inbounds i8, ptr %136, i64 -16
  %163 = getelementptr inbounds i8, ptr %137, i64 -16
  store ptr %163, ptr %13, align 8
  br label %143

164:                                              ; preds = %152
  tail call void %7(ptr align 1 %6, i64 2) #15
  %165 = load ptr, ptr %137, align 8
  %166 = load ptr, ptr %138, align 8
  %167 = tail call i8 %5(ptr align 1 %6, ptr align 1 %165, ptr align 1 %166) #15
  %..frozen = freeze i8 %167
  %.not23 = icmp eq i8 %..frozen, 1
  br i1 %.not23, label %select.end133, label %select.false134

select.false134:                                  ; preds = %164
  br label %select.end133

select.end133:                                    ; preds = %select.false134, %164
  %. = phi i64 [ 0, %164 ], [ 8, %select.false134 ]
  %.1 = phi i64 [ 8, %164 ], [ 0, %select.false134 ]
  %168 = getelementptr inbounds i8, ptr %136, i64 -8
  %169 = getelementptr inbounds i8, ptr %168, i64 %.
  %170 = load i64, ptr %138, align 8
  store i64 %170, ptr %169, align 8
  store ptr %139, ptr %11, align 8
  %171 = getelementptr inbounds i8, ptr %168, i64 %.1
  %172 = load i64, ptr %137, align 8
  store i64 %172, ptr %171, align 8
  store ptr %153, ptr %13, align 8
  %sunkaddr142 = getelementptr inbounds i8, ptr %137, i64 -8
  %173 = load ptr, ptr %sunkaddr142, align 8
  %sunkaddr143 = getelementptr inbounds i8, ptr %138, i64 -8
  %174 = load ptr, ptr %sunkaddr143, align 8
  %175 = tail call i8 %5(ptr align 1 %6, ptr align 1 %173, ptr align 1 %174) #15
  %.2.frozen = freeze i8 %175
  %176 = icmp eq i8 %.2.frozen, 1
  br i1 %176, label %select.end135, label %select.false136

select.false136:                                  ; preds = %select.end133
  br label %select.end135

select.end135:                                    ; preds = %select.false136, %select.end133
  %.2 = phi ptr [ %13, %select.end133 ], [ %11, %select.false136 ]
  %177 = load ptr, ptr %.2, align 8
  %178 = load i64, ptr %177, align 8
  %sunkaddr144 = getelementptr inbounds i8, ptr %136, i64 -16
  store i64 %178, ptr %sunkaddr144, align 8
  %179 = getelementptr inbounds i8, ptr %177, i64 -8
  store ptr %179, ptr %.2, align 8
  %180 = getelementptr inbounds i8, ptr %136, i64 -24
  br label %143

._crit_edge.loopexit:                             ; preds = %select.end131
  %181 = getelementptr inbounds i8, ptr %194, i64 -24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %.loopexit6
  %182 = phi ptr [ %41, %.loopexit6 ], [ %.pre55.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %213, %._crit_edge.loopexit ]
  %183 = phi ptr [ %42, %.loopexit6 ], [ %.pre54.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %210, %._crit_edge.loopexit ]
  %.promoted22 = phi ptr [ %.promoted2253, %.loopexit6 ], [ %.promoted22.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %181, %._crit_edge.loopexit ]
  %184 = icmp uge ptr %183, %2
  %185 = icmp uge ptr %182, %0
  %186 = select i1 %184, i1 %185, i1 false
  br i1 %186, label %.lr.ph25.preheader, label %.preheader

.lr.ph25.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph25

.lr.ph:                                           ; preds = %select.end131, %.lr.ph.preheader
  store ptr %0, ptr %10, align 8
  store ptr %2, ptr %9, align 8
  %187 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16723(ptr nonnull align 8 %12, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %11, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %187, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %188

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted22.pre.pre = load ptr, ptr %12, align 8
  %.pre54.pre = load ptr, ptr %11, align 8
  %.pre55.pre = load ptr, ptr %13, align 8
  br label %._crit_edge

188:                                              ; preds = %.lr.ph
  tail call void %7(ptr align 1 %6, i64 2) #15
  %189 = load ptr, ptr %13, align 8
  %190 = load ptr, ptr %11, align 8
  %191 = load ptr, ptr %189, align 8
  %192 = load ptr, ptr %190, align 8
  %193 = tail call i8 %5(ptr align 1 %6, ptr align 1 %191, ptr align 1 %192) #15
  %.3.frozen = freeze i8 %193
  %.not20 = icmp eq i8 %.3.frozen, 1
  br i1 %.not20, label %select.end129, label %select.false130

select.false130:                                  ; preds = %188
  br label %select.end129

select.end129:                                    ; preds = %select.false130, %188
  %.3 = phi i64 [ 0, %188 ], [ 8, %select.false130 ]
  %.4 = phi i64 [ 8, %188 ], [ 0, %select.false130 ]
  %194 = load ptr, ptr %12, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 -8
  %196 = getelementptr inbounds i8, ptr %195, i64 %.3
  %197 = load i64, ptr %190, align 8
  store i64 %197, ptr %196, align 8
  %198 = getelementptr inbounds i8, ptr %190, i64 -8
  store ptr %198, ptr %11, align 8
  %199 = getelementptr inbounds i8, ptr %195, i64 %.4
  %200 = load i64, ptr %189, align 8
  store i64 %200, ptr %199, align 8
  %201 = getelementptr inbounds i8, ptr %189, i64 -8
  store ptr %201, ptr %13, align 8
  %202 = load ptr, ptr %201, align 8
  %203 = load ptr, ptr %198, align 8
  %204 = tail call i8 %5(ptr align 1 %6, ptr align 1 %202, ptr align 1 %203) #15
  %.5.frozen = freeze i8 %204
  %205 = icmp eq i8 %.5.frozen, 1
  br i1 %205, label %select.end131, label %select.false132

select.false132:                                  ; preds = %select.end129
  br label %select.end131

select.end131:                                    ; preds = %select.false132, %select.end129
  %.5 = phi ptr [ %13, %select.end129 ], [ %11, %select.false132 ]
  %206 = load ptr, ptr %.5, align 8
  %207 = load i64, ptr %206, align 8
  %sunkaddr145 = getelementptr inbounds i8, ptr %194, i64 -16
  store i64 %207, ptr %sunkaddr145, align 8
  %208 = getelementptr inbounds i8, ptr %206, i64 -8
  store ptr %208, ptr %.5, align 8
  %209 = getelementptr inbounds i8, ptr %194, i64 -24
  store ptr %209, ptr %12, align 8
  %210 = load ptr, ptr %11, align 8
  %211 = ptrtoint ptr %210 to i64
  %212 = icmp ult i64 %44, %211
  %213 = load ptr, ptr %13, align 8
  %214 = ptrtoint ptr %213 to i64
  %215 = icmp ult i64 %46, %214
  %216 = select i1 %212, i1 %215, i1 false
  br i1 %216, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted26 = phi ptr [ %183, %._crit_edge ], [ %228, %select.end ]
  %.lcssa23 = phi ptr [ %.promoted22, %._crit_edge ], [ %227, %select.end ]
  store ptr %.lcssa23, ptr %12, align 8
  %.not1930 = icmp ult ptr %.promoted26, %2
  br i1 %.not1930, label %common.ret, label %.lr.ph31.preheader

.lr.ph31.preheader:                               ; preds = %.preheader
  br label %.lr.ph31

.lr.ph25:                                         ; preds = %select.end, %.lr.ph25.preheader
  %217 = phi ptr [ %230, %select.end ], [ %182, %.lr.ph25.preheader ]
  %218 = phi ptr [ %228, %select.end ], [ %183, %.lr.ph25.preheader ]
  %219 = phi ptr [ %227, %select.end ], [ %.promoted22, %.lr.ph25.preheader ]
  tail call void %7(ptr align 1 %6, i64 1) #15
  %220 = load ptr, ptr %217, align 8
  %221 = load ptr, ptr %218, align 8
  %222 = tail call i8 %5(ptr align 1 %6, ptr align 1 %220, ptr align 1 %221) #15
  %.6.frozen = freeze i8 %222
  %223 = icmp eq i8 %.6.frozen, 1
  br i1 %223, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph25
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph25
  %.6 = phi ptr [ %13, %.lr.ph25 ], [ %11, %select.false ]
  %224 = load ptr, ptr %.6, align 8
  %225 = load i64, ptr %224, align 8
  store i64 %225, ptr %219, align 8
  %226 = getelementptr inbounds i8, ptr %224, i64 -8
  store ptr %226, ptr %.6, align 8
  %227 = getelementptr inbounds i8, ptr %219, i64 -8
  %228 = load ptr, ptr %11, align 8
  %229 = icmp uge ptr %228, %2
  %230 = load ptr, ptr %13, align 8
  %231 = icmp uge ptr %230, %0
  %232 = select i1 %229, i1 %231, i1 false
  br i1 %232, label %.lr.ph25, label %.preheader

.lr.ph31:                                         ; preds = %.lr.ph31, %.lr.ph31.preheader
  %233 = phi ptr [ %237, %.lr.ph31 ], [ %.promoted26, %.lr.ph31.preheader ]
  %234 = phi ptr [ %236, %.lr.ph31 ], [ %.lcssa23, %.lr.ph31.preheader ]
  %235 = load i64, ptr %233, align 8
  store i64 %235, ptr %234, align 8
  %236 = getelementptr inbounds i8, ptr %234, i64 -8
  %237 = getelementptr inbounds i8, ptr %233, i64 -8
  %.not19 = icmp ult ptr %237, %2
  br i1 %.not19, label %common.ret, label %.lr.ph31
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16503(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  tail call void %7(ptr align 1 %6, i64 1) #15
  %9 = shl i64 %3, 3
  %10 = add i64 %9, -8
  %11 = getelementptr inbounds i8, ptr %0, i64 %10
  %12 = getelementptr inbounds i8, ptr %0, i64 %9
  %13 = load ptr, ptr %11, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #15
  %.not19 = icmp eq i8 %15, 1
  br i1 %.not19, label %.lr.ph.preheader, label %common.ret

.lr.ph.preheader:                                 ; preds = %8
  br label %.lr.ph

common.ret:                                       ; preds = %.critedge9, %43, %8
  ret void

.lr.ph:                                           ; preds = %.critedge9, %.lr.ph.preheader
  %16 = phi ptr [ %111, %.critedge9 ], [ %12, %.lr.ph.preheader ]
  %.tr422 = phi i64 [ %42, %.critedge9 ], [ %4, %.lr.ph.preheader ]
  %.tr321 = phi i64 [ %17, %.critedge9 ], [ %3, %.lr.ph.preheader ]
  %.tr20 = phi ptr [ %106, %.critedge9 ], [ %0, %.lr.ph.preheader ]
  %17 = lshr i64 %.tr321, 1
  %18 = sub nuw i64 %.tr321, %17
  %19 = shl nuw i64 %18, 3
  %20 = getelementptr i8, ptr %.tr20, i64 %19
  %21 = shl nuw i64 %.tr422, 3
  %22 = getelementptr inbounds i8, ptr %16, i64 %21
  %23 = add i64 %.tr422, -1
  %24 = tail call i64 @llvm.ctlz.i64(i64 %23, i1 false), !range !368
  %25 = sub nuw nsw i64 65, %24
  tail call void %7(ptr align 1 %6, i64 %25) #15
  %26 = icmp ugt i64 %.tr422, 1
  br i1 %26, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16724.exit

.lr.ph.i.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.end, %.lr.ph.i.preheader
  %.013.i = phi i64 [ %32, %select.end ], [ %.tr422, %.lr.ph.i.preheader ]
  %.0912.i = phi ptr [ %spec.select.i, %select.end ], [ %22, %.lr.ph.i.preheader ]
  %27 = lshr i64 %.013.i, 1
  %.neg.i = mul i64 %27, -8
  %28 = getelementptr inbounds i8, ptr %.0912.i, i64 %.neg.i
  %29 = load ptr, ptr %20, align 8
  %30 = load ptr, ptr %28, align 8
  %31 = tail call i8 %5(ptr align 1 %6, ptr align 1 %29, ptr align 1 %30) #15
  %spec.select.i.frozen = freeze i8 %31
  %.not10.i = icmp eq i8 %spec.select.i.frozen, 1
  br i1 %.not10.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i
  %spec.select.i = phi ptr [ %.0912.i, %.lr.ph.i ], [ %28, %select.false ]
  %32 = sub nuw i64 %.013.i, %27
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16724.exit

sort.monobound_binary_first__anon_16724.exit:     ; preds = %select.end, %.lr.ph
  %.09.lcssa.i = phi ptr [ %22, %.lr.ph ], [ %spec.select.i, %select.end ]
  %34 = getelementptr inbounds i8, ptr %.09.lcssa.i, i64 -8
  %35 = load ptr, ptr %20, align 8
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #15
  %.not.i = icmp eq i8 %37, 1
  %spec.select11.i = select i1 %.not.i, ptr %.09.lcssa.i, ptr %34
  %38 = ptrtoint ptr %spec.select11.i to i64
  %39 = ptrtoint ptr %16 to i64
  %40 = sub nuw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = sub nuw i64 %.tr422, %41
  %.not96 = icmp ult i64 %40, 8
  br i1 %.not96, label %43, label %44

43:                                               ; preds = %.critedge3, %91, %90, %mem.copyBackwards__anon_9784.exit, %sort.monobound_binary_first__anon_16724.exit
  %.not97 = icmp eq i64 %.tr422, %41
  br i1 %.not97, label %common.ret, label %92

44:                                               ; preds = %sort.monobound_binary_first__anon_16724.exit
  %45 = add nuw i64 %41, %18
  %.not99 = icmp ugt i64 %45, %2
  br i1 %.not99, label %82, label %46

46:                                               ; preds = %44
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr20, i64 %19, i1 false)
  %47 = getelementptr inbounds i8, ptr %1, i64 %19
  %48 = and i64 %40, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %47, ptr nonnull align 1 %16, i64 %48, i1 false)
  %49 = shl i64 %45, 3
  %.not6.i = icmp ult i64 %.tr321, 2
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %46
  %50 = shl i64 %17, 3
  %min.iters.check = icmp eq i64 %50, 0
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr20, i64 -1
  %51 = add i64 %.tr321, %41
  %52 = shl i64 %51, 3
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %52
  %53 = sub i64 1, %50
  %54 = getelementptr i8, ptr %uglygep22, i64 %53
  %55 = icmp ugt ptr %54, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr20, i64 -1
  %56 = shl i64 %.tr321, 3
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %56
  %57 = sub i64 1, %50
  %58 = getelementptr i8, ptr %uglygep24, i64 %57
  %59 = icmp ugt ptr %58, %uglygep24
  %60 = or i1 %55, %59
  br i1 %60, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %61 = ptrtoint ptr %.tr20 to i64
  %62 = add i64 %61, -1
  %63 = shl i64 %.tr321, 3
  %64 = add i64 %62, %63
  %65 = add i64 %.tr321, %41
  %66 = shl i64 %65, 3
  %67 = add i64 %62, %66
  %68 = sub i64 %64, %67
  %diff.check = icmp ult i64 %68, 32
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %50, 32
  br i1 %min.iters.check29, label %vec.epilog.vector.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %50, -32
  %uglygep70 = getelementptr i8, ptr %.tr20, i64 -16
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 %52
  %uglygep75 = getelementptr i8, ptr %uglygep70, i64 %56
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv76 = phi ptr [ %uglygep77, %vector.body ], [ %uglygep75, %vector.ph ]
  %lsr.iv72 = phi ptr [ %uglygep73, %vector.body ], [ %uglygep71, %vector.ph ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ %n.vec, %vector.ph ]
  %wide.load = load <16 x i8>, ptr %lsr.iv76, align 1
  %uglygep78 = getelementptr i8, ptr %lsr.iv76, i64 -16
  %wide.load30 = load <16 x i8>, ptr %uglygep78, align 1
  store <16 x i8> %wide.load, ptr %lsr.iv72, align 1
  %uglygep74 = getelementptr i8, ptr %lsr.iv72, i64 -16
  store <16 x i8> %wide.load30, ptr %uglygep74, align 1
  %lsr.iv.next = add i64 %lsr.iv, -32
  %uglygep73 = getelementptr i8, ptr %lsr.iv72, i64 -32
  %uglygep77 = getelementptr i8, ptr %lsr.iv76, i64 -32
  %69 = icmp eq i64 %lsr.iv.next, 0
  br i1 %69, label %middle.block, label %vector.body, !llvm.loop !519

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %50, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end36 = and i64 %50, 24
  %70 = and i64 %.tr321, 6
  %min.epilog.iters.check = icmp eq i64 %70, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.vector.body.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end36, %vec.epilog.iter.check ], [ %50, %vector.scevcheck ], [ %50, %vector.memcheck ], [ %50, %iter.check ]
  %71 = mul i64 %.07.i.ph, -1
  %uglygep90 = getelementptr i8, ptr %.tr20, i64 -1
  %72 = shl i64 %.tr321, 3
  %73 = add i64 %.07.i.ph, %72
  %74 = sub i64 %73, %50
  %uglygep91 = getelementptr i8, ptr %uglygep90, i64 %74
  %75 = add i64 %.07.i.ph, %49
  %uglygep94 = getelementptr i8, ptr %uglygep90, i64 %75
  br label %.lr.ph.i103

vec.epilog.vector.body.preheader:                 ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %index38.ph = phi i64 [ 0, %vector.main.loop.iter.check ], [ %n.vec, %vec.epilog.iter.check ]
  %uglygep79 = getelementptr i8, ptr %.tr20, i64 -8
  %76 = sub i64 %52, %index38.ph
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %76
  %77 = sub i64 %56, %index38.ph
  %uglygep83 = getelementptr i8, ptr %uglygep79, i64 %77
  %78 = sub i64 %index38.ph, %50
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.vector.body.preheader
  %lsr.iv86 = phi i64 [ %78, %vec.epilog.vector.body.preheader ], [ %lsr.iv.next87, %vec.epilog.vector.body ]
  %lsr.iv84 = phi ptr [ %uglygep83, %vec.epilog.vector.body.preheader ], [ %uglygep85, %vec.epilog.vector.body ]
  %lsr.iv81 = phi ptr [ %uglygep80, %vec.epilog.vector.body.preheader ], [ %uglygep82, %vec.epilog.vector.body ]
  %wide.load40 = load <8 x i8>, ptr %lsr.iv84, align 1
  store <8 x i8> %wide.load40, ptr %lsr.iv81, align 1
  %uglygep82 = getelementptr i8, ptr %lsr.iv81, i64 -8
  %uglygep85 = getelementptr i8, ptr %lsr.iv84, i64 -8
  %lsr.iv.next87 = add i64 %lsr.iv86, 8
  %79 = icmp eq i64 %lsr.iv.next87, 0
  br i1 %79, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.vector.body, !llvm.loop !520

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %lsr.iv95 = phi ptr [ %uglygep94, %.lr.ph.i103.preheader ], [ %uglygep96, %.lr.ph.i103 ]
  %lsr.iv92 = phi ptr [ %uglygep91, %.lr.ph.i103.preheader ], [ %uglygep93, %.lr.ph.i103 ]
  %lsr.iv88 = phi i64 [ %71, %.lr.ph.i103.preheader ], [ %math, %.lr.ph.i103 ]
  %80 = load i8, ptr %lsr.iv92, align 1
  store i8 %80, ptr %lsr.iv95, align 1
  %81 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv88, i64 1)
  %math = extractvalue { i64, i1 } %81, 0
  %ov = extractvalue { i64, i1 } %81, 1
  %uglygep93 = getelementptr i8, ptr %lsr.iv92, i64 -1
  %uglygep96 = getelementptr i8, ptr %lsr.iv95, i64 -1
  br i1 %ov, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103, !llvm.loop !521

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i103, %vec.epilog.vector.body, %middle.block, %46
  tail call fastcc void @sort.cross_merge__anon_14862(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %18, i64 %41, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %43

82:                                               ; preds = %44
  %83 = add nuw i64 %41, %17
  tail call fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %20, i64 %83, ptr nonnull align 1 %1, i64 %2, i64 %17, i64 8)
  %84 = shl nuw nsw i64 %41, 1
  %85 = icmp ult i64 %84, %18
  %86 = shl nuw i64 %18, 1
  %87 = icmp ult i64 %86, %41
  %88 = select i1 %85, i1 true, i1 %87
  br i1 %88, label %89, label %.critedge3

89:                                               ; preds = %82
  %.not100 = icmp ugt i64 %41, %2
  br i1 %.not100, label %.critedge, label %90

90:                                               ; preds = %89
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %.tr20, i64 %45, ptr nonnull align 1 %1, i64 %2, i64 %18, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %43

.critedge:                                        ; preds = %89
  %.not101 = icmp ugt i64 %18, %2
  br i1 %.not101, label %.critedge3, label %91

91:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16725(ptr nonnull align 1 %.tr20, i64 %45, ptr nonnull align 1 %1, i64 %2, i64 %18, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %43

.critedge3:                                       ; preds = %.critedge, %82
  tail call fastcc void @sort.rotate_merge_block__anon_16503(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %2, i64 %18, i64 %41, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br label %43

92:                                               ; preds = %43
  %93 = shl nuw i64 %42, 1
  %94 = icmp ult i64 %93, %17
  %95 = and i64 %.tr321, -2
  %96 = icmp ult i64 %95, %42
  %97 = or i1 %96, %94
  %98 = icmp ugt i64 %42, %2
  %not. = xor i1 %97, true
  %or.cond12 = select i1 %not., i1 true, i1 %98
  %.pre = add nuw i64 %42, %17
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %102, label %.critedge7

.critedge7:                                       ; preds = %92
  %99 = add nuw i64 %41, %18
  %100 = shl nuw i64 %99, 3
  %101 = getelementptr inbounds i8, ptr %.tr20, i64 %100
  tail call fastcc void @sort.partial_backwards_merge__anon_16502(ptr nonnull align 1 %101, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void

102:                                              ; preds = %92
  %103 = icmp ule i64 %18, %2
  %or.cond14 = select i1 %97, i1 %103, i1 false
  %104 = add nuw i64 %41, %18
  %105 = shl nuw i64 %104, 3
  %106 = getelementptr inbounds i8, ptr %.tr20, i64 %105
  br i1 %or.cond14, label %107, label %.critedge9

107:                                              ; preds = %102
  tail call fastcc void @sort.partial_forward_merge__anon_16725(ptr nonnull align 1 %106, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void

.critedge9:                                       ; preds = %102
  tail call void %7(ptr align 1 %6, i64 1) #15
  %108 = shl i64 %17, 3
  %109 = add i64 %108, -8
  %110 = getelementptr inbounds i8, ptr %106, i64 %109
  %111 = getelementptr inbounds i8, ptr %106, i64 %108
  %112 = load ptr, ptr %110, align 8
  %113 = load ptr, ptr %111, align 8
  %114 = tail call i8 %5(ptr align 1 %6, ptr align 1 %112, ptr align 1 %113) #15
  %.not = icmp eq i8 %114, 1
  br i1 %.not, label %.lr.ph, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.parity_merge__anon_16505(ptr nocapture nonnull writeonly align 1 %0, ptr nocapture nonnull readonly align 1 %1, i64 %2, i64 %3, ptr nocapture nonnull readonly align 4 %4, ptr align 1 %5) unnamed_addr #4 {
  %7 = shl nuw i64 %2, 3
  %8 = getelementptr inbounds i8, ptr %1, i64 %7
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = shl nuw i64 %3, 3
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = add nuw i64 %3, %2
  %13 = shl i64 %12, 3
  %14 = add i64 %13, -8
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = icmp ult i64 %2, %3
  br i1 %16, label %.cont16, label %.cont25

.cont25:                                          ; preds = %.cont16, %6
  %.066 = phi ptr [ %29, %.cont16 ], [ %0, %6 ]
  %.061 = phi ptr [ %., %.cont16 ], [ %8, %6 ]
  %.0 = phi ptr [ %.78, %.cont16 ], [ %1, %6 ]
  %17 = load ptr, ptr %.0, align 8
  %18 = load ptr, ptr %.061, align 8
  %19 = tail call i8 %4(ptr align 1 %5, ptr align 1 %17, ptr align 1 %18) #15
  %.not = icmp eq i8 %19, 1
  %.sroa.speculated21 = select i1 %.not, ptr %.061, ptr %.0
  %20 = load i64, ptr %.sroa.speculated21, align 8
  store i64 %20, ptr %.066, align 8
  %21 = add i64 %2, -1
  %.not10 = icmp eq i64 %21, 0
  br i1 %.not10, label %.cont50, label %.cont.preheader

.cont.preheader:                                  ; preds = %.cont25
  %22 = icmp eq i8 %19, 1
  %23 = getelementptr inbounds i8, ptr %.sroa.speculated21, i64 8
  %.0. = select i1 %22, ptr %.0, ptr %23
  %..061 = select i1 %22, ptr %23, ptr %.061
  %uglygep = getelementptr i8, ptr %.066, i64 8
  br label %.cont

.cont16:                                          ; preds = %6
  %24 = load ptr, ptr %1, align 8
  %25 = load ptr, ptr %8, align 8
  %26 = tail call i8 %4(ptr align 1 %5, ptr align 1 %24, ptr align 1 %25) #15
  %.not77 = icmp eq i8 %26, 1
  %.sroa.speculated12 = select i1 %.not77, ptr %8, ptr %1
  %27 = load i64, ptr %.sroa.speculated12, align 8
  store i64 %27, ptr %0, align 8
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated12, i64 8
  %. = select i1 %.not77, ptr %28, ptr %8
  %.78 = select i1 %.not77, ptr %1, ptr %28
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  br label %.cont25

.cont:                                            ; preds = %select.end7, %.cont.preheader
  %lsr.iv2 = phi i64 [ %21, %.cont.preheader ], [ %lsr.iv.next, %select.end7 ]
  %lsr.iv = phi ptr [ %uglygep, %.cont.preheader ], [ %uglygep1, %select.end7 ]
  %.37 = phi ptr [ %.3., %select.end7 ], [ %.0., %.cont.preheader ]
  %.3646 = phi ptr [ %..364, %select.end7 ], [ %..061, %.cont.preheader ]
  %.0684 = phi ptr [ %.169, %select.end7 ], [ %9, %.cont.preheader ]
  %.0703 = phi ptr [ %.171, %select.end7 ], [ %11, %.cont.preheader ]
  %.0722 = phi ptr [ %43, %select.end7 ], [ %15, %.cont.preheader ]
  %30 = load ptr, ptr %.37, align 8
  %31 = load ptr, ptr %.3646, align 8
  %32 = tail call i8 %4(ptr align 1 %5, ptr align 1 %30, ptr align 1 %31) #15
  %.sroa.speculated.frozen = freeze i8 %32
  %.not76 = icmp eq i8 %.sroa.speculated.frozen, 1
  br i1 %.not76, label %select.end, label %select.false

select.false:                                     ; preds = %.cont
  br label %select.end

select.end:                                       ; preds = %select.false, %.cont
  %.sroa.speculated = phi ptr [ %.3646, %.cont ], [ %.37, %select.false ]
  %..364.frozen = freeze i8 %32
  %33 = icmp eq i8 %..364.frozen, 1
  %34 = load i64, ptr %.sroa.speculated, align 8
  store i64 %34, ptr %lsr.iv, align 8
  %35 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  br i1 %33, label %select.end3, label %select.false4

select.false4:                                    ; preds = %select.end
  br label %select.end3

select.end3:                                      ; preds = %select.false4, %select.end
  %..364 = phi ptr [ %35, %select.end ], [ %.3646, %select.false4 ]
  %.3. = phi ptr [ %.37, %select.end ], [ %35, %select.false4 ]
  %36 = load ptr, ptr %.0684, align 8
  %37 = load ptr, ptr %.0703, align 8
  %38 = tail call i8 %4(ptr align 1 %5, ptr align 1 %36, ptr align 1 %37) #15
  %.sroa.speculated40.frozen = freeze i8 %38
  %39 = icmp eq i8 %.sroa.speculated40.frozen, 1
  br i1 %39, label %select.end5, label %select.false6

select.false6:                                    ; preds = %select.end3
  br label %select.end5

select.end5:                                      ; preds = %select.false6, %select.end3
  %.sroa.speculated40 = phi ptr [ %.0684, %select.end3 ], [ %.0703, %select.false6 ]
  %.171.frozen = freeze i8 %38
  %40 = icmp eq i8 %.171.frozen, 1
  %41 = load i64, ptr %.sroa.speculated40, align 8
  store i64 %41, ptr %.0722, align 8
  %42 = getelementptr inbounds i8, ptr %.sroa.speculated40, i64 -8
  br i1 %40, label %select.end7, label %select.false8

select.false8:                                    ; preds = %select.end5
  br label %select.end7

select.end7:                                      ; preds = %select.false8, %select.end5
  %.171 = phi ptr [ %.0703, %select.end5 ], [ %42, %select.false8 ]
  %.169 = phi ptr [ %42, %select.end5 ], [ %.0684, %select.false8 ]
  %43 = getelementptr inbounds i8, ptr %.0722, i64 -8
  %uglygep1 = getelementptr i8, ptr %lsr.iv, i64 8
  %lsr.iv.next = add i64 %lsr.iv2, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %.cont50, label %.cont

.cont50:                                          ; preds = %select.end7, %.cont25
  %.072.lcssa = phi ptr [ %15, %.cont25 ], [ %43, %select.end7 ]
  %.070.lcssa = phi ptr [ %11, %.cont25 ], [ %.171, %select.end7 ]
  %.068.lcssa = phi ptr [ %9, %.cont25 ], [ %.169, %select.end7 ]
  %44 = load ptr, ptr %.068.lcssa, align 8
  %45 = load ptr, ptr %.070.lcssa, align 8
  %46 = tail call i8 %4(ptr align 1 %5, ptr align 1 %44, ptr align 1 %45) #15
  %47 = icmp eq i8 %46, 1
  %.sroa.speculated46 = select i1 %47, ptr %.068.lcssa, ptr %.070.lcssa
  %48 = load i64, ptr %.sroa.speculated46, align 8
  store i64 %48, ptr %.072.lcssa, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = icmp eq i64 %1, %4
  br i1 %13, label %common.ret, label %14

common.ret:                                       ; preds = %.lr.ph31, %.preheader, %14, %7
  ret void

14:                                               ; preds = %7
  %15 = shl i64 %4, 3
  %16 = add i64 %15, -8
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  store ptr %17, ptr %12, align 8
  %18 = shl i64 %1, 3
  %19 = add i64 %18, -8
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %11, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 %15
  %22 = load ptr, ptr %17, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call i8 %5(ptr align 1 %6, ptr align 1 %22, ptr align 1 %23) #15
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %14
  %26 = sub nuw i64 %1, %4
  %27 = icmp ule i64 %1, %3
  %28 = icmp ugt i64 %26, 63
  %29 = select i1 %27, i1 %28, i1 false
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %4, i64 %26, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %18, i1 false)
  ret void

31:                                               ; preds = %25
  %32 = shl i64 %26, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %21, i64 %32, i1 false)
  %33 = add i64 %32, -8
  %34 = getelementptr inbounds i8, ptr %2, i64 %33
  store ptr %34, ptr %10, align 8
  %35 = getelementptr inbounds i8, ptr %0, i64 128
  %36 = getelementptr inbounds i8, ptr %2, i64 128
  %37 = icmp sgt i64 %16, 128
  %38 = icmp sgt i64 %33, 128
  %39 = select i1 %37, i1 %38, i1 false
  br i1 %39, label %.preheader4.preheader, label %.loopexit6

.preheader4.preheader:                            ; preds = %31
  br label %.preheader4

.loopexit3:                                       ; preds = %117
  %uglygep97 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  store ptr %uglygep97, ptr %12, align 8
  %uglygep64 = getelementptr i8, ptr %58, i64 %lsr.iv.next
  store ptr %uglygep64, ptr %11, align 8
  %.pre = load ptr, ptr %10, align 8
  %uglygep63 = getelementptr i8, ptr %58, i64 %lsr.iv.next
  %uglygep96 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  br label %.loopexit6

.loopexit5:                                       ; preds = %64
  store ptr %111, ptr %10, align 8
  store ptr %110, ptr %11, align 8
  %.pre51 = load ptr, ptr %12, align 8
  br label %.loopexit6

.loopexit6:                                       ; preds = %.loopexit, %.loopexit5, %.loopexit3, %31
  %.promoted2253 = phi ptr [ %20, %31 ], [ %110, %.loopexit5 ], [ %uglygep63, %.loopexit3 ], [ %143, %.loopexit ]
  %40 = phi ptr [ %17, %31 ], [ %.pre51, %.loopexit5 ], [ %uglygep96, %.loopexit3 ], [ %51, %.loopexit ]
  %41 = phi ptr [ %34, %31 ], [ %111, %.loopexit5 ], [ %.pre, %.loopexit3 ], [ %53, %.loopexit ]
  %42 = ptrtoint ptr %2 to i64
  %43 = add nuw i64 %42, 8
  %44 = ptrtoint ptr %0 to i64
  %45 = add nuw i64 %44, 8
  %46 = ptrtoint ptr %41 to i64
  %47 = icmp ult i64 %43, %46
  %48 = ptrtoint ptr %40 to i64
  %49 = icmp ult i64 %45, %48
  %50 = select i1 %47, i1 %49, i1 false
  br i1 %50, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit6
  br label %.lr.ph

.loopexit:                                        ; preds = %142
  store ptr %143, ptr %11, align 8
  %51 = load ptr, ptr %12, align 8
  %52 = icmp ugt ptr %51, %35
  %53 = load ptr, ptr %10, align 8
  %54 = icmp ugt ptr %53, %36
  %55 = select i1 %52, i1 %54, i1 false
  br i1 %55, label %.preheader4, label %.loopexit6

.preheader4:                                      ; preds = %.loopexit, %.preheader4.preheader
  %.promoted10 = phi ptr [ %143, %.loopexit ], [ %20, %.preheader4.preheader ]
  %.promoted = phi ptr [ %53, %.loopexit ], [ %34, %.preheader4.preheader ]
  %56 = phi ptr [ %51, %.loopexit ], [ %17, %.preheader4.preheader ]
  br label %57

57:                                               ; preds = %64, %.preheader4
  %58 = phi ptr [ %.promoted10, %.preheader4 ], [ %110, %64 ]
  %59 = phi ptr [ %.promoted, %.preheader4 ], [ %111, %64 ]
  %60 = getelementptr inbounds i8, ptr %59, i64 -120
  %61 = load ptr, ptr %56, align 8
  %62 = load ptr, ptr %60, align 8
  %63 = tail call i8 %5(ptr align 1 %6, ptr align 1 %61, ptr align 1 %62) #15
  %.not21 = icmp eq i8 %63, 1
  br i1 %.not21, label %.preheader2, label %64

.preheader2:                                      ; preds = %57
  store ptr %59, ptr %10, align 8
  %.promoted13 = load ptr, ptr %12, align 8
  br label %112

64:                                               ; preds = %57
  %65 = load i64, ptr %59, align 8
  store i64 %65, ptr %58, align 8
  %66 = getelementptr inbounds i8, ptr %58, i64 -8
  %67 = getelementptr inbounds i8, ptr %59, i64 -8
  %68 = load i64, ptr %67, align 8
  store i64 %68, ptr %66, align 8
  %69 = getelementptr inbounds i8, ptr %58, i64 -16
  %70 = getelementptr inbounds i8, ptr %59, i64 -16
  %71 = load i64, ptr %70, align 8
  store i64 %71, ptr %69, align 8
  %72 = getelementptr inbounds i8, ptr %58, i64 -24
  %73 = getelementptr inbounds i8, ptr %59, i64 -24
  %74 = load i64, ptr %73, align 8
  store i64 %74, ptr %72, align 8
  %75 = getelementptr inbounds i8, ptr %58, i64 -32
  %76 = getelementptr inbounds i8, ptr %59, i64 -32
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %75, align 8
  %78 = getelementptr inbounds i8, ptr %58, i64 -40
  %79 = getelementptr inbounds i8, ptr %59, i64 -40
  %80 = load i64, ptr %79, align 8
  store i64 %80, ptr %78, align 8
  %81 = getelementptr inbounds i8, ptr %58, i64 -48
  %82 = getelementptr inbounds i8, ptr %59, i64 -48
  %83 = load i64, ptr %82, align 8
  store i64 %83, ptr %81, align 8
  %84 = getelementptr inbounds i8, ptr %58, i64 -56
  %85 = getelementptr inbounds i8, ptr %59, i64 -56
  %86 = load i64, ptr %85, align 8
  store i64 %86, ptr %84, align 8
  %87 = getelementptr inbounds i8, ptr %58, i64 -64
  %88 = getelementptr inbounds i8, ptr %59, i64 -64
  %89 = load i64, ptr %88, align 8
  store i64 %89, ptr %87, align 8
  %90 = getelementptr inbounds i8, ptr %58, i64 -72
  %91 = getelementptr inbounds i8, ptr %59, i64 -72
  %92 = load i64, ptr %91, align 8
  store i64 %92, ptr %90, align 8
  %93 = getelementptr inbounds i8, ptr %58, i64 -80
  %94 = getelementptr inbounds i8, ptr %59, i64 -80
  %95 = load i64, ptr %94, align 8
  store i64 %95, ptr %93, align 8
  %96 = getelementptr inbounds i8, ptr %58, i64 -88
  %97 = getelementptr inbounds i8, ptr %59, i64 -88
  %98 = load i64, ptr %97, align 8
  store i64 %98, ptr %96, align 8
  %99 = getelementptr inbounds i8, ptr %58, i64 -96
  %100 = getelementptr inbounds i8, ptr %59, i64 -96
  %101 = load i64, ptr %100, align 8
  store i64 %101, ptr %99, align 8
  %102 = getelementptr inbounds i8, ptr %58, i64 -104
  %103 = getelementptr inbounds i8, ptr %59, i64 -104
  %104 = load i64, ptr %103, align 8
  store i64 %104, ptr %102, align 8
  %105 = getelementptr inbounds i8, ptr %58, i64 -112
  %106 = getelementptr inbounds i8, ptr %59, i64 -112
  %107 = load i64, ptr %106, align 8
  store i64 %107, ptr %105, align 8
  %108 = getelementptr inbounds i8, ptr %58, i64 -120
  %sunkaddr = getelementptr inbounds i8, ptr %59, i64 -120
  %109 = load i64, ptr %sunkaddr, align 8
  store i64 %109, ptr %108, align 8
  %110 = getelementptr inbounds i8, ptr %58, i64 -128
  %111 = getelementptr inbounds i8, ptr %59, i64 -128
  %.not25 = icmp ugt ptr %111, %36
  br i1 %.not25, label %57, label %.loopexit5

112:                                              ; preds = %117, %.preheader2
  %lsr.iv = phi i64 [ 0, %.preheader2 ], [ %lsr.iv.next, %117 ]
  %uglygep65 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep94 = getelementptr i8, ptr %uglygep65, i64 -120
  %113 = load ptr, ptr %uglygep94, align 8
  %114 = load ptr, ptr %59, align 8
  %115 = tail call i8 %5(ptr align 1 %6, ptr align 1 %113, ptr align 1 %114) #15
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %.preheader1

.preheader1:                                      ; preds = %112
  %uglygep95 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  store ptr %uglygep95, ptr %12, align 8
  %uglygep62 = getelementptr i8, ptr %58, i64 %lsr.iv
  store ptr %uglygep62, ptr %11, align 8
  %uglygep = getelementptr i8, ptr %58, i64 %lsr.iv
  br label %134

117:                                              ; preds = %112
  %sunkaddr140 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %118 = load i64, ptr %sunkaddr140, align 8
  %sunkaddr141 = getelementptr i8, ptr %58, i64 %lsr.iv
  store i64 %118, ptr %sunkaddr141, align 8
  %uglygep102 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep103 = getelementptr i8, ptr %uglygep102, i64 -8
  %uglygep92 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep93 = getelementptr i8, ptr %uglygep92, i64 -8
  %119 = load i64, ptr %uglygep93, align 8
  store i64 %119, ptr %uglygep103, align 8
  %uglygep104 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep105 = getelementptr i8, ptr %uglygep104, i64 -16
  %uglygep90 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep91 = getelementptr i8, ptr %uglygep90, i64 -16
  %120 = load i64, ptr %uglygep91, align 8
  store i64 %120, ptr %uglygep105, align 8
  %uglygep106 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep107 = getelementptr i8, ptr %uglygep106, i64 -24
  %uglygep88 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep89 = getelementptr i8, ptr %uglygep88, i64 -24
  %121 = load i64, ptr %uglygep89, align 8
  store i64 %121, ptr %uglygep107, align 8
  %uglygep124 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep125 = getelementptr i8, ptr %uglygep124, i64 -32
  %uglygep86 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep87 = getelementptr i8, ptr %uglygep86, i64 -32
  %122 = load i64, ptr %uglygep87, align 8
  store i64 %122, ptr %uglygep125, align 8
  %uglygep128 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep129 = getelementptr i8, ptr %uglygep128, i64 -40
  %uglygep84 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep85 = getelementptr i8, ptr %uglygep84, i64 -40
  %123 = load i64, ptr %uglygep85, align 8
  store i64 %123, ptr %uglygep129, align 8
  %uglygep126 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep127 = getelementptr i8, ptr %uglygep126, i64 -48
  %uglygep82 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep83 = getelementptr i8, ptr %uglygep82, i64 -48
  %124 = load i64, ptr %uglygep83, align 8
  store i64 %124, ptr %uglygep127, align 8
  %uglygep99 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep100 = getelementptr i8, ptr %uglygep99, i64 -56
  %uglygep80 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep81 = getelementptr i8, ptr %uglygep80, i64 -56
  %125 = load i64, ptr %uglygep81, align 8
  store i64 %125, ptr %uglygep100, align 8
  %uglygep122 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep123 = getelementptr i8, ptr %uglygep122, i64 -64
  %uglygep78 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep79 = getelementptr i8, ptr %uglygep78, i64 -64
  %126 = load i64, ptr %uglygep79, align 8
  store i64 %126, ptr %uglygep123, align 8
  %uglygep120 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep121 = getelementptr i8, ptr %uglygep120, i64 -72
  %uglygep76 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep77 = getelementptr i8, ptr %uglygep76, i64 -72
  %127 = load i64, ptr %uglygep77, align 8
  store i64 %127, ptr %uglygep121, align 8
  %uglygep118 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep119 = getelementptr i8, ptr %uglygep118, i64 -80
  %uglygep74 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep75 = getelementptr i8, ptr %uglygep74, i64 -80
  %128 = load i64, ptr %uglygep75, align 8
  store i64 %128, ptr %uglygep119, align 8
  %uglygep116 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep117 = getelementptr i8, ptr %uglygep116, i64 -88
  %uglygep72 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep73 = getelementptr i8, ptr %uglygep72, i64 -88
  %129 = load i64, ptr %uglygep73, align 8
  store i64 %129, ptr %uglygep117, align 8
  %uglygep114 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep115 = getelementptr i8, ptr %uglygep114, i64 -96
  %uglygep70 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 -96
  %130 = load i64, ptr %uglygep71, align 8
  store i64 %130, ptr %uglygep115, align 8
  %uglygep112 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep113 = getelementptr i8, ptr %uglygep112, i64 -104
  %uglygep68 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep69 = getelementptr i8, ptr %uglygep68, i64 -104
  %131 = load i64, ptr %uglygep69, align 8
  store i64 %131, ptr %uglygep113, align 8
  %uglygep110 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep111 = getelementptr i8, ptr %uglygep110, i64 -112
  %uglygep66 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv
  %uglygep67 = getelementptr i8, ptr %uglygep66, i64 -112
  %132 = load i64, ptr %uglygep67, align 8
  store i64 %132, ptr %uglygep111, align 8
  %uglygep108 = getelementptr i8, ptr %58, i64 %lsr.iv
  %uglygep109 = getelementptr i8, ptr %uglygep108, i64 -120
  %sunkaddr142 = getelementptr i8, ptr %uglygep65, i64 -120
  %133 = load i64, ptr %sunkaddr142, align 8
  store i64 %133, ptr %uglygep109, align 8
  %lsr.iv.next = add i64 %lsr.iv, -128
  %uglygep98 = getelementptr i8, ptr %.promoted13, i64 %lsr.iv.next
  %.not24 = icmp ugt ptr %uglygep98, %35
  br i1 %.not24, label %112, label %.loopexit3

134:                                              ; preds = %142, %.preheader1
  %lsr.iv130 = phi i64 [ -8, %.preheader1 ], [ %math, %142 ]
  %135 = phi ptr [ %143, %142 ], [ %uglygep, %.preheader1 ]
  %136 = load ptr, ptr %12, align 8
  %137 = load ptr, ptr %10, align 8
  %138 = getelementptr inbounds i8, ptr %137, i64 -8
  %139 = load ptr, ptr %136, align 8
  %140 = load ptr, ptr %138, align 8
  %141 = tail call i8 %5(ptr align 1 %6, ptr align 1 %139, ptr align 1 %140) #15
  %.not22 = icmp eq i8 %141, 1
  br i1 %.not22, label %151, label %145

142:                                              ; preds = %select.end138, %157, %145
  %143 = phi ptr [ %161, %157 ], [ %179, %select.end138 ], [ %149, %145 ]
  %144 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv130, i64 1)
  %math = extractvalue { i64, i1 } %144, 0
  %ov = extractvalue { i64, i1 } %144, 1
  br i1 %ov, label %.loopexit, label %134

145:                                              ; preds = %134
  %146 = load i64, ptr %137, align 8
  store i64 %146, ptr %135, align 8
  %147 = getelementptr inbounds i8, ptr %135, i64 -8
  %sunkaddr143 = getelementptr inbounds i8, ptr %137, i64 -8
  %148 = load i64, ptr %sunkaddr143, align 8
  store i64 %148, ptr %147, align 8
  %149 = getelementptr inbounds i8, ptr %135, i64 -16
  %150 = getelementptr inbounds i8, ptr %137, i64 -16
  store ptr %150, ptr %10, align 8
  br label %142

151:                                              ; preds = %134
  %152 = getelementptr inbounds i8, ptr %136, i64 -8
  %153 = load ptr, ptr %152, align 8
  %154 = load ptr, ptr %137, align 8
  %155 = tail call i8 %5(ptr align 1 %6, ptr align 1 %153, ptr align 1 %154) #15
  %156 = icmp eq i8 %155, 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %151
  %158 = load i64, ptr %136, align 8
  store i64 %158, ptr %135, align 8
  %159 = getelementptr inbounds i8, ptr %135, i64 -8
  %sunkaddr144 = getelementptr inbounds i8, ptr %136, i64 -8
  %160 = load i64, ptr %sunkaddr144, align 8
  store i64 %160, ptr %159, align 8
  %161 = getelementptr inbounds i8, ptr %135, i64 -16
  %162 = getelementptr inbounds i8, ptr %136, i64 -16
  store ptr %162, ptr %12, align 8
  br label %142

163:                                              ; preds = %151
  %164 = load ptr, ptr %136, align 8
  %165 = load ptr, ptr %137, align 8
  %166 = tail call i8 %5(ptr align 1 %6, ptr align 1 %164, ptr align 1 %165) #15
  %..frozen = freeze i8 %166
  %.not23 = icmp eq i8 %..frozen, 1
  br i1 %.not23, label %select.end136, label %select.false137

select.false137:                                  ; preds = %163
  br label %select.end136

select.end136:                                    ; preds = %select.false137, %163
  %. = phi i64 [ 0, %163 ], [ 8, %select.false137 ]
  %.1 = phi i64 [ 8, %163 ], [ 0, %select.false137 ]
  %167 = getelementptr inbounds i8, ptr %135, i64 -8
  %168 = getelementptr inbounds i8, ptr %167, i64 %.
  %169 = load i64, ptr %137, align 8
  store i64 %169, ptr %168, align 8
  store ptr %138, ptr %10, align 8
  %170 = getelementptr inbounds i8, ptr %167, i64 %.1
  %171 = load i64, ptr %136, align 8
  store i64 %171, ptr %170, align 8
  store ptr %152, ptr %12, align 8
  %sunkaddr145 = getelementptr inbounds i8, ptr %136, i64 -8
  %172 = load ptr, ptr %sunkaddr145, align 8
  %sunkaddr146 = getelementptr inbounds i8, ptr %137, i64 -8
  %173 = load ptr, ptr %sunkaddr146, align 8
  %174 = tail call i8 %5(ptr align 1 %6, ptr align 1 %172, ptr align 1 %173) #15
  %.2.frozen = freeze i8 %174
  %175 = icmp eq i8 %.2.frozen, 1
  br i1 %175, label %select.end138, label %select.false139

select.false139:                                  ; preds = %select.end136
  br label %select.end138

select.end138:                                    ; preds = %select.false139, %select.end136
  %.2 = phi ptr [ %12, %select.end136 ], [ %10, %select.false139 ]
  %176 = load ptr, ptr %.2, align 8
  %177 = load i64, ptr %176, align 8
  %sunkaddr147 = getelementptr inbounds i8, ptr %135, i64 -16
  store i64 %177, ptr %sunkaddr147, align 8
  %178 = getelementptr inbounds i8, ptr %176, i64 -8
  store ptr %178, ptr %.2, align 8
  %179 = getelementptr inbounds i8, ptr %135, i64 -24
  br label %142

._crit_edge.loopexit:                             ; preds = %select.end134
  %180 = getelementptr inbounds i8, ptr %192, i64 -24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %.loopexit6
  %181 = phi ptr [ %40, %.loopexit6 ], [ %.pre55.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %211, %._crit_edge.loopexit ]
  %182 = phi ptr [ %41, %.loopexit6 ], [ %.pre54.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %208, %._crit_edge.loopexit ]
  %.promoted22 = phi ptr [ %.promoted2253, %.loopexit6 ], [ %.promoted22.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %180, %._crit_edge.loopexit ]
  %183 = icmp uge ptr %182, %2
  %184 = icmp uge ptr %181, %0
  %185 = select i1 %183, i1 %184, i1 false
  br i1 %185, label %.lr.ph25.preheader, label %.preheader

.lr.ph25.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph25

.lr.ph:                                           ; preds = %select.end134, %.lr.ph.preheader
  store ptr %0, ptr %9, align 8
  store ptr %2, ptr %8, align 8
  %186 = call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16734(ptr nonnull align 8 %11, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %8, ptr nonnull align 8 %10, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  %.pre54.pre = load ptr, ptr %10, align 8
  br i1 %186, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %187

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted22.pre.pre = load ptr, ptr %11, align 8
  %.pre55.pre = load ptr, ptr %12, align 8
  br label %._crit_edge

187:                                              ; preds = %.lr.ph
  %188 = load ptr, ptr %12, align 8
  %189 = load ptr, ptr %188, align 8
  %190 = load ptr, ptr %.pre54.pre, align 8
  %191 = tail call i8 %5(ptr align 1 %6, ptr align 1 %189, ptr align 1 %190) #15
  %.3.frozen = freeze i8 %191
  %.not20 = icmp eq i8 %.3.frozen, 1
  br i1 %.not20, label %select.end132, label %select.false133

select.false133:                                  ; preds = %187
  br label %select.end132

select.end132:                                    ; preds = %select.false133, %187
  %.3 = phi i64 [ 0, %187 ], [ 8, %select.false133 ]
  %.4 = phi i64 [ 8, %187 ], [ 0, %select.false133 ]
  %192 = load ptr, ptr %11, align 8
  %193 = getelementptr inbounds i8, ptr %192, i64 -8
  %194 = getelementptr inbounds i8, ptr %193, i64 %.3
  %195 = load i64, ptr %.pre54.pre, align 8
  store i64 %195, ptr %194, align 8
  %196 = getelementptr inbounds i8, ptr %.pre54.pre, i64 -8
  store ptr %196, ptr %10, align 8
  %197 = getelementptr inbounds i8, ptr %193, i64 %.4
  %198 = load i64, ptr %188, align 8
  store i64 %198, ptr %197, align 8
  %199 = getelementptr inbounds i8, ptr %188, i64 -8
  store ptr %199, ptr %12, align 8
  %200 = load ptr, ptr %199, align 8
  %201 = load ptr, ptr %196, align 8
  %202 = tail call i8 %5(ptr align 1 %6, ptr align 1 %200, ptr align 1 %201) #15
  %.5.frozen = freeze i8 %202
  %203 = icmp eq i8 %.5.frozen, 1
  br i1 %203, label %select.end134, label %select.false135

select.false135:                                  ; preds = %select.end132
  br label %select.end134

select.end134:                                    ; preds = %select.false135, %select.end132
  %.5 = phi ptr [ %12, %select.end132 ], [ %10, %select.false135 ]
  %204 = load ptr, ptr %.5, align 8
  %205 = load i64, ptr %204, align 8
  %sunkaddr148 = getelementptr inbounds i8, ptr %192, i64 -16
  store i64 %205, ptr %sunkaddr148, align 8
  %206 = getelementptr inbounds i8, ptr %204, i64 -8
  store ptr %206, ptr %.5, align 8
  %207 = getelementptr inbounds i8, ptr %192, i64 -24
  store ptr %207, ptr %11, align 8
  %208 = load ptr, ptr %10, align 8
  %209 = ptrtoint ptr %208 to i64
  %210 = icmp ult i64 %43, %209
  %211 = load ptr, ptr %12, align 8
  %212 = ptrtoint ptr %211 to i64
  %213 = icmp ult i64 %45, %212
  %214 = select i1 %210, i1 %213, i1 false
  br i1 %214, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted26 = phi ptr [ %182, %._crit_edge ], [ %226, %select.end ]
  %.lcssa23 = phi ptr [ %.promoted22, %._crit_edge ], [ %225, %select.end ]
  store ptr %.lcssa23, ptr %11, align 8
  %.not1930 = icmp ult ptr %.promoted26, %2
  br i1 %.not1930, label %common.ret, label %.lr.ph31.preheader

.lr.ph31.preheader:                               ; preds = %.preheader
  br label %.lr.ph31

.lr.ph25:                                         ; preds = %select.end, %.lr.ph25.preheader
  %215 = phi ptr [ %228, %select.end ], [ %181, %.lr.ph25.preheader ]
  %216 = phi ptr [ %226, %select.end ], [ %182, %.lr.ph25.preheader ]
  %217 = phi ptr [ %225, %select.end ], [ %.promoted22, %.lr.ph25.preheader ]
  %218 = load ptr, ptr %215, align 8
  %219 = load ptr, ptr %216, align 8
  %220 = tail call i8 %5(ptr align 1 %6, ptr align 1 %218, ptr align 1 %219) #15
  %.6.frozen = freeze i8 %220
  %221 = icmp eq i8 %.6.frozen, 1
  br i1 %221, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph25
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph25
  %.6 = phi ptr [ %12, %.lr.ph25 ], [ %10, %select.false ]
  %222 = load ptr, ptr %.6, align 8
  %223 = load i64, ptr %222, align 8
  store i64 %223, ptr %217, align 8
  %224 = getelementptr inbounds i8, ptr %222, i64 -8
  store ptr %224, ptr %.6, align 8
  %225 = getelementptr inbounds i8, ptr %217, i64 -8
  %226 = load ptr, ptr %10, align 8
  %227 = icmp uge ptr %226, %2
  %228 = load ptr, ptr %12, align 8
  %229 = icmp uge ptr %228, %0
  %230 = select i1 %227, i1 %229, i1 false
  br i1 %230, label %.lr.ph25, label %.preheader

.lr.ph31:                                         ; preds = %.lr.ph31, %.lr.ph31.preheader
  %231 = phi ptr [ %235, %.lr.ph31 ], [ %.promoted26, %.lr.ph31.preheader ]
  %232 = phi ptr [ %234, %.lr.ph31 ], [ %.lcssa23, %.lr.ph31.preheader ]
  %233 = load i64, ptr %231, align 8
  store i64 %233, ptr %232, align 8
  %234 = getelementptr inbounds i8, ptr %232, i64 -8
  %235 = getelementptr inbounds i8, ptr %231, i64 -8
  %.not19 = icmp ult ptr %235, %2
  br i1 %.not19, label %common.ret, label %.lr.ph31
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.rotate_merge_block__anon_16512(ptr nonnull align 1 %0, ptr nonnull align 1 %1, i64 %2, i64 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = shl i64 %3, 3
  %9 = add i64 %8, -8
  %10 = getelementptr inbounds i8, ptr %0, i64 %9
  %11 = getelementptr inbounds i8, ptr %0, i64 %8
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %.not19 = icmp eq i8 %14, 1
  br i1 %.not19, label %.lr.ph.preheader, label %common.ret

.lr.ph.preheader:                                 ; preds = %7
  br label %.lr.ph

common.ret:                                       ; preds = %.critedge9, %39, %7
  ret void

.lr.ph:                                           ; preds = %.critedge9, %.lr.ph.preheader
  %15 = phi ptr [ %107, %.critedge9 ], [ %11, %.lr.ph.preheader ]
  %.tr422 = phi i64 [ %38, %.critedge9 ], [ %4, %.lr.ph.preheader ]
  %.tr321 = phi i64 [ %16, %.critedge9 ], [ %3, %.lr.ph.preheader ]
  %.tr20 = phi ptr [ %102, %.critedge9 ], [ %0, %.lr.ph.preheader ]
  %16 = lshr i64 %.tr321, 1
  %17 = sub nuw i64 %.tr321, %16
  %18 = shl nuw i64 %17, 3
  %19 = getelementptr i8, ptr %.tr20, i64 %18
  %20 = shl nuw i64 %.tr422, 3
  %21 = getelementptr inbounds i8, ptr %15, i64 %20
  %22 = icmp ugt i64 %.tr422, 1
  br i1 %22, label %.lr.ph.i.preheader, label %sort.monobound_binary_first__anon_16735.exit

.lr.ph.i.preheader:                               ; preds = %.lr.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.end, %.lr.ph.i.preheader
  %.02.i = phi i64 [ %28, %select.end ], [ %.tr422, %.lr.ph.i.preheader ]
  %.081.i = phi ptr [ %spec.select.i, %select.end ], [ %21, %.lr.ph.i.preheader ]
  %23 = lshr i64 %.02.i, 1
  %.neg.i = mul i64 %23, -8
  %24 = getelementptr inbounds i8, ptr %.081.i, i64 %.neg.i
  %25 = load ptr, ptr %19, align 8
  %26 = load ptr, ptr %24, align 8
  %27 = tail call i8 %5(ptr align 1 %6, ptr align 1 %25, ptr align 1 %26) #15
  %spec.select.i.frozen = freeze i8 %27
  %.not9.i = icmp eq i8 %spec.select.i.frozen, 1
  br i1 %.not9.i, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph.i
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph.i
  %spec.select.i = phi ptr [ %.081.i, %.lr.ph.i ], [ %24, %select.false ]
  %28 = sub nuw i64 %.02.i, %23
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %.lr.ph.i, label %sort.monobound_binary_first__anon_16735.exit

sort.monobound_binary_first__anon_16735.exit:     ; preds = %select.end, %.lr.ph
  %.08.lcssa.i = phi ptr [ %21, %.lr.ph ], [ %spec.select.i, %select.end ]
  %30 = getelementptr inbounds i8, ptr %.08.lcssa.i, i64 -8
  %31 = load ptr, ptr %19, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %5(ptr align 1 %6, ptr align 1 %31, ptr align 1 %32) #15
  %.not.i = icmp eq i8 %33, 1
  %spec.select10.i = select i1 %.not.i, ptr %.08.lcssa.i, ptr %30
  %34 = ptrtoint ptr %spec.select10.i to i64
  %35 = ptrtoint ptr %15 to i64
  %36 = sub nuw i64 %34, %35
  %37 = lshr i64 %36, 3
  %38 = sub nuw i64 %.tr422, %37
  %.not96 = icmp ult i64 %36, 8
  br i1 %.not96, label %39, label %40

39:                                               ; preds = %.critedge3, %87, %86, %mem.copyBackwards__anon_9784.exit, %sort.monobound_binary_first__anon_16735.exit
  %.not97 = icmp eq i64 %.tr422, %37
  br i1 %.not97, label %common.ret, label %88

40:                                               ; preds = %sort.monobound_binary_first__anon_16735.exit
  %41 = add nuw i64 %37, %17
  %.not99 = icmp ugt i64 %41, %2
  br i1 %.not99, label %78, label %42

42:                                               ; preds = %40
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %1, ptr nonnull align 1 %.tr20, i64 %18, i1 false)
  %43 = getelementptr inbounds i8, ptr %1, i64 %18
  %44 = and i64 %36, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %43, ptr nonnull align 1 %15, i64 %44, i1 false)
  %45 = shl i64 %41, 3
  %.not6.i = icmp ult i64 %.tr321, 2
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %42
  %46 = shl i64 %16, 3
  %min.iters.check = icmp eq i64 %46, 0
  br i1 %min.iters.check, label %.lr.ph.i103.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %uglygep = getelementptr i8, ptr %.tr20, i64 -1
  %47 = add i64 %.tr321, %37
  %48 = shl i64 %47, 3
  %uglygep22 = getelementptr i8, ptr %uglygep, i64 %48
  %49 = sub i64 1, %46
  %50 = getelementptr i8, ptr %uglygep22, i64 %49
  %51 = icmp ugt ptr %50, %uglygep22
  %uglygep23 = getelementptr i8, ptr %.tr20, i64 -1
  %52 = shl i64 %.tr321, 3
  %uglygep24 = getelementptr i8, ptr %uglygep23, i64 %52
  %53 = sub i64 1, %46
  %54 = getelementptr i8, ptr %uglygep24, i64 %53
  %55 = icmp ugt ptr %54, %uglygep24
  %56 = or i1 %51, %55
  br i1 %56, label %.lr.ph.i103.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %57 = ptrtoint ptr %.tr20 to i64
  %58 = add i64 %57, -1
  %59 = shl i64 %.tr321, 3
  %60 = add i64 %58, %59
  %61 = add i64 %.tr321, %37
  %62 = shl i64 %61, 3
  %63 = add i64 %58, %62
  %64 = sub i64 %60, %63
  %diff.check = icmp ult i64 %64, 32
  br i1 %diff.check, label %.lr.ph.i103.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check29 = icmp ult i64 %46, 32
  br i1 %min.iters.check29, label %vec.epilog.vector.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %46, -32
  %uglygep70 = getelementptr i8, ptr %.tr20, i64 -16
  %uglygep71 = getelementptr i8, ptr %uglygep70, i64 %48
  %uglygep75 = getelementptr i8, ptr %uglygep70, i64 %52
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv76 = phi ptr [ %uglygep77, %vector.body ], [ %uglygep75, %vector.ph ]
  %lsr.iv72 = phi ptr [ %uglygep73, %vector.body ], [ %uglygep71, %vector.ph ]
  %lsr.iv = phi i64 [ %lsr.iv.next, %vector.body ], [ %n.vec, %vector.ph ]
  %wide.load = load <16 x i8>, ptr %lsr.iv76, align 1
  %uglygep78 = getelementptr i8, ptr %lsr.iv76, i64 -16
  %wide.load30 = load <16 x i8>, ptr %uglygep78, align 1
  store <16 x i8> %wide.load, ptr %lsr.iv72, align 1
  %uglygep74 = getelementptr i8, ptr %lsr.iv72, i64 -16
  store <16 x i8> %wide.load30, ptr %uglygep74, align 1
  %lsr.iv.next = add i64 %lsr.iv, -32
  %uglygep73 = getelementptr i8, ptr %lsr.iv72, i64 -32
  %uglygep77 = getelementptr i8, ptr %lsr.iv76, i64 -32
  %65 = icmp eq i64 %lsr.iv.next, 0
  br i1 %65, label %middle.block, label %vector.body, !llvm.loop !522

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %46, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end36 = and i64 %46, 24
  %66 = and i64 %.tr321, 6
  %min.epilog.iters.check = icmp eq i64 %66, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i103.preheader, label %vec.epilog.vector.body.preheader

.lr.ph.i103.preheader:                            ; preds = %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end36, %vec.epilog.iter.check ], [ %46, %vector.scevcheck ], [ %46, %vector.memcheck ], [ %46, %iter.check ]
  %67 = mul i64 %.07.i.ph, -1
  %uglygep90 = getelementptr i8, ptr %.tr20, i64 -1
  %68 = shl i64 %.tr321, 3
  %69 = add i64 %.07.i.ph, %68
  %70 = sub i64 %69, %46
  %uglygep91 = getelementptr i8, ptr %uglygep90, i64 %70
  %71 = add i64 %.07.i.ph, %45
  %uglygep94 = getelementptr i8, ptr %uglygep90, i64 %71
  br label %.lr.ph.i103

vec.epilog.vector.body.preheader:                 ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %index38.ph = phi i64 [ 0, %vector.main.loop.iter.check ], [ %n.vec, %vec.epilog.iter.check ]
  %uglygep79 = getelementptr i8, ptr %.tr20, i64 -8
  %72 = sub i64 %48, %index38.ph
  %uglygep80 = getelementptr i8, ptr %uglygep79, i64 %72
  %73 = sub i64 %52, %index38.ph
  %uglygep83 = getelementptr i8, ptr %uglygep79, i64 %73
  %74 = sub i64 %index38.ph, %46
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.vector.body.preheader
  %lsr.iv86 = phi i64 [ %74, %vec.epilog.vector.body.preheader ], [ %lsr.iv.next87, %vec.epilog.vector.body ]
  %lsr.iv84 = phi ptr [ %uglygep83, %vec.epilog.vector.body.preheader ], [ %uglygep85, %vec.epilog.vector.body ]
  %lsr.iv81 = phi ptr [ %uglygep80, %vec.epilog.vector.body.preheader ], [ %uglygep82, %vec.epilog.vector.body ]
  %wide.load40 = load <8 x i8>, ptr %lsr.iv84, align 1
  store <8 x i8> %wide.load40, ptr %lsr.iv81, align 1
  %uglygep82 = getelementptr i8, ptr %lsr.iv81, i64 -8
  %uglygep85 = getelementptr i8, ptr %lsr.iv84, i64 -8
  %lsr.iv.next87 = add i64 %lsr.iv86, 8
  %75 = icmp eq i64 %lsr.iv.next87, 0
  br i1 %75, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.vector.body, !llvm.loop !523

.lr.ph.i103:                                      ; preds = %.lr.ph.i103, %.lr.ph.i103.preheader
  %lsr.iv95 = phi ptr [ %uglygep94, %.lr.ph.i103.preheader ], [ %uglygep96, %.lr.ph.i103 ]
  %lsr.iv92 = phi ptr [ %uglygep91, %.lr.ph.i103.preheader ], [ %uglygep93, %.lr.ph.i103 ]
  %lsr.iv88 = phi i64 [ %67, %.lr.ph.i103.preheader ], [ %math, %.lr.ph.i103 ]
  %76 = load i8, ptr %lsr.iv92, align 1
  store i8 %76, ptr %lsr.iv95, align 1
  %77 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %lsr.iv88, i64 1)
  %math = extractvalue { i64, i1 } %77, 0
  %ov = extractvalue { i64, i1 } %77, 1
  %uglygep93 = getelementptr i8, ptr %lsr.iv92, i64 -1
  %uglygep96 = getelementptr i8, ptr %lsr.iv95, i64 -1
  br i1 %ov, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i103, !llvm.loop !524

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i103, %vec.epilog.vector.body, %middle.block, %42
  tail call fastcc void @sort.cross_merge__anon_14865(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %17, i64 %37, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %39

78:                                               ; preds = %40
  %79 = add nuw i64 %37, %16
  tail call fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %19, i64 %79, ptr nonnull align 1 %1, i64 %2, i64 %16, i64 8)
  %80 = shl nuw nsw i64 %37, 1
  %81 = icmp ult i64 %80, %17
  %82 = shl nuw i64 %17, 1
  %83 = icmp ult i64 %82, %37
  %84 = select i1 %81, i1 true, i1 %83
  br i1 %84, label %85, label %.critedge3

85:                                               ; preds = %78
  %.not100 = icmp ugt i64 %37, %2
  br i1 %.not100, label %.critedge, label %86

86:                                               ; preds = %85
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %.tr20, i64 %41, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %39

.critedge:                                        ; preds = %85
  %.not101 = icmp ugt i64 %17, %2
  br i1 %.not101, label %.critedge3, label %87

87:                                               ; preds = %.critedge
  tail call fastcc void @sort.partial_forward_merge__anon_16736(ptr nonnull align 1 %.tr20, i64 %41, ptr nonnull align 1 %1, i64 %2, i64 %17, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %39

.critedge3:                                       ; preds = %.critedge, %78
  tail call fastcc void @sort.rotate_merge_block__anon_16512(ptr nonnull align 1 %.tr20, ptr nonnull align 1 %1, i64 %2, i64 %17, i64 %37, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br label %39

88:                                               ; preds = %39
  %89 = shl nuw i64 %38, 1
  %90 = icmp ult i64 %89, %16
  %91 = and i64 %.tr321, -2
  %92 = icmp ult i64 %91, %38
  %93 = or i1 %92, %90
  %94 = icmp ugt i64 %38, %2
  %not. = xor i1 %93, true
  %or.cond12 = select i1 %not., i1 true, i1 %94
  %.pre = add nuw i64 %38, %16
  %.not98 = icmp ugt i64 %.pre, %2
  %or.cond = select i1 %or.cond12, i1 %.not98, i1 false
  br i1 %or.cond, label %98, label %.critedge7

.critedge7:                                       ; preds = %88
  %95 = add nuw i64 %37, %17
  %96 = shl nuw i64 %95, 3
  %97 = getelementptr inbounds i8, ptr %.tr20, i64 %96
  tail call fastcc void @sort.partial_backwards_merge__anon_16511(ptr nonnull align 1 %97, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %16, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void

98:                                               ; preds = %88
  %99 = icmp ule i64 %17, %2
  %or.cond14 = select i1 %93, i1 %99, i1 false
  %100 = add nuw i64 %37, %17
  %101 = shl nuw i64 %100, 3
  %102 = getelementptr inbounds i8, ptr %.tr20, i64 %101
  br i1 %or.cond14, label %103, label %.critedge9

103:                                              ; preds = %98
  tail call fastcc void @sort.partial_forward_merge__anon_16736(ptr nonnull align 1 %102, i64 %.pre, ptr nonnull align 1 %1, i64 %2, i64 %16, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void

.critedge9:                                       ; preds = %98
  %104 = shl i64 %16, 3
  %105 = add i64 %104, -8
  %106 = getelementptr inbounds i8, ptr %102, i64 %105
  %107 = getelementptr inbounds i8, ptr %102, i64 %104
  %108 = load ptr, ptr %106, align 8
  %109 = load ptr, ptr %107, align 8
  %110 = tail call i8 %5(ptr align 1 %6, ptr align 1 %108, ptr align 1 %109) #15
  %.not = icmp eq i8 %110, 1
  br i1 %.not, label %.lr.ph, label %common.ret
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.median_of_nine__anon_16513(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr nocapture nonnull readonly align 4 %6, ptr nonnull align 1 %7) unnamed_addr #4 {
  %9 = alloca [96 x i8], align 16
  %10 = alloca [96 x i8], align 16
  %11 = alloca [96 x i8], align 16
  %12 = alloca [864 x i8], align 16
  %13 = udiv i64 %1, 9
  %14 = mul nuw i64 %13, %4
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %0) #15
  %15 = getelementptr inbounds i8, ptr %0, i64 %14
  %16 = getelementptr inbounds i8, ptr %12, i64 %4
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %15) #15
  %17 = getelementptr inbounds i8, ptr %15, i64 %14
  %18 = shl nuw i64 %4, 1
  %19 = getelementptr inbounds i8, ptr %12, i64 %18
  call void %5(ptr nonnull align 1 %19, ptr nonnull align 1 %17) #15
  %20 = getelementptr inbounds i8, ptr %17, i64 %14
  %21 = mul nuw i64 %4, 3
  %22 = getelementptr inbounds i8, ptr %12, i64 %21
  call void %5(ptr nonnull align 1 %22, ptr nonnull align 1 %20) #15
  %23 = getelementptr inbounds i8, ptr %20, i64 %14
  %24 = shl nuw i64 %4, 2
  %25 = getelementptr inbounds i8, ptr %12, i64 %24
  call void %5(ptr nonnull align 1 %25, ptr nonnull align 1 %23) #15
  %26 = getelementptr inbounds i8, ptr %23, i64 %14
  %27 = mul nuw i64 %4, 5
  %28 = getelementptr inbounds i8, ptr %12, i64 %27
  call void %5(ptr nonnull align 1 %28, ptr nonnull align 1 %26) #15
  %29 = getelementptr inbounds i8, ptr %26, i64 %14
  %30 = mul nuw i64 %4, 6
  %31 = getelementptr inbounds i8, ptr %12, i64 %30
  call void %5(ptr nonnull align 1 %31, ptr align 1 %29) #15
  %32 = getelementptr inbounds i8, ptr %29, i64 %14
  %33 = mul nuw i64 %4, 7
  %34 = getelementptr inbounds i8, ptr %12, i64 %33
  call void %5(ptr nonnull align 1 %34, ptr align 1 %32) #15
  %35 = getelementptr inbounds i8, ptr %32, i64 %14
  %36 = shl nuw i64 %4, 3
  %37 = getelementptr inbounds i8, ptr %12, i64 %36
  call void %5(ptr nonnull align 1 %37, ptr align 1 %35) #15
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #15
  %38 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #15
  %.not.i = icmp eq i8 %38, 1
  %..i = select i1 %.not.i, i64 %4, i64 0
  %.1.i = select i1 %.not.i, i64 0, i64 %4
  %39 = getelementptr inbounds i8, ptr %12, i64 %.1.i
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %39) #15
  %40 = getelementptr inbounds i8, ptr %12, i64 %..i
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %40) #15
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %9) #15
  %41 = shl nuw i64 %4, 1
  %42 = getelementptr inbounds i8, ptr %12, i64 %41
  %43 = getelementptr inbounds i8, ptr %42, i64 %4
  %44 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #15
  %.not26.i = icmp eq i8 %44, 1
  %.2.i = select i1 %.not26.i, i64 %4, i64 0
  %.3.i = select i1 %.not26.i, i64 0, i64 %4
  %45 = getelementptr inbounds i8, ptr %42, i64 %.3.i
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %45) #15
  %46 = getelementptr inbounds i8, ptr %42, i64 %.2.i
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %46) #15
  call void %5(ptr nonnull align 1 %43, ptr nonnull align 1 %9) #15
  %47 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #15
  %.not27.i = icmp eq i8 %47, 1
  %48 = select i1 %.not27.i, i64 0, i64 %41
  %49 = getelementptr inbounds i8, ptr %12, i64 %48
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %49) #15
  %50 = getelementptr inbounds i8, ptr %16, i64 %41
  %51 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %50) #15
  %52 = icmp eq i8 %51, 1
  %53 = select i1 %52, i64 %41, i64 0
  %54 = getelementptr inbounds i8, ptr %16, i64 %53
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %54) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  %55 = shl nuw i64 %4, 2
  %56 = getelementptr inbounds i8, ptr %12, i64 %55
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #15
  %57 = getelementptr inbounds i8, ptr %56, i64 %4
  %58 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %57) #15
  %.not.i3 = icmp eq i8 %58, 1
  %..i4 = select i1 %.not.i3, i64 %4, i64 0
  %.1.i5 = select i1 %.not.i3, i64 0, i64 %4
  %59 = getelementptr inbounds i8, ptr %56, i64 %.1.i5
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %59) #15
  %60 = getelementptr inbounds i8, ptr %56, i64 %..i4
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %60) #15
  call void %5(ptr nonnull align 1 %57, ptr nonnull align 1 %9) #15
  %61 = getelementptr inbounds i8, ptr %56, i64 %41
  %62 = getelementptr inbounds i8, ptr %61, i64 %4
  %63 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %61, ptr nonnull align 1 %62) #15
  %.not26.i6 = icmp eq i8 %63, 1
  %.2.i7 = select i1 %.not26.i6, i64 %4, i64 0
  %.3.i8 = select i1 %.not26.i6, i64 0, i64 %4
  %64 = getelementptr inbounds i8, ptr %61, i64 %.3.i8
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %64) #15
  %65 = getelementptr inbounds i8, ptr %61, i64 %.2.i7
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %65) #15
  call void %5(ptr nonnull align 1 %62, ptr nonnull align 1 %9) #15
  %66 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %61) #15
  %.not27.i9 = icmp eq i8 %66, 1
  %67 = select i1 %.not27.i9, i64 0, i64 %41
  %68 = getelementptr inbounds i8, ptr %56, i64 %67
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %68) #15
  %69 = getelementptr inbounds i8, ptr %57, i64 %41
  %70 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %57, ptr nonnull align 1 %69) #15
  %71 = icmp eq i8 %70, 1
  %72 = select i1 %71, i64 %41, i64 0
  %73 = getelementptr inbounds i8, ptr %57, i64 %72
  call void %5(ptr nonnull align 1 %57, ptr nonnull align 1 %73) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %28) #15
  %74 = shl nuw i64 %4, 3
  %75 = getelementptr inbounds i8, ptr %12, i64 %74
  call void %5(ptr nonnull align 1 %22, ptr nonnull align 1 %75) #15
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %9)
  call void %6(ptr align 1 %3, i64 4) #15
  %76 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #15
  %.not.i10 = icmp eq i8 %76, 1
  %..i11 = select i1 %.not.i10, i64 %4, i64 0
  %.1.i12 = select i1 %.not.i10, i64 0, i64 %4
  %77 = getelementptr inbounds i8, ptr %12, i64 %.1.i12
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %77) #15
  %78 = getelementptr inbounds i8, ptr %12, i64 %..i11
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %78) #15
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %9) #15
  %79 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %42, ptr nonnull align 1 %43) #15
  %.not26.i13 = icmp eq i8 %79, 1
  %.2.i14 = select i1 %.not26.i13, i64 %4, i64 0
  %.3.i15 = select i1 %.not26.i13, i64 0, i64 %4
  %80 = getelementptr inbounds i8, ptr %42, i64 %.3.i15
  call void %5(ptr nonnull align 1 %9, ptr nonnull align 1 %80) #15
  %81 = getelementptr inbounds i8, ptr %42, i64 %.2.i14
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %81) #15
  call void %5(ptr nonnull align 1 %43, ptr nonnull align 1 %9) #15
  %82 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #15
  %.not27.i16 = icmp eq i8 %82, 1
  %83 = select i1 %.not27.i16, i64 0, i64 %41
  %84 = getelementptr inbounds i8, ptr %12, i64 %83
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %84) #15
  %85 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %50) #15
  %86 = icmp eq i8 %85, 1
  %87 = select i1 %86, i64 %41, i64 0
  %88 = getelementptr inbounds i8, ptr %16, i64 %87
  call void %5(ptr nonnull align 1 %16, ptr nonnull align 1 %88) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %9)
  call void %5(ptr nonnull align 1 %12, ptr nonnull align 1 %31) #15
  call void %6(ptr align 1 %3, i64 3) #15
  %89 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %16) #15
  %90 = icmp eq i8 %89, 1
  %91 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %12, ptr nonnull align 1 %42) #15
  %92 = icmp ne i8 %91, 1
  %93 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %16, ptr nonnull align 1 %42) #15
  %94 = icmp eq i8 %93, 1
  %95 = xor i1 %90, %92
  %96 = xor i1 %90, %94
  %97 = zext i1 %96 to i64
  %98 = zext i1 %95 to i64
  %99 = add nuw nsw i64 %97, %98
  %100 = mul nuw i64 %99, %4
  %101 = getelementptr inbounds i8, ptr %12, i64 %100
  call void %5(ptr nonnull align 1 %7, ptr nonnull align 1 %101) #15
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16515(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9) unnamed_addr #4 {
  tail call void %9(ptr align 1 %6, i64 %4) #15
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %10
  %11 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %11, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.0142 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.0123141 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.0135140 = phi ptr [ %43, %.cont81 ], [ %2, %.cont81.preheader ]
  %12 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135140) #15
  %13 = icmp eq i8 %12, 1
  %.sroa.speculated77 = select i1 %13, ptr %.0142, ptr %.0123141
  tail call void %8(ptr align 1 %.sroa.speculated77, ptr align 1 %.0135140) #15
  %14 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 %7
  %.0123. = select i1 %13, ptr %.0123141, ptr %14
  %..0 = select i1 %13, ptr %14, ptr %.0142
  %15 = getelementptr inbounds i8, ptr %.0135140, i64 %7
  %16 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %15) #15
  %17 = icmp eq i8 %16, 1
  %.sroa.speculated68 = select i1 %17, ptr %..0, ptr %.0123.
  tail call void %8(ptr align 1 %.sroa.speculated68, ptr align 1 %15) #15
  %18 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 %7
  %.2125 = select i1 %17, ptr %.0123., ptr %18
  %.2 = select i1 %17, ptr %18, ptr %..0
  %19 = getelementptr inbounds i8, ptr %15, i64 %7
  %20 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %19) #15
  %21 = icmp eq i8 %20, 1
  %.sroa.speculated59 = select i1 %21, ptr %.2, ptr %.2125
  tail call void %8(ptr align 1 %.sroa.speculated59, ptr align 1 %19) #15
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 %7
  %.3126 = select i1 %21, ptr %.2125, ptr %22
  %.3 = select i1 %21, ptr %22, ptr %.2
  %23 = getelementptr inbounds i8, ptr %19, i64 %7
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %23) #15
  %25 = icmp eq i8 %24, 1
  %.sroa.speculated50 = select i1 %25, ptr %.3, ptr %.3126
  tail call void %8(ptr align 1 %.sroa.speculated50, ptr align 1 %23) #15
  %26 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %7
  %.4127 = select i1 %25, ptr %.3126, ptr %26
  %.4 = select i1 %25, ptr %26, ptr %.3
  %27 = getelementptr inbounds i8, ptr %23, i64 %7
  %28 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %27) #15
  %29 = icmp eq i8 %28, 1
  %.sroa.speculated41 = select i1 %29, ptr %.4, ptr %.4127
  tail call void %8(ptr align 1 %.sroa.speculated41, ptr align 1 %27) #15
  %30 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %7
  %.5128 = select i1 %29, ptr %.4127, ptr %30
  %.5 = select i1 %29, ptr %30, ptr %.4
  %31 = getelementptr inbounds i8, ptr %27, i64 %7
  %32 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %31) #15
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated32 = select i1 %33, ptr %.5, ptr %.5128
  tail call void %8(ptr align 1 %.sroa.speculated32, ptr align 1 %31) #15
  %34 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 %7
  %.6129 = select i1 %33, ptr %.5128, ptr %34
  %.6 = select i1 %33, ptr %34, ptr %.5
  %35 = getelementptr inbounds i8, ptr %31, i64 %7
  %36 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %35) #15
  %37 = icmp eq i8 %36, 1
  %.sroa.speculated23 = select i1 %37, ptr %.6, ptr %.6129
  tail call void %8(ptr align 1 %.sroa.speculated23, ptr align 1 %35) #15
  %38 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 %7
  %.7130 = select i1 %37, ptr %.6129, ptr %38
  %.7 = select i1 %37, ptr %38, ptr %.6
  %39 = getelementptr inbounds i8, ptr %35, i64 %7
  %40 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %39) #15
  %41 = icmp eq i8 %40, 1
  %.sroa.speculated14 = select i1 %41, ptr %.7, ptr %.7130
  tail call void %8(ptr align 1 %.sroa.speculated14, ptr align 1 %39) #15
  %42 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 %7
  %.8131 = select i1 %41, ptr %.7130, ptr %42
  %.8 = select i1 %41, ptr %42, ptr %.7
  %43 = getelementptr inbounds i8, ptr %39, i64 %7
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %10
  %.0135.lcssa = phi ptr [ %2, %10 ], [ %43, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %10 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %10 ], [ %.8, %.cont81 ]
  %44 = and i64 %4, 7
  %.not152 = icmp eq i64 %44, 0
  br i1 %.not152, label %._crit_edge149, label %.cont

.cont:                                            ; preds = %._crit_edge
  %45 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135.lcssa) #15
  %46 = icmp eq i8 %45, 1
  %.sroa.speculated = select i1 %46, ptr %.0.lcssa, ptr %.0123.lcssa
  tail call void %8(ptr align 1 %.sroa.speculated, ptr align 1 %.0135.lcssa) #15
  %47 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %7
  %.9132. = select i1 %46, ptr %.0123.lcssa, ptr %47
  %..9 = select i1 %46, ptr %47, ptr %.0.lcssa
  %exitcond153.not = icmp eq i64 %44, 1
  br i1 %exitcond153.not, label %._crit_edge149, label %.cont.1

.cont.1:                                          ; preds = %.cont
  %48 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 %7
  %49 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %48) #15
  %50 = icmp eq i8 %49, 1
  %.sroa.speculated.1 = select i1 %50, ptr %..9, ptr %.9132.
  tail call void %8(ptr align 1 %.sroa.speculated.1, ptr align 1 %48) #15
  %51 = getelementptr inbounds i8, ptr %.sroa.speculated.1, i64 %7
  %.9132..1 = select i1 %50, ptr %.9132., ptr %51
  %..9.1 = select i1 %50, ptr %51, ptr %..9
  %exitcond153.not.1 = icmp eq i64 %44, 2
  br i1 %exitcond153.not.1, label %._crit_edge149, label %.cont.2

.cont.2:                                          ; preds = %.cont.1
  %52 = getelementptr inbounds i8, ptr %48, i64 %7
  %53 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %52) #15
  %54 = icmp eq i8 %53, 1
  %.sroa.speculated.2 = select i1 %54, ptr %..9.1, ptr %.9132..1
  tail call void %8(ptr align 1 %.sroa.speculated.2, ptr align 1 %52) #15
  %55 = getelementptr inbounds i8, ptr %.sroa.speculated.2, i64 %7
  %.9132..2 = select i1 %54, ptr %.9132..1, ptr %55
  %..9.2 = select i1 %54, ptr %55, ptr %..9.1
  %exitcond153.not.2 = icmp eq i64 %44, 3
  br i1 %exitcond153.not.2, label %._crit_edge149, label %.cont.3

.cont.3:                                          ; preds = %.cont.2
  %56 = getelementptr inbounds i8, ptr %52, i64 %7
  %57 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %56) #15
  %58 = icmp eq i8 %57, 1
  %.sroa.speculated.3 = select i1 %58, ptr %..9.2, ptr %.9132..2
  tail call void %8(ptr align 1 %.sroa.speculated.3, ptr align 1 %56) #15
  %59 = getelementptr inbounds i8, ptr %.sroa.speculated.3, i64 %7
  %.9132..3 = select i1 %58, ptr %.9132..2, ptr %59
  %..9.3 = select i1 %58, ptr %59, ptr %..9.2
  %exitcond153.not.3 = icmp eq i64 %44, 4
  br i1 %exitcond153.not.3, label %._crit_edge149, label %.cont.4

.cont.4:                                          ; preds = %.cont.3
  %60 = getelementptr inbounds i8, ptr %56, i64 %7
  %61 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %60) #15
  %62 = icmp eq i8 %61, 1
  %.sroa.speculated.4 = select i1 %62, ptr %..9.3, ptr %.9132..3
  tail call void %8(ptr align 1 %.sroa.speculated.4, ptr align 1 %60) #15
  %63 = getelementptr inbounds i8, ptr %.sroa.speculated.4, i64 %7
  %.9132..4 = select i1 %62, ptr %.9132..3, ptr %63
  %..9.4 = select i1 %62, ptr %63, ptr %..9.3
  %exitcond153.not.4 = icmp eq i64 %44, 5
  br i1 %exitcond153.not.4, label %._crit_edge149, label %.cont.5

.cont.5:                                          ; preds = %.cont.4
  %64 = getelementptr inbounds i8, ptr %60, i64 %7
  %65 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %64) #15
  %66 = icmp eq i8 %65, 1
  %.sroa.speculated.5 = select i1 %66, ptr %..9.4, ptr %.9132..4
  tail call void %8(ptr align 1 %.sroa.speculated.5, ptr align 1 %64) #15
  %67 = getelementptr inbounds i8, ptr %.sroa.speculated.5, i64 %7
  %.9132..5 = select i1 %66, ptr %.9132..4, ptr %67
  %..9.5 = select i1 %66, ptr %67, ptr %..9.4
  %exitcond153.not.5 = icmp eq i64 %44, 6
  br i1 %exitcond153.not.5, label %._crit_edge149, label %.cont.6

.cont.6:                                          ; preds = %.cont.5
  %68 = getelementptr inbounds i8, ptr %64, i64 %7
  %69 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %68) #15
  %70 = icmp eq i8 %69, 1
  %.sroa.speculated.6 = select i1 %70, ptr %..9.5, ptr %.9132..5
  tail call void %8(ptr align 1 %.sroa.speculated.6, ptr align 1 %68) #15
  %71 = getelementptr inbounds i8, ptr %.sroa.speculated.6, i64 %7
  %.9132..6 = select i1 %70, ptr %.9132..5, ptr %71
  %..9.6 = select i1 %70, ptr %71, ptr %..9.5
  br label %._crit_edge149

._crit_edge149:                                   ; preds = %.cont.6, %.cont.5, %.cont.4, %.cont.3, %.cont.2, %.cont.1, %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ], [ %.9132..1, %.cont.1 ], [ %.9132..2, %.cont.2 ], [ %.9132..3, %.cont.3 ], [ %.9132..4, %.cont.4 ], [ %.9132..5, %.cont.5 ], [ %.9132..6, %.cont.6 ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ], [ %..9.1, %.cont.1 ], [ %..9.2, %.cont.2 ], [ %..9.3, %.cont.3 ], [ %..9.4, %.cont.4 ], [ %..9.5, %.cont.5 ], [ %..9.6, %.cont.6 ]
  %72 = ptrtoint ptr %.9.lcssa to i64
  %73 = ptrtoint ptr %0 to i64
  %74 = sub nuw i64 %72, %73
  %75 = udiv i64 %74, %7
  %76 = ptrtoint ptr %.9132.lcssa to i64
  %77 = ptrtoint ptr %1 to i64
  %78 = sub nuw i64 %76, %77
  %79 = udiv i64 %78, %7
  %80 = mul nuw i64 %75, %7
  %81 = getelementptr inbounds i8, ptr %0, i64 %80
  %82 = mul nuw i64 %79, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %81, ptr nonnull align 1 %1, i64 %82, i1 false)
  %83 = lshr i64 %75, 4
  %84 = icmp ule i64 %79, %83
  %85 = icmp ult i64 %75, 97
  %86 = or i1 %85, %84
  br i1 %86, label %87, label %94

common.ret:                                       ; preds = %90
  ret void

87:                                               ; preds = %._crit_edge149
  %88 = icmp ult i64 %75, 96
  br i1 %88, label %89, label %90

89:                                               ; preds = %87
  tail call fastcc void @sort.tail_swap__anon_14832(ptr nonnull align 1 %0, i64 %75, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void

90:                                               ; preds = %87
  %91 = tail call fastcc i1 @sort.quad_swap__anon_14834(ptr nonnull align 1 %0, i64 %75, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %91, label %92, label %common.ret

92:                                               ; preds = %90
  %93 = tail call fastcc i64 @sort.quad_merge__anon_14835(ptr nonnull align 1 %0, i64 %75, ptr nonnull align 1 %1, i64 %75, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  tail call fastcc void @sort.rotate_merge__anon_14836(ptr nonnull align 1 %0, i64 %75, ptr nonnull align 1 %1, i64 %75, i64 %93, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void

94:                                               ; preds = %._crit_edge149
  tail call fastcc void @sort.flux_partition__anon_14854(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %75, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.median_of_nine__anon_16521(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull readonly align 4 %2, ptr align 1 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr nonnull align 1 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 16
  %9 = alloca [96 x i8], align 16
  %10 = alloca [96 x i8], align 16
  %11 = alloca [864 x i8], align 16
  %12 = udiv i64 %1, 9
  %13 = mul nuw i64 %12, %4
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %0) #15
  %14 = getelementptr inbounds i8, ptr %0, i64 %13
  %15 = getelementptr inbounds i8, ptr %11, i64 %4
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %14) #15
  %16 = getelementptr inbounds i8, ptr %14, i64 %13
  %17 = shl nuw i64 %4, 1
  %18 = getelementptr inbounds i8, ptr %11, i64 %17
  call void %5(ptr nonnull align 1 %18, ptr nonnull align 1 %16) #15
  %19 = getelementptr inbounds i8, ptr %16, i64 %13
  %20 = mul nuw i64 %4, 3
  %21 = getelementptr inbounds i8, ptr %11, i64 %20
  call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %19) #15
  %22 = getelementptr inbounds i8, ptr %19, i64 %13
  %23 = shl nuw i64 %4, 2
  %24 = getelementptr inbounds i8, ptr %11, i64 %23
  call void %5(ptr nonnull align 1 %24, ptr nonnull align 1 %22) #15
  %25 = getelementptr inbounds i8, ptr %22, i64 %13
  %26 = mul nuw i64 %4, 5
  %27 = getelementptr inbounds i8, ptr %11, i64 %26
  call void %5(ptr nonnull align 1 %27, ptr nonnull align 1 %25) #15
  %28 = getelementptr inbounds i8, ptr %25, i64 %13
  %29 = mul nuw i64 %4, 6
  %30 = getelementptr inbounds i8, ptr %11, i64 %29
  call void %5(ptr nonnull align 1 %30, ptr align 1 %28) #15
  %31 = getelementptr inbounds i8, ptr %28, i64 %13
  %32 = mul nuw i64 %4, 7
  %33 = getelementptr inbounds i8, ptr %11, i64 %32
  call void %5(ptr nonnull align 1 %33, ptr align 1 %31) #15
  %34 = getelementptr inbounds i8, ptr %31, i64 %13
  %35 = shl nuw i64 %4, 3
  %36 = getelementptr inbounds i8, ptr %11, i64 %35
  call void %5(ptr nonnull align 1 %36, ptr align 1 %34) #15
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %37 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #15
  %.not.i = icmp eq i8 %37, 1
  %..i = select i1 %.not.i, i64 %4, i64 0
  %.1.i = select i1 %.not.i, i64 0, i64 %4
  %38 = getelementptr inbounds i8, ptr %11, i64 %.1.i
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %38) #15
  %39 = getelementptr inbounds i8, ptr %11, i64 %..i
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %39) #15
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %8) #15
  %40 = shl nuw i64 %4, 1
  %41 = getelementptr inbounds i8, ptr %11, i64 %40
  %42 = getelementptr inbounds i8, ptr %41, i64 %4
  %43 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %41, ptr nonnull align 1 %42) #15
  %.not26.i = icmp eq i8 %43, 1
  %.2.i = select i1 %.not26.i, i64 %4, i64 0
  %.3.i = select i1 %.not26.i, i64 0, i64 %4
  %44 = getelementptr inbounds i8, ptr %41, i64 %.3.i
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %44) #15
  %45 = getelementptr inbounds i8, ptr %41, i64 %.2.i
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %45) #15
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %8) #15
  %46 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #15
  %.not27.i = icmp eq i8 %46, 1
  %47 = select i1 %.not27.i, i64 0, i64 %40
  %48 = getelementptr inbounds i8, ptr %11, i64 %47
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %48) #15
  %49 = getelementptr inbounds i8, ptr %15, i64 %40
  %50 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %49) #15
  %51 = icmp eq i8 %50, 1
  %52 = select i1 %51, i64 %40, i64 0
  %53 = getelementptr inbounds i8, ptr %15, i64 %52
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %53) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  %54 = shl nuw i64 %4, 2
  %55 = getelementptr inbounds i8, ptr %11, i64 %54
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %56 = getelementptr inbounds i8, ptr %55, i64 %4
  %57 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %55, ptr nonnull align 1 %56) #15
  %.not.i3 = icmp eq i8 %57, 1
  %..i4 = select i1 %.not.i3, i64 %4, i64 0
  %.1.i5 = select i1 %.not.i3, i64 0, i64 %4
  %58 = getelementptr inbounds i8, ptr %55, i64 %.1.i5
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %58) #15
  %59 = getelementptr inbounds i8, ptr %55, i64 %..i4
  call void %5(ptr nonnull align 1 %55, ptr nonnull align 1 %59) #15
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %8) #15
  %60 = getelementptr inbounds i8, ptr %55, i64 %40
  %61 = getelementptr inbounds i8, ptr %60, i64 %4
  %62 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %60, ptr nonnull align 1 %61) #15
  %.not26.i6 = icmp eq i8 %62, 1
  %.2.i7 = select i1 %.not26.i6, i64 %4, i64 0
  %.3.i8 = select i1 %.not26.i6, i64 0, i64 %4
  %63 = getelementptr inbounds i8, ptr %60, i64 %.3.i8
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %63) #15
  %64 = getelementptr inbounds i8, ptr %60, i64 %.2.i7
  call void %5(ptr nonnull align 1 %60, ptr nonnull align 1 %64) #15
  call void %5(ptr nonnull align 1 %61, ptr nonnull align 1 %8) #15
  %65 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %55, ptr nonnull align 1 %60) #15
  %.not27.i9 = icmp eq i8 %65, 1
  %66 = select i1 %.not27.i9, i64 0, i64 %40
  %67 = getelementptr inbounds i8, ptr %55, i64 %66
  call void %5(ptr nonnull align 1 %60, ptr nonnull align 1 %67) #15
  %68 = getelementptr inbounds i8, ptr %56, i64 %40
  %69 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %56, ptr nonnull align 1 %68) #15
  %70 = icmp eq i8 %69, 1
  %71 = select i1 %70, i64 %40, i64 0
  %72 = getelementptr inbounds i8, ptr %56, i64 %71
  call void %5(ptr nonnull align 1 %56, ptr nonnull align 1 %72) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %27) #15
  %73 = shl nuw i64 %4, 3
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  call void %5(ptr nonnull align 1 %21, ptr nonnull align 1 %74) #15
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %8)
  %75 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #15
  %.not.i10 = icmp eq i8 %75, 1
  %..i11 = select i1 %.not.i10, i64 %4, i64 0
  %.1.i12 = select i1 %.not.i10, i64 0, i64 %4
  %76 = getelementptr inbounds i8, ptr %11, i64 %.1.i12
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %76) #15
  %77 = getelementptr inbounds i8, ptr %11, i64 %..i11
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %77) #15
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %8) #15
  %78 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %41, ptr nonnull align 1 %42) #15
  %.not26.i13 = icmp eq i8 %78, 1
  %.2.i14 = select i1 %.not26.i13, i64 %4, i64 0
  %.3.i15 = select i1 %.not26.i13, i64 0, i64 %4
  %79 = getelementptr inbounds i8, ptr %41, i64 %.3.i15
  call void %5(ptr nonnull align 1 %8, ptr nonnull align 1 %79) #15
  %80 = getelementptr inbounds i8, ptr %41, i64 %.2.i14
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %80) #15
  call void %5(ptr nonnull align 1 %42, ptr nonnull align 1 %8) #15
  %81 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #15
  %.not27.i16 = icmp eq i8 %81, 1
  %82 = select i1 %.not27.i16, i64 0, i64 %40
  %83 = getelementptr inbounds i8, ptr %11, i64 %82
  call void %5(ptr nonnull align 1 %41, ptr nonnull align 1 %83) #15
  %84 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %49) #15
  %85 = icmp eq i8 %84, 1
  %86 = select i1 %85, i64 %40, i64 0
  %87 = getelementptr inbounds i8, ptr %15, i64 %86
  call void %5(ptr nonnull align 1 %15, ptr nonnull align 1 %87) #15
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %8)
  call void %5(ptr nonnull align 1 %11, ptr nonnull align 1 %30) #15
  %88 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %15) #15
  %89 = icmp eq i8 %88, 1
  %90 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %11, ptr nonnull align 1 %41) #15
  %91 = icmp ne i8 %90, 1
  %92 = call i8 %2(ptr align 1 %3, ptr nonnull align 1 %15, ptr nonnull align 1 %41) #15
  %93 = icmp eq i8 %92, 1
  %94 = xor i1 %89, %91
  %95 = xor i1 %89, %93
  %96 = zext i1 %95 to i64
  %97 = zext i1 %94 to i64
  %98 = add nuw nsw i64 %96, %97
  %99 = mul nuw i64 %98, %4
  %100 = getelementptr inbounds i8, ptr %11, i64 %99
  call void %5(ptr nonnull align 1 %6, ptr nonnull align 1 %100) #15
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16523(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %2, ptr nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8) unnamed_addr #4 {
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %9
  %10 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %10, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.0142 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.0123141 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.0135140 = phi ptr [ %42, %.cont81 ], [ %2, %.cont81.preheader ]
  %11 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135140) #15
  %12 = icmp eq i8 %11, 1
  %.sroa.speculated77 = select i1 %12, ptr %.0142, ptr %.0123141
  tail call void %8(ptr align 1 %.sroa.speculated77, ptr align 1 %.0135140) #15
  %13 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 %7
  %.0123. = select i1 %12, ptr %.0123141, ptr %13
  %..0 = select i1 %12, ptr %13, ptr %.0142
  %14 = getelementptr inbounds i8, ptr %.0135140, i64 %7
  %15 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %14) #15
  %16 = icmp eq i8 %15, 1
  %.sroa.speculated68 = select i1 %16, ptr %..0, ptr %.0123.
  tail call void %8(ptr align 1 %.sroa.speculated68, ptr align 1 %14) #15
  %17 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 %7
  %.2125 = select i1 %16, ptr %.0123., ptr %17
  %.2 = select i1 %16, ptr %17, ptr %..0
  %18 = getelementptr inbounds i8, ptr %14, i64 %7
  %19 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %18) #15
  %20 = icmp eq i8 %19, 1
  %.sroa.speculated59 = select i1 %20, ptr %.2, ptr %.2125
  tail call void %8(ptr align 1 %.sroa.speculated59, ptr align 1 %18) #15
  %21 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 %7
  %.3126 = select i1 %20, ptr %.2125, ptr %21
  %.3 = select i1 %20, ptr %21, ptr %.2
  %22 = getelementptr inbounds i8, ptr %18, i64 %7
  %23 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %22) #15
  %24 = icmp eq i8 %23, 1
  %.sroa.speculated50 = select i1 %24, ptr %.3, ptr %.3126
  tail call void %8(ptr align 1 %.sroa.speculated50, ptr align 1 %22) #15
  %25 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 %7
  %.4127 = select i1 %24, ptr %.3126, ptr %25
  %.4 = select i1 %24, ptr %25, ptr %.3
  %26 = getelementptr inbounds i8, ptr %22, i64 %7
  %27 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %26) #15
  %28 = icmp eq i8 %27, 1
  %.sroa.speculated41 = select i1 %28, ptr %.4, ptr %.4127
  tail call void %8(ptr align 1 %.sroa.speculated41, ptr align 1 %26) #15
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 %7
  %.5128 = select i1 %28, ptr %.4127, ptr %29
  %.5 = select i1 %28, ptr %29, ptr %.4
  %30 = getelementptr inbounds i8, ptr %26, i64 %7
  %31 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %30) #15
  %32 = icmp eq i8 %31, 1
  %.sroa.speculated32 = select i1 %32, ptr %.5, ptr %.5128
  tail call void %8(ptr align 1 %.sroa.speculated32, ptr align 1 %30) #15
  %33 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 %7
  %.6129 = select i1 %32, ptr %.5128, ptr %33
  %.6 = select i1 %32, ptr %33, ptr %.5
  %34 = getelementptr inbounds i8, ptr %30, i64 %7
  %35 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %34) #15
  %36 = icmp eq i8 %35, 1
  %.sroa.speculated23 = select i1 %36, ptr %.6, ptr %.6129
  tail call void %8(ptr align 1 %.sroa.speculated23, ptr align 1 %34) #15
  %37 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 %7
  %.7130 = select i1 %36, ptr %.6129, ptr %37
  %.7 = select i1 %36, ptr %37, ptr %.6
  %38 = getelementptr inbounds i8, ptr %34, i64 %7
  %39 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %38) #15
  %40 = icmp eq i8 %39, 1
  %.sroa.speculated14 = select i1 %40, ptr %.7, ptr %.7130
  tail call void %8(ptr align 1 %.sroa.speculated14, ptr align 1 %38) #15
  %41 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 %7
  %.8131 = select i1 %40, ptr %.7130, ptr %41
  %.8 = select i1 %40, ptr %41, ptr %.7
  %42 = getelementptr inbounds i8, ptr %38, i64 %7
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %9
  %.0135.lcssa = phi ptr [ %2, %9 ], [ %42, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %9 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %9 ], [ %.8, %.cont81 ]
  %43 = and i64 %4, 7
  %.not152 = icmp eq i64 %43, 0
  br i1 %.not152, label %._crit_edge149, label %.cont

.cont:                                            ; preds = %._crit_edge
  %44 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %.0135.lcssa) #15
  %45 = icmp eq i8 %44, 1
  %.sroa.speculated = select i1 %45, ptr %.0.lcssa, ptr %.0123.lcssa
  tail call void %8(ptr align 1 %.sroa.speculated, ptr align 1 %.0135.lcssa) #15
  %46 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 %7
  %.9132. = select i1 %45, ptr %.0123.lcssa, ptr %46
  %..9 = select i1 %45, ptr %46, ptr %.0.lcssa
  %exitcond153.not = icmp eq i64 %43, 1
  br i1 %exitcond153.not, label %._crit_edge149, label %.cont.1

.cont.1:                                          ; preds = %.cont
  %47 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 %7
  %48 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %47) #15
  %49 = icmp eq i8 %48, 1
  %.sroa.speculated.1 = select i1 %49, ptr %..9, ptr %.9132.
  tail call void %8(ptr align 1 %.sroa.speculated.1, ptr align 1 %47) #15
  %50 = getelementptr inbounds i8, ptr %.sroa.speculated.1, i64 %7
  %.9132..1 = select i1 %49, ptr %.9132., ptr %50
  %..9.1 = select i1 %49, ptr %50, ptr %..9
  %exitcond153.not.1 = icmp eq i64 %43, 2
  br i1 %exitcond153.not.1, label %._crit_edge149, label %.cont.2

.cont.2:                                          ; preds = %.cont.1
  %51 = getelementptr inbounds i8, ptr %47, i64 %7
  %52 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %51) #15
  %53 = icmp eq i8 %52, 1
  %.sroa.speculated.2 = select i1 %53, ptr %..9.1, ptr %.9132..1
  tail call void %8(ptr align 1 %.sroa.speculated.2, ptr align 1 %51) #15
  %54 = getelementptr inbounds i8, ptr %.sroa.speculated.2, i64 %7
  %.9132..2 = select i1 %53, ptr %.9132..1, ptr %54
  %..9.2 = select i1 %53, ptr %54, ptr %..9.1
  %exitcond153.not.2 = icmp eq i64 %43, 3
  br i1 %exitcond153.not.2, label %._crit_edge149, label %.cont.3

.cont.3:                                          ; preds = %.cont.2
  %55 = getelementptr inbounds i8, ptr %51, i64 %7
  %56 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %55) #15
  %57 = icmp eq i8 %56, 1
  %.sroa.speculated.3 = select i1 %57, ptr %..9.2, ptr %.9132..2
  tail call void %8(ptr align 1 %.sroa.speculated.3, ptr align 1 %55) #15
  %58 = getelementptr inbounds i8, ptr %.sroa.speculated.3, i64 %7
  %.9132..3 = select i1 %57, ptr %.9132..2, ptr %58
  %..9.3 = select i1 %57, ptr %58, ptr %..9.2
  %exitcond153.not.3 = icmp eq i64 %43, 4
  br i1 %exitcond153.not.3, label %._crit_edge149, label %.cont.4

.cont.4:                                          ; preds = %.cont.3
  %59 = getelementptr inbounds i8, ptr %55, i64 %7
  %60 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %59) #15
  %61 = icmp eq i8 %60, 1
  %.sroa.speculated.4 = select i1 %61, ptr %..9.3, ptr %.9132..3
  tail call void %8(ptr align 1 %.sroa.speculated.4, ptr align 1 %59) #15
  %62 = getelementptr inbounds i8, ptr %.sroa.speculated.4, i64 %7
  %.9132..4 = select i1 %61, ptr %.9132..3, ptr %62
  %..9.4 = select i1 %61, ptr %62, ptr %..9.3
  %exitcond153.not.4 = icmp eq i64 %43, 5
  br i1 %exitcond153.not.4, label %._crit_edge149, label %.cont.5

.cont.5:                                          ; preds = %.cont.4
  %63 = getelementptr inbounds i8, ptr %59, i64 %7
  %64 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %63) #15
  %65 = icmp eq i8 %64, 1
  %.sroa.speculated.5 = select i1 %65, ptr %..9.4, ptr %.9132..4
  tail call void %8(ptr align 1 %.sroa.speculated.5, ptr align 1 %63) #15
  %66 = getelementptr inbounds i8, ptr %.sroa.speculated.5, i64 %7
  %.9132..5 = select i1 %65, ptr %.9132..4, ptr %66
  %..9.5 = select i1 %65, ptr %66, ptr %..9.4
  %exitcond153.not.5 = icmp eq i64 %43, 6
  br i1 %exitcond153.not.5, label %._crit_edge149, label %.cont.6

.cont.6:                                          ; preds = %.cont.5
  %67 = getelementptr inbounds i8, ptr %63, i64 %7
  %68 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %3, ptr align 1 %67) #15
  %69 = icmp eq i8 %68, 1
  %.sroa.speculated.6 = select i1 %69, ptr %..9.5, ptr %.9132..5
  tail call void %8(ptr align 1 %.sroa.speculated.6, ptr align 1 %67) #15
  %70 = getelementptr inbounds i8, ptr %.sroa.speculated.6, i64 %7
  %.9132..6 = select i1 %69, ptr %.9132..5, ptr %70
  %..9.6 = select i1 %69, ptr %70, ptr %..9.5
  br label %._crit_edge149

._crit_edge149:                                   ; preds = %.cont.6, %.cont.5, %.cont.4, %.cont.3, %.cont.2, %.cont.1, %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ], [ %.9132..1, %.cont.1 ], [ %.9132..2, %.cont.2 ], [ %.9132..3, %.cont.3 ], [ %.9132..4, %.cont.4 ], [ %.9132..5, %.cont.5 ], [ %.9132..6, %.cont.6 ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ], [ %..9.1, %.cont.1 ], [ %..9.2, %.cont.2 ], [ %..9.3, %.cont.3 ], [ %..9.4, %.cont.4 ], [ %..9.5, %.cont.5 ], [ %..9.6, %.cont.6 ]
  %71 = ptrtoint ptr %.9.lcssa to i64
  %72 = ptrtoint ptr %0 to i64
  %73 = sub nuw i64 %71, %72
  %74 = udiv i64 %73, %7
  %75 = ptrtoint ptr %.9132.lcssa to i64
  %76 = ptrtoint ptr %1 to i64
  %77 = sub nuw i64 %75, %76
  %78 = udiv i64 %77, %7
  %79 = mul nuw i64 %74, %7
  %80 = getelementptr inbounds i8, ptr %0, i64 %79
  %81 = mul nuw i64 %78, %7
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %80, ptr nonnull align 1 %1, i64 %81, i1 false)
  %82 = lshr i64 %74, 4
  %83 = icmp ule i64 %78, %82
  %84 = icmp ult i64 %74, 97
  %85 = or i1 %84, %83
  br i1 %85, label %86, label %93

common.ret:                                       ; preds = %89
  ret void

86:                                               ; preds = %._crit_edge149
  %87 = icmp ult i64 %74, 96
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call fastcc void @sort.tail_swap__anon_14838(ptr nonnull align 1 %0, i64 %74, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void

89:                                               ; preds = %86
  %90 = tail call fastcc i1 @sort.quad_swap__anon_14839(ptr nonnull align 1 %0, i64 %74, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %90, label %91, label %common.ret

91:                                               ; preds = %89
  %92 = tail call fastcc i64 @sort.quad_merge__anon_14840(ptr nonnull align 1 %0, i64 %74, ptr nonnull align 1 %1, i64 %74, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  tail call fastcc void @sort.rotate_merge__anon_14841(ptr nonnull align 1 %0, i64 %74, ptr nonnull align 1 %1, i64 %74, i64 %92, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void

93:                                               ; preds = %._crit_edge149
  tail call fastcc void @sort.flux_partition__anon_14857(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %74, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16531(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7) unnamed_addr #4 {
  tail call void %7(ptr align 1 %6, i64 %4) #15
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %8
  %9 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %9, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.04 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.01233 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.01352 = phi ptr [ %65, %.cont81 ], [ %2, %.cont81.preheader ]
  %10 = load ptr, ptr %3, align 8
  %11 = load ptr, ptr %.01352, align 8
  %12 = tail call i8 %5(ptr align 1 %6, ptr align 1 %10, ptr align 1 %11) #15
  %13 = icmp eq i8 %12, 1
  %.sroa.speculated77 = select i1 %13, ptr %.04, ptr %.01233
  %14 = load i64, ptr %.01352, align 8
  store i64 %14, ptr %.sroa.speculated77, align 8
  %15 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 8
  %.0123. = select i1 %13, ptr %.01233, ptr %15
  %..0 = select i1 %13, ptr %15, ptr %.04
  %16 = getelementptr inbounds i8, ptr %.01352, i64 8
  %17 = load ptr, ptr %3, align 8
  %18 = load ptr, ptr %16, align 8
  %19 = tail call i8 %5(ptr align 1 %6, ptr align 1 %17, ptr align 1 %18) #15
  %20 = icmp eq i8 %19, 1
  %.sroa.speculated68 = select i1 %20, ptr %..0, ptr %.0123.
  %21 = load i64, ptr %16, align 8
  store i64 %21, ptr %.sroa.speculated68, align 8
  %22 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 8
  %.2125 = select i1 %20, ptr %.0123., ptr %22
  %.2 = select i1 %20, ptr %22, ptr %..0
  %23 = getelementptr inbounds i8, ptr %.01352, i64 16
  %24 = load ptr, ptr %3, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call i8 %5(ptr align 1 %6, ptr align 1 %24, ptr align 1 %25) #15
  %27 = icmp eq i8 %26, 1
  %.sroa.speculated59 = select i1 %27, ptr %.2, ptr %.2125
  %28 = load i64, ptr %23, align 8
  store i64 %28, ptr %.sroa.speculated59, align 8
  %29 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 8
  %.3126 = select i1 %27, ptr %.2125, ptr %29
  %.3 = select i1 %27, ptr %29, ptr %.2
  %30 = getelementptr inbounds i8, ptr %.01352, i64 24
  %31 = load ptr, ptr %3, align 8
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i8 %5(ptr align 1 %6, ptr align 1 %31, ptr align 1 %32) #15
  %34 = icmp eq i8 %33, 1
  %.sroa.speculated50 = select i1 %34, ptr %.3, ptr %.3126
  %35 = load i64, ptr %30, align 8
  store i64 %35, ptr %.sroa.speculated50, align 8
  %36 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.4127 = select i1 %34, ptr %.3126, ptr %36
  %.4 = select i1 %34, ptr %36, ptr %.3
  %37 = getelementptr inbounds i8, ptr %.01352, i64 32
  %38 = load ptr, ptr %3, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #15
  %41 = icmp eq i8 %40, 1
  %.sroa.speculated41 = select i1 %41, ptr %.4, ptr %.4127
  %42 = load i64, ptr %37, align 8
  store i64 %42, ptr %.sroa.speculated41, align 8
  %43 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 8
  %.5128 = select i1 %41, ptr %.4127, ptr %43
  %.5 = select i1 %41, ptr %43, ptr %.4
  %44 = getelementptr inbounds i8, ptr %.01352, i64 40
  %45 = load ptr, ptr %3, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call i8 %5(ptr align 1 %6, ptr align 1 %45, ptr align 1 %46) #15
  %48 = icmp eq i8 %47, 1
  %.sroa.speculated32 = select i1 %48, ptr %.5, ptr %.5128
  %49 = load i64, ptr %44, align 8
  store i64 %49, ptr %.sroa.speculated32, align 8
  %50 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 8
  %.6129 = select i1 %48, ptr %.5128, ptr %50
  %.6 = select i1 %48, ptr %50, ptr %.5
  %51 = getelementptr inbounds i8, ptr %.01352, i64 48
  %52 = load ptr, ptr %3, align 8
  %53 = load ptr, ptr %51, align 8
  %54 = tail call i8 %5(ptr align 1 %6, ptr align 1 %52, ptr align 1 %53) #15
  %55 = icmp eq i8 %54, 1
  %.sroa.speculated23 = select i1 %55, ptr %.6, ptr %.6129
  %56 = load i64, ptr %51, align 8
  store i64 %56, ptr %.sroa.speculated23, align 8
  %57 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 8
  %.7130 = select i1 %55, ptr %.6129, ptr %57
  %.7 = select i1 %55, ptr %57, ptr %.6
  %58 = getelementptr inbounds i8, ptr %.01352, i64 56
  %59 = load ptr, ptr %3, align 8
  %60 = load ptr, ptr %58, align 8
  %61 = tail call i8 %5(ptr align 1 %6, ptr align 1 %59, ptr align 1 %60) #15
  %62 = icmp eq i8 %61, 1
  %.sroa.speculated14 = select i1 %62, ptr %.7, ptr %.7130
  %63 = load i64, ptr %58, align 8
  store i64 %63, ptr %.sroa.speculated14, align 8
  %64 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 8
  %.8131 = select i1 %62, ptr %.7130, ptr %64
  %.8 = select i1 %62, ptr %64, ptr %.7
  %65 = getelementptr inbounds i8, ptr %.01352, i64 64
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %8
  %.0135.lcssa = phi ptr [ %2, %8 ], [ %65, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %8 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %8 ], [ %.8, %.cont81 ]
  %66 = and i64 %4, 7
  %.not14 = icmp eq i64 %66, 0
  br i1 %.not14, label %._crit_edge11, label %.cont

.cont:                                            ; preds = %._crit_edge
  %67 = load ptr, ptr %3, align 8
  %68 = load ptr, ptr %.0135.lcssa, align 8
  %69 = tail call i8 %5(ptr align 1 %6, ptr align 1 %67, ptr align 1 %68) #15
  %70 = icmp eq i8 %69, 1
  %.sroa.speculated = select i1 %70, ptr %.0.lcssa, ptr %.0123.lcssa
  %71 = load i64, ptr %.0135.lcssa, align 8
  store i64 %71, ptr %.sroa.speculated, align 8
  %72 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %.9132. = select i1 %70, ptr %.0123.lcssa, ptr %72
  %..9 = select i1 %70, ptr %72, ptr %.0.lcssa
  %exitcond15.not = icmp eq i64 %66, 1
  br i1 %exitcond15.not, label %._crit_edge11, label %.cont.1

.cont.1:                                          ; preds = %.cont
  %73 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 8
  %74 = load ptr, ptr %3, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = tail call i8 %5(ptr align 1 %6, ptr align 1 %74, ptr align 1 %75) #15
  %77 = icmp eq i8 %76, 1
  %.sroa.speculated.1 = select i1 %77, ptr %..9, ptr %.9132.
  %78 = load i64, ptr %73, align 8
  store i64 %78, ptr %.sroa.speculated.1, align 8
  %79 = getelementptr inbounds i8, ptr %.sroa.speculated.1, i64 8
  %.9132..1 = select i1 %77, ptr %.9132., ptr %79
  %..9.1 = select i1 %77, ptr %79, ptr %..9
  %exitcond15.not.1 = icmp eq i64 %66, 2
  br i1 %exitcond15.not.1, label %._crit_edge11, label %.cont.2

.cont.2:                                          ; preds = %.cont.1
  %80 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 16
  %81 = load ptr, ptr %3, align 8
  %82 = load ptr, ptr %80, align 8
  %83 = tail call i8 %5(ptr align 1 %6, ptr align 1 %81, ptr align 1 %82) #15
  %84 = icmp eq i8 %83, 1
  %.sroa.speculated.2 = select i1 %84, ptr %..9.1, ptr %.9132..1
  %85 = load i64, ptr %80, align 8
  store i64 %85, ptr %.sroa.speculated.2, align 8
  %86 = getelementptr inbounds i8, ptr %.sroa.speculated.2, i64 8
  %.9132..2 = select i1 %84, ptr %.9132..1, ptr %86
  %..9.2 = select i1 %84, ptr %86, ptr %..9.1
  %exitcond15.not.2 = icmp eq i64 %66, 3
  br i1 %exitcond15.not.2, label %._crit_edge11, label %.cont.3

.cont.3:                                          ; preds = %.cont.2
  %87 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 24
  %88 = load ptr, ptr %3, align 8
  %89 = load ptr, ptr %87, align 8
  %90 = tail call i8 %5(ptr align 1 %6, ptr align 1 %88, ptr align 1 %89) #15
  %91 = icmp eq i8 %90, 1
  %.sroa.speculated.3 = select i1 %91, ptr %..9.2, ptr %.9132..2
  %92 = load i64, ptr %87, align 8
  store i64 %92, ptr %.sroa.speculated.3, align 8
  %93 = getelementptr inbounds i8, ptr %.sroa.speculated.3, i64 8
  %.9132..3 = select i1 %91, ptr %.9132..2, ptr %93
  %..9.3 = select i1 %91, ptr %93, ptr %..9.2
  %exitcond15.not.3 = icmp eq i64 %66, 4
  br i1 %exitcond15.not.3, label %._crit_edge11, label %.cont.4

.cont.4:                                          ; preds = %.cont.3
  %94 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 32
  %95 = load ptr, ptr %3, align 8
  %96 = load ptr, ptr %94, align 8
  %97 = tail call i8 %5(ptr align 1 %6, ptr align 1 %95, ptr align 1 %96) #15
  %98 = icmp eq i8 %97, 1
  %.sroa.speculated.4 = select i1 %98, ptr %..9.3, ptr %.9132..3
  %99 = load i64, ptr %94, align 8
  store i64 %99, ptr %.sroa.speculated.4, align 8
  %100 = getelementptr inbounds i8, ptr %.sroa.speculated.4, i64 8
  %.9132..4 = select i1 %98, ptr %.9132..3, ptr %100
  %..9.4 = select i1 %98, ptr %100, ptr %..9.3
  %exitcond15.not.4 = icmp eq i64 %66, 5
  br i1 %exitcond15.not.4, label %._crit_edge11, label %.cont.5

.cont.5:                                          ; preds = %.cont.4
  %101 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 40
  %102 = load ptr, ptr %3, align 8
  %103 = load ptr, ptr %101, align 8
  %104 = tail call i8 %5(ptr align 1 %6, ptr align 1 %102, ptr align 1 %103) #15
  %105 = icmp eq i8 %104, 1
  %.sroa.speculated.5 = select i1 %105, ptr %..9.4, ptr %.9132..4
  %106 = load i64, ptr %101, align 8
  store i64 %106, ptr %.sroa.speculated.5, align 8
  %107 = getelementptr inbounds i8, ptr %.sroa.speculated.5, i64 8
  %.9132..5 = select i1 %105, ptr %.9132..4, ptr %107
  %..9.5 = select i1 %105, ptr %107, ptr %..9.4
  %exitcond15.not.5 = icmp eq i64 %66, 6
  br i1 %exitcond15.not.5, label %._crit_edge11, label %.cont.6

.cont.6:                                          ; preds = %.cont.5
  %108 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 48
  %109 = load ptr, ptr %3, align 8
  %110 = load ptr, ptr %108, align 8
  %111 = tail call i8 %5(ptr align 1 %6, ptr align 1 %109, ptr align 1 %110) #15
  %112 = icmp eq i8 %111, 1
  %.sroa.speculated.6 = select i1 %112, ptr %..9.5, ptr %.9132..5
  %113 = load i64, ptr %108, align 8
  store i64 %113, ptr %.sroa.speculated.6, align 8
  %114 = getelementptr inbounds i8, ptr %.sroa.speculated.6, i64 8
  %.9132..6 = select i1 %112, ptr %.9132..5, ptr %114
  %..9.6 = select i1 %112, ptr %114, ptr %..9.5
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %.cont.6, %.cont.5, %.cont.4, %.cont.3, %.cont.2, %.cont.1, %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ], [ %.9132..1, %.cont.1 ], [ %.9132..2, %.cont.2 ], [ %.9132..3, %.cont.3 ], [ %.9132..4, %.cont.4 ], [ %.9132..5, %.cont.5 ], [ %.9132..6, %.cont.6 ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ], [ %..9.1, %.cont.1 ], [ %..9.2, %.cont.2 ], [ %..9.3, %.cont.3 ], [ %..9.4, %.cont.4 ], [ %..9.5, %.cont.5 ], [ %..9.6, %.cont.6 ]
  %115 = ptrtoint ptr %.9.lcssa to i64
  %116 = ptrtoint ptr %0 to i64
  %117 = sub nuw i64 %115, %116
  %118 = lshr i64 %117, 3
  %119 = ptrtoint ptr %.9132.lcssa to i64
  %120 = ptrtoint ptr %1 to i64
  %121 = sub nuw i64 %119, %120
  %122 = lshr i64 %121, 3
  %123 = and i64 %117, -8
  %124 = getelementptr inbounds i8, ptr %0, i64 %123
  %125 = and i64 %121, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %124, ptr nonnull align 1 %1, i64 %125, i1 false)
  %126 = lshr i64 %117, 7
  %127 = icmp ule i64 %122, %126
  %128 = icmp ult i64 %117, 776
  %129 = or i1 %128, %127
  br i1 %129, label %130, label %137

common.ret:                                       ; preds = %133
  ret void

130:                                              ; preds = %._crit_edge11
  %131 = icmp ult i64 %117, 768
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  tail call fastcc void @sort.tail_swap__anon_14843(ptr nonnull align 1 %0, i64 %118, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void

133:                                              ; preds = %130
  %134 = tail call fastcc i1 @sort.quad_swap__anon_14844(ptr nonnull align 1 %0, i64 %118, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %134, label %135, label %common.ret

135:                                              ; preds = %133
  %136 = tail call fastcc i64 @sort.quad_merge__anon_14845(ptr nonnull align 1 %0, i64 %118, ptr nonnull align 1 %1, i64 %118, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  tail call fastcc void @sort.rotate_merge__anon_14846(ptr nonnull align 1 %0, i64 %118, ptr nonnull align 1 %1, i64 %118, i64 %136, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void

137:                                              ; preds = %._crit_edge11
  tail call fastcc void @sort.flux_partition__anon_14860(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %118, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.flux_reverse_partition__anon_16539(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nocapture nonnull readonly align 1 %2, ptr nocapture nonnull align 1 %3, i64 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %.not = icmp ult i64 %4, 8
  br i1 %.not, label %._crit_edge, label %.cont81.preheader

.cont81.preheader:                                ; preds = %7
  %8 = lshr i64 %4, 3
  br label %.cont81

.cont81:                                          ; preds = %.cont81, %.cont81.preheader
  %lsr.iv = phi i64 [ %8, %.cont81.preheader ], [ %lsr.iv.next, %.cont81 ]
  %.04 = phi ptr [ %.8, %.cont81 ], [ %0, %.cont81.preheader ]
  %.01233 = phi ptr [ %.8131, %.cont81 ], [ %1, %.cont81.preheader ]
  %.01352 = phi ptr [ %64, %.cont81 ], [ %2, %.cont81.preheader ]
  %9 = load ptr, ptr %3, align 8
  %10 = load ptr, ptr %.01352, align 8
  %11 = tail call i8 %5(ptr align 1 %6, ptr align 1 %9, ptr align 1 %10) #15
  %12 = icmp eq i8 %11, 1
  %.sroa.speculated77 = select i1 %12, ptr %.04, ptr %.01233
  %13 = load i64, ptr %.01352, align 8
  store i64 %13, ptr %.sroa.speculated77, align 8
  %14 = getelementptr inbounds i8, ptr %.sroa.speculated77, i64 8
  %.0123. = select i1 %12, ptr %.01233, ptr %14
  %..0 = select i1 %12, ptr %14, ptr %.04
  %15 = getelementptr inbounds i8, ptr %.01352, i64 8
  %16 = load ptr, ptr %3, align 8
  %17 = load ptr, ptr %15, align 8
  %18 = tail call i8 %5(ptr align 1 %6, ptr align 1 %16, ptr align 1 %17) #15
  %19 = icmp eq i8 %18, 1
  %.sroa.speculated68 = select i1 %19, ptr %..0, ptr %.0123.
  %20 = load i64, ptr %15, align 8
  store i64 %20, ptr %.sroa.speculated68, align 8
  %21 = getelementptr inbounds i8, ptr %.sroa.speculated68, i64 8
  %.2125 = select i1 %19, ptr %.0123., ptr %21
  %.2 = select i1 %19, ptr %21, ptr %..0
  %22 = getelementptr inbounds i8, ptr %.01352, i64 16
  %23 = load ptr, ptr %3, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i8 %5(ptr align 1 %6, ptr align 1 %23, ptr align 1 %24) #15
  %26 = icmp eq i8 %25, 1
  %.sroa.speculated59 = select i1 %26, ptr %.2, ptr %.2125
  %27 = load i64, ptr %22, align 8
  store i64 %27, ptr %.sroa.speculated59, align 8
  %28 = getelementptr inbounds i8, ptr %.sroa.speculated59, i64 8
  %.3126 = select i1 %26, ptr %.2125, ptr %28
  %.3 = select i1 %26, ptr %28, ptr %.2
  %29 = getelementptr inbounds i8, ptr %.01352, i64 24
  %30 = load ptr, ptr %3, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i8 %5(ptr align 1 %6, ptr align 1 %30, ptr align 1 %31) #15
  %33 = icmp eq i8 %32, 1
  %.sroa.speculated50 = select i1 %33, ptr %.3, ptr %.3126
  %34 = load i64, ptr %29, align 8
  store i64 %34, ptr %.sroa.speculated50, align 8
  %35 = getelementptr inbounds i8, ptr %.sroa.speculated50, i64 8
  %.4127 = select i1 %33, ptr %.3126, ptr %35
  %.4 = select i1 %33, ptr %35, ptr %.3
  %36 = getelementptr inbounds i8, ptr %.01352, i64 32
  %37 = load ptr, ptr %3, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #15
  %40 = icmp eq i8 %39, 1
  %.sroa.speculated41 = select i1 %40, ptr %.4, ptr %.4127
  %41 = load i64, ptr %36, align 8
  store i64 %41, ptr %.sroa.speculated41, align 8
  %42 = getelementptr inbounds i8, ptr %.sroa.speculated41, i64 8
  %.5128 = select i1 %40, ptr %.4127, ptr %42
  %.5 = select i1 %40, ptr %42, ptr %.4
  %43 = getelementptr inbounds i8, ptr %.01352, i64 40
  %44 = load ptr, ptr %3, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = tail call i8 %5(ptr align 1 %6, ptr align 1 %44, ptr align 1 %45) #15
  %47 = icmp eq i8 %46, 1
  %.sroa.speculated32 = select i1 %47, ptr %.5, ptr %.5128
  %48 = load i64, ptr %43, align 8
  store i64 %48, ptr %.sroa.speculated32, align 8
  %49 = getelementptr inbounds i8, ptr %.sroa.speculated32, i64 8
  %.6129 = select i1 %47, ptr %.5128, ptr %49
  %.6 = select i1 %47, ptr %49, ptr %.5
  %50 = getelementptr inbounds i8, ptr %.01352, i64 48
  %51 = load ptr, ptr %3, align 8
  %52 = load ptr, ptr %50, align 8
  %53 = tail call i8 %5(ptr align 1 %6, ptr align 1 %51, ptr align 1 %52) #15
  %54 = icmp eq i8 %53, 1
  %.sroa.speculated23 = select i1 %54, ptr %.6, ptr %.6129
  %55 = load i64, ptr %50, align 8
  store i64 %55, ptr %.sroa.speculated23, align 8
  %56 = getelementptr inbounds i8, ptr %.sroa.speculated23, i64 8
  %.7130 = select i1 %54, ptr %.6129, ptr %56
  %.7 = select i1 %54, ptr %56, ptr %.6
  %57 = getelementptr inbounds i8, ptr %.01352, i64 56
  %58 = load ptr, ptr %3, align 8
  %59 = load ptr, ptr %57, align 8
  %60 = tail call i8 %5(ptr align 1 %6, ptr align 1 %58, ptr align 1 %59) #15
  %61 = icmp eq i8 %60, 1
  %.sroa.speculated14 = select i1 %61, ptr %.7, ptr %.7130
  %62 = load i64, ptr %57, align 8
  store i64 %62, ptr %.sroa.speculated14, align 8
  %63 = getelementptr inbounds i8, ptr %.sroa.speculated14, i64 8
  %.8131 = select i1 %61, ptr %.7130, ptr %63
  %.8 = select i1 %61, ptr %63, ptr %.7
  %64 = getelementptr inbounds i8, ptr %.01352, i64 64
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond.not, label %._crit_edge, label %.cont81

._crit_edge:                                      ; preds = %.cont81, %7
  %.0135.lcssa = phi ptr [ %2, %7 ], [ %64, %.cont81 ]
  %.0123.lcssa = phi ptr [ %1, %7 ], [ %.8131, %.cont81 ]
  %.0.lcssa = phi ptr [ %0, %7 ], [ %.8, %.cont81 ]
  %65 = and i64 %4, 7
  %.not14 = icmp eq i64 %65, 0
  br i1 %.not14, label %._crit_edge11, label %.cont

.cont:                                            ; preds = %._crit_edge
  %66 = load ptr, ptr %3, align 8
  %67 = load ptr, ptr %.0135.lcssa, align 8
  %68 = tail call i8 %5(ptr align 1 %6, ptr align 1 %66, ptr align 1 %67) #15
  %69 = icmp eq i8 %68, 1
  %.sroa.speculated = select i1 %69, ptr %.0.lcssa, ptr %.0123.lcssa
  %70 = load i64, ptr %.0135.lcssa, align 8
  store i64 %70, ptr %.sroa.speculated, align 8
  %71 = getelementptr inbounds i8, ptr %.sroa.speculated, i64 8
  %.9132. = select i1 %69, ptr %.0123.lcssa, ptr %71
  %..9 = select i1 %69, ptr %71, ptr %.0.lcssa
  %exitcond15.not = icmp eq i64 %65, 1
  br i1 %exitcond15.not, label %._crit_edge11, label %.cont.1

.cont.1:                                          ; preds = %.cont
  %72 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 8
  %73 = load ptr, ptr %3, align 8
  %74 = load ptr, ptr %72, align 8
  %75 = tail call i8 %5(ptr align 1 %6, ptr align 1 %73, ptr align 1 %74) #15
  %76 = icmp eq i8 %75, 1
  %.sroa.speculated.1 = select i1 %76, ptr %..9, ptr %.9132.
  %77 = load i64, ptr %72, align 8
  store i64 %77, ptr %.sroa.speculated.1, align 8
  %78 = getelementptr inbounds i8, ptr %.sroa.speculated.1, i64 8
  %.9132..1 = select i1 %76, ptr %.9132., ptr %78
  %..9.1 = select i1 %76, ptr %78, ptr %..9
  %exitcond15.not.1 = icmp eq i64 %65, 2
  br i1 %exitcond15.not.1, label %._crit_edge11, label %.cont.2

.cont.2:                                          ; preds = %.cont.1
  %79 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 16
  %80 = load ptr, ptr %3, align 8
  %81 = load ptr, ptr %79, align 8
  %82 = tail call i8 %5(ptr align 1 %6, ptr align 1 %80, ptr align 1 %81) #15
  %83 = icmp eq i8 %82, 1
  %.sroa.speculated.2 = select i1 %83, ptr %..9.1, ptr %.9132..1
  %84 = load i64, ptr %79, align 8
  store i64 %84, ptr %.sroa.speculated.2, align 8
  %85 = getelementptr inbounds i8, ptr %.sroa.speculated.2, i64 8
  %.9132..2 = select i1 %83, ptr %.9132..1, ptr %85
  %..9.2 = select i1 %83, ptr %85, ptr %..9.1
  %exitcond15.not.2 = icmp eq i64 %65, 3
  br i1 %exitcond15.not.2, label %._crit_edge11, label %.cont.3

.cont.3:                                          ; preds = %.cont.2
  %86 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 24
  %87 = load ptr, ptr %3, align 8
  %88 = load ptr, ptr %86, align 8
  %89 = tail call i8 %5(ptr align 1 %6, ptr align 1 %87, ptr align 1 %88) #15
  %90 = icmp eq i8 %89, 1
  %.sroa.speculated.3 = select i1 %90, ptr %..9.2, ptr %.9132..2
  %91 = load i64, ptr %86, align 8
  store i64 %91, ptr %.sroa.speculated.3, align 8
  %92 = getelementptr inbounds i8, ptr %.sroa.speculated.3, i64 8
  %.9132..3 = select i1 %90, ptr %.9132..2, ptr %92
  %..9.3 = select i1 %90, ptr %92, ptr %..9.2
  %exitcond15.not.3 = icmp eq i64 %65, 4
  br i1 %exitcond15.not.3, label %._crit_edge11, label %.cont.4

.cont.4:                                          ; preds = %.cont.3
  %93 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 32
  %94 = load ptr, ptr %3, align 8
  %95 = load ptr, ptr %93, align 8
  %96 = tail call i8 %5(ptr align 1 %6, ptr align 1 %94, ptr align 1 %95) #15
  %97 = icmp eq i8 %96, 1
  %.sroa.speculated.4 = select i1 %97, ptr %..9.3, ptr %.9132..3
  %98 = load i64, ptr %93, align 8
  store i64 %98, ptr %.sroa.speculated.4, align 8
  %99 = getelementptr inbounds i8, ptr %.sroa.speculated.4, i64 8
  %.9132..4 = select i1 %97, ptr %.9132..3, ptr %99
  %..9.4 = select i1 %97, ptr %99, ptr %..9.3
  %exitcond15.not.4 = icmp eq i64 %65, 5
  br i1 %exitcond15.not.4, label %._crit_edge11, label %.cont.5

.cont.5:                                          ; preds = %.cont.4
  %100 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 40
  %101 = load ptr, ptr %3, align 8
  %102 = load ptr, ptr %100, align 8
  %103 = tail call i8 %5(ptr align 1 %6, ptr align 1 %101, ptr align 1 %102) #15
  %104 = icmp eq i8 %103, 1
  %.sroa.speculated.5 = select i1 %104, ptr %..9.4, ptr %.9132..4
  %105 = load i64, ptr %100, align 8
  store i64 %105, ptr %.sroa.speculated.5, align 8
  %106 = getelementptr inbounds i8, ptr %.sroa.speculated.5, i64 8
  %.9132..5 = select i1 %104, ptr %.9132..4, ptr %106
  %..9.5 = select i1 %104, ptr %106, ptr %..9.4
  %exitcond15.not.5 = icmp eq i64 %65, 6
  br i1 %exitcond15.not.5, label %._crit_edge11, label %.cont.6

.cont.6:                                          ; preds = %.cont.5
  %107 = getelementptr inbounds i8, ptr %.0135.lcssa, i64 48
  %108 = load ptr, ptr %3, align 8
  %109 = load ptr, ptr %107, align 8
  %110 = tail call i8 %5(ptr align 1 %6, ptr align 1 %108, ptr align 1 %109) #15
  %111 = icmp eq i8 %110, 1
  %.sroa.speculated.6 = select i1 %111, ptr %..9.5, ptr %.9132..5
  %112 = load i64, ptr %107, align 8
  store i64 %112, ptr %.sroa.speculated.6, align 8
  %113 = getelementptr inbounds i8, ptr %.sroa.speculated.6, i64 8
  %.9132..6 = select i1 %111, ptr %.9132..5, ptr %113
  %..9.6 = select i1 %111, ptr %113, ptr %..9.5
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %.cont.6, %.cont.5, %.cont.4, %.cont.3, %.cont.2, %.cont.1, %.cont, %._crit_edge
  %.9132.lcssa = phi ptr [ %.0123.lcssa, %._crit_edge ], [ %.9132., %.cont ], [ %.9132..1, %.cont.1 ], [ %.9132..2, %.cont.2 ], [ %.9132..3, %.cont.3 ], [ %.9132..4, %.cont.4 ], [ %.9132..5, %.cont.5 ], [ %.9132..6, %.cont.6 ]
  %.9.lcssa = phi ptr [ %.0.lcssa, %._crit_edge ], [ %..9, %.cont ], [ %..9.1, %.cont.1 ], [ %..9.2, %.cont.2 ], [ %..9.3, %.cont.3 ], [ %..9.4, %.cont.4 ], [ %..9.5, %.cont.5 ], [ %..9.6, %.cont.6 ]
  %114 = ptrtoint ptr %.9.lcssa to i64
  %115 = ptrtoint ptr %0 to i64
  %116 = sub nuw i64 %114, %115
  %117 = lshr i64 %116, 3
  %118 = ptrtoint ptr %.9132.lcssa to i64
  %119 = ptrtoint ptr %1 to i64
  %120 = sub nuw i64 %118, %119
  %121 = lshr i64 %120, 3
  %122 = and i64 %116, -8
  %123 = getelementptr inbounds i8, ptr %0, i64 %122
  %124 = and i64 %120, -8
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %123, ptr nonnull align 1 %1, i64 %124, i1 false)
  %125 = lshr i64 %116, 7
  %126 = icmp ule i64 %121, %125
  %127 = icmp ult i64 %116, 776
  %128 = or i1 %127, %126
  br i1 %128, label %129, label %136

common.ret:                                       ; preds = %132
  ret void

129:                                              ; preds = %._crit_edge11
  %130 = icmp ult i64 %116, 768
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  tail call fastcc void @sort.tail_swap__anon_14848(ptr nonnull align 1 %0, i64 %117, ptr nonnull align 1 %1, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void

132:                                              ; preds = %129
  %133 = tail call fastcc i1 @sort.quad_swap__anon_14849(ptr nonnull align 1 %0, i64 %117, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %133, label %134, label %common.ret

134:                                              ; preds = %132
  %135 = tail call fastcc i64 @sort.quad_merge__anon_14850(ptr nonnull align 1 %0, i64 %117, ptr nonnull align 1 %1, i64 %117, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  tail call fastcc void @sort.rotate_merge__anon_14851(ptr nonnull align 1 %0, i64 %117, ptr nonnull align 1 %1, i64 %117, i64 %135, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void

136:                                              ; preds = %._crit_edge11
  tail call fastcc void @sort.flux_partition__anon_14863(ptr nonnull align 1 %0, ptr nonnull align 1 %1, ptr nonnull align 1 %0, ptr nonnull align 1 %3, i64 %117, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret void
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16701(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = sub i64 0, %7
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %10
  %12 = phi ptr [ %27, %16 ], [ %.pre, %10 ]
  %13 = load ptr, ptr %2, align 8
  %14 = getelementptr inbounds i8, ptr %12, i64 %11
  tail call void %9(ptr align 1 %6, i64 1) #15
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #15
  %.not = icmp eq i8 %15, 1
  br i1 %.not, label %33, label %16

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #15
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %11
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %11
  store ptr %22, ptr %4, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #15
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %11
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %11
  store ptr %27, ptr %4, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, %7
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %11
  %36 = load ptr, ptr %4, align 8
  tail call void %9(ptr align 1 %6, i64 1) #15
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #15
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %common.ret

common.ret:                                       ; preds = %39, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %39 ], [ true, %16 ]
  ret i1 %common.ret.op

39:                                               ; preds = %33
  %40 = load ptr, ptr %0, align 8
  %41 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %40, ptr align 1 %41) #15
  %42 = load ptr, ptr %0, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %11
  store ptr %43, ptr %0, align 8
  %44 = load ptr, ptr %2, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 %11
  store ptr %45, ptr %2, align 8
  %46 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %46, ptr align 1 %45) #15
  %47 = load ptr, ptr %0, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %11
  store ptr %48, ptr %0, align 8
  %49 = load ptr, ptr %2, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %11
  store ptr %50, ptr %2, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = load ptr, ptr %1, align 8
  %53 = ptrtoint ptr %52 to i64
  %54 = add nuw i64 %53, %7
  %55 = icmp ult i64 %54, %51
  br i1 %55, label %56, label %common.ret

56:                                               ; preds = %39
  %57 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16773(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret i1 %57
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.trinity_rotation(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull align 1 %2, i64 %3, i64 %4, i64 %5, ptr nocapture nonnull readonly align 4 %6) unnamed_addr #4 {
  %8 = alloca [96 x i8], align 16
  %9 = sub nuw i64 %1, %4
  %spec.store.select = tail call i64 @llvm.umin.i64(i64 %3, i64 65536)
  %10 = icmp ugt i64 %9, %4
  br i1 %10, label %11, label %13

.loopexit:                                        ; preds = %.lr.ph, %136, %._crit_edge214, %67, %64, %._crit_edge246
  ret void

11:                                               ; preds = %7
  %.not192 = icmp ult i64 %spec.store.select, %4
  %12 = mul i64 %5, %4
  br i1 %.not192, label %24, label %15

13:                                               ; preds = %7
  %14 = icmp ult i64 %9, %4
  br i1 %14, label %66, label %67

15:                                               ; preds = %11
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %12, i1 false)
  %16 = mul nuw i64 %9, %5
  %.not.i = icmp eq i64 %16, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9882.exit, label %iter.check341

iter.check341:                                    ; preds = %15
  %min.iters.check339 = icmp ult i64 %16, 8
  %17 = add i64 %12, 31
  %diff.check337 = icmp ult i64 %17, 32
  %or.cond = select i1 %min.iters.check339, i1 true, i1 %diff.check337
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check343

vector.main.loop.iter.check343:                   ; preds = %iter.check341
  %min.iters.check342 = icmp ult i64 %16, 32
  br i1 %min.iters.check342, label %vec.epilog.ph356, label %vector.ph344

vector.ph344:                                     ; preds = %vector.main.loop.iter.check343
  %n.vec346 = and i64 %16, -32
  br label %vector.body348

vector.body348:                                   ; preds = %vector.body348, %vector.ph344
  %lsr.iv437 = phi i64 [ %lsr.iv.next438, %vector.body348 ], [ %n.vec346, %vector.ph344 ]
  %lsr.iv432 = phi ptr [ %uglygep433, %vector.body348 ], [ %0, %vector.ph344 ]
  %uglygep435 = getelementptr i8, ptr %lsr.iv432, i64 %12
  %wide.load350 = load <16 x i8>, ptr %uglygep435, align 1
  %uglygep436 = getelementptr i8, ptr %uglygep435, i64 16
  %wide.load351 = load <16 x i8>, ptr %uglygep436, align 1
  store <16 x i8> %wide.load350, ptr %lsr.iv432, align 1
  %uglygep434 = getelementptr i8, ptr %lsr.iv432, i64 16
  store <16 x i8> %wide.load351, ptr %uglygep434, align 1
  %uglygep433 = getelementptr i8, ptr %lsr.iv432, i64 32
  %lsr.iv.next438 = add i64 %lsr.iv437, -32
  %18 = icmp eq i64 %lsr.iv.next438, 0
  br i1 %18, label %middle.block338, label %vector.body348, !llvm.loop !525

middle.block338:                                  ; preds = %vector.body348
  %cmp.n347 = icmp eq i64 %16, %n.vec346
  br i1 %cmp.n347, label %mem.copyForwards__anon_9882.exit, label %vec.epilog.iter.check355

vec.epilog.iter.check355:                         ; preds = %middle.block338
  %n.vec.remaining357 = and i64 %16, 24
  %min.epilog.iters.check358 = icmp eq i64 %n.vec.remaining357, 0
  br i1 %min.epilog.iters.check358, label %.lr.ph.i.preheader, label %vec.epilog.ph356

vec.epilog.ph356:                                 ; preds = %vec.epilog.iter.check355, %vector.main.loop.iter.check343
  %vec.epilog.resume.val359 = phi i64 [ %n.vec346, %vec.epilog.iter.check355 ], [ 0, %vector.main.loop.iter.check343 ]
  %n.vec361 = and i64 %16, -8
  %uglygep426 = getelementptr i8, ptr %0, i64 %vec.epilog.resume.val359
  %19 = sub i64 %vec.epilog.resume.val359, %n.vec361
  br label %vec.epilog.vector.body364

vec.epilog.vector.body364:                        ; preds = %vec.epilog.vector.body364, %vec.epilog.ph356
  %lsr.iv430 = phi i64 [ %lsr.iv.next431, %vec.epilog.vector.body364 ], [ %19, %vec.epilog.ph356 ]
  %lsr.iv427 = phi ptr [ %uglygep428, %vec.epilog.vector.body364 ], [ %uglygep426, %vec.epilog.ph356 ]
  %uglygep429 = getelementptr i8, ptr %lsr.iv427, i64 %12
  %wide.load366 = load <8 x i8>, ptr %uglygep429, align 1
  store <8 x i8> %wide.load366, ptr %lsr.iv427, align 1
  %uglygep428 = getelementptr i8, ptr %lsr.iv427, i64 8
  %lsr.iv.next431 = add i64 %lsr.iv430, 8
  %20 = icmp eq i64 %lsr.iv.next431, 0
  br i1 %20, label %vec.epilog.middle.block353, label %vec.epilog.vector.body364, !llvm.loop !526

vec.epilog.middle.block353:                       ; preds = %vec.epilog.vector.body364
  %cmp.n363 = icmp eq i64 %16, %n.vec361
  br i1 %cmp.n363, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block353, %vec.epilog.iter.check355, %iter.check341
  %.03.i.ph = phi i64 [ %n.vec361, %vec.epilog.middle.block353 ], [ %n.vec346, %vec.epilog.iter.check355 ], [ 0, %iter.check341 ]
  %21 = sub i64 %16, %.03.i.ph
  %uglygep422 = getelementptr i8, ptr %0, i64 %.03.i.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %lsr.iv423 = phi ptr [ %uglygep422, %.lr.ph.i.preheader ], [ %uglygep424, %.lr.ph.i ]
  %lsr.iv420 = phi i64 [ %21, %.lr.ph.i.preheader ], [ %lsr.iv.next421, %.lr.ph.i ]
  %uglygep425 = getelementptr i8, ptr %lsr.iv423, i64 %12
  %22 = load i8, ptr %uglygep425, align 1
  store i8 %22, ptr %lsr.iv423, align 1
  %lsr.iv.next421 = add i64 %lsr.iv420, -1
  %uglygep424 = getelementptr i8, ptr %lsr.iv423, i64 1
  %exitcond.not.i = icmp eq i64 %lsr.iv.next421, 0
  br i1 %exitcond.not.i, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i, !llvm.loop !527

mem.copyForwards__anon_9882.exit:                 ; preds = %.lr.ph.i, %vec.epilog.middle.block353, %middle.block338, %15
  %23 = getelementptr inbounds i8, ptr %0, i64 %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %23, ptr nonnull align 1 %2, i64 %12, i1 false)
  ret void

24:                                               ; preds = %11
  %25 = getelementptr inbounds i8, ptr %0, i64 %12
  %26 = sub nuw i64 %9, %4
  %27 = icmp ule i64 %26, %spec.store.select
  %28 = icmp ugt i64 %26, 3
  %29 = and i1 %27, %28
  br i1 %29, label %.lr.ph259.preheader, label %38

.lr.ph259.preheader:                              ; preds = %24
  %30 = mul nuw i64 %26, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %25, i64 %30, i1 false)
  %31 = sub i64 0, %5
  %32 = add i64 %4, -1
  %33 = mul i64 %5, %32
  %34 = add i64 %1, -1
  %35 = sub i64 %34, %4
  %36 = mul i64 %5, %35
  %37 = mul i64 %5, %34
  br label %.lr.ph259

38:                                               ; preds = %24
  %39 = mul nuw i64 %9, %5
  %40 = getelementptr inbounds i8, ptr %25, i64 %39
  %.not265 = icmp ult i64 %4, 2
  br i1 %.not265, label %._crit_edge236, label %.lr.ph235

.lr.ph235:                                        ; preds = %38
  %41 = lshr i64 %4, 1
  %42 = sub i64 0, %5
  %43 = add i64 %4, -1
  %44 = mul i64 %5, %43
  %45 = add i64 %1, -1
  %46 = mul i64 %5, %45
  br label %47

.lr.ph259:                                        ; preds = %.lr.ph259, %.lr.ph259.preheader
  %lsr.iv394 = phi i64 [ %4, %.lr.ph259.preheader ], [ %lsr.iv.next, %.lr.ph259 ]
  %lsr.iv = phi ptr [ %0, %.lr.ph259.preheader ], [ %uglygep390, %.lr.ph259 ]
  %uglygep392 = getelementptr i8, ptr %lsr.iv, i64 %36
  %uglygep393 = getelementptr i8, ptr %lsr.iv, i64 %37
  tail call void %6(ptr align 1 %uglygep392, ptr align 1 %uglygep393) #15
  %uglygep391 = getelementptr i8, ptr %lsr.iv, i64 %33
  tail call void %6(ptr align 1 %uglygep393, ptr align 1 %uglygep391) #15
  %uglygep390 = getelementptr i8, ptr %lsr.iv, i64 %31
  %lsr.iv.next = add i64 %lsr.iv394, -1
  %exitcond292.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond292.not, label %._crit_edge260, label %.lr.ph259

._crit_edge260:                                   ; preds = %.lr.ph259
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %30, i1 false)
  ret void

47:                                               ; preds = %47, %.lr.ph235
  %lsr.iv418 = phi i64 [ %41, %.lr.ph235 ], [ %lsr.iv.next419, %47 ]
  %lsr.iv411 = phi ptr [ %0, %.lr.ph235 ], [ %uglygep412, %47 ]
  %.0162233 = phi ptr [ %0, %.lr.ph235 ], [ %48, %47 ]
  %uglygep414 = getelementptr i8, ptr %.0162233, i64 %12
  %uglygep413 = getelementptr i8, ptr %lsr.iv411, i64 %44
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep413) #15
  call void %6(ptr align 1 %uglygep413, ptr align 1 %.0162233) #15
  call void %6(ptr align 1 %.0162233, ptr align 1 %uglygep414) #15
  %48 = getelementptr inbounds i8, ptr %.0162233, i64 %5
  %uglygep417 = getelementptr i8, ptr %lsr.iv411, i64 %46
  call void %6(ptr align 1 %uglygep414, ptr align 1 %uglygep417) #15
  call void %6(ptr align 1 %uglygep417, ptr nonnull align 1 %8) #15
  %uglygep412 = getelementptr i8, ptr %lsr.iv411, i64 %42
  %lsr.iv.next419 = add nsw i64 %lsr.iv418, -1
  %exitcond287.not = icmp eq i64 %lsr.iv.next419, 0
  br i1 %exitcond287.not, label %._crit_edge236.loopexit, label %47

._crit_edge236.loopexit:                          ; preds = %47
  %uglygep415 = getelementptr i8, ptr %48, i64 %12
  %49 = mul i64 %5, %1
  %uglygep416 = getelementptr i8, ptr %uglygep412, i64 %49
  br label %._crit_edge236

._crit_edge236:                                   ; preds = %._crit_edge236.loopexit, %38
  %.0174.lcssa = phi ptr [ %40, %38 ], [ %uglygep416, %._crit_edge236.loopexit ]
  %.0172.lcssa = phi ptr [ %25, %38 ], [ %uglygep415, %._crit_edge236.loopexit ]
  %.0162.lcssa = phi ptr [ %0, %38 ], [ %48, %._crit_edge236.loopexit ]
  %50 = ptrtoint ptr %.0174.lcssa to i64
  %51 = ptrtoint ptr %.0172.lcssa to i64
  %52 = sub nuw i64 %50, %51
  %53 = shl nuw i64 %5, 1
  %.not266 = icmp ugt i64 %53, %52
  br i1 %.not266, label %._crit_edge246, label %.lr.ph245

.lr.ph245:                                        ; preds = %._crit_edge236
  %54 = udiv i64 %52, %53
  %55 = sub i64 0, %5
  %umax288 = call i64 @llvm.umax.i64(i64 %54, i64 1)
  br label %56

56:                                               ; preds = %56, %.lr.ph245
  %lsr.iv409 = phi i64 [ %umax288, %.lr.ph245 ], [ %lsr.iv.next410, %56 ]
  %lsr.iv406 = phi i64 [ %55, %.lr.ph245 ], [ %lsr.iv.next407, %56 ]
  %lsr.iv400 = phi i64 [ 0, %.lr.ph245 ], [ %lsr.iv.next401, %56 ]
  %uglygep402 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv400
  %uglygep404 = getelementptr i8, ptr %.0172.lcssa, i64 %lsr.iv400
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep404) #15
  %uglygep408 = getelementptr i8, ptr %.0174.lcssa, i64 %lsr.iv406
  call void %6(ptr align 1 %uglygep404, ptr align 1 %uglygep408) #15
  call void %6(ptr align 1 %uglygep408, ptr align 1 %uglygep402) #15
  call void %6(ptr align 1 %uglygep402, ptr nonnull align 1 %8) #15
  %lsr.iv.next401 = add i64 %lsr.iv400, %5
  %lsr.iv.next407 = sub i64 %lsr.iv406, %5
  %lsr.iv.next410 = add i64 %lsr.iv409, -1
  %exitcond289.not = icmp eq i64 %lsr.iv.next410, 0
  br i1 %exitcond289.not, label %._crit_edge246.loopexit, label %56

._crit_edge246.loopexit:                          ; preds = %56
  %57 = ptrtoint ptr %.0174.lcssa to i64
  %58 = sub i64 %57, %lsr.iv.next401
  %uglygep403 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv.next401
  %59 = mul i64 %lsr.iv.next401, -1
  %uglygep405 = getelementptr i8, ptr %.0174.lcssa, i64 %59
  br label %._crit_edge246

._crit_edge246:                                   ; preds = %._crit_edge246.loopexit, %._crit_edge236
  %.pre-phi = phi i64 [ %58, %._crit_edge246.loopexit ], [ %50, %._crit_edge236 ]
  %.1175.lcssa = phi ptr [ %uglygep405, %._crit_edge246.loopexit ], [ %.0174.lcssa, %._crit_edge236 ]
  %.1163.lcssa = phi ptr [ %uglygep403, %._crit_edge246.loopexit ], [ %.0162.lcssa, %._crit_edge236 ]
  %60 = ptrtoint ptr %.1163.lcssa to i64
  %61 = sub nuw i64 %.pre-phi, %60
  %.not267 = icmp ugt i64 %53, %61
  br i1 %.not267, label %.loopexit, label %.lr.ph253

.lr.ph253:                                        ; preds = %._crit_edge246
  %62 = udiv i64 %61, %53
  %63 = sub i64 0, %5
  %umax290 = call i64 @llvm.umax.i64(i64 %62, i64 1)
  %uglygep395 = getelementptr i8, ptr %.1175.lcssa, i64 %63
  br label %64

64:                                               ; preds = %64, %.lr.ph253
  %lsr.iv398 = phi i64 [ %umax290, %.lr.ph253 ], [ %lsr.iv.next399, %64 ]
  %lsr.iv396 = phi ptr [ %uglygep395, %.lr.ph253 ], [ %uglygep397, %64 ]
  %.2164251 = phi ptr [ %.1163.lcssa, %.lr.ph253 ], [ %65, %64 ]
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.2164251) #15
  call void %6(ptr align 1 %.2164251, ptr align 1 %lsr.iv396) #15
  %65 = getelementptr inbounds i8, ptr %.2164251, i64 %5
  call void %6(ptr align 1 %lsr.iv396, ptr nonnull align 1 %8) #15
  %uglygep397 = getelementptr i8, ptr %lsr.iv396, i64 %63
  %lsr.iv.next399 = add i64 %lsr.iv398, -1
  %exitcond291.not = icmp eq i64 %lsr.iv.next399, 0
  br i1 %exitcond291.not, label %.loopexit, label %64

66:                                               ; preds = %13
  %.not = icmp ugt i64 %9, %spec.store.select
  br i1 %.not, label %97, label %69

67:                                               ; preds = %13
  %.not261 = icmp eq i64 %4, 0
  br i1 %.not261, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %67
  %68 = mul i64 %5, %4
  br label %.lr.ph

69:                                               ; preds = %66
  %70 = mul i64 %9, %5
  %71 = mul nuw i64 %5, %4
  %72 = getelementptr inbounds i8, ptr %0, i64 %71
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %72, i64 %70, i1 false)
  %.not6.i = icmp eq i64 %71, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %69
  %min.iters.check = icmp ult i64 %71, 8
  br i1 %min.iters.check, label %.lr.ph.i194.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %73 = add i64 %71, -1
  %74 = mul i64 %5, %1
  %75 = add i64 %74, -1
  %uglygep = getelementptr i8, ptr %0, i64 %75
  %76 = sub i64 1, %71
  %77 = getelementptr i8, ptr %uglygep, i64 %76
  %78 = icmp ugt ptr %77, %uglygep
  %uglygep317 = getelementptr i8, ptr %0, i64 %73
  %79 = icmp ult ptr %uglygep317, %0
  %80 = or i1 %78, %79
  br i1 %80, label %.lr.ph.i194.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %81 = ptrtoint ptr %0 to i64
  %82 = add i64 %71, %81
  %83 = mul i64 %5, %1
  %84 = add i64 %83, %81
  %85 = sub i64 %82, %84
  %diff.check = icmp ult i64 %85, 32
  br i1 %diff.check, label %.lr.ph.i194.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check321 = icmp ult i64 %71, 32
  br i1 %min.iters.check321, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %71, -32
  %86 = add i64 %83, -16
  %uglygep483 = getelementptr i8, ptr %0, i64 %86
  %87 = add i64 %71, -16
  %uglygep487 = getelementptr i8, ptr %0, i64 %87
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv488 = phi ptr [ %uglygep489, %vector.body ], [ %uglygep487, %vector.ph ]
  %lsr.iv484 = phi ptr [ %uglygep485, %vector.body ], [ %uglygep483, %vector.ph ]
  %lsr.iv481 = phi i64 [ %lsr.iv.next482, %vector.body ], [ %n.vec, %vector.ph ]
  %wide.load = load <16 x i8>, ptr %lsr.iv488, align 1
  %uglygep490 = getelementptr i8, ptr %lsr.iv488, i64 -16
  %wide.load322 = load <16 x i8>, ptr %uglygep490, align 1
  store <16 x i8> %wide.load, ptr %lsr.iv484, align 1
  %uglygep486 = getelementptr i8, ptr %lsr.iv484, i64 -16
  store <16 x i8> %wide.load322, ptr %uglygep486, align 1
  %lsr.iv.next482 = add i64 %lsr.iv481, -32
  %uglygep485 = getelementptr i8, ptr %lsr.iv484, i64 -32
  %uglygep489 = getelementptr i8, ptr %lsr.iv488, i64 -32
  %88 = icmp eq i64 %lsr.iv.next482, 0
  br i1 %88, label %middle.block, label %vector.body, !llvm.loop !528

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %71, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end328 = and i64 %71, 31
  %n.vec.remaining = and i64 %71, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i194.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec327 = and i64 %71, -8
  %ind.end = and i64 %71, 7
  %89 = add i64 %83, -8
  %90 = sub i64 %89, %vec.epilog.resume.val
  %uglygep473 = getelementptr i8, ptr %0, i64 %90
  %91 = add i64 %71, -8
  %92 = sub i64 %91, %vec.epilog.resume.val
  %uglygep476 = getelementptr i8, ptr %0, i64 %92
  %93 = sub i64 %vec.epilog.resume.val, %n.vec327
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv479 = phi i64 [ %lsr.iv.next480, %vec.epilog.vector.body ], [ %93, %vec.epilog.ph ]
  %lsr.iv477 = phi ptr [ %uglygep478, %vec.epilog.vector.body ], [ %uglygep476, %vec.epilog.ph ]
  %lsr.iv474 = phi ptr [ %uglygep475, %vec.epilog.vector.body ], [ %uglygep473, %vec.epilog.ph ]
  %wide.load332 = load <8 x i8>, ptr %lsr.iv477, align 1
  store <8 x i8> %wide.load332, ptr %lsr.iv474, align 1
  %uglygep475 = getelementptr i8, ptr %lsr.iv474, i64 -8
  %uglygep478 = getelementptr i8, ptr %lsr.iv477, i64 -8
  %lsr.iv.next480 = add i64 %lsr.iv479, 8
  %94 = icmp eq i64 %lsr.iv.next480, 0
  br i1 %94, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !529

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n329 = icmp eq i64 %71, %n.vec327
  br i1 %cmp.n329, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i194.preheader

.lr.ph.i194.preheader:                            ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end, %vec.epilog.middle.block ], [ %ind.end328, %vec.epilog.iter.check ], [ %71, %vector.scevcheck ], [ %71, %vector.memcheck ], [ %71, %iter.check ]
  %uglygep470 = getelementptr i8, ptr %0, i64 %70
  br label %.lr.ph.i194

.lr.ph.i194:                                      ; preds = %.lr.ph.i194, %.lr.ph.i194.preheader
  %.07.i = phi i64 [ %95, %.lr.ph.i194 ], [ %.07.i.ph, %.lr.ph.i194.preheader ]
  %95 = add i64 %.07.i, -1
  %uglygep471 = getelementptr i8, ptr %uglygep470, i64 %.07.i
  %uglygep472 = getelementptr i8, ptr %uglygep471, i64 -1
  %uglygep468 = getelementptr i8, ptr %0, i64 %.07.i
  %uglygep469 = getelementptr i8, ptr %uglygep468, i64 -1
  %96 = load i8, ptr %uglygep469, align 1
  store i8 %96, ptr %uglygep472, align 1
  %.not.i193 = icmp eq i64 %95, 0
  br i1 %.not.i193, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i194, !llvm.loop !530

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i194, %vec.epilog.middle.block, %middle.block, %69
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %70, i1 false)
  ret void

97:                                               ; preds = %66
  %98 = mul i64 %5, %4
  %99 = getelementptr inbounds i8, ptr %0, i64 %98
  %100 = sub nuw i64 %4, %9
  %101 = icmp ule i64 %100, %spec.store.select
  %102 = icmp ugt i64 %100, 3
  %103 = and i1 %101, %102
  %104 = mul i64 %9, %5
  br i1 %103, label %.lr.ph227.preheader, label %108

.lr.ph227.preheader:                              ; preds = %97
  %105 = getelementptr inbounds i8, ptr %0, i64 %104
  %106 = getelementptr inbounds i8, ptr %105, i64 %98
  %107 = mul nuw i64 %100, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %105, i64 %107, i1 false)
  br label %.lr.ph227

108:                                              ; preds = %97
  %109 = getelementptr inbounds i8, ptr %99, i64 %104
  %.not262 = icmp ult i64 %9, 2
  br i1 %.not262, label %._crit_edge, label %.lr.ph205

.lr.ph205:                                        ; preds = %108
  %110 = lshr i64 %9, 1
  %111 = sub i64 0, %5
  %112 = add i64 %1, -1
  %113 = mul i64 %5, %112
  %114 = add i64 %4, -1
  %115 = mul i64 %5, %114
  br label %119

.lr.ph227:                                        ; preds = %.lr.ph227, %.lr.ph227.preheader
  %lsr.iv439 = phi i64 [ %9, %.lr.ph227.preheader ], [ %lsr.iv.next440, %.lr.ph227 ]
  %.0183222 = phi ptr [ %116, %.lr.ph227 ], [ %0, %.lr.ph227.preheader ]
  %uglygep441 = getelementptr i8, ptr %.0183222, i64 %104
  %uglygep442 = getelementptr i8, ptr %.0183222, i64 %98
  tail call void %6(ptr align 1 %uglygep441, ptr align 1 %.0183222) #15
  tail call void %6(ptr align 1 %.0183222, ptr align 1 %uglygep442) #15
  %116 = getelementptr inbounds i8, ptr %.0183222, i64 %5
  %lsr.iv.next440 = add i64 %lsr.iv439, -1
  %exitcond285.not = icmp eq i64 %lsr.iv.next440, 0
  br i1 %exitcond285.not, label %._crit_edge228, label %.lr.ph227

._crit_edge228:                                   ; preds = %.lr.ph227
  %117 = sub i64 0, %107
  %118 = getelementptr inbounds i8, ptr %106, i64 %117
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %118, ptr nonnull align 1 %2, i64 %107, i1 false)
  ret void

119:                                              ; preds = %119, %.lr.ph205
  %lsr.iv461 = phi ptr [ %0, %.lr.ph205 ], [ %uglygep462, %119 ]
  %lsr.iv459 = phi i64 [ %110, %.lr.ph205 ], [ %lsr.iv.next460, %119 ]
  %.1184200 = phi ptr [ %0, %.lr.ph205 ], [ %120, %119 ]
  %uglygep465 = getelementptr i8, ptr %.1184200, i64 %98
  %uglygep467 = getelementptr i8, ptr %lsr.iv461, i64 %115
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep467) #15
  call void %6(ptr align 1 %uglygep467, ptr align 1 %.1184200) #15
  call void %6(ptr align 1 %.1184200, ptr align 1 %uglygep465) #15
  %120 = getelementptr inbounds i8, ptr %.1184200, i64 %5
  %uglygep464 = getelementptr i8, ptr %lsr.iv461, i64 %113
  call void %6(ptr align 1 %uglygep465, ptr align 1 %uglygep464) #15
  call void %6(ptr align 1 %uglygep464, ptr nonnull align 1 %8) #15
  %lsr.iv.next460 = add i64 %lsr.iv459, -1
  %uglygep462 = getelementptr i8, ptr %lsr.iv461, i64 %111
  %exitcond279.not = icmp eq i64 %lsr.iv.next460, 0
  br i1 %exitcond279.not, label %._crit_edge.loopexit, label %119

._crit_edge.loopexit:                             ; preds = %119
  %121 = mul i64 %5, %1
  %uglygep463 = getelementptr i8, ptr %uglygep462, i64 %121
  %uglygep466 = getelementptr i8, ptr %uglygep462, i64 %98
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %108
  %.1184.lcssa = phi ptr [ %0, %108 ], [ %120, %._crit_edge.loopexit ]
  %.1181.lcssa = phi ptr [ %99, %108 ], [ %uglygep466, %._crit_edge.loopexit ]
  %.0160.lcssa = phi ptr [ %109, %108 ], [ %uglygep463, %._crit_edge.loopexit ]
  %122 = ptrtoint ptr %.1181.lcssa to i64
  %123 = ptrtoint ptr %.1184.lcssa to i64
  %124 = sub nuw i64 %122, %123
  %125 = shl nuw i64 %5, 1
  %.not263 = icmp ugt i64 %125, %124
  br i1 %.not263, label %._crit_edge214, label %.lr.ph213

.lr.ph213:                                        ; preds = %._crit_edge
  %126 = udiv i64 %124, %125
  %127 = sub i64 0, %5
  %umax280 = call i64 @llvm.umax.i64(i64 %126, i64 1)
  br label %128

128:                                              ; preds = %128, %.lr.ph213
  %lsr.iv453 = phi i64 [ %127, %.lr.ph213 ], [ %lsr.iv.next454, %128 ]
  %lsr.iv450 = phi i64 [ 0, %.lr.ph213 ], [ %lsr.iv.next451, %128 ]
  %lsr.iv448 = phi i64 [ %umax280, %.lr.ph213 ], [ %lsr.iv.next449, %128 ]
  %uglygep457 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv450
  %uglygep456 = getelementptr i8, ptr %.1181.lcssa, i64 %lsr.iv453
  call void %6(ptr nonnull align 1 %8, ptr align 1 %uglygep456) #15
  call void %6(ptr align 1 %uglygep456, ptr align 1 %uglygep457) #15
  %uglygep455 = getelementptr i8, ptr %.0160.lcssa, i64 %lsr.iv453
  call void %6(ptr align 1 %uglygep457, ptr align 1 %uglygep455) #15
  call void %6(ptr align 1 %uglygep455, ptr nonnull align 1 %8) #15
  %lsr.iv.next449 = add i64 %lsr.iv448, -1
  %lsr.iv.next451 = add i64 %lsr.iv450, %5
  %lsr.iv.next454 = sub i64 %lsr.iv453, %5
  %exitcond281.not = icmp eq i64 %lsr.iv.next449, 0
  br i1 %exitcond281.not, label %._crit_edge214.loopexit, label %128

._crit_edge214.loopexit:                          ; preds = %128
  %129 = ptrtoint ptr %.1184.lcssa to i64
  %130 = add i64 %129, %lsr.iv.next451
  %131 = mul i64 %lsr.iv.next451, -1
  %uglygep452 = getelementptr i8, ptr %.0160.lcssa, i64 %131
  %uglygep458 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv.next451
  br label %._crit_edge214

._crit_edge214:                                   ; preds = %._crit_edge214.loopexit, %._crit_edge
  %.pre-phi294 = phi i64 [ %130, %._crit_edge214.loopexit ], [ %123, %._crit_edge ]
  %.2185.lcssa = phi ptr [ %uglygep458, %._crit_edge214.loopexit ], [ %.1184.lcssa, %._crit_edge ]
  %.1.lcssa = phi ptr [ %uglygep452, %._crit_edge214.loopexit ], [ %.0160.lcssa, %._crit_edge ]
  %132 = ptrtoint ptr %.1.lcssa to i64
  %133 = sub nuw i64 %132, %.pre-phi294
  %.not264 = icmp ugt i64 %125, %133
  br i1 %.not264, label %.loopexit, label %.lr.ph221

.lr.ph221:                                        ; preds = %._crit_edge214
  %134 = udiv i64 %133, %125
  %135 = sub i64 0, %5
  %umax282 = call i64 @llvm.umax.i64(i64 %134, i64 1)
  %uglygep445 = getelementptr i8, ptr %.1.lcssa, i64 %135
  br label %136

136:                                              ; preds = %136, %.lr.ph221
  %lsr.iv446 = phi ptr [ %uglygep445, %.lr.ph221 ], [ %uglygep447, %136 ]
  %lsr.iv443 = phi i64 [ %umax282, %.lr.ph221 ], [ %lsr.iv.next444, %136 ]
  %.3217 = phi ptr [ %.2185.lcssa, %.lr.ph221 ], [ %137, %136 ]
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.3217) #15
  call void %6(ptr align 1 %.3217, ptr align 1 %lsr.iv446) #15
  %137 = getelementptr inbounds i8, ptr %.3217, i64 %5
  call void %6(ptr align 1 %lsr.iv446, ptr nonnull align 1 %8) #15
  %lsr.iv.next444 = add i64 %lsr.iv443, -1
  %uglygep447 = getelementptr i8, ptr %lsr.iv446, i64 %135
  %exitcond283.not = icmp eq i64 %lsr.iv.next444, 0
  br i1 %exitcond283.not, label %.loopexit, label %136

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv491 = phi i64 [ %4, %.lr.ph.preheader ], [ %lsr.iv.next492, %.lr.ph ]
  %.0156197 = phi ptr [ %138, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  %uglygep493 = getelementptr i8, ptr %.0156197, i64 %68
  call void %6(ptr nonnull align 1 %8, ptr align 1 %.0156197) #15
  call void %6(ptr align 1 %.0156197, ptr align 1 %uglygep493) #15
  %138 = getelementptr inbounds i8, ptr %.0156197, i64 %5
  call void %6(ptr align 1 %uglygep493, ptr nonnull align 1 %8) #15
  %lsr.iv.next492 = add i64 %lsr.iv491, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next492, 0
  br i1 %exitcond.not, label %.loopexit, label %.lr.ph
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16703(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = alloca ptr, align 8
  %16 = icmp eq i64 %1, %4
  br i1 %16, label %common.ret, label %17

common.ret:                                       ; preds = %.lr.ph19, %.preheader, %17, %10
  ret void

17:                                               ; preds = %10
  %18 = mul nuw i64 %7, %4
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %15, align 8
  %20 = add i64 %1, -1
  %21 = mul nuw i64 %20, %7
  %22 = getelementptr inbounds i8, ptr %0, i64 %21
  store ptr %22, ptr %14, align 8
  tail call void %9(ptr align 1 %6, i64 1) #15
  %23 = sub i64 0, %7
  %24 = getelementptr inbounds i8, ptr %19, i64 %23
  %25 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %24, ptr nonnull align 1 %19) #15
  %.not = icmp eq i8 %25, 1
  br i1 %.not, label %26, label %common.ret

26:                                               ; preds = %17
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %18, i1 false)
  store ptr %2, ptr %13, align 8
  %27 = add i64 %4, -1
  %28 = mul nuw i64 %27, %7
  %29 = getelementptr inbounds i8, ptr %2, i64 %28
  store ptr %29, ptr %12, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = sub nuw i64 %30, %7
  %32 = ptrtoint ptr %22 to i64
  %33 = sub nuw i64 %32, %7
  store ptr %0, ptr %11, align 8
  %34 = ptrtoint ptr %2 to i64
  %35 = icmp ugt i64 %31, %34
  %36 = ptrtoint ptr %19 to i64
  %37 = icmp ugt i64 %33, %36
  %38 = select i1 %35, i1 %37, i1 false
  br i1 %38, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %26
  %39 = shl nuw i64 %7, 1
  br label %46

._crit_edge.loopexit:                             ; preds = %select.end56
  %40 = getelementptr inbounds i8, ptr %57, i64 %7
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %26
  %41 = phi ptr [ %19, %26 ], [ %.pre26.pre, %.._crit_edge.loopexit_crit_edge ], [ %66, %._crit_edge.loopexit ]
  %42 = phi ptr [ %2, %26 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %63, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %26 ], [ %.promoted.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %40, %._crit_edge.loopexit ]
  %43 = icmp ule ptr %42, %29
  %44 = icmp ule ptr %41, %22
  %45 = select i1 %43, i1 %44, i1 false
  br i1 %45, label %.lr.ph13.preheader, label %.preheader

.lr.ph13.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph13

46:                                               ; preds = %select.end56, %.lr.ph
  %47 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16774(ptr nonnull align 8 %11, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %12, ptr nonnull align 8 %15, ptr nonnull readonly align 8 %14, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  br i1 %47, label %.._crit_edge.loopexit_crit_edge, label %48

.._crit_edge.loopexit_crit_edge:                  ; preds = %46
  %.promoted.pre.pre = load ptr, ptr %11, align 8
  %.pre.pre = load ptr, ptr %13, align 8
  %.pre26.pre = load ptr, ptr %15, align 8
  br label %._crit_edge

48:                                               ; preds = %46
  tail call void %9(ptr align 1 %6, i64 2) #15
  %49 = load ptr, ptr %13, align 8
  %50 = load ptr, ptr %15, align 8
  %51 = tail call i8 %5(ptr align 1 %6, ptr align 1 %49, ptr align 1 %50) #15
  %..frozen = freeze i8 %51
  %.not9 = icmp eq i8 %..frozen, 1
  br i1 %.not9, label %select.end54, label %select.false55

select.false55:                                   ; preds = %48
  br label %select.end54

select.end54:                                     ; preds = %select.false55, %48
  %. = phi i64 [ 0, %48 ], [ %7, %select.false55 ]
  %.1 = phi i64 [ %7, %48 ], [ 0, %select.false55 ]
  %52 = load ptr, ptr %11, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 %.
  tail call void %8(ptr align 1 %53, ptr align 1 %50) #15
  %54 = getelementptr inbounds i8, ptr %50, i64 %7
  store ptr %54, ptr %15, align 8
  %55 = getelementptr inbounds i8, ptr %52, i64 %.1
  tail call void %8(ptr align 1 %55, ptr align 1 %49) #15
  %56 = getelementptr inbounds i8, ptr %49, i64 %7
  store ptr %56, ptr %13, align 8
  %57 = getelementptr inbounds i8, ptr %52, i64 %39
  %58 = tail call i8 %5(ptr align 1 %6, ptr align 1 %56, ptr align 1 %54) #15
  %.2.frozen = freeze i8 %58
  %.not10 = icmp eq i8 %.2.frozen, 1
  br i1 %.not10, label %select.end56, label %select.false57

select.false57:                                   ; preds = %select.end54
  br label %select.end56

select.end56:                                     ; preds = %select.false57, %select.end54
  %.2 = phi ptr [ %15, %select.end54 ], [ %13, %select.false57 ]
  %59 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %57, ptr align 1 %59) #15
  %60 = load ptr, ptr %.2, align 8
  %61 = getelementptr inbounds i8, ptr %60, i64 %7
  store ptr %61, ptr %.2, align 8
  %62 = getelementptr inbounds i8, ptr %57, i64 %7
  store ptr %62, ptr %11, align 8
  %63 = load ptr, ptr %13, align 8
  %64 = ptrtoint ptr %63 to i64
  %65 = icmp ugt i64 %31, %64
  %66 = load ptr, ptr %15, align 8
  %67 = ptrtoint ptr %66 to i64
  %68 = icmp ugt i64 %33, %67
  %69 = select i1 %65, i1 %68, i1 false
  br i1 %69, label %46, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted14 = phi ptr [ %42, %._crit_edge ], [ %78, %select.end ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %77, %select.end ]
  %.not718 = icmp ugt ptr %.promoted14, %29
  br i1 %.not718, label %common.ret, label %.lr.ph19.preheader

.lr.ph19.preheader:                               ; preds = %.preheader
  br label %.lr.ph19

.lr.ph13:                                         ; preds = %select.end, %.lr.ph13.preheader
  %70 = phi ptr [ %80, %select.end ], [ %41, %.lr.ph13.preheader ]
  %71 = phi ptr [ %78, %select.end ], [ %42, %.lr.ph13.preheader ]
  %72 = phi ptr [ %77, %select.end ], [ %.promoted, %.lr.ph13.preheader ]
  tail call void %9(ptr align 1 %6, i64 1) #15
  %73 = tail call i8 %5(ptr align 1 %6, ptr align 1 %71, ptr align 1 %70) #15
  %.3.frozen = freeze i8 %73
  %.not8 = icmp eq i8 %.3.frozen, 1
  br i1 %.not8, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph13
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph13
  %.3 = phi ptr [ %15, %.lr.ph13 ], [ %13, %select.false ]
  %74 = load ptr, ptr %.3, align 8
  tail call void %8(ptr align 1 %72, ptr align 1 %74) #15
  %75 = load ptr, ptr %.3, align 8
  %76 = getelementptr inbounds i8, ptr %75, i64 %7
  store ptr %76, ptr %.3, align 8
  %77 = getelementptr inbounds i8, ptr %72, i64 %7
  %78 = load ptr, ptr %13, align 8
  %79 = icmp ule ptr %78, %29
  %80 = load ptr, ptr %15, align 8
  %81 = icmp ule ptr %80, %22
  %82 = select i1 %79, i1 %81, i1 false
  br i1 %82, label %.lr.ph13, label %.preheader

.lr.ph19:                                         ; preds = %.lr.ph19, %.lr.ph19.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph19.preheader ], [ %lsr.iv.next, %.lr.ph19 ]
  %uglygep52 = getelementptr i8, ptr %.promoted14, i64 %lsr.iv
  %uglygep53 = getelementptr i8, ptr %.lcssa, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep53, ptr align 1 %uglygep52) #15
  %lsr.iv.next = add i64 %lsr.iv, %7
  %uglygep = getelementptr i8, ptr %.promoted14, i64 %lsr.iv.next
  %.not7 = icmp ugt ptr %uglygep, %29
  br i1 %.not7, label %common.ret, label %.lr.ph19
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16712(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = sub i64 0, %7
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %9
  %11 = phi ptr [ %26, %15 ], [ %.pre, %9 ]
  %12 = load ptr, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %11, i64 %10
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %32, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #15
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %10
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %10
  store ptr %21, ptr %4, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #15
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %10
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %4, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %10
  store ptr %26, ptr %4, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %3, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = add nuw i64 %29, %7
  %31 = icmp ult i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %2, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %10
  %35 = load ptr, ptr %4, align 8
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %35) #15
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %common.ret

common.ret:                                       ; preds = %38, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %38 ], [ true, %15 ]
  ret i1 %common.ret.op

38:                                               ; preds = %32
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #15
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %10
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %2, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %10
  store ptr %44, ptr %2, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #15
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %10
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %10
  store ptr %49, ptr %2, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %1, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = add nuw i64 %52, %7
  %54 = icmp ult i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16777(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16714(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca ptr, align 8
  %15 = icmp eq i64 %1, %4
  br i1 %15, label %common.ret, label %16

common.ret:                                       ; preds = %.lr.ph19, %.preheader, %16, %9
  ret void

16:                                               ; preds = %9
  %17 = mul nuw i64 %7, %4
  %18 = getelementptr inbounds i8, ptr %0, i64 %17
  store ptr %18, ptr %14, align 8
  %19 = add i64 %1, -1
  %20 = mul nuw i64 %19, %7
  %21 = getelementptr inbounds i8, ptr %0, i64 %20
  store ptr %21, ptr %13, align 8
  %22 = sub i64 0, %7
  %23 = getelementptr inbounds i8, ptr %18, i64 %22
  %24 = tail call i8 %5(ptr align 1 %6, ptr nonnull align 1 %23, ptr nonnull align 1 %18) #15
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %16
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %17, i1 false)
  store ptr %2, ptr %12, align 8
  %26 = add i64 %4, -1
  %27 = mul nuw i64 %26, %7
  %28 = getelementptr inbounds i8, ptr %2, i64 %27
  store ptr %28, ptr %11, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = ptrtoint ptr %21 to i64
  %32 = sub nuw i64 %31, %7
  store ptr %0, ptr %10, align 8
  %33 = ptrtoint ptr %2 to i64
  %34 = icmp ugt i64 %30, %33
  %35 = ptrtoint ptr %18 to i64
  %36 = icmp ugt i64 %32, %35
  %37 = select i1 %34, i1 %36, i1 false
  br i1 %37, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %25
  %38 = shl nuw i64 %7, 1
  br label %45

._crit_edge.loopexit:                             ; preds = %select.end20
  %39 = getelementptr inbounds i8, ptr %56, i64 %7
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %25
  %40 = phi ptr [ %18, %25 ], [ %.pre26.pre, %.._crit_edge.loopexit_crit_edge ], [ %65, %._crit_edge.loopexit ]
  %41 = phi ptr [ %2, %25 ], [ %.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %62, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %25 ], [ %.promoted.pre.pre, %.._crit_edge.loopexit_crit_edge ], [ %39, %._crit_edge.loopexit ]
  %42 = icmp ule ptr %41, %28
  %43 = icmp ule ptr %40, %21
  %44 = select i1 %42, i1 %43, i1 false
  br i1 %44, label %.lr.ph13.preheader, label %.preheader

.lr.ph13.preheader:                               ; preds = %._crit_edge
  br label %.lr.ph13

45:                                               ; preds = %select.end20, %.lr.ph
  %46 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16778(ptr nonnull align 8 %10, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %11, ptr nonnull align 8 %14, ptr nonnull readonly align 8 %13, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  br i1 %46, label %.._crit_edge.loopexit_crit_edge, label %47

.._crit_edge.loopexit_crit_edge:                  ; preds = %45
  %.promoted.pre.pre = load ptr, ptr %10, align 8
  %.pre.pre = load ptr, ptr %12, align 8
  %.pre26.pre = load ptr, ptr %14, align 8
  br label %._crit_edge

47:                                               ; preds = %45
  %48 = load ptr, ptr %12, align 8
  %49 = load ptr, ptr %14, align 8
  %50 = tail call i8 %5(ptr align 1 %6, ptr align 1 %48, ptr align 1 %49) #15
  %..frozen = freeze i8 %50
  %.not9 = icmp eq i8 %..frozen, 1
  br i1 %.not9, label %select.end18, label %select.false19

select.false19:                                   ; preds = %47
  br label %select.end18

select.end18:                                     ; preds = %select.false19, %47
  %. = phi i64 [ 0, %47 ], [ %7, %select.false19 ]
  %.1 = phi i64 [ %7, %47 ], [ 0, %select.false19 ]
  %51 = load ptr, ptr %10, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 %.
  tail call void %8(ptr align 1 %52, ptr align 1 %49) #15
  %53 = getelementptr inbounds i8, ptr %49, i64 %7
  store ptr %53, ptr %14, align 8
  %54 = getelementptr inbounds i8, ptr %51, i64 %.1
  tail call void %8(ptr align 1 %54, ptr align 1 %48) #15
  %55 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %55, ptr %12, align 8
  %56 = getelementptr inbounds i8, ptr %51, i64 %38
  %57 = tail call i8 %5(ptr align 1 %6, ptr align 1 %55, ptr align 1 %53) #15
  %.2.frozen = freeze i8 %57
  %.not10 = icmp eq i8 %.2.frozen, 1
  br i1 %.not10, label %select.end20, label %select.false21

select.false21:                                   ; preds = %select.end18
  br label %select.end20

select.end20:                                     ; preds = %select.false21, %select.end18
  %.2 = phi ptr [ %14, %select.end18 ], [ %12, %select.false21 ]
  %58 = load ptr, ptr %.2, align 8
  tail call void %8(ptr align 1 %56, ptr align 1 %58) #15
  %59 = load ptr, ptr %.2, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 %7
  store ptr %60, ptr %.2, align 8
  %61 = getelementptr inbounds i8, ptr %56, i64 %7
  store ptr %61, ptr %10, align 8
  %62 = load ptr, ptr %12, align 8
  %63 = ptrtoint ptr %62 to i64
  %64 = icmp ugt i64 %30, %63
  %65 = load ptr, ptr %14, align 8
  %66 = ptrtoint ptr %65 to i64
  %67 = icmp ugt i64 %32, %66
  %68 = select i1 %64, i1 %67, i1 false
  br i1 %68, label %45, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted14 = phi ptr [ %41, %._crit_edge ], [ %77, %select.end ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %76, %select.end ]
  %.not718 = icmp ugt ptr %.promoted14, %28
  br i1 %.not718, label %common.ret, label %.lr.ph19.preheader

.lr.ph19.preheader:                               ; preds = %.preheader
  br label %.lr.ph19

.lr.ph13:                                         ; preds = %select.end, %.lr.ph13.preheader
  %69 = phi ptr [ %79, %select.end ], [ %40, %.lr.ph13.preheader ]
  %70 = phi ptr [ %77, %select.end ], [ %41, %.lr.ph13.preheader ]
  %71 = phi ptr [ %76, %select.end ], [ %.promoted, %.lr.ph13.preheader ]
  %72 = tail call i8 %5(ptr align 1 %6, ptr align 1 %70, ptr align 1 %69) #15
  %.3.frozen = freeze i8 %72
  %.not8 = icmp eq i8 %.3.frozen, 1
  br i1 %.not8, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph13
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph13
  %.3 = phi ptr [ %14, %.lr.ph13 ], [ %12, %select.false ]
  %73 = load ptr, ptr %.3, align 8
  tail call void %8(ptr align 1 %71, ptr align 1 %73) #15
  %74 = load ptr, ptr %.3, align 8
  %75 = getelementptr inbounds i8, ptr %74, i64 %7
  store ptr %75, ptr %.3, align 8
  %76 = getelementptr inbounds i8, ptr %71, i64 %7
  %77 = load ptr, ptr %12, align 8
  %78 = icmp ule ptr %77, %28
  %79 = load ptr, ptr %14, align 8
  %80 = icmp ule ptr %79, %21
  %81 = select i1 %78, i1 %80, i1 false
  br i1 %81, label %.lr.ph13, label %.preheader

.lr.ph19:                                         ; preds = %.lr.ph19, %.lr.ph19.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph19.preheader ], [ %lsr.iv.next, %.lr.ph19 ]
  %uglygep16 = getelementptr i8, ptr %.promoted14, i64 %lsr.iv
  %uglygep17 = getelementptr i8, ptr %.lcssa, i64 %lsr.iv
  tail call void %8(ptr align 1 %uglygep17, ptr align 1 %uglygep16) #15
  %lsr.iv.next = add i64 %lsr.iv, %7
  %uglygep = getelementptr i8, ptr %.promoted14, i64 %lsr.iv.next
  %.not7 = icmp ugt ptr %uglygep, %28
  br i1 %.not7, label %common.ret, label %.lr.ph19
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16723(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %8
  %9 = phi ptr [ %28, %15 ], [ %.pre, %8 ]
  %10 = load ptr, ptr %2, align 8
  %11 = getelementptr inbounds i8, ptr %9, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %34, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %4, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 -8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %4, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 -8
  store ptr %22, ptr %4, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 -8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %4, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 -8
  store ptr %28, ptr %4, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %3, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, 8
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 -8
  %37 = load ptr, ptr %4, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #15
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %42, label %common.ret

common.ret:                                       ; preds = %42, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %42 ], [ true, %15 ]
  ret i1 %common.ret.op

42:                                               ; preds = %34
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %2, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 -8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 -8
  store ptr %49, ptr %2, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 -8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %2, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 -8
  store ptr %55, ptr %2, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %1, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add nuw i64 %58, 8
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16781(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16725(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = icmp eq i64 %1, %4
  br i1 %14, label %common.ret, label %15

common.ret:                                       ; preds = %.lr.ph9, %.preheader, %15, %8
  ret void

15:                                               ; preds = %8
  %16 = shl i64 %4, 3
  %17 = getelementptr inbounds i8, ptr %0, i64 %16
  store ptr %17, ptr %13, align 8
  %18 = shl i64 %1, 3
  %19 = add i64 %18, -8
  %20 = getelementptr inbounds i8, ptr %0, i64 %19
  store ptr %20, ptr %12, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %21 = getelementptr inbounds i8, ptr %17, i64 -8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %17, align 8
  %24 = tail call i8 %5(ptr align 1 %6, ptr align 1 %22, ptr align 1 %23) #15
  %.not = icmp eq i8 %24, 1
  br i1 %.not, label %25, label %common.ret

25:                                               ; preds = %15
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %16, i1 false)
  store ptr %2, ptr %11, align 8
  %26 = add i64 %16, -8
  %27 = getelementptr inbounds i8, ptr %2, i64 %26
  store ptr %27, ptr %10, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = add i64 %28, -8
  %30 = ptrtoint ptr %20 to i64
  %31 = add i64 %30, -8
  store ptr %0, ptr %9, align 8
  %32 = ptrtoint ptr %2 to i64
  %33 = icmp ugt i64 %29, %32
  %34 = ptrtoint ptr %17 to i64
  %35 = icmp ugt i64 %31, %34
  %36 = select i1 %33, i1 %35, i1 false
  br i1 %36, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %25
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %select.end18
  %37 = getelementptr inbounds i8, ptr %50, i64 24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %25
  %38 = phi ptr [ %17, %25 ], [ %.pre16.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %67, %._crit_edge.loopexit ]
  %39 = phi ptr [ %2, %25 ], [ %.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %64, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %25 ], [ %.promoted.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %37, %._crit_edge.loopexit ]
  %40 = icmp ule ptr %39, %27
  %41 = icmp ule ptr %38, %20
  %42 = select i1 %40, i1 %41, i1 false
  br i1 %42, label %.lr.ph3.preheader, label %.preheader

.lr.ph3.preheader:                                ; preds = %._crit_edge
  br label %.lr.ph3

.lr.ph:                                           ; preds = %select.end18, %.lr.ph.preheader
  %43 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16782(ptr nonnull align 8 %9, ptr nonnull align 8 %11, ptr nonnull readonly align 8 %10, ptr nonnull align 8 %13, ptr nonnull readonly align 8 %12, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  br i1 %43, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %44

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted.pre.pre = load ptr, ptr %9, align 8
  %.pre.pre = load ptr, ptr %11, align 8
  %.pre16.pre = load ptr, ptr %13, align 8
  br label %._crit_edge

44:                                               ; preds = %.lr.ph
  tail call void %7(ptr align 1 %6, i64 2) #15
  %45 = load ptr, ptr %11, align 8
  %46 = load ptr, ptr %13, align 8
  %47 = load ptr, ptr %45, align 8
  %48 = load ptr, ptr %46, align 8
  %49 = tail call i8 %5(ptr align 1 %6, ptr align 1 %47, ptr align 1 %48) #15
  %..frozen = freeze i8 %49
  %.not9 = icmp eq i8 %..frozen, 1
  br i1 %.not9, label %select.end16, label %select.false17

select.false17:                                   ; preds = %44
  br label %select.end16

select.end16:                                     ; preds = %select.false17, %44
  %. = phi i64 [ 0, %44 ], [ 8, %select.false17 ]
  %.1 = phi i64 [ 8, %44 ], [ 0, %select.false17 ]
  %50 = load ptr, ptr %9, align 8
  %51 = getelementptr inbounds i8, ptr %50, i64 %.
  %52 = load i64, ptr %46, align 8
  store i64 %52, ptr %51, align 8
  %53 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %53, ptr %13, align 8
  %54 = getelementptr inbounds i8, ptr %50, i64 %.1
  %55 = load i64, ptr %45, align 8
  store i64 %55, ptr %54, align 8
  %56 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %56, ptr %11, align 8
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %53, align 8
  %59 = tail call i8 %5(ptr align 1 %6, ptr align 1 %57, ptr align 1 %58) #15
  %.2.frozen = freeze i8 %59
  %.not10 = icmp eq i8 %.2.frozen, 1
  br i1 %.not10, label %select.end18, label %select.false19

select.false19:                                   ; preds = %select.end16
  br label %select.end18

select.end18:                                     ; preds = %select.false19, %select.end16
  %.2 = phi ptr [ %13, %select.end16 ], [ %11, %select.false19 ]
  %60 = load ptr, ptr %.2, align 8
  %61 = load i64, ptr %60, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %50, i64 16
  store i64 %61, ptr %sunkaddr, align 8
  %62 = getelementptr inbounds i8, ptr %60, i64 8
  store ptr %62, ptr %.2, align 8
  %63 = getelementptr inbounds i8, ptr %50, i64 24
  store ptr %63, ptr %9, align 8
  %64 = load ptr, ptr %11, align 8
  %65 = ptrtoint ptr %64 to i64
  %66 = icmp ugt i64 %29, %65
  %67 = load ptr, ptr %13, align 8
  %68 = ptrtoint ptr %67 to i64
  %69 = icmp ugt i64 %31, %68
  %70 = select i1 %66, i1 %69, i1 false
  br i1 %70, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted4 = phi ptr [ %39, %._crit_edge ], [ %81, %select.end ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %80, %select.end ]
  store ptr %.lcssa, ptr %9, align 8
  %.not78 = icmp ugt ptr %.promoted4, %27
  br i1 %.not78, label %common.ret, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %.preheader
  br label %.lr.ph9

.lr.ph3:                                          ; preds = %select.end, %.lr.ph3.preheader
  %71 = phi ptr [ %83, %select.end ], [ %38, %.lr.ph3.preheader ]
  %72 = phi ptr [ %81, %select.end ], [ %39, %.lr.ph3.preheader ]
  %73 = phi ptr [ %80, %select.end ], [ %.promoted, %.lr.ph3.preheader ]
  tail call void %7(ptr align 1 %6, i64 1) #15
  %74 = load ptr, ptr %72, align 8
  %75 = load ptr, ptr %71, align 8
  %76 = tail call i8 %5(ptr align 1 %6, ptr align 1 %74, ptr align 1 %75) #15
  %.3.frozen = freeze i8 %76
  %.not8 = icmp eq i8 %.3.frozen, 1
  br i1 %.not8, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph3
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph3
  %.3 = phi ptr [ %13, %.lr.ph3 ], [ %11, %select.false ]
  %77 = load ptr, ptr %.3, align 8
  %78 = load i64, ptr %77, align 8
  store i64 %78, ptr %73, align 8
  %79 = getelementptr inbounds i8, ptr %77, i64 8
  store ptr %79, ptr %.3, align 8
  %80 = getelementptr inbounds i8, ptr %73, i64 8
  %81 = load ptr, ptr %11, align 8
  %82 = icmp ule ptr %81, %27
  %83 = load ptr, ptr %13, align 8
  %84 = icmp ule ptr %83, %20
  %85 = select i1 %82, i1 %84, i1 false
  br i1 %85, label %.lr.ph3, label %.preheader

.lr.ph9:                                          ; preds = %.lr.ph9, %.lr.ph9.preheader
  %86 = phi ptr [ %90, %.lr.ph9 ], [ %.promoted4, %.lr.ph9.preheader ]
  %87 = phi ptr [ %89, %.lr.ph9 ], [ %.lcssa, %.lr.ph9.preheader ]
  %88 = load i64, ptr %86, align 8
  store i64 %88, ptr %87, align 8
  %89 = getelementptr inbounds i8, ptr %87, i64 8
  %90 = getelementptr inbounds i8, ptr %86, i64 8
  %.not7 = icmp ugt ptr %90, %27
  br i1 %.not7, label %common.ret, label %.lr.ph9
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16734(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %4, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %7
  %8 = phi ptr [ %27, %14 ], [ %.pre, %7 ]
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr inbounds i8, ptr %8, i64 -8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %33, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %4, align 8
  %17 = load i64, ptr %16, align 8
  store i64 %17, ptr %15, align 8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 -8
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %4, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 -8
  store ptr %21, ptr %4, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load i64, ptr %21, align 8
  store i64 %23, ptr %22, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 -8
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %4, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 -8
  store ptr %27, ptr %4, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, 8
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 -8
  %36 = load ptr, ptr %4, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #15
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %common.ret

common.ret:                                       ; preds = %41, %33, %14
  %common.ret.op = phi i1 [ false, %33 ], [ true, %41 ], [ true, %14 ]
  ret i1 %common.ret.op

41:                                               ; preds = %33
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %2, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 -8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %2, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 -8
  store ptr %48, ptr %2, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 -8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %2, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 -8
  store ptr %54, ptr %2, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %1, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add nuw i64 %57, 8
  %59 = icmp ult i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16785(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc void @sort.partial_forward_merge__anon_16736(ptr nonnull align 1 %0, i64 %1, ptr nonnull align 1 %2, i64 %3, i64 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca ptr, align 8
  %13 = icmp eq i64 %1, %4
  br i1 %13, label %common.ret, label %14

common.ret:                                       ; preds = %.lr.ph9, %.preheader, %14, %7
  ret void

14:                                               ; preds = %7
  %15 = shl nuw i64 %4, 3
  %16 = getelementptr inbounds i8, ptr %0, i64 %15
  store ptr %16, ptr %12, align 8
  %17 = shl i64 %1, 3
  %18 = add i64 %17, -8
  %19 = getelementptr inbounds i8, ptr %0, i64 %18
  store ptr %19, ptr %11, align 8
  %20 = getelementptr inbounds i8, ptr %16, i64 -8
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %16, align 8
  %23 = tail call i8 %5(ptr align 1 %6, ptr align 1 %21, ptr align 1 %22) #15
  %.not = icmp eq i8 %23, 1
  br i1 %.not, label %24, label %common.ret

24:                                               ; preds = %14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %15, i1 false)
  store ptr %2, ptr %10, align 8
  %25 = add i64 %15, -8
  %26 = getelementptr inbounds i8, ptr %2, i64 %25
  store ptr %26, ptr %9, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = add i64 %27, -8
  %29 = ptrtoint ptr %19 to i64
  %30 = add i64 %29, -8
  store ptr %0, ptr %8, align 8
  %31 = ptrtoint ptr %2 to i64
  %32 = icmp ugt i64 %28, %31
  %33 = ptrtoint ptr %16 to i64
  %34 = icmp ugt i64 %30, %33
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %24
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %select.end18
  %36 = getelementptr inbounds i8, ptr %49, i64 24
  br label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph.._crit_edge.loopexit_crit_edge, %._crit_edge.loopexit, %24
  %37 = phi ptr [ %16, %24 ], [ %.pre16.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %66, %._crit_edge.loopexit ]
  %38 = phi ptr [ %2, %24 ], [ %.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %63, %._crit_edge.loopexit ]
  %.promoted = phi ptr [ %0, %24 ], [ %.promoted.pre.pre, %.lr.ph.._crit_edge.loopexit_crit_edge ], [ %36, %._crit_edge.loopexit ]
  %39 = icmp ule ptr %38, %26
  %40 = icmp ule ptr %37, %19
  %41 = select i1 %39, i1 %40, i1 false
  br i1 %41, label %.lr.ph3.preheader, label %.preheader

.lr.ph3.preheader:                                ; preds = %._crit_edge
  br label %.lr.ph3

.lr.ph:                                           ; preds = %select.end18, %.lr.ph.preheader
  %42 = call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16786(ptr nonnull align 8 %8, ptr nonnull align 8 %10, ptr nonnull readonly align 8 %9, ptr nonnull align 8 %12, ptr nonnull readonly align 8 %11, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  br i1 %42, label %.lr.ph.._crit_edge.loopexit_crit_edge, label %43

.lr.ph.._crit_edge.loopexit_crit_edge:            ; preds = %.lr.ph
  %.promoted.pre.pre = load ptr, ptr %8, align 8
  %.pre.pre = load ptr, ptr %10, align 8
  %.pre16.pre = load ptr, ptr %12, align 8
  br label %._crit_edge

43:                                               ; preds = %.lr.ph
  %44 = load ptr, ptr %10, align 8
  %45 = load ptr, ptr %12, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load ptr, ptr %45, align 8
  %48 = tail call i8 %5(ptr align 1 %6, ptr align 1 %46, ptr align 1 %47) #15
  %..frozen = freeze i8 %48
  %.not9 = icmp eq i8 %..frozen, 1
  br i1 %.not9, label %select.end16, label %select.false17

select.false17:                                   ; preds = %43
  br label %select.end16

select.end16:                                     ; preds = %select.false17, %43
  %. = phi i64 [ 0, %43 ], [ 8, %select.false17 ]
  %.1 = phi i64 [ 8, %43 ], [ 0, %select.false17 ]
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %.
  %51 = load i64, ptr %45, align 8
  store i64 %51, ptr %50, align 8
  %52 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %52, ptr %12, align 8
  %53 = getelementptr inbounds i8, ptr %49, i64 %.1
  %54 = load i64, ptr %44, align 8
  store i64 %54, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %44, i64 8
  store ptr %55, ptr %10, align 8
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr %52, align 8
  %58 = tail call i8 %5(ptr align 1 %6, ptr align 1 %56, ptr align 1 %57) #15
  %.2.frozen = freeze i8 %58
  %.not10 = icmp eq i8 %.2.frozen, 1
  br i1 %.not10, label %select.end18, label %select.false19

select.false19:                                   ; preds = %select.end16
  br label %select.end18

select.end18:                                     ; preds = %select.false19, %select.end16
  %.2 = phi ptr [ %12, %select.end16 ], [ %10, %select.false19 ]
  %59 = load ptr, ptr %.2, align 8
  %60 = load i64, ptr %59, align 8
  %sunkaddr = getelementptr inbounds i8, ptr %49, i64 16
  store i64 %60, ptr %sunkaddr, align 8
  %61 = getelementptr inbounds i8, ptr %59, i64 8
  store ptr %61, ptr %.2, align 8
  %62 = getelementptr inbounds i8, ptr %49, i64 24
  store ptr %62, ptr %8, align 8
  %63 = load ptr, ptr %10, align 8
  %64 = ptrtoint ptr %63 to i64
  %65 = icmp ugt i64 %28, %64
  %66 = load ptr, ptr %12, align 8
  %67 = ptrtoint ptr %66 to i64
  %68 = icmp ugt i64 %30, %67
  %69 = select i1 %65, i1 %68, i1 false
  br i1 %69, label %.lr.ph, label %._crit_edge.loopexit

.preheader:                                       ; preds = %select.end, %._crit_edge
  %.promoted4 = phi ptr [ %38, %._crit_edge ], [ %80, %select.end ]
  %.lcssa = phi ptr [ %.promoted, %._crit_edge ], [ %79, %select.end ]
  store ptr %.lcssa, ptr %8, align 8
  %.not78 = icmp ugt ptr %.promoted4, %26
  br i1 %.not78, label %common.ret, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %.preheader
  br label %.lr.ph9

.lr.ph3:                                          ; preds = %select.end, %.lr.ph3.preheader
  %70 = phi ptr [ %82, %select.end ], [ %37, %.lr.ph3.preheader ]
  %71 = phi ptr [ %80, %select.end ], [ %38, %.lr.ph3.preheader ]
  %72 = phi ptr [ %79, %select.end ], [ %.promoted, %.lr.ph3.preheader ]
  %73 = load ptr, ptr %71, align 8
  %74 = load ptr, ptr %70, align 8
  %75 = tail call i8 %5(ptr align 1 %6, ptr align 1 %73, ptr align 1 %74) #15
  %.3.frozen = freeze i8 %75
  %.not8 = icmp eq i8 %.3.frozen, 1
  br i1 %.not8, label %select.end, label %select.false

select.false:                                     ; preds = %.lr.ph3
  br label %select.end

select.end:                                       ; preds = %select.false, %.lr.ph3
  %.3 = phi ptr [ %12, %.lr.ph3 ], [ %10, %select.false ]
  %76 = load ptr, ptr %.3, align 8
  %77 = load i64, ptr %76, align 8
  store i64 %77, ptr %72, align 8
  %78 = getelementptr inbounds i8, ptr %76, i64 8
  store ptr %78, ptr %.3, align 8
  %79 = getelementptr inbounds i8, ptr %72, i64 8
  %80 = load ptr, ptr %10, align 8
  %81 = icmp ule ptr %80, %26
  %82 = load ptr, ptr %12, align 8
  %83 = icmp ule ptr %82, %19
  %84 = select i1 %81, i1 %83, i1 false
  br i1 %84, label %.lr.ph3, label %.preheader

.lr.ph9:                                          ; preds = %.lr.ph9, %.lr.ph9.preheader
  %85 = phi ptr [ %89, %.lr.ph9 ], [ %.promoted4, %.lr.ph9.preheader ]
  %86 = phi ptr [ %88, %.lr.ph9 ], [ %.lcssa, %.lr.ph9.preheader ]
  %87 = load i64, ptr %85, align 8
  store i64 %87, ptr %86, align 8
  %88 = getelementptr inbounds i8, ptr %86, i64 8
  %89 = getelementptr inbounds i8, ptr %85, i64 8
  %.not7 = icmp ugt ptr %89, %26
  br i1 %.not7, label %common.ret, label %.lr.ph9
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16773(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %11 = sub i64 0, %7
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %17, %10
  %12 = phi ptr [ %28, %17 ], [ %.pre, %10 ]
  %13 = getelementptr inbounds i8, ptr %12, i64 %11
  %14 = load ptr, ptr %4, align 8
  tail call void %9(ptr align 1 %6, i64 1) #15
  %15 = tail call i8 %5(ptr align 1 %6, ptr align 1 %13, ptr align 1 %14) #15
  %16 = icmp eq i8 %15, 1
  br i1 %16, label %17, label %34

17:                                               ; preds = %tailrecurse
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %18, ptr align 1 %19) #15
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %11
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 %11
  store ptr %23, ptr %2, align 8
  %24 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %24, ptr align 1 %23) #15
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %11
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 %11
  store ptr %28, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %1, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, %7
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 %11
  tail call void %9(ptr align 1 %6, i64 1) #15
  %38 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %37) #15
  %.not = icmp eq i8 %38, 1
  br i1 %.not, label %common.ret, label %39

common.ret:                                       ; preds = %39, %34, %17
  %common.ret.op = phi i1 [ false, %34 ], [ true, %39 ], [ true, %17 ]
  ret i1 %common.ret.op

39:                                               ; preds = %34
  %40 = load ptr, ptr %0, align 8
  %41 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %40, ptr align 1 %41) #15
  %42 = load ptr, ptr %0, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %11
  store ptr %43, ptr %0, align 8
  %44 = load ptr, ptr %4, align 8
  %45 = getelementptr inbounds i8, ptr %44, i64 %11
  store ptr %45, ptr %4, align 8
  %46 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %46, ptr align 1 %45) #15
  %47 = load ptr, ptr %0, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %11
  store ptr %48, ptr %0, align 8
  %49 = load ptr, ptr %4, align 8
  %50 = getelementptr inbounds i8, ptr %49, i64 %11
  store ptr %50, ptr %4, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = load ptr, ptr %3, align 8
  %53 = ptrtoint ptr %52 to i64
  %54 = add nuw i64 %53, %7
  %55 = icmp ult i64 %54, %51
  br i1 %55, label %56, label %common.ret

56:                                               ; preds = %39
  %57 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16701(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret i1 %57
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16774(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %10
  %11 = phi ptr [ %27, %16 ], [ %.pre, %10 ]
  %12 = load ptr, ptr %1, align 8
  %13 = getelementptr inbounds i8, ptr %11, i64 %7
  tail call void %9(ptr align 1 %6, i64 1) #15
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #15
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %7
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %7
  store ptr %22, ptr %3, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #15
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %7
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %3, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %7
  store ptr %27, ptr %3, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %4, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = sub nuw i64 %30, %7
  %32 = icmp ugt i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %1, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %7
  %36 = load ptr, ptr %3, align 8
  tail call void %9(ptr align 1 %6, i64 1) #15
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %35, ptr align 1 %36) #15
  %.not = icmp eq i8 %37, 1
  br i1 %.not, label %common.ret, label %38

common.ret:                                       ; preds = %38, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %38 ], [ true, %16 ]
  ret i1 %common.ret.op

38:                                               ; preds = %33
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #15
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %7
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %1, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %7
  store ptr %44, ptr %1, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #15
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %7
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %49, ptr %1, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %2, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = sub nuw i64 %52, %7
  %54 = icmp ugt i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17221(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16777(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %10 = sub i64 0, %7
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %9
  %11 = phi ptr [ %27, %16 ], [ %.pre, %9 ]
  %12 = getelementptr inbounds i8, ptr %11, i64 %10
  %13 = load ptr, ptr %4, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %2, align 8
  tail call void %8(ptr align 1 %17, ptr align 1 %18) #15
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %10
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 %10
  store ptr %22, ptr %2, align 8
  %23 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %23, ptr align 1 %22) #15
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %10
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %2, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 %10
  store ptr %27, ptr %2, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %1, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add nuw i64 %30, %7
  %32 = icmp ult i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %2, align 8
  %35 = load ptr, ptr %4, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 %10
  %37 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %36) #15
  %.not = icmp eq i8 %37, 1
  br i1 %.not, label %common.ret, label %38

common.ret:                                       ; preds = %38, %33, %16
  %common.ret.op = phi i1 [ false, %33 ], [ true, %38 ], [ true, %16 ]
  ret i1 %common.ret.op

38:                                               ; preds = %33
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %4, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #15
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %10
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %4, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %10
  store ptr %44, ptr %4, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #15
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %10
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %10
  store ptr %49, ptr %4, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %3, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = add nuw i64 %52, %7
  %54 = icmp ult i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16712(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16778(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %9
  %10 = phi ptr [ %26, %15 ], [ %.pre, %9 ]
  %11 = load ptr, ptr %1, align 8
  %12 = getelementptr inbounds i8, ptr %10, i64 %7
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %32

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #15
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %7
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %3, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %7
  store ptr %21, ptr %3, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #15
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %7
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %7
  store ptr %26, ptr %3, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %4, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = icmp ugt i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %1, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %7
  %35 = load ptr, ptr %3, align 8
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %34, ptr align 1 %35) #15
  %.not = icmp eq i8 %36, 1
  br i1 %.not, label %common.ret, label %37

common.ret:                                       ; preds = %37, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %37 ], [ true, %15 ]
  ret i1 %common.ret.op

37:                                               ; preds = %32
  %38 = load ptr, ptr %0, align 8
  %39 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %38, ptr align 1 %39) #15
  %40 = load ptr, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 %7
  store ptr %41, ptr %0, align 8
  %42 = load ptr, ptr %1, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %7
  store ptr %43, ptr %1, align 8
  %44 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %44, ptr align 1 %43) #15
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 %7
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %1, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %7
  store ptr %48, ptr %1, align 8
  %49 = ptrtoint ptr %48 to i64
  %50 = load ptr, ptr %2, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = sub nuw i64 %51, %7
  %53 = icmp ugt i64 %52, %49
  br i1 %53, label %54, label %common.ret

54:                                               ; preds = %37
  %55 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17226(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret i1 %55
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16781(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %8
  %9 = phi ptr [ %29, %16 ], [ %.pre, %8 ]
  %10 = getelementptr inbounds i8, ptr %9, i64 -8
  %11 = load ptr, ptr %4, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %2, align 8
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %17, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 -8
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 -8
  store ptr %23, ptr %2, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = load i64, ptr %23, align 8
  store i64 %25, ptr %24, align 8
  %26 = load ptr, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 -8
  store ptr %27, ptr %0, align 8
  %28 = load ptr, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 -8
  store ptr %29, ptr %2, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = load ptr, ptr %1, align 8
  %32 = ptrtoint ptr %31 to i64
  %33 = add nuw i64 %32, 8
  %34 = icmp ult i64 %33, %30
  br i1 %34, label %tailrecurse, label %common.ret

35:                                               ; preds = %tailrecurse
  %36 = load ptr, ptr %2, align 8
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds i8, ptr %37, i64 -8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %39 = load ptr, ptr %36, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = tail call i8 %5(ptr align 1 %6, ptr align 1 %39, ptr align 1 %40) #15
  %.not = icmp eq i8 %41, 1
  br i1 %.not, label %common.ret, label %42

common.ret:                                       ; preds = %42, %35, %16
  %common.ret.op = phi i1 [ false, %35 ], [ true, %42 ], [ true, %16 ]
  ret i1 %common.ret.op

42:                                               ; preds = %35
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %4, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 -8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 -8
  store ptr %49, ptr %4, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 -8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %4, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 -8
  store ptr %55, ptr %4, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %3, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add nuw i64 %58, 8
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16723(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16782(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %16, %8
  %9 = phi ptr [ %29, %16 ], [ %.pre, %8 ]
  %10 = load ptr, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %9, i64 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %tailrecurse
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %3, align 8
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %17, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  store ptr %21, ptr %0, align 8
  %22 = load ptr, ptr %3, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store ptr %23, ptr %3, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = load i64, ptr %23, align 8
  store i64 %25, ptr %24, align 8
  %26 = load ptr, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store ptr %27, ptr %0, align 8
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store ptr %29, ptr %3, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = load ptr, ptr %4, align 8
  %32 = ptrtoint ptr %31 to i64
  %33 = add i64 %32, -8
  %34 = icmp ugt i64 %33, %30
  br i1 %34, label %tailrecurse, label %common.ret

35:                                               ; preds = %tailrecurse
  %36 = load ptr, ptr %1, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 8
  %38 = load ptr, ptr %3, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %39 = load ptr, ptr %37, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = tail call i8 %5(ptr align 1 %6, ptr align 1 %39, ptr align 1 %40) #15
  %.not = icmp eq i8 %41, 1
  br i1 %.not, label %common.ret, label %42

common.ret:                                       ; preds = %42, %35, %16
  %common.ret.op = phi i1 [ false, %35 ], [ true, %42 ], [ true, %16 ]
  ret i1 %common.ret.op

42:                                               ; preds = %35
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %1, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %1, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 8
  store ptr %49, ptr %1, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %1, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store ptr %55, ptr %1, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %2, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add i64 %58, -8
  %60 = icmp ugt i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17231(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_tail_2__anon_16785(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull readonly align 8 %1, ptr nocapture nonnull align 8 %2, ptr nocapture nonnull readonly align 8 %3, ptr nocapture nonnull align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %2, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %7
  %8 = phi ptr [ %28, %15 ], [ %.pre, %7 ]
  %9 = getelementptr inbounds i8, ptr %8, i64 -8
  %10 = load ptr, ptr %4, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %34

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %2, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 -8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 -8
  store ptr %22, ptr %2, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 -8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %2, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 -8
  store ptr %28, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %1, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add nuw i64 %31, 8
  %33 = icmp ult i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %2, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 -8
  %38 = load ptr, ptr %35, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #15
  %.not = icmp eq i8 %40, 1
  br i1 %.not, label %common.ret, label %41

common.ret:                                       ; preds = %41, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %41 ], [ true, %15 ]
  ret i1 %common.ret.op

41:                                               ; preds = %34
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %4, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 -8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %4, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 -8
  store ptr %48, ptr %4, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 -8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %4, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 -8
  store ptr %54, ptr %4, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %3, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add nuw i64 %57, 8
  %59 = icmp ult i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_right_tail_2__anon_16734(ptr nonnull align 8 %0, ptr nonnull readonly align 8 %1, ptr nonnull align 8 %2, ptr nonnull readonly align 8 %3, ptr nonnull align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16786(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %3, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %7
  %8 = phi ptr [ %28, %15 ], [ %.pre, %7 ]
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %8, i64 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %34

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %3, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  store ptr %22, ptr %3, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %3, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store ptr %28, ptr %3, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %4, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add i64 %31, -8
  %33 = icmp ugt i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %1, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %37 = load ptr, ptr %3, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #15
  %.not = icmp eq i8 %40, 1
  br i1 %.not, label %common.ret, label %41

common.ret:                                       ; preds = %41, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %41 ], [ true, %15 ]
  ret i1 %common.ret.op

41:                                               ; preds = %34
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %1, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %1, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store ptr %48, ptr %1, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %1, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 8
  store ptr %54, ptr %1, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %2, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add i64 %57, -8
  %59 = icmp ugt i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17236(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17221(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8, ptr nocapture nonnull readonly align 4 %9) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %10
  %11 = phi ptr [ %26, %15 ], [ %.pre, %10 ]
  %12 = getelementptr inbounds i8, ptr %11, i64 %7
  %13 = load ptr, ptr %3, align 8
  tail call void %9(ptr align 1 %6, i64 1) #15
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %32, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %16, ptr align 1 %17) #15
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %7
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %1, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 %7
  store ptr %21, ptr %1, align 8
  %22 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %22, ptr align 1 %21) #15
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 %7
  store ptr %24, ptr %0, align 8
  %25 = load ptr, ptr %1, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %7
  store ptr %26, ptr %1, align 8
  %27 = ptrtoint ptr %26 to i64
  %28 = load ptr, ptr %2, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = sub nuw i64 %29, %7
  %31 = icmp ugt i64 %30, %27
  br i1 %31, label %tailrecurse, label %common.ret

32:                                               ; preds = %tailrecurse
  %33 = load ptr, ptr %1, align 8
  %34 = load ptr, ptr %3, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %7
  tail call void %9(ptr align 1 %6, i64 1) #15
  %36 = tail call i8 %5(ptr align 1 %6, ptr align 1 %33, ptr align 1 %35) #15
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %common.ret

common.ret:                                       ; preds = %38, %32, %15
  %common.ret.op = phi i1 [ false, %32 ], [ true, %38 ], [ true, %15 ]
  ret i1 %common.ret.op

38:                                               ; preds = %32
  %39 = load ptr, ptr %0, align 8
  %40 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %39, ptr align 1 %40) #15
  %41 = load ptr, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %7
  store ptr %42, ptr %0, align 8
  %43 = load ptr, ptr %3, align 8
  %44 = getelementptr inbounds i8, ptr %43, i64 %7
  store ptr %44, ptr %3, align 8
  %45 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %45, ptr align 1 %44) #15
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 %7
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %7
  store ptr %49, ptr %3, align 8
  %50 = ptrtoint ptr %49 to i64
  %51 = load ptr, ptr %4, align 8
  %52 = ptrtoint ptr %51 to i64
  %53 = sub nuw i64 %52, %7
  %54 = icmp ugt i64 %53, %50
  br i1 %54, label %55, label %common.ret

55:                                               ; preds = %38
  %56 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16774(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8, ptr nonnull readonly align 4 %9)
  ret i1 %56
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17226(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nocapture nonnull readonly align 4 %8) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %9
  %10 = phi ptr [ %25, %14 ], [ %.pre, %9 ]
  %11 = getelementptr inbounds i8, ptr %10, i64 %7
  %12 = load ptr, ptr %3, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %31, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %1, align 8
  tail call void %8(ptr align 1 %15, ptr align 1 %16) #15
  %17 = load ptr, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 %7
  store ptr %18, ptr %0, align 8
  %19 = load ptr, ptr %1, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 %7
  store ptr %20, ptr %1, align 8
  %21 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %21, ptr align 1 %20) #15
  %22 = load ptr, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 %7
  store ptr %23, ptr %0, align 8
  %24 = load ptr, ptr %1, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 %7
  store ptr %25, ptr %1, align 8
  %26 = ptrtoint ptr %25 to i64
  %27 = load ptr, ptr %2, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = sub nuw i64 %28, %7
  %30 = icmp ugt i64 %29, %26
  br i1 %30, label %tailrecurse, label %common.ret

31:                                               ; preds = %tailrecurse
  %32 = load ptr, ptr %1, align 8
  %33 = load ptr, ptr %3, align 8
  %34 = getelementptr inbounds i8, ptr %33, i64 %7
  %35 = tail call i8 %5(ptr align 1 %6, ptr align 1 %32, ptr align 1 %34) #15
  %36 = icmp eq i8 %35, 1
  br i1 %36, label %37, label %common.ret

common.ret:                                       ; preds = %37, %31, %14
  %common.ret.op = phi i1 [ false, %31 ], [ true, %37 ], [ true, %14 ]
  ret i1 %common.ret.op

37:                                               ; preds = %31
  %38 = load ptr, ptr %0, align 8
  %39 = load ptr, ptr %3, align 8
  tail call void %8(ptr align 1 %38, ptr align 1 %39) #15
  %40 = load ptr, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %40, i64 %7
  store ptr %41, ptr %0, align 8
  %42 = load ptr, ptr %3, align 8
  %43 = getelementptr inbounds i8, ptr %42, i64 %7
  store ptr %43, ptr %3, align 8
  %44 = load ptr, ptr %0, align 8
  tail call void %8(ptr align 1 %44, ptr align 1 %43) #15
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 %7
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %3, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 %7
  store ptr %48, ptr %3, align 8
  %49 = ptrtoint ptr %48 to i64
  %50 = load ptr, ptr %4, align 8
  %51 = ptrtoint ptr %50 to i64
  %52 = sub nuw i64 %51, %7
  %53 = icmp ugt i64 %52, %49
  br i1 %53, label %54, label %common.ret

54:                                               ; preds = %37
  %55 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16778(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, i64 %7, ptr nonnull readonly align 4 %8)
  ret i1 %55
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17231(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6, ptr nocapture nonnull readonly align 4 %7) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %15, %8
  %9 = phi ptr [ %28, %15 ], [ %.pre, %8 ]
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %11 = load ptr, ptr %3, align 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %12 = load ptr, ptr %10, align 8
  %13 = load ptr, ptr %11, align 8
  %14 = tail call i8 %5(ptr align 1 %6, ptr align 1 %12, ptr align 1 %13) #15
  %.not = icmp eq i8 %14, 1
  br i1 %.not, label %34, label %15

15:                                               ; preds = %tailrecurse
  %16 = load ptr, ptr %0, align 8
  %17 = load ptr, ptr %1, align 8
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %16, align 8
  %19 = load ptr, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %20, ptr %0, align 8
  %21 = load ptr, ptr %1, align 8
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  store ptr %22, ptr %1, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = load i64, ptr %22, align 8
  store i64 %24, ptr %23, align 8
  %25 = load ptr, ptr %0, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store ptr %26, ptr %0, align 8
  %27 = load ptr, ptr %1, align 8
  %28 = getelementptr inbounds i8, ptr %27, i64 8
  store ptr %28, ptr %1, align 8
  %29 = ptrtoint ptr %28 to i64
  %30 = load ptr, ptr %2, align 8
  %31 = ptrtoint ptr %30 to i64
  %32 = add i64 %31, -8
  %33 = icmp ugt i64 %32, %29
  br i1 %33, label %tailrecurse, label %common.ret

34:                                               ; preds = %tailrecurse
  %35 = load ptr, ptr %1, align 8
  %36 = load ptr, ptr %3, align 8
  %37 = getelementptr inbounds i8, ptr %36, i64 8
  tail call void %7(ptr align 1 %6, i64 1) #15
  %38 = load ptr, ptr %35, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call i8 %5(ptr align 1 %6, ptr align 1 %38, ptr align 1 %39) #15
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %42, label %common.ret

common.ret:                                       ; preds = %42, %34, %15
  %common.ret.op = phi i1 [ false, %34 ], [ true, %42 ], [ true, %15 ]
  ret i1 %common.ret.op

42:                                               ; preds = %34
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %3, align 8
  %45 = load i64, ptr %44, align 8
  store i64 %45, ptr %43, align 8
  %46 = load ptr, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr %47, ptr %0, align 8
  %48 = load ptr, ptr %3, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 8
  store ptr %49, ptr %3, align 8
  %50 = load ptr, ptr %0, align 8
  %51 = load i64, ptr %49, align 8
  store i64 %51, ptr %50, align 8
  %52 = load ptr, ptr %0, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  store ptr %53, ptr %0, align 8
  %54 = load ptr, ptr %3, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store ptr %55, ptr %3, align 8
  %56 = ptrtoint ptr %55 to i64
  %57 = load ptr, ptr %4, align 8
  %58 = ptrtoint ptr %57 to i64
  %59 = add i64 %58, -8
  %60 = icmp ugt i64 %59, %56
  br i1 %60, label %61, label %common.ret

61:                                               ; preds = %42
  %62 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16782(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6, ptr nonnull readonly align 4 %7)
  ret i1 %62
}

; Function Attrs: nounwind uwtable
define private fastcc i1 @sort.partial_forward_merge_left_head_2__anon_17236(ptr nocapture nonnull align 8 %0, ptr nocapture nonnull align 8 %1, ptr nocapture nonnull readonly align 8 %2, ptr nocapture nonnull align 8 %3, ptr nocapture nonnull readonly align 8 %4, ptr nocapture nonnull readonly align 4 %5, ptr align 1 %6) unnamed_addr #4 {
  %.pre = load ptr, ptr %1, align 8
  br label %tailrecurse

tailrecurse:                                      ; preds = %14, %7
  %8 = phi ptr [ %27, %14 ], [ %.pre, %7 ]
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  %10 = load ptr, ptr %3, align 8
  %11 = load ptr, ptr %9, align 8
  %12 = load ptr, ptr %10, align 8
  %13 = tail call i8 %5(ptr align 1 %6, ptr align 1 %11, ptr align 1 %12) #15
  %.not = icmp eq i8 %13, 1
  br i1 %.not, label %33, label %14

14:                                               ; preds = %tailrecurse
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %1, align 8
  %17 = load i64, ptr %16, align 8
  store i64 %17, ptr %15, align 8
  %18 = load ptr, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 8
  store ptr %19, ptr %0, align 8
  %20 = load ptr, ptr %1, align 8
  %21 = getelementptr inbounds i8, ptr %20, i64 8
  store ptr %21, ptr %1, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load i64, ptr %21, align 8
  store i64 %23, ptr %22, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  store ptr %25, ptr %0, align 8
  %26 = load ptr, ptr %1, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store ptr %27, ptr %1, align 8
  %28 = ptrtoint ptr %27 to i64
  %29 = load ptr, ptr %2, align 8
  %30 = ptrtoint ptr %29 to i64
  %31 = add i64 %30, -8
  %32 = icmp ugt i64 %31, %28
  br i1 %32, label %tailrecurse, label %common.ret

33:                                               ; preds = %tailrecurse
  %34 = load ptr, ptr %1, align 8
  %35 = load ptr, ptr %3, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 8
  %37 = load ptr, ptr %34, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = tail call i8 %5(ptr align 1 %6, ptr align 1 %37, ptr align 1 %38) #15
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %common.ret

common.ret:                                       ; preds = %41, %33, %14
  %common.ret.op = phi i1 [ false, %33 ], [ true, %41 ], [ true, %14 ]
  ret i1 %common.ret.op

41:                                               ; preds = %33
  %42 = load ptr, ptr %0, align 8
  %43 = load ptr, ptr %3, align 8
  %44 = load i64, ptr %43, align 8
  store i64 %44, ptr %42, align 8
  %45 = load ptr, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %46, ptr %0, align 8
  %47 = load ptr, ptr %3, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store ptr %48, ptr %3, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load i64, ptr %48, align 8
  store i64 %50, ptr %49, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  store ptr %52, ptr %0, align 8
  %53 = load ptr, ptr %3, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 8
  store ptr %54, ptr %3, align 8
  %55 = ptrtoint ptr %54 to i64
  %56 = load ptr, ptr %4, align 8
  %57 = ptrtoint ptr %56 to i64
  %58 = add i64 %57, -8
  %59 = icmp ugt i64 %58, %55
  br i1 %59, label %60, label %common.ret

60:                                               ; preds = %41
  %61 = tail call fastcc i1 @sort.partial_forward_merge_right_head_2__anon_16786(ptr nonnull align 8 %0, ptr nonnull align 8 %1, ptr nonnull readonly align 8 %2, ptr nonnull align 8 %3, ptr nonnull readonly align 8 %4, ptr nonnull readonly align 4 %5, ptr align 1 %6)
  ret i1 %61
}

; Function Attrs: nofree nosync nounwind uwtable
define private fastcc void @sort.trinity_rotation.9(ptr nonnull align 1 %0, i64 %1, ptr nocapture nonnull align 1 %2, i64 %3, i64 %4, i64 %5) unnamed_addr #10 {
  %7 = sub nuw i64 %1, %4
  %spec.store.select = tail call i64 @llvm.umin.i64(i64 %3, i64 65536)
  %8 = icmp ugt i64 %7, %4
  br i1 %8, label %9, label %11

.loopexit:                                        ; preds = %.lr.ph, %154, %._crit_edge26, %76, %71, %._crit_edge58
  ret void

9:                                                ; preds = %6
  %.not1 = icmp ult i64 %spec.store.select, %4
  %10 = mul i64 %5, %4
  br i1 %.not1, label %22, label %13

11:                                               ; preds = %6
  %12 = icmp ult i64 %7, %4
  br i1 %12, label %75, label %76

13:                                               ; preds = %9
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %0, i64 %10, i1 false)
  %14 = mul nuw i64 %7, %5
  %.not.i = icmp eq i64 %14, 0
  br i1 %.not.i, label %mem.copyForwards__anon_9882.exit, label %iter.check153

iter.check153:                                    ; preds = %13
  %min.iters.check151 = icmp ult i64 %14, 8
  %15 = add i64 %10, 31
  %diff.check149 = icmp ult i64 %15, 32
  %or.cond = select i1 %min.iters.check151, i1 true, i1 %diff.check149
  br i1 %or.cond, label %.lr.ph.i.preheader, label %vector.main.loop.iter.check155

vector.main.loop.iter.check155:                   ; preds = %iter.check153
  %min.iters.check154 = icmp ult i64 %14, 32
  br i1 %min.iters.check154, label %vec.epilog.ph168, label %vector.ph156

vector.ph156:                                     ; preds = %vector.main.loop.iter.check155
  %n.vec158 = and i64 %14, -32
  br label %vector.body160

vector.body160:                                   ; preds = %vector.body160, %vector.ph156
  %lsr.iv249 = phi i64 [ %lsr.iv.next250, %vector.body160 ], [ %n.vec158, %vector.ph156 ]
  %lsr.iv244 = phi ptr [ %uglygep245, %vector.body160 ], [ %0, %vector.ph156 ]
  %uglygep247 = getelementptr i8, ptr %lsr.iv244, i64 %10
  %wide.load162 = load <16 x i8>, ptr %uglygep247, align 1
  %uglygep248 = getelementptr i8, ptr %uglygep247, i64 16
  %wide.load163 = load <16 x i8>, ptr %uglygep248, align 1
  store <16 x i8> %wide.load162, ptr %lsr.iv244, align 1
  %uglygep246 = getelementptr i8, ptr %lsr.iv244, i64 16
  store <16 x i8> %wide.load163, ptr %uglygep246, align 1
  %uglygep245 = getelementptr i8, ptr %lsr.iv244, i64 32
  %lsr.iv.next250 = add i64 %lsr.iv249, -32
  %16 = icmp eq i64 %lsr.iv.next250, 0
  br i1 %16, label %middle.block150, label %vector.body160, !llvm.loop !531

middle.block150:                                  ; preds = %vector.body160
  %cmp.n159 = icmp eq i64 %14, %n.vec158
  br i1 %cmp.n159, label %mem.copyForwards__anon_9882.exit, label %vec.epilog.iter.check167

vec.epilog.iter.check167:                         ; preds = %middle.block150
  %n.vec.remaining169 = and i64 %14, 24
  %min.epilog.iters.check170 = icmp eq i64 %n.vec.remaining169, 0
  br i1 %min.epilog.iters.check170, label %.lr.ph.i.preheader, label %vec.epilog.ph168

vec.epilog.ph168:                                 ; preds = %vec.epilog.iter.check167, %vector.main.loop.iter.check155
  %vec.epilog.resume.val171 = phi i64 [ %n.vec158, %vec.epilog.iter.check167 ], [ 0, %vector.main.loop.iter.check155 ]
  %n.vec173 = and i64 %14, -8
  %uglygep238 = getelementptr i8, ptr %0, i64 %vec.epilog.resume.val171
  %17 = sub i64 %vec.epilog.resume.val171, %n.vec173
  br label %vec.epilog.vector.body176

vec.epilog.vector.body176:                        ; preds = %vec.epilog.vector.body176, %vec.epilog.ph168
  %lsr.iv242 = phi i64 [ %lsr.iv.next243, %vec.epilog.vector.body176 ], [ %17, %vec.epilog.ph168 ]
  %lsr.iv239 = phi ptr [ %uglygep240, %vec.epilog.vector.body176 ], [ %uglygep238, %vec.epilog.ph168 ]
  %uglygep241 = getelementptr i8, ptr %lsr.iv239, i64 %10
  %wide.load178 = load <8 x i8>, ptr %uglygep241, align 1
  store <8 x i8> %wide.load178, ptr %lsr.iv239, align 1
  %uglygep240 = getelementptr i8, ptr %lsr.iv239, i64 8
  %lsr.iv.next243 = add i64 %lsr.iv242, 8
  %18 = icmp eq i64 %lsr.iv.next243, 0
  br i1 %18, label %vec.epilog.middle.block165, label %vec.epilog.vector.body176, !llvm.loop !532

vec.epilog.middle.block165:                       ; preds = %vec.epilog.vector.body176
  %cmp.n175 = icmp eq i64 %14, %n.vec173
  br i1 %cmp.n175, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %vec.epilog.middle.block165, %vec.epilog.iter.check167, %iter.check153
  %.03.i.ph = phi i64 [ %n.vec173, %vec.epilog.middle.block165 ], [ %n.vec158, %vec.epilog.iter.check167 ], [ 0, %iter.check153 ]
  %19 = sub i64 %14, %.03.i.ph
  %uglygep234 = getelementptr i8, ptr %0, i64 %.03.i.ph
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %lsr.iv235 = phi ptr [ %uglygep234, %.lr.ph.i.preheader ], [ %uglygep236, %.lr.ph.i ]
  %lsr.iv232 = phi i64 [ %19, %.lr.ph.i.preheader ], [ %lsr.iv.next233, %.lr.ph.i ]
  %uglygep237 = getelementptr i8, ptr %lsr.iv235, i64 %10
  %20 = load i8, ptr %uglygep237, align 1
  store i8 %20, ptr %lsr.iv235, align 1
  %lsr.iv.next233 = add i64 %lsr.iv232, -1
  %uglygep236 = getelementptr i8, ptr %lsr.iv235, i64 1
  %exitcond.not.i = icmp eq i64 %lsr.iv.next233, 0
  br i1 %exitcond.not.i, label %mem.copyForwards__anon_9882.exit, label %.lr.ph.i, !llvm.loop !533

mem.copyForwards__anon_9882.exit:                 ; preds = %.lr.ph.i, %vec.epilog.middle.block165, %middle.block150, %13
  %21 = getelementptr inbounds i8, ptr %0, i64 %14
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %21, ptr nonnull align 1 %2, i64 %10, i1 false)
  ret void

22:                                               ; preds = %9
  %23 = getelementptr inbounds i8, ptr %0, i64 %10
  %24 = sub nuw i64 %7, %4
  %25 = icmp ule i64 %24, %spec.store.select
  %26 = icmp ugt i64 %24, 3
  %27 = and i1 %25, %26
  br i1 %27, label %.lr.ph71.preheader, label %36

.lr.ph71.preheader:                               ; preds = %22
  %28 = mul nuw i64 %24, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %23, i64 %28, i1 false)
  %29 = sub i64 0, %5
  %30 = add i64 %4, -1
  %31 = mul i64 %5, %30
  %32 = add i64 %1, -1
  %33 = sub i64 %32, %4
  %34 = mul i64 %5, %33
  %35 = mul i64 %5, %32
  br label %.lr.ph71

36:                                               ; preds = %22
  %37 = mul nuw i64 %7, %5
  %38 = getelementptr inbounds i8, ptr %23, i64 %37
  %.not77 = icmp ult i64 %4, 2
  br i1 %.not77, label %._crit_edge48, label %.lr.ph47

.lr.ph47:                                         ; preds = %36
  %39 = lshr i64 %4, 1
  %40 = sub i64 0, %5
  %41 = add i64 %4, -1
  %42 = mul i64 %5, %41
  %43 = add i64 %1, -1
  %44 = mul i64 %5, %43
  br label %47

.lr.ph71:                                         ; preds = %.lr.ph71, %.lr.ph71.preheader
  %lsr.iv206 = phi i64 [ %4, %.lr.ph71.preheader ], [ %lsr.iv.next, %.lr.ph71 ]
  %lsr.iv = phi ptr [ %0, %.lr.ph71.preheader ], [ %uglygep202, %.lr.ph71 ]
  %uglygep204 = getelementptr i8, ptr %lsr.iv, i64 %34
  %uglygep205 = getelementptr i8, ptr %lsr.iv, i64 %35
  %45 = load i64, ptr %uglygep205, align 8
  store i64 %45, ptr %uglygep204, align 8
  %uglygep203 = getelementptr i8, ptr %lsr.iv, i64 %31
  %46 = load i64, ptr %uglygep203, align 8
  store i64 %46, ptr %uglygep205, align 8
  %uglygep202 = getelementptr i8, ptr %lsr.iv, i64 %29
  %lsr.iv.next = add i64 %lsr.iv206, -1
  %exitcond104.not = icmp eq i64 %lsr.iv.next, 0
  br i1 %exitcond104.not, label %._crit_edge72, label %.lr.ph71

._crit_edge72:                                    ; preds = %.lr.ph71
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %28, i1 false)
  ret void

47:                                               ; preds = %47, %.lr.ph47
  %lsr.iv230 = phi i64 [ %39, %.lr.ph47 ], [ %lsr.iv.next231, %47 ]
  %lsr.iv223 = phi ptr [ %0, %.lr.ph47 ], [ %uglygep224, %47 ]
  %.016245 = phi ptr [ %0, %.lr.ph47 ], [ %51, %47 ]
  %uglygep227 = getelementptr i8, ptr %.016245, i64 %10
  %uglygep225 = getelementptr i8, ptr %lsr.iv223, i64 %42
  %48 = load i64, ptr %uglygep225, align 8
  %49 = load i64, ptr %.016245, align 8
  store i64 %49, ptr %uglygep225, align 8
  %50 = load i64, ptr %uglygep227, align 8
  store i64 %50, ptr %.016245, align 8
  %51 = getelementptr inbounds i8, ptr %.016245, i64 %5
  %uglygep229 = getelementptr i8, ptr %lsr.iv223, i64 %44
  %52 = load i64, ptr %uglygep229, align 8
  store i64 %52, ptr %uglygep227, align 8
  store i64 %48, ptr %uglygep229, align 8
  %uglygep224 = getelementptr i8, ptr %lsr.iv223, i64 %40
  %lsr.iv.next231 = add nsw i64 %lsr.iv230, -1
  %exitcond99.not = icmp eq i64 %lsr.iv.next231, 0
  br i1 %exitcond99.not, label %._crit_edge48.loopexit, label %47

._crit_edge48.loopexit:                           ; preds = %47
  %uglygep226 = getelementptr i8, ptr %51, i64 %10
  %53 = mul i64 %5, %1
  %uglygep228 = getelementptr i8, ptr %uglygep224, i64 %53
  br label %._crit_edge48

._crit_edge48:                                    ; preds = %._crit_edge48.loopexit, %36
  %.0174.lcssa = phi ptr [ %38, %36 ], [ %uglygep228, %._crit_edge48.loopexit ]
  %.0172.lcssa = phi ptr [ %23, %36 ], [ %uglygep226, %._crit_edge48.loopexit ]
  %.0162.lcssa = phi ptr [ %0, %36 ], [ %51, %._crit_edge48.loopexit ]
  %54 = ptrtoint ptr %.0174.lcssa to i64
  %55 = ptrtoint ptr %.0172.lcssa to i64
  %56 = sub nuw i64 %54, %55
  %57 = shl nuw i64 %5, 1
  %.not78 = icmp ugt i64 %57, %56
  br i1 %.not78, label %._crit_edge58, label %.lr.ph57

.lr.ph57:                                         ; preds = %._crit_edge48
  %58 = udiv i64 %56, %57
  %59 = sub i64 0, %5
  %umax100 = tail call i64 @llvm.umax.i64(i64 %58, i64 1)
  br label %60

60:                                               ; preds = %60, %.lr.ph57
  %lsr.iv221 = phi i64 [ %umax100, %.lr.ph57 ], [ %lsr.iv.next222, %60 ]
  %lsr.iv218 = phi i64 [ %59, %.lr.ph57 ], [ %lsr.iv.next219, %60 ]
  %lsr.iv212 = phi i64 [ 0, %.lr.ph57 ], [ %lsr.iv.next213, %60 ]
  %uglygep215 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv212
  %uglygep216 = getelementptr i8, ptr %.0172.lcssa, i64 %lsr.iv212
  %61 = load i64, ptr %uglygep216, align 8
  %uglygep220 = getelementptr i8, ptr %.0174.lcssa, i64 %lsr.iv218
  %62 = load i64, ptr %uglygep220, align 8
  store i64 %62, ptr %uglygep216, align 8
  %63 = load i64, ptr %uglygep215, align 8
  store i64 %63, ptr %uglygep220, align 8
  store i64 %61, ptr %uglygep215, align 8
  %lsr.iv.next213 = add i64 %lsr.iv212, %5
  %lsr.iv.next219 = sub i64 %lsr.iv218, %5
  %lsr.iv.next222 = add i64 %lsr.iv221, -1
  %exitcond101.not = icmp eq i64 %lsr.iv.next222, 0
  br i1 %exitcond101.not, label %._crit_edge58.loopexit, label %60

._crit_edge58.loopexit:                           ; preds = %60
  %64 = ptrtoint ptr %.0174.lcssa to i64
  %65 = sub i64 %64, %lsr.iv.next213
  %uglygep214 = getelementptr i8, ptr %.0162.lcssa, i64 %lsr.iv.next213
  %66 = mul i64 %lsr.iv.next213, -1
  %uglygep217 = getelementptr i8, ptr %.0174.lcssa, i64 %66
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge48
  %.pre-phi = phi i64 [ %65, %._crit_edge58.loopexit ], [ %54, %._crit_edge48 ]
  %.1175.lcssa = phi ptr [ %uglygep217, %._crit_edge58.loopexit ], [ %.0174.lcssa, %._crit_edge48 ]
  %.1163.lcssa = phi ptr [ %uglygep214, %._crit_edge58.loopexit ], [ %.0162.lcssa, %._crit_edge48 ]
  %67 = ptrtoint ptr %.1163.lcssa to i64
  %68 = sub nuw i64 %.pre-phi, %67
  %.not79 = icmp ugt i64 %57, %68
  br i1 %.not79, label %.loopexit, label %.lr.ph65

.lr.ph65:                                         ; preds = %._crit_edge58
  %69 = udiv i64 %68, %57
  %70 = sub i64 0, %5
  %umax102 = tail call i64 @llvm.umax.i64(i64 %69, i64 1)
  %uglygep207 = getelementptr i8, ptr %.1175.lcssa, i64 %70
  br label %71

71:                                               ; preds = %71, %.lr.ph65
  %lsr.iv210 = phi i64 [ %umax102, %.lr.ph65 ], [ %lsr.iv.next211, %71 ]
  %lsr.iv208 = phi ptr [ %uglygep207, %.lr.ph65 ], [ %uglygep209, %71 ]
  %.216463 = phi ptr [ %.1163.lcssa, %.lr.ph65 ], [ %74, %71 ]
  %72 = load i64, ptr %.216463, align 8
  %73 = load i64, ptr %lsr.iv208, align 8
  store i64 %73, ptr %.216463, align 8
  %74 = getelementptr inbounds i8, ptr %.216463, i64 %5
  store i64 %72, ptr %lsr.iv208, align 8
  %uglygep209 = getelementptr i8, ptr %lsr.iv208, i64 %70
  %lsr.iv.next211 = add i64 %lsr.iv210, -1
  %exitcond103.not = icmp eq i64 %lsr.iv.next211, 0
  br i1 %exitcond103.not, label %.loopexit, label %71

75:                                               ; preds = %11
  %.not = icmp ugt i64 %7, %spec.store.select
  br i1 %.not, label %106, label %78

76:                                               ; preds = %11
  %.not73 = icmp eq i64 %4, 0
  br i1 %.not73, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %76
  %77 = mul i64 %5, %4
  br label %.lr.ph

78:                                               ; preds = %75
  %79 = mul i64 %7, %5
  %80 = mul nuw i64 %5, %4
  %81 = getelementptr inbounds i8, ptr %0, i64 %80
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %81, i64 %79, i1 false)
  %.not6.i = icmp eq i64 %80, 0
  br i1 %.not6.i, label %mem.copyBackwards__anon_9784.exit, label %iter.check

iter.check:                                       ; preds = %78
  %min.iters.check = icmp ult i64 %80, 8
  br i1 %min.iters.check, label %.lr.ph.i3.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %iter.check
  %82 = add i64 %80, -1
  %83 = mul i64 %5, %1
  %84 = add i64 %83, -1
  %uglygep = getelementptr i8, ptr %0, i64 %84
  %85 = sub i64 1, %80
  %86 = getelementptr i8, ptr %uglygep, i64 %85
  %87 = icmp ugt ptr %86, %uglygep
  %uglygep129 = getelementptr i8, ptr %0, i64 %82
  %88 = icmp ult ptr %uglygep129, %0
  %89 = or i1 %87, %88
  br i1 %89, label %.lr.ph.i3.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %vector.scevcheck
  %90 = ptrtoint ptr %0 to i64
  %91 = add i64 %80, %90
  %92 = mul i64 %5, %1
  %93 = add i64 %92, %90
  %94 = sub i64 %91, %93
  %diff.check = icmp ult i64 %94, 32
  br i1 %diff.check, label %.lr.ph.i3.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck
  %min.iters.check133 = icmp ult i64 %80, 32
  br i1 %min.iters.check133, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %80, -32
  %95 = add i64 %92, -16
  %uglygep295 = getelementptr i8, ptr %0, i64 %95
  %96 = add i64 %80, -16
  %uglygep299 = getelementptr i8, ptr %0, i64 %96
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %lsr.iv300 = phi ptr [ %uglygep301, %vector.body ], [ %uglygep299, %vector.ph ]
  %lsr.iv296 = phi ptr [ %uglygep297, %vector.body ], [ %uglygep295, %vector.ph ]
  %lsr.iv293 = phi i64 [ %lsr.iv.next294, %vector.body ], [ %n.vec, %vector.ph ]
  %wide.load = load <16 x i8>, ptr %lsr.iv300, align 1
  %uglygep302 = getelementptr i8, ptr %lsr.iv300, i64 -16
  %wide.load134 = load <16 x i8>, ptr %uglygep302, align 1
  store <16 x i8> %wide.load, ptr %lsr.iv296, align 1
  %uglygep298 = getelementptr i8, ptr %lsr.iv296, i64 -16
  store <16 x i8> %wide.load134, ptr %uglygep298, align 1
  %lsr.iv.next294 = add i64 %lsr.iv293, -32
  %uglygep297 = getelementptr i8, ptr %lsr.iv296, i64 -32
  %uglygep301 = getelementptr i8, ptr %lsr.iv300, i64 -32
  %97 = icmp eq i64 %lsr.iv.next294, 0
  br i1 %97, label %middle.block, label %vector.body, !llvm.loop !534

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %80, %n.vec
  br i1 %cmp.n, label %mem.copyBackwards__anon_9784.exit, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %ind.end140 = and i64 %80, 31
  %n.vec.remaining = and i64 %80, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %.lr.ph.i3.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vec.epilog.iter.check, %vector.main.loop.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec139 = and i64 %80, -8
  %ind.end = and i64 %80, 7
  %98 = add i64 %92, -8
  %99 = sub i64 %98, %vec.epilog.resume.val
  %uglygep285 = getelementptr i8, ptr %0, i64 %99
  %100 = add i64 %80, -8
  %101 = sub i64 %100, %vec.epilog.resume.val
  %uglygep288 = getelementptr i8, ptr %0, i64 %101
  %102 = sub i64 %vec.epilog.resume.val, %n.vec139
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %lsr.iv291 = phi i64 [ %lsr.iv.next292, %vec.epilog.vector.body ], [ %102, %vec.epilog.ph ]
  %lsr.iv289 = phi ptr [ %uglygep290, %vec.epilog.vector.body ], [ %uglygep288, %vec.epilog.ph ]
  %lsr.iv286 = phi ptr [ %uglygep287, %vec.epilog.vector.body ], [ %uglygep285, %vec.epilog.ph ]
  %wide.load144 = load <8 x i8>, ptr %lsr.iv289, align 1
  store <8 x i8> %wide.load144, ptr %lsr.iv286, align 1
  %uglygep287 = getelementptr i8, ptr %lsr.iv286, i64 -8
  %uglygep290 = getelementptr i8, ptr %lsr.iv289, i64 -8
  %lsr.iv.next292 = add i64 %lsr.iv291, 8
  %103 = icmp eq i64 %lsr.iv.next292, 0
  br i1 %103, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !535

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n141 = icmp eq i64 %80, %n.vec139
  br i1 %cmp.n141, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i3.preheader

.lr.ph.i3.preheader:                              ; preds = %vec.epilog.middle.block, %vec.epilog.iter.check, %vector.memcheck, %vector.scevcheck, %iter.check
  %.07.i.ph = phi i64 [ %ind.end, %vec.epilog.middle.block ], [ %ind.end140, %vec.epilog.iter.check ], [ %80, %vector.scevcheck ], [ %80, %vector.memcheck ], [ %80, %iter.check ]
  %uglygep282 = getelementptr i8, ptr %0, i64 %79
  br label %.lr.ph.i3

.lr.ph.i3:                                        ; preds = %.lr.ph.i3, %.lr.ph.i3.preheader
  %.07.i = phi i64 [ %104, %.lr.ph.i3 ], [ %.07.i.ph, %.lr.ph.i3.preheader ]
  %104 = add i64 %.07.i, -1
  %uglygep283 = getelementptr i8, ptr %uglygep282, i64 %.07.i
  %uglygep284 = getelementptr i8, ptr %uglygep283, i64 -1
  %uglygep280 = getelementptr i8, ptr %0, i64 %.07.i
  %uglygep281 = getelementptr i8, ptr %uglygep280, i64 -1
  %105 = load i8, ptr %uglygep281, align 1
  store i8 %105, ptr %uglygep284, align 1
  %.not.i2 = icmp eq i64 %104, 0
  br i1 %.not.i2, label %mem.copyBackwards__anon_9784.exit, label %.lr.ph.i3, !llvm.loop !536

mem.copyBackwards__anon_9784.exit:                ; preds = %.lr.ph.i3, %vec.epilog.middle.block, %middle.block, %78
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %0, ptr nonnull align 1 %2, i64 %79, i1 false)
  ret void

106:                                              ; preds = %75
  %107 = mul i64 %5, %4
  %108 = getelementptr inbounds i8, ptr %0, i64 %107
  %109 = sub nuw i64 %4, %7
  %110 = icmp ule i64 %109, %spec.store.select
  %111 = icmp ugt i64 %109, 3
  %112 = and i1 %110, %111
  %113 = mul i64 %7, %5
  br i1 %112, label %.lr.ph39.preheader, label %117

.lr.ph39.preheader:                               ; preds = %106
  %114 = getelementptr inbounds i8, ptr %0, i64 %113
  %115 = getelementptr inbounds i8, ptr %114, i64 %107
  %116 = mul nuw i64 %109, %5
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %2, ptr nonnull align 1 %114, i64 %116, i1 false)
  br label %.lr.ph39

117:                                              ; preds = %106
  %118 = getelementptr inbounds i8, ptr %108, i64 %113
  %.not74 = icmp ult i64 %7, 2
  br i1 %.not74, label %._crit_edge, label %.lr.ph17

.lr.ph17:                                         ; preds = %117
  %119 = lshr i64 %7, 1
  %120 = sub i64 0, %5
  %121 = add i64 %1, -1
  %122 = mul i64 %5, %121
  %123 = add i64 %4, -1
  %124 = mul i64 %5, %123
  br label %130

.lr.ph39:                                         ; preds = %.lr.ph39, %.lr.ph39.preheader
  %lsr.iv251 = phi i64 [ %7, %.lr.ph39.preheader ], [ %lsr.iv.next252, %.lr.ph39 ]
  %.018334 = phi ptr [ %127, %.lr.ph39 ], [ %0, %.lr.ph39.preheader ]
  %uglygep253 = getelementptr i8, ptr %.018334, i64 %113
  %uglygep254 = getelementptr i8, ptr %.018334, i64 %107
  %125 = load i64, ptr %.018334, align 8
  store i64 %125, ptr %uglygep253, align 8
  %126 = load i64, ptr %uglygep254, align 8
  store i64 %126, ptr %.018334, align 8
  %127 = getelementptr inbounds i8, ptr %.018334, i64 %5
  %lsr.iv.next252 = add i64 %lsr.iv251, -1
  %exitcond97.not = icmp eq i64 %lsr.iv.next252, 0
  br i1 %exitcond97.not, label %._crit_edge40, label %.lr.ph39

._crit_edge40:                                    ; preds = %.lr.ph39
  %128 = sub i64 0, %116
  %129 = getelementptr inbounds i8, ptr %115, i64 %128
  tail call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %129, ptr nonnull align 1 %2, i64 %116, i1 false)
  ret void

130:                                              ; preds = %130, %.lr.ph17
  %lsr.iv273 = phi ptr [ %0, %.lr.ph17 ], [ %uglygep274, %130 ]
  %lsr.iv271 = phi i64 [ %119, %.lr.ph17 ], [ %lsr.iv.next272, %130 ]
  %.118412 = phi ptr [ %0, %.lr.ph17 ], [ %134, %130 ]
  %uglygep277 = getelementptr i8, ptr %.118412, i64 %107
  %uglygep279 = getelementptr i8, ptr %lsr.iv273, i64 %124
  %131 = load i64, ptr %uglygep279, align 8
  %132 = load i64, ptr %.118412, align 8
  store i64 %132, ptr %uglygep279, align 8
  %133 = load i64, ptr %uglygep277, align 8
  store i64 %133, ptr %.118412, align 8
  %134 = getelementptr inbounds i8, ptr %.118412, i64 %5
  %uglygep276 = getelementptr i8, ptr %lsr.iv273, i64 %122
  %135 = load i64, ptr %uglygep276, align 8
  store i64 %135, ptr %uglygep277, align 8
  store i64 %131, ptr %uglygep276, align 8
  %lsr.iv.next272 = add i64 %lsr.iv271, -1
  %uglygep274 = getelementptr i8, ptr %lsr.iv273, i64 %120
  %exitcond91.not = icmp eq i64 %lsr.iv.next272, 0
  br i1 %exitcond91.not, label %._crit_edge.loopexit, label %130

._crit_edge.loopexit:                             ; preds = %130
  %136 = mul i64 %5, %1
  %uglygep275 = getelementptr i8, ptr %uglygep274, i64 %136
  %uglygep278 = getelementptr i8, ptr %uglygep274, i64 %107
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %117
  %.1184.lcssa = phi ptr [ %0, %117 ], [ %134, %._crit_edge.loopexit ]
  %.1181.lcssa = phi ptr [ %108, %117 ], [ %uglygep278, %._crit_edge.loopexit ]
  %.0160.lcssa = phi ptr [ %118, %117 ], [ %uglygep275, %._crit_edge.loopexit ]
  %137 = ptrtoint ptr %.1181.lcssa to i64
  %138 = ptrtoint ptr %.1184.lcssa to i64
  %139 = sub nuw i64 %137, %138
  %140 = shl nuw i64 %5, 1
  %.not75 = icmp ugt i64 %140, %139
  br i1 %.not75, label %._crit_edge26, label %.lr.ph25

.lr.ph25:                                         ; preds = %._crit_edge
  %141 = udiv i64 %139, %140
  %142 = sub i64 0, %5
  %umax92 = tail call i64 @llvm.umax.i64(i64 %141, i64 1)
  br label %143

143:                                              ; preds = %143, %.lr.ph25
  %lsr.iv265 = phi i64 [ %142, %.lr.ph25 ], [ %lsr.iv.next266, %143 ]
  %lsr.iv262 = phi i64 [ 0, %.lr.ph25 ], [ %lsr.iv.next263, %143 ]
  %lsr.iv260 = phi i64 [ %umax92, %.lr.ph25 ], [ %lsr.iv.next261, %143 ]
  %uglygep270 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv262
  %uglygep268 = getelementptr i8, ptr %.1181.lcssa, i64 %lsr.iv265
  %144 = load i64, ptr %uglygep268, align 8
  %145 = load i64, ptr %uglygep270, align 8
  store i64 %145, ptr %uglygep268, align 8
  %uglygep267 = getelementptr i8, ptr %.0160.lcssa, i64 %lsr.iv265
  %146 = load i64, ptr %uglygep267, align 8
  store i64 %146, ptr %uglygep270, align 8
  store i64 %144, ptr %uglygep267, align 8
  %lsr.iv.next261 = add i64 %lsr.iv260, -1
  %lsr.iv.next263 = add i64 %lsr.iv262, %5
  %lsr.iv.next266 = sub i64 %lsr.iv265, %5
  %exitcond93.not = icmp eq i64 %lsr.iv.next261, 0
  br i1 %exitcond93.not, label %._crit_edge26.loopexit, label %143

._crit_edge26.loopexit:                           ; preds = %143
  %147 = ptrtoint ptr %.1184.lcssa to i64
  %148 = add i64 %147, %lsr.iv.next263
  %149 = mul i64 %lsr.iv.next263, -1
  %uglygep264 = getelementptr i8, ptr %.0160.lcssa, i64 %149
  %uglygep269 = getelementptr i8, ptr %.1184.lcssa, i64 %lsr.iv.next263
  br label %._crit_edge26

._crit_edge26:                                    ; preds = %._crit_edge26.loopexit, %._crit_edge
  %.pre-phi106 = phi i64 [ %148, %._crit_edge26.loopexit ], [ %138, %._crit_edge ]
  %.2185.lcssa = phi ptr [ %uglygep269, %._crit_edge26.loopexit ], [ %.1184.lcssa, %._crit_edge ]
  %.1.lcssa = phi ptr [ %uglygep264, %._crit_edge26.loopexit ], [ %.0160.lcssa, %._crit_edge ]
  %150 = ptrtoint ptr %.1.lcssa to i64
  %151 = sub nuw i64 %150, %.pre-phi106
  %.not76 = icmp ugt i64 %140, %151
  br i1 %.not76, label %.loopexit, label %.lr.ph33

.lr.ph33:                                         ; preds = %._crit_edge26
  %152 = udiv i64 %151, %140
  %153 = sub i64 0, %5
  %umax94 = tail call i64 @llvm.umax.i64(i64 %152, i64 1)
  %uglygep257 = getelementptr i8, ptr %.1.lcssa, i64 %153
  br label %154

154:                                              ; preds = %154, %.lr.ph33
  %lsr.iv258 = phi ptr [ %uglygep257, %.lr.ph33 ], [ %uglygep259, %154 ]
  %lsr.iv255 = phi i64 [ %umax94, %.lr.ph33 ], [ %lsr.iv.next256, %154 ]
  %.329 = phi ptr [ %.2185.lcssa, %.lr.ph33 ], [ %157, %154 ]
  %155 = load i64, ptr %.329, align 8
  %156 = load i64, ptr %lsr.iv258, align 8
  store i64 %156, ptr %.329, align 8
  %157 = getelementptr inbounds i8, ptr %.329, i64 %5
  store i64 %155, ptr %lsr.iv258, align 8
  %lsr.iv.next256 = add i64 %lsr.iv255, -1
  %uglygep259 = getelementptr i8, ptr %lsr.iv258, i64 %153
  %exitcond95.not = icmp eq i64 %lsr.iv.next256, 0
  br i1 %exitcond95.not, label %.loopexit, label %154

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %lsr.iv303 = phi i64 [ %4, %.lr.ph.preheader ], [ %lsr.iv.next304, %.lr.ph ]
  %.01569 = phi ptr [ %160, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  %uglygep305 = getelementptr i8, ptr %.01569, i64 %77
  %158 = load i64, ptr %.01569, align 8
  %159 = load i64, ptr %uglygep305, align 8
  store i64 %159, ptr %.01569, align 8
  %160 = getelementptr inbounds i8, ptr %.01569, i64 %5
  store i64 %158, ptr %uglygep305, align 8
  %lsr.iv.next304 = add i64 %lsr.iv303, -1
  %exitcond.not = icmp eq i64 %lsr.iv.next304, 0
  br i1 %exitcond.not, label %.loopexit, label %.lr.ph
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i128 @llvm.abs.i128(i128, i1 immarg) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #12

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #3

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal i64 @roc_builtins.str.number_of_bytes(ptr nocapture noundef readonly %0) local_unnamed_addr #5 {
  %2 = tail call i64 @roc_builtins.str.count_utf8_bytes(ptr nocapture noundef readonly %0) #5
  ret i64 %2
}

define internal fastcc void @Inspect_inspect_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b(ptr %val, ptr %0) !dbg !537 {
entry:
  %result_value2 = alloca %str.RocStr, align 8
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @"#Derived_toInspector_[Exit 2,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd"(ptr %val, ptr nonnull %result_value), !dbg !542
  call fastcc void @Inspect_dbgInit_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece({} zeroinitializer, ptr nonnull %result_value1), !dbg !542
  call fastcc void @"#Derived_custom2_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3"(ptr nonnull %result_value1, ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !542
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !542
  ret void, !dbg !542
}

define internal fastcc void @Inspect_dbgI32_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e(i32 %num, ptr %0) !dbg !544 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !545
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !545
  store i32 %num, ptr %tag_alloca, align 8, !dbg !545
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !545
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !545
  call fastcc void @Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !545
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !545
  ret void, !dbg !545
}

define internal fastcc void @Inspect_206_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !547 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !548
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !548
  %result_value6 = alloca %str.RocStr, align 8, !dbg !548
  %result_value5 = alloca %str.RocStr, align 8, !dbg !548
  %result_value = alloca %str.RocStr, align 8, !dbg !548
  %const_str_store = alloca %str.RocStr, align 8, !dbg !548
  %load_element4 = alloca %str.RocStr, align 8, !dbg !548
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !548
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !548
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !548
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !548
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !548
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !548
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !548
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !548
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !548
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !548
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !548
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !548
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !548
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !548
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !548
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !548
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !548
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !548
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element4), !dbg !548
  call fastcc void @Inspect_208_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !548
  call fastcc void @"#Attr_#dec_2"(%list.RocList %load_element13), !dbg !548
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !548
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !548
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !548
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !548
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !548
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !548
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store7), !dbg !548
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !548
  ret void, !dbg !548
}

define internal fastcc void @Inspect_custom_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9(ptr %fn, ptr %0) !dbg !550 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %fn, i64 40, i1 false), !dbg !551
  ret void, !dbg !551
}

define internal fastcc void @List_walk_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !553 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !554
  %call = tail call fastcc i64 @List_len_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(%list.RocList %list), !dbg !554
  call fastcc void @List_walkHelp_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !554
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !554
  ret void, !dbg !554
}

define internal fastcc void @List_walkHelp_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2(%list.RocList %"50", ptr %"51", {} %"52", i64 %"53", i64 %"54", ptr %0) !dbg !556 {
entry:
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_2"(%list.RocList %"50", i64 1), !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"51", i64 24, i1 false), !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !557
  br label %joinpointcont, !dbg !557

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"53", %entry ], [ %call5, %then_block ], !dbg !557
  %call = call fastcc i1 @Num_isLt_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11(i64 %joinpointarg2, i64 %"54"), !dbg !557
  br i1 %call, label %then_block, label %else_block, !dbg !557

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a(%list.RocList %"50", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !557
  call fastcc void @"#Attr_#inc_1"(ptr nonnull %result_value, i64 1), !dbg !557
  call fastcc void @Inspect_210_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !557
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value), !dbg !557
  %call5 = call fastcc i64 @Num_addWrap_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8(i64 %joinpointarg2, i64 1), !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !557
  br label %joinpointcont, !dbg !557

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_2"(%list.RocList %"50"), !dbg !557
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !557
  ret void, !dbg !557
}

define internal fastcc void @Inspect_apply_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(ptr %"303", ptr %fmt, ptr %0) !dbg !559 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_250_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !560
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !560
  ret void, !dbg !560
}

define internal fastcc void @"#Derived_custom3_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e"(ptr %fmt3, ptr %"#arg_closure", ptr %0) !dbg !562 {
entry:
  %result_value26 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp25 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value24 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store23 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp22 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value21 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store20 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp19 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value18 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store17 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp16 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value15 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store14 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp13 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value12 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value9 = alloca %str.RocStr, align 8, !dbg !563
  %const_str_store8 = alloca %str.RocStr, align 8, !dbg !563
  %load_element7 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp4 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value3 = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store2 = alloca %str.RocStr, align 8, !dbg !563
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %const_str_store = alloca %str.RocStr, align 8, !dbg !563
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !563
  %load_element = alloca { [3 x i64], i8 }, align 8, !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element, ptr noundef nonnull align 8 dereferenceable(32) %"#arg_closure", i64 32, i1 false), !dbg !563
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %load_element, i64 0, i32 1, !dbg !563
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !563
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
    i8 2, label %branch2
    i8 3, label %branch3
    i8 4, label %branch4
    i8 5, label %branch5
  ], !dbg !563

default:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 8243094084762825303 to ptr), ptr %const_str_store23, align 8, !dbg !563
  %const_str_store23.repack39 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 1, !dbg !563
  store i64 111, ptr %const_str_store23.repack39, align 8, !dbg !563
  %const_str_store23.repack40 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 2, !dbg !563
  store i64 -8574853690513424384, ptr %const_str_store23.repack40, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store23, %list.RocList zeroinitializer, ptr nonnull %result_value24), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store23), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp25, ptr noundef nonnull align 8 dereferenceable(56) %result_value24, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp25, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

joinpointcont:                                    ; preds = %default, %branch5, %branch4, %branch3, %branch2, %branch1, %branch0
  call fastcc void @Inspect_apply_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(ptr nonnull %joinpoint_arg_alloca, ptr %fmt3, ptr nonnull %result_value26), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value26, i64 24, i1 false), !dbg !563
  ret void, !dbg !563

branch0:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 7588686753992503874 to ptr), ptr %const_str_store, align 8, !dbg !563
  %const_str_store.repack37 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !563
  store i64 25968, ptr %const_str_store.repack37, align 8, !dbg !563
  %const_str_store.repack38 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !563
  store i64 -8502796096475496448, ptr %const_str_store.repack38, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store, %list.RocList zeroinitializer, ptr nonnull %result_value), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

branch1:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 8103508940177043017 to ptr), ptr %const_str_store2, align 8, !dbg !563
  %const_str_store2.repack35 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !563
  store i64 6579572, ptr %const_str_store2.repack35, align 8, !dbg !563
  %const_str_store2.repack36 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !563
  store i64 -8430738502437568512, ptr %const_str_store2.repack36, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store2, %list.RocList zeroinitializer, ptr nonnull %result_value3), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store2), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, ptr noundef nonnull align 8 dereferenceable(56) %result_value3, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp4, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

branch2:                                          ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element7, ptr noundef nonnull align 8 dereferenceable(24) %load_element, i64 24, i1 false), !dbg !563
  store ptr inttoptr (i64 491327616079 to ptr), ptr %const_str_store8, align 8, !dbg !563
  %const_str_store8.repack33 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 1, !dbg !563
  store i64 0, ptr %const_str_store8.repack33, align 8, !dbg !563
  %const_str_store8.repack34 = getelementptr inbounds %str.RocStr, ptr %const_str_store8, i64 0, i32 2, !dbg !563
  store i64 -8863084066665136128, ptr %const_str_store8.repack34, align 8, !dbg !563
  call fastcc void @Inspect_dbgStr_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec(ptr nonnull %load_element7, ptr nonnull %result_value9), !dbg !563
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 24, i32 8, i1 true), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call_builtin, ptr noundef nonnull align 8 dereferenceable(24) %result_value9, i64 24, i1 false), !dbg !563
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !563
  %insert_record_field10 = insertvalue %list.RocList %insert_record_field, i64 1, 1, !dbg !563
  %insert_record_field11 = insertvalue %list.RocList %insert_record_field10, i64 1, 2, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store8, %list.RocList %insert_record_field11, ptr nonnull %result_value12), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store8), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList %insert_record_field11), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, ptr noundef nonnull align 8 dereferenceable(56) %result_value12, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp13, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

branch3:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 7882791824596956495 to ptr), ptr %const_str_store14, align 8, !dbg !563
  %const_str_store14.repack31 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 1, !dbg !563
  store i64 7959151, ptr %const_str_store14.repack31, align 8, !dbg !563
  %const_str_store14.repack32 = getelementptr inbounds %str.RocStr, ptr %const_str_store14, i64 0, i32 2, !dbg !563
  store i64 -8430738502437568512, ptr %const_str_store14.repack32, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store14, %list.RocList zeroinitializer, ptr nonnull %result_value15), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store14), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, ptr noundef nonnull align 8 dereferenceable(56) %result_value15, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp16, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

branch4:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 8245933071047814741 to ptr), ptr %const_str_store17, align 8, !dbg !563
  %const_str_store17.repack29 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 1, !dbg !563
  store i64 6579572, ptr %const_str_store17.repack29, align 8, !dbg !563
  %const_str_store17.repack30 = getelementptr inbounds %str.RocStr, ptr %const_str_store17, i64 0, i32 2, !dbg !563
  store i64 -8430738502437568512, ptr %const_str_store17.repack30, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store17, %list.RocList zeroinitializer, ptr nonnull %result_value18), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store17), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, ptr noundef nonnull align 8 dereferenceable(56) %result_value18, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp19, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563

branch5:                                          ; preds = %entry
  call fastcc void @"#Attr_#dec_3"(ptr nonnull %load_element), !dbg !563
  store ptr inttoptr (i64 8028865234778550103 to ptr), ptr %const_str_store20, align 8, !dbg !563
  %const_str_store20.repack27 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 1, !dbg !563
  store i64 27491, ptr %const_str_store20.repack27, align 8, !dbg !563
  %const_str_store20.repack28 = getelementptr inbounds %str.RocStr, ptr %const_str_store20, i64 0, i32 2, !dbg !563
  store i64 -8502796096475496448, ptr %const_str_store20.repack28, align 8, !dbg !563
  call fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr nonnull %const_str_store20, %list.RocList zeroinitializer, ptr nonnull %result_value21), !dbg !563
  call fastcc void @"#Attr_#dec_2"(%list.RocList zeroinitializer), !dbg !563
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store20), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, ptr noundef nonnull align 8 dereferenceable(56) %result_value21, i64 56, i1 false), !dbg !563
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp22, i64 56, i1 false), !dbg !563
  br label %joinpointcont, !dbg !563
}

define internal fastcc void @PlatformTasks_task_closure_stderrLine_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6({} %"127", ptr %closure_arg_stderrLine_0, ptr %0) !dbg !565 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @roc_fx_stderrLine_fastcc_wrapper(ptr %closure_arg_stderrLine_0, ptr nonnull %result_value), !dbg !566
  call fastcc void @"#Attr_#dec_1"(ptr %closure_arg_stderrLine_0), !dbg !566
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !566
  ret void, !dbg !566
}

define internal fastcc void @Task_38_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61({} %"139", i32 %a, ptr %0) !dbg !568 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !569
  store i32 %a, ptr %tag_alloca, align 8, !dbg !569
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !569
  store i8 0, ptr %tag_id_ptr, align 4, !dbg !569
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !569
  store i64 %1, ptr %0, align 4, !dbg !569
  ret void, !dbg !569
}

define internal fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %"300", ptr %added, ptr %0) !dbg !571 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(ptr %"300", ptr %added, ptr nonnull %result_value), !dbg !572
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !572
  ret void, !dbg !572
}

define internal fastcc void @Inspect_dbgStr_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec(ptr %s, ptr %0) !dbg !574 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_custom_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f(ptr %s, ptr nonnull %result_value), !dbg !575
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !575
  ret void, !dbg !575
}

define internal fastcc void @"#Derived_custom2_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3"(ptr %fmt2, ptr %tag2, ptr %0) !dbg !577 {
entry:
  %result_value22 = alloca %str.RocStr, align 8
  %tmp_output_for_jmp21 = alloca { [6 x i64], i8 }, align 8
  %result_value20 = alloca { [6 x i64], i8 }, align 8
  %result_value14 = alloca { [4 x i64], i8 }, align 8
  %const_str_store13 = alloca %str.RocStr, align 8
  %load_element12 = alloca { [3 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca { [6 x i64], i8 }, align 8
  %result_value9 = alloca { [6 x i64], i8 }, align 8
  %result_value5 = alloca { [4 x i64], i8 }, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  %load_element = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca { [6 x i64], i8 }, align 8
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag2, i64 0, i32 1, !dbg !578
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !578
  %eq_u8 = icmp eq i8 %load_tag_id, 0, !dbg !578
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !578

then_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %tag2, i64 24, i1 false), !dbg !578
  %get_opaque_data_ptr3 = getelementptr inbounds { %str.RocStr, i32 }, ptr %tag2, i64 0, i32 1, !dbg !578
  %load_element4 = load i32, ptr %get_opaque_data_ptr3, align 4, !dbg !578
  store ptr inttoptr (i64 1953069125 to ptr), ptr %const_str_store, align 8, !dbg !578
  %const_str_store.repack25 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !578
  store i64 0, ptr %const_str_store.repack25, align 8, !dbg !578
  %const_str_store.repack26 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !578
  store i64 -8935141660703064064, ptr %const_str_store.repack26, align 8, !dbg !578
  call fastcc void @Inspect_dbgI32_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e(i32 %load_element4, ptr nonnull %result_value), !dbg !578
  call fastcc void @Inspect_dbgStr_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(ptr nonnull %load_element, ptr nonnull %result_value5), !dbg !578
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element), !dbg !578
  %call_builtin = call ptr @roc_builtins.utils.allocate_with_refcount(i64 80, i32 8, i1 true), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !578
  %index6 = getelementptr inbounds { [4 x i64], i8 }, ptr %call_builtin, i64 1, !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %index6, ptr noundef nonnull align 8 dereferenceable(40) %result_value5, i64 40, i1 false), !dbg !578
  %insert_record_field = insertvalue %list.RocList zeroinitializer, ptr %call_builtin, 0, !dbg !578
  %insert_record_field7 = insertvalue %list.RocList %insert_record_field, i64 2, 1, !dbg !578
  %insert_record_field8 = insertvalue %list.RocList %insert_record_field7, i64 2, 2, !dbg !578
  call fastcc void @Inspect_dbgTag_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(ptr nonnull %const_str_store, %list.RocList %insert_record_field8, ptr nonnull %result_value9), !dbg !578
  call fastcc void @"#Attr_#dec_4"(%list.RocList %insert_record_field8), !dbg !578
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(56) %result_value9, i64 56, i1 false), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp, i64 56, i1 false), !dbg !578
  br label %joinpointcont, !dbg !578

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element12, ptr noundef nonnull align 8 dereferenceable(32) %tag2, i64 32, i1 false), !dbg !578
  store ptr inttoptr (i64 8234115541445669971 to ptr), ptr %const_str_store13, align 8, !dbg !578
  %const_str_store13.repack23 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 1, !dbg !578
  store i64 114, ptr %const_str_store13.repack23, align 8, !dbg !578
  %const_str_store13.repack24 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 2, !dbg !578
  store i64 -8574853690513424384, ptr %const_str_store13.repack24, align 8, !dbg !578
  call fastcc void @"#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b"(ptr nonnull %load_element12, ptr nonnull %result_value14), !dbg !578
  %call_builtin15 = call ptr @roc_builtins.utils.allocate_with_refcount(i64 40, i32 8, i1 true), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %call_builtin15, ptr noundef nonnull align 8 dereferenceable(40) %result_value14, i64 40, i1 false), !dbg !578
  %insert_record_field17 = insertvalue %list.RocList zeroinitializer, ptr %call_builtin15, 0, !dbg !578
  %insert_record_field18 = insertvalue %list.RocList %insert_record_field17, i64 1, 1, !dbg !578
  %insert_record_field19 = insertvalue %list.RocList %insert_record_field18, i64 1, 2, !dbg !578
  call fastcc void @Inspect_dbgTag_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(ptr nonnull %const_str_store13, %list.RocList %insert_record_field19, ptr nonnull %result_value20), !dbg !578
  call fastcc void @"#Attr_#dec_4"(%list.RocList %insert_record_field19), !dbg !578
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store13), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp21, ptr noundef nonnull align 8 dereferenceable(56) %result_value20, i64 56, i1 false), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(56) %tmp_output_for_jmp21, i64 56, i1 false), !dbg !578
  br label %joinpointcont, !dbg !578

joinpointcont:                                    ; preds = %else_block, %then_block
  call fastcc void @Inspect_apply_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31(ptr nonnull %joinpoint_arg_alloca, ptr %fmt2, ptr nonnull %result_value22), !dbg !578
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value22, i64 24, i1 false), !dbg !578
  ret void, !dbg !578
}

define internal fastcc void @Inspect_206_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !580 {
entry:
  %result_value8 = alloca %str.RocStr, align 8, !dbg !581
  %const_str_store7 = alloca %str.RocStr, align 8, !dbg !581
  %result_value6 = alloca %str.RocStr, align 8, !dbg !581
  %result_value5 = alloca %str.RocStr, align 8, !dbg !581
  %result_value = alloca %str.RocStr, align 8, !dbg !581
  %const_str_store = alloca %str.RocStr, align 8, !dbg !581
  %load_element4 = alloca %str.RocStr, align 8, !dbg !581
  %get_opaque_data_ptr1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, !dbg !581
  %load_element.unpack = load ptr, ptr %get_opaque_data_ptr1, align 8, !dbg !581
  %1 = insertvalue %list.RocList poison, ptr %load_element.unpack, 0, !dbg !581
  %load_element.elt9 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 1, !dbg !581
  %load_element.unpack10 = load i64, ptr %load_element.elt9, align 8, !dbg !581
  %2 = insertvalue %list.RocList %1, i64 %load_element.unpack10, 1, !dbg !581
  %load_element.elt11 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %"#arg_closure", i64 0, i32 1, i32 2, !dbg !581
  %load_element.unpack12 = load i64, ptr %load_element.elt11, align 8, !dbg !581
  %load_element13 = insertvalue %list.RocList %2, i64 %load_element.unpack12, 2, !dbg !581
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element4, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !581
  store ptr inttoptr (i64 40 to ptr), ptr %const_str_store, align 8, !dbg !581
  %const_str_store.repack14 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !581
  store i64 0, ptr %const_str_store.repack14, align 8, !dbg !581
  %const_str_store.repack15 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !581
  store i64 -9151314442816847872, ptr %const_str_store.repack15, align 8, !dbg !581
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !581
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !581
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value, ptr nonnull %load_element4, ptr nonnull %result_value5), !dbg !581
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element4), !dbg !581
  call fastcc void @Inspect_208_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(ptr nonnull %result_value5, %list.RocList %load_element13, ptr nonnull %result_value6), !dbg !581
  call fastcc void @"#Attr_#dec_4"(%list.RocList %load_element13), !dbg !581
  store ptr inttoptr (i64 41 to ptr), ptr %const_str_store7, align 8, !dbg !581
  %const_str_store7.repack16 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 1, !dbg !581
  store i64 0, ptr %const_str_store7.repack16, align 8, !dbg !581
  %const_str_store7.repack17 = getelementptr inbounds %str.RocStr, ptr %const_str_store7, i64 0, i32 2, !dbg !581
  store i64 -9151314442816847872, ptr %const_str_store7.repack17, align 8, !dbg !581
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value6, ptr nonnull %const_str_store7, ptr nonnull %result_value8), !dbg !581
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store7), !dbg !581
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value8, i64 24, i1 false), !dbg !581
  ret void, !dbg !581
}

define internal fastcc void @Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(ptr %"#arg1", ptr %"#arg2", ptr %0) !dbg !583 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.concat(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, ptr nocapture readonly %"#arg1", ptr nocapture readonly %"#arg2"), !dbg !584
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !584
  ret void, !dbg !584
}

define internal fastcc void @List_walk_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(%list.RocList %list, ptr %init, {} %func, ptr %0) !dbg !586 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !587
  %call = tail call fastcc i64 @List_len_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(%list.RocList %list), !dbg !587
  call fastcc void @List_walkHelp_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772(%list.RocList %list, ptr %init, {} %func, i64 0, i64 %call, ptr nonnull %result_value), !dbg !587
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !587
  ret void, !dbg !587
}

define internal fastcc i32 @_7_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79(ptr %"26", ptr %"#arg_closure") !dbg !589 {
entry:
  tail call fastcc void @"#Attr_#dec_3"(ptr %"26"), !dbg !590
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !590
  %call = tail call fastcc i32 @Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i32 %load_element), !dbg !590
  ret i32 %call, !dbg !590
}

define internal fastcc { %str.RocStr, {} } @"#UserApp_main_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061"() !dbg !592 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !593
  %result_value = alloca %str.RocStr, align 8, !dbg !593
  %const_str_store = alloca %str.RocStr, align 8, !dbg !593
  %call = tail call fastcc i64 @Test_calculateMiddleTotal_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83({} zeroinitializer), !dbg !593
  store ptr inttoptr (i64 139392673140 to ptr), ptr %const_str_store, align 8, !dbg !593
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !593
  store i64 0, ptr %const_str_store.repack3, align 8, !dbg !593
  %const_str_store.repack4 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !593
  store i64 -8863084066665136128, ptr %const_str_store.repack4, align 8, !dbg !593
  call fastcc void @Num_toStr_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2(i64 %call, ptr nonnull %result_value), !dbg !593
  call fastcc void @Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(ptr nonnull %const_str_store, ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !593
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value), !dbg !593
  %call2 = call fastcc { %str.RocStr, {} } @Stdout_line_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9(ptr nonnull %result_value1), !dbg !593
  ret { %str.RocStr, {} } %call2, !dbg !593
}

define internal fastcc i8 @Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2(ptr %"8", ptr %"9", ptr %rulesMap) !dbg !595 {
entry:
  %call = tail call fastcc i1 @Set_isEmpty_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(ptr %rulesMap), !dbg !596
  br i1 %call, label %then_block, label %else_block, !dbg !596

then_block:                                       ; preds = %entry
  ret i8 1, !dbg !596

else_block:                                       ; preds = %entry
  ret i8 2, !dbg !596
}

define internal fastcc void @Stdout_handleErr_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894(ptr %err, ptr %0) !dbg !598 {
entry:
  %tag_alloca86 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca81 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca76 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca71 = alloca { [3 x i64], i8 }, align 8
  %const_str_store66 = alloca %str.RocStr, align 8
  %tag_alloca61 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca56 = alloca { [3 x i64], i8 }, align 8
  %const_str_store51 = alloca %str.RocStr, align 8
  %tag_alloca46 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca41 = alloca { [3 x i64], i8 }, align 8
  %const_str_store36 = alloca %str.RocStr, align 8
  %tag_alloca31 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca26 = alloca { [3 x i64], i8 }, align 8
  %const_str_store21 = alloca %str.RocStr, align 8
  %tag_alloca16 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca11 = alloca { [3 x i64], i8 }, align 8
  %const_str_store6 = alloca %str.RocStr, align 8
  %tag_alloca1 = alloca { [4 x i64], i8 }, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store, align 8, !dbg !599
  %const_str_store.repack89 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !599
  store i64 7308057356866828900, ptr %const_str_store.repack89, align 8, !dbg !599
  %const_str_store.repack90 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !599
  store i64 -7710162126380642194, ptr %const_str_store.repack90, align 8, !dbg !599
  %call = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !599
  br label %joinpointcont, !dbg !599

joinpointcont:                                    ; preds = %entry
  br i1 %call, label %then_block, label %else_block, !dbg !599

then_block:                                       ; preds = %joinpointcont
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !599
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !599
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag_alloca, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca1, align 8, !dbg !599
  %tag_id_ptr3 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca1, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr3, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca1, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block:                                       ; preds = %joinpointcont
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store6, align 8, !dbg !599
  %const_str_store6.repack91 = getelementptr inbounds %str.RocStr, ptr %const_str_store6, i64 0, i32 1, !dbg !599
  store i64 7236287822342797924, ptr %const_str_store6.repack91, align 8, !dbg !599
  %const_str_store6.repack92 = getelementptr inbounds %str.RocStr, ptr %const_str_store6, i64 0, i32 2, !dbg !599
  store i64 -7710162100828541886, ptr %const_str_store6.repack92, align 8, !dbg !599
  %call7 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store6), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store6), !dbg !599
  br label %joinpointcont4, !dbg !599

joinpointcont4:                                   ; preds = %else_block
  br i1 %call7, label %then_block9, label %else_block10, !dbg !599

then_block9:                                      ; preds = %joinpointcont4
  %tag_id_ptr13 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca11, i64 0, i32 1, !dbg !599
  store i8 5, ptr %tag_id_ptr13, align 8, !dbg !599
  %load_tag_to_put_in_struct14 = load { [3 x i64], i8 }, ptr %tag_alloca11, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct14, ptr %tag_alloca16, align 8, !dbg !599
  %tag_id_ptr18 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca16, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr18, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca16, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block10:                                     ; preds = %joinpointcont4
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store21, align 8, !dbg !599
  %const_str_store21.repack93 = getelementptr inbounds %str.RocStr, ptr %const_str_store21, i64 0, i32 1, !dbg !599
  store i64 7310584034939779684, ptr %const_str_store21.repack93, align 8, !dbg !599
  %const_str_store21.repack94 = getelementptr inbounds %str.RocStr, ptr %const_str_store21, i64 0, i32 2, !dbg !599
  store i64 -7782220154226449062, ptr %const_str_store21.repack94, align 8, !dbg !599
  %call22 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store21), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store21), !dbg !599
  br label %joinpointcont19, !dbg !599

joinpointcont19:                                  ; preds = %else_block10
  br i1 %call22, label %then_block24, label %else_block25, !dbg !599

then_block24:                                     ; preds = %joinpointcont19
  %tag_id_ptr28 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca26, i64 0, i32 1, !dbg !599
  store i8 6, ptr %tag_id_ptr28, align 8, !dbg !599
  %load_tag_to_put_in_struct29 = load { [3 x i64], i8 }, ptr %tag_alloca26, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct29, ptr %tag_alloca31, align 8, !dbg !599
  %tag_id_ptr33 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca31, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr33, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca31, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block25:                                     ; preds = %joinpointcont19
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store36, align 8, !dbg !599
  %const_str_store36.repack95 = getelementptr inbounds %str.RocStr, ptr %const_str_store36, i64 0, i32 1, !dbg !599
  store i64 8103510022236551780, ptr %const_str_store36.repack95, align 8, !dbg !599
  %const_str_store36.repack96 = getelementptr inbounds %str.RocStr, ptr %const_str_store36, i64 0, i32 2, !dbg !599
  store i64 -7637994581112230032, ptr %const_str_store36.repack96, align 8, !dbg !599
  %call37 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store36), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store36), !dbg !599
  br label %joinpointcont34, !dbg !599

joinpointcont34:                                  ; preds = %else_block25
  br i1 %call37, label %then_block39, label %else_block40, !dbg !599

then_block39:                                     ; preds = %joinpointcont34
  %tag_id_ptr43 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !599
  store i8 4, ptr %tag_id_ptr43, align 8, !dbg !599
  %load_tag_to_put_in_struct44 = load { [3 x i64], i8 }, ptr %tag_alloca41, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct44, ptr %tag_alloca46, align 8, !dbg !599
  %tag_id_ptr48 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca46, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr48, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca46, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block40:                                     ; preds = %joinpointcont34
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store51, align 8, !dbg !599
  %const_str_store51.repack97 = getelementptr inbounds %str.RocStr, ptr %const_str_store51, i64 0, i32 1, !dbg !599
  store i64 8243122709995338340, ptr %const_str_store51.repack97, align 8, !dbg !599
  %const_str_store51.repack98 = getelementptr inbounds %str.RocStr, ptr %const_str_store51, i64 0, i32 2, !dbg !599
  store i64 -7637994581112359566, ptr %const_str_store51.repack98, align 8, !dbg !599
  %call52 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store51), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store51), !dbg !599
  br label %joinpointcont49, !dbg !599

joinpointcont49:                                  ; preds = %else_block40
  br i1 %call52, label %then_block54, label %else_block55, !dbg !599

then_block54:                                     ; preds = %joinpointcont49
  %tag_id_ptr58 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca56, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr58, align 8, !dbg !599
  %load_tag_to_put_in_struct59 = load { [3 x i64], i8 }, ptr %tag_alloca56, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct59, ptr %tag_alloca61, align 8, !dbg !599
  %tag_id_ptr63 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca61, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr63, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca61, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block55:                                     ; preds = %joinpointcont49
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store66, align 8, !dbg !599
  %const_str_store66.repack99 = getelementptr inbounds %str.RocStr, ptr %const_str_store66, i64 0, i32 1, !dbg !599
  store i64 7372239162218003044, ptr %const_str_store66.repack99, align 8, !dbg !599
  %const_str_store66.repack100 = getelementptr inbounds %str.RocStr, ptr %const_str_store66, i64 0, i32 2, !dbg !599
  store i64 -7637971435617688243, ptr %const_str_store66.repack100, align 8, !dbg !599
  %call67 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store66), !dbg !599
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store66), !dbg !599
  br label %joinpointcont64, !dbg !599

joinpointcont64:                                  ; preds = %else_block55
  br i1 %call67, label %then_block69, label %else_block70, !dbg !599

then_block69:                                     ; preds = %joinpointcont64
  %tag_id_ptr73 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca71, i64 0, i32 1, !dbg !599
  store i8 3, ptr %tag_id_ptr73, align 8, !dbg !599
  %load_tag_to_put_in_struct74 = load { [3 x i64], i8 }, ptr %tag_alloca71, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct74, ptr %tag_alloca76, align 8, !dbg !599
  %tag_id_ptr78 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca76, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr78, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca76, i64 40, i1 false), !dbg !599
  ret void, !dbg !599

else_block70:                                     ; preds = %joinpointcont64
  call fastcc void @"#Attr_#inc_1"(ptr %err, i64 1), !dbg !599
  %load_tag_to_put_in_struct79.unpack = load ptr, ptr %err, align 8, !dbg !599
  %load_tag_to_put_in_struct79.elt101 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 1, !dbg !599
  %load_tag_to_put_in_struct79.unpack102 = load i64, ptr %load_tag_to_put_in_struct79.elt101, align 8, !dbg !599
  %load_tag_to_put_in_struct79.elt103 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 2, !dbg !599
  %load_tag_to_put_in_struct79.unpack104 = load i64, ptr %load_tag_to_put_in_struct79.elt103, align 8, !dbg !599
  store ptr %load_tag_to_put_in_struct79.unpack, ptr %tag_alloca81, align 8, !dbg !599
  %tag_alloca81.repack106 = getelementptr inbounds %str.RocStr, ptr %tag_alloca81, i64 0, i32 1, !dbg !599
  store i64 %load_tag_to_put_in_struct79.unpack102, ptr %tag_alloca81.repack106, align 8, !dbg !599
  %tag_alloca81.repack108 = getelementptr inbounds %str.RocStr, ptr %tag_alloca81, i64 0, i32 2, !dbg !599
  store i64 %load_tag_to_put_in_struct79.unpack104, ptr %tag_alloca81.repack108, align 8, !dbg !599
  %tag_id_ptr83 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca81, i64 0, i32 1, !dbg !599
  store i8 2, ptr %tag_id_ptr83, align 8, !dbg !599
  %load_tag_to_put_in_struct84 = load { [3 x i64], i8 }, ptr %tag_alloca81, align 8, !dbg !599
  store { [3 x i64], i8 } %load_tag_to_put_in_struct84, ptr %tag_alloca86, align 8, !dbg !599
  %tag_id_ptr88 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca86, i64 0, i32 1, !dbg !599
  store i8 1, ptr %tag_id_ptr88, align 8, !dbg !599
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca86, i64 40, i1 false), !dbg !599
  ret void, !dbg !599
}

define internal fastcc void @Task_ok_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f({} %a, ptr %0) !dbg !601 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !602
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !602
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !602
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !602
  ret void, !dbg !602
}

define internal fastcc void @Inspect_toStr_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9(ptr %val, ptr %0) !dbg !604 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_inspect_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b(ptr %val, ptr nonnull %result_value), !dbg !605
  call fastcc void @Inspect_toDbgStr_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !605
  ret void, !dbg !605
}

define internal fastcc void @Task_42_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32({} %"106", { { %str.RocStr, {} }, {} } %"#arg_closure", ptr %0) !dbg !607 {
entry:
  %result_value4 = alloca { [1 x i32], i8 }, align 8, !dbg !608
  %result_value3 = alloca { [1 x i32], i8 }, align 8, !dbg !608
  %result_value2 = alloca { [1 x i32], i8 }, align 8, !dbg !608
  %result_value1 = alloca { [5 x i64], i8 }, align 8, !dbg !608
  %result_value = alloca { [5 x i64], i8 }, align 8, !dbg !608
  %struct_field_access_record_0 = extractvalue { { %str.RocStr, {} }, {} } %"#arg_closure", 0, !dbg !608
  call fastcc void @Task_67_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8({} zeroinitializer, { %str.RocStr, {} } %struct_field_access_record_0, ptr nonnull %result_value), !dbg !608
  call fastcc void @_3_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613(ptr nonnull %result_value, ptr nonnull %result_value1), !dbg !608
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %result_value1, i64 0, i32 1, !dbg !608
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !608
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
  ], !dbg !608

default:                                          ; preds = %entry
  call fastcc void @Task_46_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00({} zeroinitializer, ptr nonnull %result_value1, ptr nonnull %result_value4), !dbg !608
  %1 = load i64, ptr %result_value4, align 8, !dbg !608
  store i64 %1, ptr %0, align 4, !dbg !608
  ret void, !dbg !608

branch0:                                          ; preds = %entry
  call fastcc void @Task_35_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e({} zeroinitializer, ptr nonnull %result_value1, ptr nonnull %result_value2), !dbg !608
  %2 = load i64, ptr %result_value2, align 8, !dbg !608
  store i64 %2, ptr %0, align 4, !dbg !608
  ret void, !dbg !608

branch1:                                          ; preds = %entry
  call fastcc void @Task_38_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2({} zeroinitializer, ptr nonnull %result_value1, ptr nonnull %result_value3), !dbg !608
  %3 = load i64, ptr %result_value3, align 8, !dbg !608
  store i64 %3, ptr %0, align 4, !dbg !608
  ret void, !dbg !608
}

define internal fastcc void @Stderr_handleErr_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140(ptr %err, ptr %0) !dbg !610 {
entry:
  %tag_alloca51 = alloca { [3 x i64], i8 }, align 8
  %tag_alloca48 = alloca { [3 x i64], i8 }, align 8
  %const_str_store43 = alloca %str.RocStr, align 8
  %tag_alloca38 = alloca { [3 x i64], i8 }, align 8
  %const_str_store33 = alloca %str.RocStr, align 8
  %tag_alloca28 = alloca { [3 x i64], i8 }, align 8
  %const_str_store23 = alloca %str.RocStr, align 8
  %tag_alloca18 = alloca { [3 x i64], i8 }, align 8
  %const_str_store13 = alloca %str.RocStr, align 8
  %tag_alloca8 = alloca { [3 x i64], i8 }, align 8
  %const_str_store3 = alloca %str.RocStr, align 8
  %tag_alloca = alloca { [3 x i64], i8 }, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store, align 8, !dbg !611
  %const_str_store.repack54 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !611
  store i64 7308057356866828900, ptr %const_str_store.repack54, align 8, !dbg !611
  %const_str_store.repack55 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !611
  store i64 -7710162126380642194, ptr %const_str_store.repack55, align 8, !dbg !611
  %call = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !611
  br label %joinpointcont, !dbg !611

joinpointcont:                                    ; preds = %entry
  br i1 %call, label %then_block, label %else_block, !dbg !611

then_block:                                       ; preds = %joinpointcont
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !611
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block:                                       ; preds = %joinpointcont
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store3, align 8, !dbg !611
  %const_str_store3.repack56 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 1, !dbg !611
  store i64 7236287822342797924, ptr %const_str_store3.repack56, align 8, !dbg !611
  %const_str_store3.repack57 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 2, !dbg !611
  store i64 -7710162100828541886, ptr %const_str_store3.repack57, align 8, !dbg !611
  %call4 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store3), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store3), !dbg !611
  br label %joinpointcont1, !dbg !611

joinpointcont1:                                   ; preds = %else_block
  br i1 %call4, label %then_block6, label %else_block7, !dbg !611

then_block6:                                      ; preds = %joinpointcont1
  %tag_id_ptr10 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !611
  store i8 5, ptr %tag_id_ptr10, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca8, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block7:                                      ; preds = %joinpointcont1
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store13, align 8, !dbg !611
  %const_str_store13.repack58 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 1, !dbg !611
  store i64 7310584034939779684, ptr %const_str_store13.repack58, align 8, !dbg !611
  %const_str_store13.repack59 = getelementptr inbounds %str.RocStr, ptr %const_str_store13, i64 0, i32 2, !dbg !611
  store i64 -7782220154226449062, ptr %const_str_store13.repack59, align 8, !dbg !611
  %call14 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store13), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store13), !dbg !611
  br label %joinpointcont11, !dbg !611

joinpointcont11:                                  ; preds = %else_block7
  br i1 %call14, label %then_block16, label %else_block17, !dbg !611

then_block16:                                     ; preds = %joinpointcont11
  %tag_id_ptr20 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca18, i64 0, i32 1, !dbg !611
  store i8 6, ptr %tag_id_ptr20, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca18, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block17:                                     ; preds = %joinpointcont11
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store23, align 8, !dbg !611
  %const_str_store23.repack60 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 1, !dbg !611
  store i64 8103510022236551780, ptr %const_str_store23.repack60, align 8, !dbg !611
  %const_str_store23.repack61 = getelementptr inbounds %str.RocStr, ptr %const_str_store23, i64 0, i32 2, !dbg !611
  store i64 -7637994581112230032, ptr %const_str_store23.repack61, align 8, !dbg !611
  %call24 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store23), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store23), !dbg !611
  br label %joinpointcont21, !dbg !611

joinpointcont21:                                  ; preds = %else_block17
  br i1 %call24, label %then_block26, label %else_block27, !dbg !611

then_block26:                                     ; preds = %joinpointcont21
  %tag_id_ptr30 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca28, i64 0, i32 1, !dbg !611
  store i8 4, ptr %tag_id_ptr30, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca28, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block27:                                     ; preds = %joinpointcont21
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store33, align 8, !dbg !611
  %const_str_store33.repack62 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !611
  store i64 8243122709995338340, ptr %const_str_store33.repack62, align 8, !dbg !611
  %const_str_store33.repack63 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !611
  store i64 -7637994581112359566, ptr %const_str_store33.repack63, align 8, !dbg !611
  %call34 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store33), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store33), !dbg !611
  br label %joinpointcont31, !dbg !611

joinpointcont31:                                  ; preds = %else_block27
  br i1 %call34, label %then_block36, label %else_block37, !dbg !611

then_block36:                                     ; preds = %joinpointcont31
  %tag_id_ptr40 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca38, i64 0, i32 1, !dbg !611
  store i8 1, ptr %tag_id_ptr40, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca38, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block37:                                     ; preds = %joinpointcont31
  store ptr inttoptr (i64 7955973171594818117 to ptr), ptr %const_str_store43, align 8, !dbg !611
  %const_str_store43.repack64 = getelementptr inbounds %str.RocStr, ptr %const_str_store43, i64 0, i32 1, !dbg !611
  store i64 7372239162218003044, ptr %const_str_store43.repack64, align 8, !dbg !611
  %const_str_store43.repack65 = getelementptr inbounds %str.RocStr, ptr %const_str_store43, i64 0, i32 2, !dbg !611
  store i64 -7637971435617688243, ptr %const_str_store43.repack65, align 8, !dbg !611
  %call44 = call fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %err, ptr nonnull %const_str_store43), !dbg !611
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store43), !dbg !611
  br label %joinpointcont41, !dbg !611

joinpointcont41:                                  ; preds = %else_block37
  br i1 %call44, label %then_block46, label %else_block47, !dbg !611

then_block46:                                     ; preds = %joinpointcont41
  %tag_id_ptr50 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca48, i64 0, i32 1, !dbg !611
  store i8 3, ptr %tag_id_ptr50, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca48, i64 32, i1 false), !dbg !611
  ret void, !dbg !611

else_block47:                                     ; preds = %joinpointcont41
  call fastcc void @"#Attr_#inc_1"(ptr %err, i64 1), !dbg !611
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %err, align 8, !dbg !611
  %load_tag_to_put_in_struct.elt66 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 1, !dbg !611
  %load_tag_to_put_in_struct.unpack67 = load i64, ptr %load_tag_to_put_in_struct.elt66, align 8, !dbg !611
  %load_tag_to_put_in_struct.elt68 = getelementptr inbounds %str.RocStr, ptr %err, i64 0, i32 2, !dbg !611
  %load_tag_to_put_in_struct.unpack69 = load i64, ptr %load_tag_to_put_in_struct.elt68, align 8, !dbg !611
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca51, align 8, !dbg !611
  %tag_alloca51.repack71 = getelementptr inbounds %str.RocStr, ptr %tag_alloca51, i64 0, i32 1, !dbg !611
  store i64 %load_tag_to_put_in_struct.unpack67, ptr %tag_alloca51.repack71, align 8, !dbg !611
  %tag_alloca51.repack73 = getelementptr inbounds %str.RocStr, ptr %tag_alloca51, i64 0, i32 2, !dbg !611
  store i64 %load_tag_to_put_in_struct.unpack69, ptr %tag_alloca51.repack73, align 8, !dbg !611
  %tag_id_ptr53 = getelementptr inbounds { [3 x i64], i8 }, ptr %tag_alloca51, i64 0, i32 1, !dbg !611
  store i8 2, ptr %tag_id_ptr53, align 8, !dbg !611
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %tag_alloca51, i64 32, i1 false), !dbg !611
  ret void, !dbg !611
}

define internal fastcc void @Task_35_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e({} %"115", ptr %"#arg_closure", ptr %0) !dbg !613 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !614
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !614
  store i8 1, ptr %tag_id_ptr, align 4, !dbg !614
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !614
  store i64 %1, ptr %0, align 4, !dbg !614
  ret void, !dbg !614
}

define internal fastcc void @Task_67_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8({} %"171", { %str.RocStr, {} } %"#arg_closure", ptr %0) !dbg !616 {
entry:
  %tag_alloca7 = alloca { [5 x i64], i8 }, align 8, !dbg !617
  %struct_alloca = alloca { { [4 x i64], i8 } }, align 8, !dbg !617
  %result_value6 = alloca { [4 x i64], i8 }, align 8, !dbg !617
  %load_element5 = alloca %str.RocStr, align 8, !dbg !617
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !617
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !617
  %struct_field = alloca %str.RocStr, align 8, !dbg !617
  %struct_field_access_record_0 = extractvalue { %str.RocStr, {} } %"#arg_closure", 0, !dbg !617
  %struct_field_access_record_0.elt = extractvalue %str.RocStr %struct_field_access_record_0, 0, !dbg !617
  store ptr %struct_field_access_record_0.elt, ptr %struct_field, align 8, !dbg !617
  %struct_field.repack10 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 1, !dbg !617
  %struct_field_access_record_0.elt11 = extractvalue %str.RocStr %struct_field_access_record_0, 1, !dbg !617
  store i64 %struct_field_access_record_0.elt11, ptr %struct_field.repack10, align 8, !dbg !617
  %struct_field.repack12 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 2, !dbg !617
  %struct_field_access_record_0.elt13 = extractvalue %str.RocStr %struct_field_access_record_0, 2, !dbg !617
  store i64 %struct_field_access_record_0.elt13, ptr %struct_field.repack12, align 8, !dbg !617
  call fastcc void @PlatformTasks_task_closure_stdoutLine_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4({} zeroinitializer, ptr nonnull %struct_field, ptr nonnull %result_value), !dbg !617
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !617
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !617
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !617
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !617

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !617
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !617
  ret void, !dbg !617

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !617
  call fastcc void @Stdout_handleErr_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894(ptr nonnull %load_element5, ptr nonnull %result_value6), !dbg !617
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element5), !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(40) %result_value6, i64 40, i1 false), !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca7, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !617
  %tag_id_ptr9 = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca7, i64 0, i32 1, !dbg !617
  store i8 0, ptr %tag_id_ptr9, align 8, !dbg !617
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca7, i64 48, i1 false), !dbg !617
  ret void, !dbg !617
}

define internal fastcc void @PlatformTasks_stdoutLine_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(ptr %closure_arg_stdoutLine_0, ptr %0) !dbg !619 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %closure_arg_stdoutLine_0, i64 24, i1 false), !dbg !620
  ret void, !dbg !620
}

define internal fastcc i32 @_8_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3({} %"20", ptr %"#arg_closure") !dbg !622 {
entry:
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !623
  %call = tail call fastcc i32 @Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i32 %load_element), !dbg !623
  ret i32 %call, !dbg !623
}

define internal fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2({ %str.RocStr, {} } %"101", ptr %transform) !dbg !625 {
entry:
  %load_tag_to_put_in_struct = load { [1 x i32], i8 }, ptr %transform, align 4, !dbg !626
  %insert_record_field = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } zeroinitializer, { %str.RocStr, {} } %"101", 0, !dbg !626
  %insert_record_field1 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %insert_record_field, { [1 x i32], i8 } %load_tag_to_put_in_struct, 1, !dbg !626
  ret { { %str.RocStr, {} }, { [1 x i32], i8 } } %insert_record_field1, !dbg !626
}

define internal fastcc void @PlatformTasks_task_closure_stdoutLine_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4({} %"133", ptr %closure_arg_stdoutLine_0, ptr %0) !dbg !628 {
entry:
  %result_value = alloca { [3 x i64], i8 }, align 8
  call fastcc void @roc_fx_stdoutLine_fastcc_wrapper(ptr %closure_arg_stdoutLine_0, ptr nonnull %result_value), !dbg !629
  call fastcc void @"#Attr_#dec_1"(ptr %closure_arg_stdoutLine_0), !dbg !629
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %0, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !629
  ret void, !dbg !629
}

define internal fastcc void @Inspect_dbgInit_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece({} %"301", ptr %0) !dbg !631 {
entry:
  %const_str_store = alloca %str.RocStr, align 8
  store ptr null, ptr %const_str_store, align 8, !dbg !632
  %const_str_store.repack1 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !632
  store i64 0, ptr %const_str_store.repack1, align 8, !dbg !632
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !632
  store i64 -9223372036854775808, ptr %const_str_store.repack2, align 8, !dbg !632
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %const_str_store, i64 24, i1 false), !dbg !632
  ret void, !dbg !632
}

define internal fastcc { %str.RocStr, {} } @Task_mapErr_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63(ptr %"99", {} %transform) !dbg !634 {
entry:
  tail call fastcc void @"#Attr_#inc_1"(ptr %"99", i64 1), !dbg !635
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %"99", align 8, !dbg !635
  %0 = insertvalue %str.RocStr poison, ptr %load_tag_to_put_in_struct.unpack, 0, !dbg !635
  %load_tag_to_put_in_struct.elt2 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 1, !dbg !635
  %load_tag_to_put_in_struct.unpack3 = load i64, ptr %load_tag_to_put_in_struct.elt2, align 8, !dbg !635
  %1 = insertvalue %str.RocStr %0, i64 %load_tag_to_put_in_struct.unpack3, 1, !dbg !635
  %load_tag_to_put_in_struct.elt4 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 2, !dbg !635
  %load_tag_to_put_in_struct.unpack5 = load i64, ptr %load_tag_to_put_in_struct.elt4, align 8, !dbg !635
  %load_tag_to_put_in_struct6 = insertvalue %str.RocStr %1, i64 %load_tag_to_put_in_struct.unpack5, 2, !dbg !635
  %insert_record_field = insertvalue { %str.RocStr, {} } zeroinitializer, %str.RocStr %load_tag_to_put_in_struct6, 0, !dbg !635
  %insert_record_field1 = insertvalue { %str.RocStr, {} } %insert_record_field, {} %transform, 1, !dbg !635
  ret { %str.RocStr, {} } %insert_record_field1, !dbg !635
}

define internal fastcc i1 @Str_isEmpty_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2(ptr %"#arg1") !dbg !637 {
entry:
  %call_builtin = tail call i64 @roc_builtins.str.number_of_bytes(ptr nocapture readonly %"#arg1"), !dbg !638
  %str_len_is_zero = icmp eq i64 %call_builtin, 0, !dbg !638
  ret i1 %str_len_is_zero, !dbg !638
}

define internal fastcc void @Inspect_210_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(ptr %f2, ptr %inspector, ptr %0) !dbg !640 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !641
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !641
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !641
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !641
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !641
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !641
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !641
  call fastcc void @Inspect_213_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !641
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !641
  ret void, !dbg !641
}

define internal fastcc void @Inspect_213_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c(ptr %x, ptr %inspector, ptr %0) !dbg !643 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !644
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !644
  ret void, !dbg !644
}

define internal fastcc i1 @Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6(ptr %"#arg1", ptr %"#arg2") !dbg !646 {
entry:
  %call_builtin = tail call i1 @roc_builtins.str.equal(ptr nocapture readonly %"#arg1", ptr nocapture readonly %"#arg2"), !dbg !647
  ret i1 %call_builtin, !dbg !647
}

define internal fastcc void @Inspect_208_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3(ptr %f1, %list.RocList %fields, ptr %0) !dbg !649 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !650
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !650
  ret void, !dbg !650
}

define internal fastcc i32 @_10_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181(ptr %"40") !dbg !652 {
entry:
  tail call fastcc void @"#Attr_#dec_3"(ptr %"40"), !dbg !653
  %call = tail call fastcc i32 @Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i32 1), !dbg !653
  ret i32 %call, !dbg !653
}

define internal fastcc void @_73_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57({} %"75", { { %str.RocStr, {} }, {} } %"#arg_closure", ptr %0) !dbg !655 {
entry:
  %result_value = alloca { [1 x i32], i8 }, align 8
  call fastcc void @Task_42_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32({} %"75", { { %str.RocStr, {} }, {} } %"#arg_closure", ptr nonnull %result_value), !dbg !656
  %1 = load i64, ptr %result_value, align 8, !dbg !656
  store i64 %1, ptr %0, align 4, !dbg !656
  ret void, !dbg !656
}

define internal fastcc void @List_getUnsafe_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !658 {
entry:
  %list_get_load_element = alloca { [4 x i64], i8 }, align 8, !dbg !659
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !659
  %list_get_element = getelementptr inbounds { [4 x i64], i8 }, ptr %read_list_ptr, i64 %"#arg2", !dbg !659
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %list_get_load_element, ptr noundef nonnull align 8 dereferenceable(40) %list_get_element, i64 40, i1 false), !dbg !659
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %list_get_load_element, i64 40, i1 false), !dbg !659
  ret void, !dbg !659
}

define internal fastcc { { %str.RocStr, {} }, {} } @Task_attempt_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d({ %str.RocStr, {} } %"103", {} %transform) !dbg !661 {
entry:
  %insert_record_field = insertvalue { { %str.RocStr, {} }, {} } zeroinitializer, { %str.RocStr, {} } %"103", 0, !dbg !662
  %insert_record_field1 = insertvalue { { %str.RocStr, {} }, {} } %insert_record_field, {} %transform, 1, !dbg !662
  ret { { %str.RocStr, {} }, {} } %insert_record_field1, !dbg !662
}

define internal fastcc void @Task_67_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c({} %"171", { %str.RocStr, {} } %"#arg_closure", ptr %0) !dbg !664 {
entry:
  %tag_alloca8 = alloca { [4 x i64], i8 }, align 8, !dbg !665
  %result_value6 = alloca { [3 x i64], i8 }, align 8, !dbg !665
  %load_element5 = alloca %str.RocStr, align 8, !dbg !665
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !665
  %result_value = alloca { [3 x i64], i8 }, align 8, !dbg !665
  %struct_field = alloca %str.RocStr, align 8, !dbg !665
  %struct_field_access_record_0 = extractvalue { %str.RocStr, {} } %"#arg_closure", 0, !dbg !665
  %struct_field_access_record_0.elt = extractvalue %str.RocStr %struct_field_access_record_0, 0, !dbg !665
  store ptr %struct_field_access_record_0.elt, ptr %struct_field, align 8, !dbg !665
  %struct_field.repack11 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 1, !dbg !665
  %struct_field_access_record_0.elt12 = extractvalue %str.RocStr %struct_field_access_record_0, 1, !dbg !665
  store i64 %struct_field_access_record_0.elt12, ptr %struct_field.repack11, align 8, !dbg !665
  %struct_field.repack13 = getelementptr inbounds %str.RocStr, ptr %struct_field, i64 0, i32 2, !dbg !665
  %struct_field_access_record_0.elt14 = extractvalue %str.RocStr %struct_field_access_record_0, 2, !dbg !665
  store i64 %struct_field_access_record_0.elt14, ptr %struct_field.repack13, align 8, !dbg !665
  call fastcc void @PlatformTasks_task_closure_stderrLine_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6({} zeroinitializer, ptr nonnull %struct_field, ptr nonnull %result_value), !dbg !665
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !665
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !665
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !665
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !665

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !665
  store i8 1, ptr %tag_id_ptr2, align 8, !dbg !665
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, i64 40, i1 false), !dbg !665
  ret void, !dbg !665

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element5, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !665
  call fastcc void @Stderr_handleErr_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140(ptr nonnull %load_element5, ptr nonnull %result_value6), !dbg !665
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element5), !dbg !665
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %result_value6, align 8, !dbg !665
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca8, align 8, !dbg !665
  %tag_id_ptr10 = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca8, i64 0, i32 1, !dbg !665
  store i8 0, ptr %tag_id_ptr10, align 8, !dbg !665
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca8, i64 40, i1 false), !dbg !665
  ret void, !dbg !665
}

define internal fastcc i64 @Num_addWrap_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8(i64 %"#arg1", i64 %"#arg2") !dbg !667 {
entry:
  %add_int_wrap = add i64 %"#arg1", %"#arg2", !dbg !668
  ret i64 %add_int_wrap, !dbg !668
}

define internal fastcc void @Inspect_204_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !670 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !671
  %load_element = alloca %str.RocStr, align 8, !dbg !671
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !671
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !671
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element), !dbg !671
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !671
  ret void, !dbg !671
}

define internal fastcc { { %str.RocStr, {} }, {} } @_mainForHost_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0() !dbg !673 {
entry:
  %call = tail call fastcc { %str.RocStr, {} } @"#UserApp_main_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061"(), !dbg !674
  %call1 = tail call fastcc { { %str.RocStr, {} }, {} } @Task_attempt_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d({ %str.RocStr, {} } %call, {} zeroinitializer), !dbg !674
  ret { { %str.RocStr, {} }, {} } %call1, !dbg !674
}

define void @roc__mainForHost_1_exposed_generic(ptr %0) !dbg !676 {
entry:
  %call = call fastcc { { %str.RocStr, {} }, {} } @_mainForHost_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0(), !dbg !677
  store { { %str.RocStr, {} }, {} } %call, ptr %0, align 8, !dbg !677
  ret void, !dbg !677
}

define void @roc__mainForHost_1_exposed(ptr sret({ { %str.RocStr, {} }, {} }) %0) !dbg !679 {
entry:
  %call = call fastcc { { %str.RocStr, {} }, {} } @_mainForHost_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0(), !dbg !680
  store { { %str.RocStr, {} }, {} } %call, ptr %0, align 8, !dbg !680
  ret void, !dbg !680
}

define i64 @roc__mainForHost_1_exposed_size() !dbg !682 {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, {} }, {} }, ptr null, i32 1) to i64), !dbg !683
}

define internal fastcc void @Inspect_250_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e(ptr %f0, ptr %s, ptr %0) !dbg !685 {
entry:
  %result_value3 = alloca %str.RocStr, align 8
  %const_str_store2 = alloca %str.RocStr, align 8
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store, align 8, !dbg !686
  %const_str_store.repack4 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !686
  store i64 0, ptr %const_str_store.repack4, align 8, !dbg !686
  %const_str_store.repack5 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !686
  store i64 -9151314442816847872, ptr %const_str_store.repack5, align 8, !dbg !686
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !686
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !686
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value, ptr %s, ptr nonnull %result_value1), !dbg !686
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store2, align 8, !dbg !686
  %const_str_store2.repack6 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 1, !dbg !686
  store i64 0, ptr %const_str_store2.repack6, align 8, !dbg !686
  %const_str_store2.repack7 = getelementptr inbounds %str.RocStr, ptr %const_str_store2, i64 0, i32 2, !dbg !686
  store i64 -9151314442816847872, ptr %const_str_store2.repack7, align 8, !dbg !686
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value1, ptr nonnull %const_str_store2, ptr nonnull %result_value3), !dbg !686
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store2), !dbg !686
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value3, i64 24, i1 false), !dbg !686
  ret void, !dbg !686
}

define internal fastcc void @PlatformTasks_stderrLine_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(ptr %closure_arg_stderrLine_0, ptr %0) !dbg !688 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %closure_arg_stderrLine_0, i64 24, i1 false), !dbg !689
  ret void, !dbg !689
}

define internal fastcc void @Task_err_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591(i32 %a, ptr %0) !dbg !691 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8, !dbg !692
  store i32 %a, ptr %tag_alloca, align 8, !dbg !692
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !692
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !692
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !692
  ret void, !dbg !692
}

define internal fastcc void @Inspect_custom_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(ptr %fn, ptr %0) !dbg !694 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !695
  ret void, !dbg !695
}

define internal fastcc void @Inspect_apply_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd(ptr %"303", ptr %fmt, ptr %0) !dbg !697 {
entry:
  %result_value2 = alloca %str.RocStr, align 8, !dbg !698
  %result_value1 = alloca %str.RocStr, align 8, !dbg !698
  %result_value = alloca %str.RocStr, align 8, !dbg !698
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !698
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !698
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
    i8 1, label %branch1
  ], !dbg !698

default:                                          ; preds = %entry
  call fastcc void @Inspect_272_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133(ptr %fmt, ptr %"303", ptr nonnull %result_value2), !dbg !698
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !698
  ret void, !dbg !698

branch0:                                          ; preds = %entry
  call fastcc void @"#Derived_custom3_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e"(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !698
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !698
  ret void, !dbg !698

branch1:                                          ; preds = %entry
  call fastcc void @Inspect_250_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !698
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !698
  ret void, !dbg !698
}

define internal fastcc i64 @List_len_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(%list.RocList %"#arg1") !dbg !700 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !701
  ret i64 %list_len, !dbg !701
}

define internal fastcc { %str.RocStr, {} } @Stdout_line_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9(ptr %str) !dbg !703 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @PlatformTasks_stdoutLine_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018(ptr %str, ptr nonnull %result_value), !dbg !704
  %call = call fastcc { %str.RocStr, {} } @Task_mapErr_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63(ptr nonnull %result_value, {} zeroinitializer), !dbg !704
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value), !dbg !704
  ret { %str.RocStr, {} } %call, !dbg !704
}

define internal fastcc void @Inspect_208_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21(ptr %f1, %list.RocList %fields, ptr %0) !dbg !706 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @List_walk_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63(%list.RocList %fields, ptr %f1, {} zeroinitializer, ptr nonnull %result_value), !dbg !707
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !707
  ret void, !dbg !707
}

define internal fastcc void @Inspect_210_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6(ptr %f2, ptr %inspector, ptr %0) !dbg !709 {
entry:
  %result_value1 = alloca %str.RocStr, align 8
  %result_value = alloca %str.RocStr, align 8
  %const_str_store = alloca %str.RocStr, align 8
  store ptr inttoptr (i64 32 to ptr), ptr %const_str_store, align 8, !dbg !710
  %const_str_store.repack2 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !710
  store i64 0, ptr %const_str_store.repack2, align 8, !dbg !710
  %const_str_store.repack3 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !710
  store i64 -9151314442816847872, ptr %const_str_store.repack3, align 8, !dbg !710
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f2, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !710
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !710
  call fastcc void @Inspect_213_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4(ptr nonnull %result_value, ptr %inspector, ptr nonnull %result_value1), !dbg !710
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !710
  ret void, !dbg !710
}

define internal fastcc { %str.RocStr, {} } @Stderr_line_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(ptr %str) !dbg !712 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @PlatformTasks_stderrLine_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7(ptr %str, ptr nonnull %result_value), !dbg !713
  %call = call fastcc { %str.RocStr, {} } @Task_mapErr_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1(ptr nonnull %result_value, {} zeroinitializer), !dbg !713
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value), !dbg !713
  ret { %str.RocStr, {} } %call, !dbg !713
}

define internal fastcc float @Dict_defaultMaxLoadFactor_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94() !dbg !715 {
entry:
  ret float 0x3FE99999A0000000, !dbg !716
}

define internal fastcc i32 @Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i32 %a) !dbg !718 {
entry:
  ret i32 %a, !dbg !719
}

define internal fastcc void @Inspect_toDbgStr_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8(ptr %"302", ptr %0) !dbg !721 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %"302", i64 24, i1 false), !dbg !722
  ret void, !dbg !722
}

define internal fastcc i64 @List_len_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df(%list.RocList %"#arg1") !dbg !724 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !725
  ret i64 %list_len, !dbg !725
}

define internal fastcc i1 @List_isEmpty_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b(%list.RocList %list) !dbg !727 {
entry:
  %call = tail call fastcc i64 @List_len_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a(%list.RocList %list), !dbg !728
  %call1 = tail call fastcc i1 @Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %call, i64 0), !dbg !728
  ret i1 %call1, !dbg !728
}

define internal fastcc i8 @Num_subWrap_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d(i8 %"#arg1", i8 %"#arg2") !dbg !730 {
entry:
  %sub_int = sub i8 %"#arg1", %"#arg2", !dbg !731
  ret i8 %sub_int, !dbg !731
}

define internal fastcc i1 @Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %"#arg1", i64 %"#arg2") !dbg !733 {
entry:
  %eq_u64 = icmp eq i64 %"#arg1", %"#arg2", !dbg !734
  ret i1 %eq_u64, !dbg !734
}

define internal fastcc void @Inspect_272_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !736 {
entry:
  %result_value2 = alloca %str.RocStr, align 8, !dbg !737
  %result_value = alloca %str.RocStr, align 8, !dbg !737
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !737
  call fastcc void @Num_toStr_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd(i32 %load_element, ptr nonnull %result_value), !dbg !737
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %result_value, ptr nonnull %result_value2), !dbg !737
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value), !dbg !737
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value2, i64 24, i1 false), !dbg !737
  ret void, !dbg !737
}

define internal fastcc void @Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(ptr %fn, ptr %0) !dbg !739 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %fn, i64 40, i1 false), !dbg !740
  ret void, !dbg !740
}

define internal fastcc void @Inspect_custom_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(ptr %fn, ptr %0) !dbg !742 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %fn, i64 56, i1 false), !dbg !743
  ret void, !dbg !743
}

define internal fastcc void @List_walkHelp_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772(%list.RocList %"91", ptr %"92", {} %"93", i64 %"94", i64 %"95", ptr %0) !dbg !745 {
entry:
  %tmp_output_for_jmp6 = alloca %str.RocStr, align 8
  %result_value4 = alloca %str.RocStr, align 8
  %result_value = alloca { [4 x i64], i8 }, align 8
  %tmp_output_for_jmp = alloca %str.RocStr, align 8
  %joinpoint_arg_alloca = alloca %str.RocStr, align 8
  tail call fastcc void @"#Attr_#inc_4"(%list.RocList %"91", i64 1), !dbg !746
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, ptr noundef nonnull align 8 dereferenceable(24) %"92", i64 24, i1 false), !dbg !746
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp, i64 24, i1 false), !dbg !746
  br label %joinpointcont, !dbg !746

joinpointcont:                                    ; preds = %then_block, %entry
  %joinpointarg2 = phi i64 [ %"94", %entry ], [ %call5, %then_block ], !dbg !746
  %call = call fastcc i1 @Num_isLt_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11(i64 %joinpointarg2, i64 %"95"), !dbg !746
  br i1 %call, label %then_block, label %else_block, !dbg !746

then_block:                                       ; preds = %joinpointcont
  call fastcc void @List_getUnsafe_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363(%list.RocList %"91", i64 %joinpointarg2, ptr nonnull %result_value), !dbg !746
  call fastcc void @"#Attr_#inc_5"(ptr nonnull %result_value, i64 1), !dbg !746
  call fastcc void @Inspect_210_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34(ptr nonnull %joinpoint_arg_alloca, ptr nonnull %result_value, ptr nonnull %result_value4), !dbg !746
  %call5 = call fastcc i64 @Num_addWrap_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8(i64 %joinpointarg2, i64 1), !dbg !746
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !746
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, ptr noundef nonnull align 8 dereferenceable(24) %tmp_output_for_jmp6, i64 24, i1 false), !dbg !746
  br label %joinpointcont, !dbg !746

else_block:                                       ; preds = %joinpointcont
  call fastcc void @"#Attr_#dec_4"(%list.RocList %"91"), !dbg !746
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %joinpoint_arg_alloca, i64 24, i1 false), !dbg !746
  ret void, !dbg !746
}

define internal fastcc { %str.RocStr, {} } @Task_mapErr_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1(ptr %"99", {} %transform) !dbg !748 {
entry:
  tail call fastcc void @"#Attr_#inc_1"(ptr %"99", i64 1), !dbg !749
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %"99", align 8, !dbg !749
  %0 = insertvalue %str.RocStr poison, ptr %load_tag_to_put_in_struct.unpack, 0, !dbg !749
  %load_tag_to_put_in_struct.elt2 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 1, !dbg !749
  %load_tag_to_put_in_struct.unpack3 = load i64, ptr %load_tag_to_put_in_struct.elt2, align 8, !dbg !749
  %1 = insertvalue %str.RocStr %0, i64 %load_tag_to_put_in_struct.unpack3, 1, !dbg !749
  %load_tag_to_put_in_struct.elt4 = getelementptr inbounds %str.RocStr, ptr %"99", i64 0, i32 2, !dbg !749
  %load_tag_to_put_in_struct.unpack5 = load i64, ptr %load_tag_to_put_in_struct.elt4, align 8, !dbg !749
  %load_tag_to_put_in_struct6 = insertvalue %str.RocStr %1, i64 %load_tag_to_put_in_struct.unpack5, 2, !dbg !749
  %insert_record_field = insertvalue { %str.RocStr, {} } zeroinitializer, %str.RocStr %load_tag_to_put_in_struct6, 0, !dbg !749
  %insert_record_field1 = insertvalue { %str.RocStr, {} } %insert_record_field, {} %transform, 1, !dbg !749
  ret { %str.RocStr, {} } %insert_record_field1, !dbg !749
}

define internal fastcc void @"#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b"(ptr %tag3, ptr %0) !dbg !751 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !752
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !752
  %load_tag_to_put_in_struct = load { [3 x i64], i8 }, ptr %tag3, align 8, !dbg !752
  store { [3 x i64], i8 } %load_tag_to_put_in_struct, ptr %tag_alloca, align 8, !dbg !752
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !752
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !752
  call fastcc void @Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !752
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !752
  ret void, !dbg !752
}

define internal fastcc void @Inspect_custom_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f(ptr %fn, ptr %0) !dbg !754 {
entry:
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %fn, i64 24, i1 false), !dbg !755
  ret void, !dbg !755
}

define internal fastcc i1 @List_isEmpty_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e(%list.RocList %list) !dbg !757 {
entry:
  %call = tail call fastcc i64 @List_len_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac(%list.RocList %list), !dbg !758
  %call1 = tail call fastcc i1 @Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %call, i64 0), !dbg !758
  ret i1 %call1, !dbg !758
}

define internal fastcc void @Num_toStr_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2(i64 %"#arg1", ptr %0) !dbg !760 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.from_int.u64(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, i64 %"#arg1"), !dbg !761
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !761
  ret void, !dbg !761
}

define internal fastcc %list.RocList @List_sortWith_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d(%list.RocList %"#arg1", ptr %"#arg2") !dbg !763 {
entry:
  %0 = alloca %list.RocList, align 8
  %1 = alloca %list.RocList, align 8
  %list_alloca1 = alloca %list.RocList, align 8
  %list_alloca = alloca %list.RocList, align 8
  %closure_data_ptr = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %closure_data_ptr, ptr noundef nonnull align 8 dereferenceable(64) %"#arg2", i64 64, i1 false), !dbg !764
  %"#arg1.elt" = extractvalue %list.RocList %"#arg1", 0, !dbg !764
  store ptr %"#arg1.elt", ptr %list_alloca1, align 8, !dbg !764
  %list_alloca1.repack2 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 1, !dbg !764
  %"#arg1.elt3" = extractvalue %list.RocList %"#arg1", 1, !dbg !764
  store i64 %"#arg1.elt3", ptr %list_alloca1.repack2, align 8, !dbg !764
  %list_alloca1.repack4 = getelementptr inbounds %list.RocList, ptr %list_alloca1, i64 0, i32 2, !dbg !764
  %"#arg1.elt5" = extractvalue %list.RocList %"#arg1", 2, !dbg !764
  store i64 %"#arg1.elt5", ptr %list_alloca1.repack4, align 8, !dbg !764
  call void @llvm.experimental.noalias.scope.decl(metadata !766), !dbg !764
  call void @llvm.lifetime.start.p0(i64 24, ptr %0), !dbg !764
  call void @llvm.lifetime.start.p0(i64 24, ptr %1), !dbg !764
  %.sroa.1.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca1, i64 8, !dbg !764
  %.sroa.1.0.copyload.i = load i64, ptr %.sroa.1.0..sroa_idx.i, align 8, !dbg !764, !noalias !766
  %2 = icmp ult i64 %.sroa.1.0.copyload.i, 2, !dbg !764
  br i1 %2, label %3, label %4, !dbg !764

3:                                                ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_alloca, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca1, i64 24, i1 false), !dbg !764
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !764
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !764
  br label %roc_builtins.list.sort_with.exit, !dbg !764

4:                                                ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef nonnull align 8 dereferenceable(24) %list_alloca1, i64 24, i1 false), !dbg !764, !noalias !766
  call void @llvm.experimental.noalias.scope.decl(metadata !769), !dbg !764
  %.sroa.2.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !764
  %.sroa.2.0.copyload.i.i = load i64, ptr %.sroa.2.0..sroa_idx.i.i, align 8, !dbg !764, !noalias !772
  %.sroa.3.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !764
  %.sroa.3.0.copyload.i.i = load i64, ptr %.sroa.3.0..sroa_idx.i.i, align 8, !dbg !764, !noalias !772
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !764
  %5 = call i64 @llvm.smax.i64(i64 %.sroa.3.0.copyload.i.i, i64 0), !dbg !764
  %6 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.2.0.copyload.i.i, i64 0, !dbg !764
  %7 = or i64 %6, %5, !dbg !764
  %8 = icmp ne i64 %7, 0, !dbg !764
  %brmerge.i.i.i.i = select i1 %8, i1 true, i1 %isneg.i.i.i.i.i, !dbg !764
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !764

list.RocList.isUnique.exit.i.i:                   ; preds = %4
  %9 = icmp slt i64 %.sroa.3.0.copyload.i.i, 0, !dbg !764
  %.sroa.0.0.copyload.i.i = load ptr, ptr %1, align 8, !dbg !764, !noalias !772
  %10 = ptrtoint ptr %.sroa.0.0.copyload.i.i to i64, !dbg !764
  %11 = shl i64 %.sroa.3.0.copyload.i.i, 1, !dbg !764
  %12 = select i1 %9, i64 %11, i64 %10, !dbg !764
  %13 = inttoptr i64 %12 to ptr, !dbg !764
  %14 = getelementptr inbounds i64, ptr %13, i64 -1, !dbg !764
  %15 = load i64, ptr %14, align 8, !dbg !764, !noalias !772
  %16 = icmp eq i64 %15, -9223372036854775808, !dbg !764
  br i1 %16, label %list.RocList.isUnique.exit.thread.i.i, label %17, !dbg !764

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, i64 24, i1 false), !dbg !764, !noalias !766
  br label %list.RocList.makeUnique.exit.i, !dbg !764

17:                                               ; preds = %list.RocList.isUnique.exit.i.i
  %18 = icmp eq i64 %.sroa.2.0.copyload.i.i, 0, !dbg !764
  br i1 %18, label %.critedge.i.i.i, label %23, !dbg !764

.critedge.i.i.i:                                  ; preds = %17
  %19 = icmp eq i64 %.sroa.3.0.copyload.i.i, 0, !dbg !764
  %20 = icmp eq i64 %12, 0, !dbg !764
  %or.cond.i.i.not69.i.i = select i1 %19, i1 true, i1 %20, !dbg !764
  %.not.i.i.i.i = icmp eq i64 %15, 0, !dbg !764
  %or.cond.i.i = select i1 %or.cond.i.i.not69.i.i, i1 true, i1 %.not.i.i.i.i, !dbg !764
  br i1 %or.cond.i.i, label %list.RocList.decref.exit.i.i, label %21, !dbg !764

21:                                               ; preds = %.critedge.i.i.i
  %22 = add nsw i64 %15, -1, !dbg !764
  %sunkaddr.i.i = inttoptr i64 %12 to ptr, !dbg !764
  %sunkaddr73.i.i = getelementptr inbounds i8, ptr %sunkaddr.i.i, i64 -8, !dbg !764
  store i64 %22, ptr %sunkaddr73.i.i, align 8, !dbg !764, !noalias !772
  br label %list.RocList.decref.exit.i.i, !dbg !764

list.RocList.decref.exit.i.i:                     ; preds = %21, %.critedge.i.i.i
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false), !dbg !764, !alias.scope !769, !noalias !766
  br label %list.RocList.makeUnique.exit.i, !dbg !764

23:                                               ; preds = %17
  %24 = call ptr @roc_alloc(i64 8, i32 8), !dbg !764, !noalias !773
  %25 = getelementptr inbounds i8, ptr %24, i64 8, !dbg !764
  %26 = getelementptr inbounds i8, ptr %25, i64 -8, !dbg !764
  store i64 -9223372036854775808, ptr %26, align 8, !dbg !764, !noalias !773
  %sunkaddr74.i.i = getelementptr inbounds i8, ptr %1, i64 8, !dbg !764
  %.sroa.1.0.copyload.pre.i.i = load i64, ptr %sunkaddr74.i.i, align 8, !dbg !764, !noalias !772
  %.pre.i.i = load ptr, ptr %1, align 8, !dbg !764, !noalias !772
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %25, ptr align 1 %.pre.i.i, i64 0, i1 false), !dbg !764, !noalias !772
  %.sroa.051.0.copyload58.i.i = load ptr, ptr %1, align 8, !dbg !764, !noalias !772
  %sunkaddr76.i.i = getelementptr inbounds i8, ptr %1, i64 16, !dbg !764
  %.sroa.453.0.copyload60.i.i = load i64, ptr %sunkaddr76.i.i, align 8, !dbg !764, !noalias !772
  %27 = ptrtoint ptr %.sroa.051.0.copyload58.i.i to i64, !dbg !764
  %28 = shl i64 %.sroa.453.0.copyload60.i.i, 1, !dbg !764
  %isneg.i.i17.i.i = icmp slt i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !764
  %29 = select i1 %isneg.i.i17.i.i, i64 %28, i64 %27, !dbg !764
  %30 = icmp ne i64 %.sroa.453.0.copyload60.i.i, 0, !dbg !764
  %31 = icmp ne i64 %29, 0, !dbg !764
  %or.cond.i.i18.i.i = select i1 %30, i1 %31, i1 false, !dbg !764
  br i1 %or.cond.i.i18.i.i, label %32, label %list.RocList.decref.exit41.i.i, !dbg !764

32:                                               ; preds = %23
  %33 = inttoptr i64 %29 to ptr, !dbg !764
  %34 = getelementptr inbounds i64, ptr %33, i64 -1, !dbg !764
  %35 = load i64, ptr %34, align 8, !dbg !764, !noalias !772
  %.not.i.i20.i.i = icmp eq i64 %35, 0, !dbg !764
  br i1 %.not.i.i20.i.i, label %list.RocList.decref.exit41.i.i, label %36, !dbg !764

36:                                               ; preds = %32
  %37 = add i64 %35, -1, !dbg !764
  store i64 %37, ptr %34, align 8, !dbg !764, !noalias !772
  %38 = icmp eq i64 %35, -9223372036854775808, !dbg !764
  br i1 %38, label %39, label %list.RocList.decref.exit41.i.i, !dbg !764

39:                                               ; preds = %36
  call void @roc_dealloc(ptr nonnull align 1 %34, i32 8), !dbg !764, !noalias !772
  br label %list.RocList.decref.exit41.i.i, !dbg !764

list.RocList.decref.exit41.i.i:                   ; preds = %39, %36, %32, %23
  store ptr %25, ptr %0, align 8, !dbg !764, !alias.scope !769, !noalias !766
  %.sroa.450.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !764
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.450.0..sroa_idx.i.i, align 8, !dbg !764, !alias.scope !769, !noalias !766
  %.sroa.5.0..sroa_idx.i.i = getelementptr inbounds i8, ptr %0, i64 16, !dbg !764
  store i64 %.sroa.2.0.copyload.i.i, ptr %.sroa.5.0..sroa_idx.i.i, align 8, !dbg !764, !alias.scope !769, !noalias !766
  br label %list.RocList.makeUnique.exit.i, !dbg !764

list.RocList.makeUnique.exit.i:                   ; preds = %list.RocList.decref.exit41.i.i, %list.RocList.decref.exit.i.i, %list.RocList.isUnique.exit.thread.i.i
  %.sroa.01.0.copyload.i = load ptr, ptr %0, align 8, !dbg !764, !noalias !766
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %0, i64 8, !dbg !764
  %40 = load <2 x i64>, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !764, !noalias !766
  %.not.i = icmp eq ptr %.sroa.01.0.copyload.i, null, !dbg !764
  br i1 %.not.i, label %common.ret.i, label %41, !dbg !764

common.ret.i:                                     ; preds = %41, %list.RocList.makeUnique.exit.i
  store ptr %.sroa.01.0.copyload.i, ptr %list_alloca, align 8, !dbg !764, !alias.scope !766
  %.sroa.3.0..sroa_idx3.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !764
  store <2 x i64> %40, ptr %.sroa.3.0..sroa_idx3.i, align 8, !dbg !764, !alias.scope !766
  call void @llvm.lifetime.end.p0(i64 24, ptr %0), !dbg !764
  call void @llvm.lifetime.end.p0(i64 24, ptr %1), !dbg !764
  br label %roc_builtins.list.sort_with.exit, !dbg !764

41:                                               ; preds = %list.RocList.makeUnique.exit.i
  %42 = extractelement <2 x i64> %40, i64 0, !dbg !764
  call fastcc void @sort.fluxsort(ptr nonnull align 1 %.sroa.01.0.copyload.i, i64 %42, ptr nonnull readonly align 4 @Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2_compare_wrapper, ptr align 1 %closure_data_ptr, i1 true, ptr nonnull readonly align 4 @"#Attr_#generic_rc_by_ref_3_inc_n", i64 0, i32 1, ptr nonnull readonly align 4 @"#Attr_#generic_copy_by_ref_1"), !dbg !764, !noalias !766
  br label %common.ret.i, !dbg !764

roc_builtins.list.sort_with.exit:                 ; preds = %common.ret.i, %3
  %load_list.unpack = load ptr, ptr %list_alloca, align 8, !dbg !764
  %43 = insertvalue %list.RocList poison, ptr %load_list.unpack, 0, !dbg !764
  %load_list.elt6 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 1, !dbg !764
  %load_list.unpack7 = load i64, ptr %load_list.elt6, align 8, !dbg !764
  %44 = insertvalue %list.RocList %43, i64 %load_list.unpack7, 1, !dbg !764
  %load_list.elt8 = getelementptr inbounds %list.RocList, ptr %list_alloca, i64 0, i32 2, !dbg !764
  %load_list.unpack9 = load i64, ptr %load_list.elt8, align 8, !dbg !764
  %load_list10 = insertvalue %list.RocList %44, i64 %load_list.unpack9, 2, !dbg !764
  call fastcc void @"#Attr_#dec_10"(ptr %"#arg2"), !dbg !764
  ret %list.RocList %load_list10, !dbg !764
}

define internal fastcc i64 @Test_calculateMiddleTotal_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83({} %"7") !dbg !776 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call fastcc void @Set_empty_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098({} zeroinitializer, ptr nonnull %result_value), !dbg !777
  %call = call fastcc %list.RocList @List_sortWith_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d(%list.RocList zeroinitializer, ptr nonnull %result_value), !dbg !777
  %call1 = call fastcc i64 @List_len_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df(%list.RocList %call), !dbg !777
  call fastcc void @"#Attr_#dec_15"(%list.RocList %call), !dbg !777
  ret i64 %call1, !dbg !777
}

define internal fastcc i32 @_11_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753({} %"35") !dbg !779 {
entry:
  %call = tail call fastcc i32 @Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565(i32 1), !dbg !780
  ret i32 %call, !dbg !780
}

define internal fastcc void @Inspect_dbgStr_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674(ptr %s, ptr %0) !dbg !782 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !783
  %tag_alloca = alloca { [4 x i64], i8 }, align 8, !dbg !783
  tail call fastcc void @"#Attr_#inc_1"(ptr %s, i64 1), !dbg !783
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %s, align 8, !dbg !783
  %load_tag_to_put_in_struct.elt1 = getelementptr inbounds %str.RocStr, ptr %s, i64 0, i32 1, !dbg !783
  %load_tag_to_put_in_struct.unpack2 = load i64, ptr %load_tag_to_put_in_struct.elt1, align 8, !dbg !783
  %load_tag_to_put_in_struct.elt3 = getelementptr inbounds %str.RocStr, ptr %s, i64 0, i32 2, !dbg !783
  %load_tag_to_put_in_struct.unpack4 = load i64, ptr %load_tag_to_put_in_struct.elt3, align 8, !dbg !783
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !783
  %tag_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !783
  store i64 %load_tag_to_put_in_struct.unpack2, ptr %tag_alloca.repack6, align 8, !dbg !783
  %tag_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !783
  store i64 %load_tag_to_put_in_struct.unpack4, ptr %tag_alloca.repack8, align 8, !dbg !783
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !783
  store i8 1, ptr %tag_id_ptr, align 8, !dbg !783
  call fastcc void @Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !783
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !783
  ret void, !dbg !783
}

define internal fastcc void @Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d(ptr %name, %list.RocList %fields, ptr %0) !dbg !785 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !786
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !786
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !786
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !786
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !786
  %call = tail call fastcc i1 @List_isEmpty_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e(%list.RocList %fields), !dbg !786
  br i1 %call, label %then_block, label %else_block, !dbg !786

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_1"(ptr %name, i64 1), !dbg !786
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !786
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !786
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !786
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !786
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !786
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !786
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !786
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !786
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !786
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !786
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !786
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !786
  call fastcc void @Inspect_custom_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !786
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !786
  ret void, !dbg !786

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_2"(%list.RocList %fields, i64 1), !dbg !786
  tail call fastcc void @"#Attr_#inc_1"(ptr %name, i64 1), !dbg !786
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !786
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !786
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !786
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !786
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !786
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !786
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !786
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !786
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !786
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !786
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !786
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !786
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !786
  call fastcc void @Inspect_custom_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !786
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !786
  ret void, !dbg !786
}

define internal fastcc void @List_getUnsafe_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a(%list.RocList %"#arg1", i64 %"#arg2", ptr %0) !dbg !788 {
entry:
  %list_get_load_element = alloca %str.RocStr, align 8, !dbg !789
  %read_list_ptr = extractvalue %list.RocList %"#arg1", 0, !dbg !789
  %list_get_element = getelementptr inbounds %str.RocStr, ptr %read_list_ptr, i64 %"#arg2", !dbg !789
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %list_get_load_element, ptr noundef nonnull align 8 dereferenceable(24) %list_get_element, i64 24, i1 false), !dbg !789
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %list_get_load_element, i64 24, i1 false), !dbg !789
  ret void, !dbg !789
}

define internal fastcc void @Inspect_250_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !791 {
entry:
  %result_value4 = alloca %str.RocStr, align 8, !dbg !792
  %const_str_store3 = alloca %str.RocStr, align 8, !dbg !792
  %result_value2 = alloca %str.RocStr, align 8, !dbg !792
  %result_value = alloca %str.RocStr, align 8, !dbg !792
  %const_str_store = alloca %str.RocStr, align 8, !dbg !792
  %load_element = alloca %str.RocStr, align 8, !dbg !792
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !792
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store, align 8, !dbg !792
  %const_str_store.repack5 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !792
  store i64 0, ptr %const_str_store.repack5, align 8, !dbg !792
  %const_str_store.repack6 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !792
  store i64 -9151314442816847872, ptr %const_str_store.repack6, align 8, !dbg !792
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %const_str_store, ptr nonnull %result_value), !dbg !792
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store), !dbg !792
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value, ptr nonnull %load_element, ptr nonnull %result_value2), !dbg !792
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element), !dbg !792
  store ptr inttoptr (i64 34 to ptr), ptr %const_str_store3, align 8, !dbg !792
  %const_str_store3.repack7 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 1, !dbg !792
  store i64 0, ptr %const_str_store3.repack7, align 8, !dbg !792
  %const_str_store3.repack8 = getelementptr inbounds %str.RocStr, ptr %const_str_store3, i64 0, i32 2, !dbg !792
  store i64 -9151314442816847872, ptr %const_str_store3.repack8, align 8, !dbg !792
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr nonnull %result_value2, ptr nonnull %const_str_store3, ptr nonnull %result_value4), !dbg !792
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store3), !dbg !792
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value4, i64 24, i1 false), !dbg !792
  ret void, !dbg !792
}

define internal fastcc void @Task_53_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0({} %"154", { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", ptr %0) !dbg !794 {
entry:
  %result_value10 = alloca { [1 x i32], i8 }, align 8, !dbg !795
  %load_element5 = alloca { [3 x i64], i8 }, align 8, !dbg !795
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !795
  %result_value = alloca { [4 x i64], i8 }, align 8, !dbg !795
  %struct_field = alloca { [1 x i32], i8 }, align 8, !dbg !795
  %struct_field_access_record_1 = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", 1, !dbg !795
  store { [1 x i32], i8 } %struct_field_access_record_1, ptr %struct_field, align 8, !dbg !795
  %struct_field_access_record_0 = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"#arg_closure", 0, !dbg !795
  call fastcc void @Task_67_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c({} zeroinitializer, { %str.RocStr, {} } %struct_field_access_record_0, ptr nonnull %result_value), !dbg !795
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %result_value, i64 0, i32 1, !dbg !795
  %load_tag_id = load i8, ptr %tag_id_ptr, align 8, !dbg !795
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !795
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !795

then_block:                                       ; preds = %entry
  %tag_id_ptr2 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !795
  store i8 1, ptr %tag_id_ptr2, align 4, !dbg !795
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !795
  store i64 %1, ptr %0, align 4, !dbg !795
  ret void, !dbg !795

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %load_element5, ptr noundef nonnull align 8 dereferenceable(32) %result_value, i64 32, i1 false), !dbg !795
  %tag_id_ptr6 = getelementptr inbounds { [1 x i32], i8 }, ptr %struct_field, i64 0, i32 1, !dbg !795
  %load_tag_id7 = load i8, ptr %tag_id_ptr6, align 4, !dbg !795
  switch i8 %load_tag_id7, label %default [
    i8 0, label %branch0
  ], !dbg !795

default:                                          ; preds = %else_block
  %call9 = call fastcc i32 @_10_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181(ptr nonnull %load_element5), !dbg !795
  br label %joinpointcont, !dbg !795

joinpointcont:                                    ; preds = %default, %branch0
  %joinpointarg = phi i32 [ %call, %branch0 ], [ %call9, %default ], !dbg !795
  call fastcc void @Task_38_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61({} zeroinitializer, i32 %joinpointarg, ptr nonnull %result_value10), !dbg !795
  %2 = load i64, ptr %result_value10, align 8, !dbg !795
  store i64 %2, ptr %0, align 4, !dbg !795
  ret void, !dbg !795

branch0:                                          ; preds = %else_block
  %call = call fastcc i32 @_7_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79(ptr nonnull %load_element5, ptr nonnull %struct_field), !dbg !795
  br label %joinpointcont, !dbg !795
}

define internal fastcc i1 @Set_isEmpty_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3(ptr %"147") !dbg !797 {
entry:
  %call = tail call fastcc i1 @Dict_isEmpty_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(ptr %"147"), !dbg !798
  ret i1 %call, !dbg !798
}

define internal fastcc void @_3_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613(ptr %res, ptr %0) !dbg !800 {
entry:
  %result_value44 = alloca { [5 x i64], i8 }, align 8, !dbg !801
  %tag_alloca41 = alloca { [1 x i32], i8 }, align 8, !dbg !801
  %tag_alloca37 = alloca { [1 x i32], i8 }, align 8, !dbg !801
  %result_value35 = alloca %str.RocStr, align 8, !dbg !801
  %result_value34 = alloca %str.RocStr, align 8, !dbg !801
  %const_str_store33 = alloca %str.RocStr, align 8, !dbg !801
  %result_value32 = alloca %str.RocStr, align 8, !dbg !801
  %const_str_store = alloca %str.RocStr, align 8, !dbg !801
  %load_element31 = alloca { [4 x i64], i8 }, align 8, !dbg !801
  %result_value28 = alloca { [5 x i64], i8 }, align 8, !dbg !801
  %tag_alloca25 = alloca { [1 x i32], i8 }, align 8, !dbg !801
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !801
  %result_value20 = alloca { [5 x i64], i8 }, align 8, !dbg !801
  %load_element13 = alloca %str.RocStr, align 8, !dbg !801
  %load_element10 = alloca { [4 x i64], i8 }, align 8, !dbg !801
  %load_element = alloca { [4 x i64], i8 }, align 8, !dbg !801
  %result_value = alloca { [5 x i64], i8 }, align 8, !dbg !801
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %res, i64 0, i32 1, !dbg !801
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !801
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !801
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !801

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#dec_16"(ptr %res), !dbg !801
  call fastcc void @Task_ok_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f({} zeroinitializer, ptr nonnull %result_value), !dbg !801
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value, i64 48, i1 false), !dbg !801
  ret void, !dbg !801

else_block:                                       ; preds = %entry
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_element, ptr noundef nonnull align 8 dereferenceable(40) %res, i64 40, i1 false), !dbg !801
  %tag_id_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %load_element, i64 0, i32 1, !dbg !801
  %load_tag_id3 = load i8, ptr %tag_id_ptr2, align 8, !dbg !801
  %eq_u84 = icmp eq i8 %load_tag_id3, 0, !dbg !801
  br i1 %eq_u84, label %then_block6, label %else_block7, !dbg !801

then_block6:                                      ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_element10, ptr noundef nonnull align 8 dereferenceable(40) %res, i64 40, i1 false), !dbg !801
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element13, ptr noundef nonnull align 8 dereferenceable(24) %load_element10, i64 24, i1 false), !dbg !801
  %get_opaque_data_ptr15 = getelementptr inbounds { %str.RocStr, i32 }, ptr %load_element10, i64 0, i32 1, !dbg !801
  %load_element16 = load i32, ptr %get_opaque_data_ptr15, align 8, !dbg !801
  %call = call fastcc i1 @Str_isEmpty_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2(ptr nonnull %load_element13), !dbg !801
  br i1 %call, label %then_block18, label %else_block19, !dbg !801

else_block7:                                      ; preds = %else_block
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %load_element31, ptr noundef nonnull align 8 dereferenceable(40) %res, i64 40, i1 false), !dbg !801
  store ptr getelementptr inbounds ([39 x i8], ptr @_str_literal_3867905241449124926, i64 0, i64 8), ptr %const_str_store, align 8, !dbg !801
  %const_str_store.repack45 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 1, !dbg !801
  store i64 31, ptr %const_str_store.repack45, align 8, !dbg !801
  %const_str_store.repack46 = getelementptr inbounds %str.RocStr, ptr %const_str_store, i64 0, i32 2, !dbg !801
  store i64 31, ptr %const_str_store.repack46, align 8, !dbg !801
  call fastcc void @Inspect_toStr_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9(ptr nonnull %load_element31, ptr nonnull %result_value32), !dbg !801
  store ptr getelementptr inbounds ([177 x i8], ptr @_str_literal_3894810976106795109, i64 0, i64 8), ptr %const_str_store33, align 8, !dbg !801
  %const_str_store33.repack47 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 1, !dbg !801
  store i64 169, ptr %const_str_store33.repack47, align 8, !dbg !801
  %const_str_store33.repack48 = getelementptr inbounds %str.RocStr, ptr %const_str_store33, i64 0, i32 2, !dbg !801
  store i64 169, ptr %const_str_store33.repack48, align 8, !dbg !801
  call fastcc void @Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(ptr nonnull %result_value32, ptr nonnull %const_str_store33, ptr nonnull %result_value34), !dbg !801
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %const_str_store33), !dbg !801
  call fastcc void @Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198(ptr nonnull %const_str_store, ptr nonnull %result_value34, ptr nonnull %result_value35), !dbg !801
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %result_value34), !dbg !801
  %call36 = call fastcc { %str.RocStr, {} } @Stderr_line_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(ptr nonnull %result_value35), !dbg !801
  %tag_id_ptr39 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca37, i64 0, i32 1, !dbg !801
  store i8 1, ptr %tag_id_ptr39, align 4, !dbg !801
  %call40 = call fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2({ %str.RocStr, {} } %call36, ptr nonnull %tag_alloca37), !dbg !801
  %tag_id_ptr43 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca41, i64 0, i32 1, !dbg !801
  store i8 1, ptr %tag_id_ptr43, align 4, !dbg !801
  call fastcc void @Task_await_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7({ { %str.RocStr, {} }, { [1 x i32], i8 } } %call40, ptr nonnull %tag_alloca41, ptr nonnull %result_value44), !dbg !801
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value44, i64 48, i1 false), !dbg !801
  ret void, !dbg !801

then_block18:                                     ; preds = %then_block6
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element13), !dbg !801
  call fastcc void @Task_err_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591(i32 %load_element16, ptr nonnull %result_value20), !dbg !801
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value20, i64 48, i1 false), !dbg !801
  ret void, !dbg !801

else_block19:                                     ; preds = %then_block6
  %call21 = call fastcc { %str.RocStr, {} } @Stderr_line_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50(ptr nonnull %load_element13), !dbg !801
  store i32 %load_element16, ptr %tag_alloca, align 8, !dbg !801
  %tag_id_ptr22 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !801
  store i8 0, ptr %tag_id_ptr22, align 4, !dbg !801
  %call23 = call fastcc { { %str.RocStr, {} }, { [1 x i32], i8 } } @Task_onErr_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2({ %str.RocStr, {} } %call21, ptr nonnull %tag_alloca), !dbg !801
  store i32 %load_element16, ptr %tag_alloca25, align 8, !dbg !801
  %tag_id_ptr27 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca25, i64 0, i32 1, !dbg !801
  store i8 0, ptr %tag_id_ptr27, align 4, !dbg !801
  call fastcc void @Task_await_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7({ { %str.RocStr, {} }, { [1 x i32], i8 } } %call23, ptr nonnull %tag_alloca25, ptr nonnull %result_value28), !dbg !801
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %result_value28, i64 48, i1 false), !dbg !801
  ret void, !dbg !801
}

define internal fastcc void @Set_empty_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098({} %"152", ptr %0) !dbg !803 {
entry:
  %result_value = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8
  call fastcc void @Dict_empty_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b({} zeroinitializer, ptr nonnull %result_value), !dbg !804
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %result_value, i64 64, i1 false), !dbg !804
  ret void, !dbg !804
}

define internal fastcc i1 @Dict_isEmpty_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70(ptr %"726") !dbg !806 {
entry:
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"726", i64 0, i32 1, !dbg !807
  %struct_field.unpack = load ptr, ptr %struct_field_access_record_1, align 8, !dbg !807
  %0 = insertvalue %list.RocList poison, ptr %struct_field.unpack, 0, !dbg !807
  %struct_field.elt2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"726", i64 0, i32 1, i32 1, !dbg !807
  %struct_field.unpack3 = load i64, ptr %struct_field.elt2, align 8, !dbg !807
  %1 = insertvalue %list.RocList %0, i64 %struct_field.unpack3, 1, !dbg !807
  %struct_field.elt4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"726", i64 0, i32 1, i32 2, !dbg !807
  %struct_field.unpack5 = load i64, ptr %struct_field.elt4, align 8, !dbg !807
  %struct_field6 = insertvalue %list.RocList %1, i64 %struct_field.unpack5, 2, !dbg !807
  %struct_field1.unpack = load ptr, ptr %"726", align 8, !dbg !807
  %2 = insertvalue %list.RocList poison, ptr %struct_field1.unpack, 0, !dbg !807
  %struct_field1.elt7 = getelementptr inbounds %list.RocList, ptr %"726", i64 0, i32 1, !dbg !807
  %struct_field1.unpack8 = load i64, ptr %struct_field1.elt7, align 8, !dbg !807
  %3 = insertvalue %list.RocList %2, i64 %struct_field1.unpack8, 1, !dbg !807
  %struct_field1.elt9 = getelementptr inbounds %list.RocList, ptr %"726", i64 0, i32 2, !dbg !807
  %struct_field1.unpack10 = load i64, ptr %struct_field1.elt9, align 8, !dbg !807
  %struct_field111 = insertvalue %list.RocList %3, i64 %struct_field1.unpack10, 2, !dbg !807
  tail call fastcc void @"#Attr_#dec_11"(%list.RocList %struct_field111), !dbg !807
  %call = tail call fastcc i1 @List_isEmpty_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b(%list.RocList %struct_field6), !dbg !807
  tail call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field6), !dbg !807
  ret i1 %call, !dbg !807
}

define internal fastcc void @Task_await_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7({ { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", ptr %transform, ptr %0) !dbg !809 {
entry:
  %tag_alloca = alloca { [5 x i64], i8 }, align 8
  %struct_alloca = alloca { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, align 8
  %"102.elt" = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", 0, !dbg !810
  %"102.elt.elt" = extractvalue { %str.RocStr, {} } %"102.elt", 0, !dbg !810
  %"102.elt.elt.elt" = extractvalue %str.RocStr %"102.elt.elt", 0, !dbg !810
  store ptr %"102.elt.elt.elt", ptr %struct_alloca, align 8, !dbg !810
  %struct_alloca.repack6 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 1, !dbg !810
  %"102.elt.elt.elt7" = extractvalue %str.RocStr %"102.elt.elt", 1, !dbg !810
  store i64 %"102.elt.elt.elt7", ptr %struct_alloca.repack6, align 8, !dbg !810
  %struct_alloca.repack8 = getelementptr inbounds %str.RocStr, ptr %struct_alloca, i64 0, i32 2, !dbg !810
  %"102.elt.elt.elt9" = extractvalue %str.RocStr %"102.elt.elt", 2, !dbg !810
  store i64 %"102.elt.elt.elt9", ptr %struct_alloca.repack8, align 8, !dbg !810
  %struct_alloca.repack2 = getelementptr inbounds { { %str.RocStr, {} }, { [1 x i32], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !810
  %"102.elt3" = extractvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %"102", 1, !dbg !810
  store { [1 x i32], i8 } %"102.elt3", ptr %struct_alloca.repack2, align 8, !dbg !810
  %struct_field_gep1 = getelementptr inbounds { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, ptr %struct_alloca, i64 0, i32 1, !dbg !810
  %1 = load i64, ptr %transform, align 4, !dbg !810
  store i64 %1, ptr %struct_field_gep1, align 8, !dbg !810
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %tag_alloca, ptr noundef nonnull align 8 dereferenceable(40) %struct_alloca, i64 40, i1 false), !dbg !810
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !810
  store i8 2, ptr %tag_id_ptr, align 8, !dbg !810
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %0, ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca, i64 48, i1 false), !dbg !810
  ret void, !dbg !810
}

define internal fastcc void @Inspect_dbgTag_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189(ptr %name, %list.RocList %fields, ptr %0) !dbg !812 {
entry:
  %result_value5 = alloca { [6 x i64], i8 }, align 8, !dbg !813
  %tag_alloca2 = alloca { [6 x i64], i8 }, align 8, !dbg !813
  %struct_alloca = alloca { %str.RocStr, %list.RocList }, align 8, !dbg !813
  %result_value = alloca { [6 x i64], i8 }, align 8, !dbg !813
  %tag_alloca = alloca { [6 x i64], i8 }, align 8, !dbg !813
  %call = tail call fastcc i1 @List_isEmpty_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031(%list.RocList %fields), !dbg !813
  br i1 %call, label %then_block, label %else_block, !dbg !813

then_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_1"(ptr %name, i64 1), !dbg !813
  %load_tag_to_put_in_struct.unpack = load ptr, ptr %name, align 8, !dbg !813
  %load_tag_to_put_in_struct.elt10 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 1, !dbg !813
  %load_tag_to_put_in_struct.unpack11 = load i64, ptr %load_tag_to_put_in_struct.elt10, align 8, !dbg !813
  %load_tag_to_put_in_struct.elt12 = getelementptr inbounds %str.RocStr, ptr %name, i64 0, i32 2, !dbg !813
  %load_tag_to_put_in_struct.unpack13 = load i64, ptr %load_tag_to_put_in_struct.elt12, align 8, !dbg !813
  store ptr %load_tag_to_put_in_struct.unpack, ptr %tag_alloca, align 8, !dbg !813
  %tag_alloca.repack15 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 1, !dbg !813
  store i64 %load_tag_to_put_in_struct.unpack11, ptr %tag_alloca.repack15, align 8, !dbg !813
  %tag_alloca.repack17 = getelementptr inbounds %str.RocStr, ptr %tag_alloca, i64 0, i32 2, !dbg !813
  store i64 %load_tag_to_put_in_struct.unpack13, ptr %tag_alloca.repack17, align 8, !dbg !813
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !813
  store i8 0, ptr %tag_id_ptr, align 8, !dbg !813
  call fastcc void @Inspect_custom_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(ptr nonnull %tag_alloca, ptr nonnull %result_value), !dbg !813
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value, i64 56, i1 false), !dbg !813
  ret void, !dbg !813

else_block:                                       ; preds = %entry
  tail call fastcc void @"#Attr_#inc_4"(%list.RocList %fields, i64 1), !dbg !813
  tail call fastcc void @"#Attr_#inc_1"(ptr %name, i64 1), !dbg !813
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %struct_alloca, ptr noundef nonnull align 8 dereferenceable(24) %name, i64 24, i1 false), !dbg !813
  %struct_field_gep1 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, !dbg !813
  %fields.elt = extractvalue %list.RocList %fields, 0, !dbg !813
  store ptr %fields.elt, ptr %struct_field_gep1, align 8, !dbg !813
  %struct_field_gep1.repack6 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !813
  %fields.elt7 = extractvalue %list.RocList %fields, 1, !dbg !813
  store i64 %fields.elt7, ptr %struct_field_gep1.repack6, align 8, !dbg !813
  %struct_field_gep1.repack8 = getelementptr inbounds { %str.RocStr, %list.RocList }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !813
  %fields.elt9 = extractvalue %list.RocList %fields, 2, !dbg !813
  store i64 %fields.elt9, ptr %struct_field_gep1.repack8, align 8, !dbg !813
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %tag_alloca2, ptr noundef nonnull align 8 dereferenceable(48) %struct_alloca, i64 48, i1 false), !dbg !813
  %tag_id_ptr4 = getelementptr inbounds { [6 x i64], i8 }, ptr %tag_alloca2, i64 0, i32 1, !dbg !813
  store i8 1, ptr %tag_id_ptr4, align 8, !dbg !813
  call fastcc void @Inspect_custom_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0(ptr nonnull %tag_alloca2, ptr nonnull %result_value5), !dbg !813
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %0, ptr noundef nonnull align 8 dereferenceable(56) %result_value5, i64 56, i1 false), !dbg !813
  ret void, !dbg !813
}

define internal fastcc void @Inspect_apply_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31(ptr %"303", ptr %fmt, ptr %0) !dbg !815 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !816
  %result_value = alloca %str.RocStr, align 8, !dbg !816
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !816
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !816
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !816

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !816
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !816
  ret void, !dbg !816

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !816
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !816
  ret void, !dbg !816
}

define internal fastcc void @Num_toStr_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd(i32 %"#arg1", ptr %0) !dbg !818 {
entry:
  %str_alloca = alloca %str.RocStr, align 8
  call void @roc_builtins.str.from_int.i32(ptr noalias nocapture nonnull sret(%str.RocStr) %str_alloca, i32 %"#arg1"), !dbg !819
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %str_alloca, i64 24, i1 false), !dbg !819
  ret void, !dbg !819
}

define internal fastcc i1 @Num_isLt_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11(i64 %"#arg1", i64 %"#arg2") !dbg !821 {
entry:
  %lt_uint = icmp ult i64 %"#arg1", %"#arg2", !dbg !822
  ret i1 %lt_uint, !dbg !822
}

define internal fastcc void @Inspect_apply_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41(ptr %"303", ptr %fmt, ptr %0) !dbg !824 {
entry:
  %result_value1 = alloca %str.RocStr, align 8, !dbg !825
  %result_value = alloca %str.RocStr, align 8, !dbg !825
  %tag_id_ptr = getelementptr inbounds { [6 x i64], i8 }, ptr %"303", i64 0, i32 1, !dbg !825
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !825
  switch i8 %load_tag_id, label %default [
    i8 0, label %branch0
  ], !dbg !825

default:                                          ; preds = %entry
  call fastcc void @Inspect_206_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671(ptr %fmt, ptr %"303", ptr nonnull %result_value1), !dbg !825
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value1, i64 24, i1 false), !dbg !825
  ret void, !dbg !825

branch0:                                          ; preds = %entry
  call fastcc void @Inspect_204_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f(ptr %fmt, ptr %"303", ptr nonnull %result_value), !dbg !825
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !825
  ret void, !dbg !825
}

define internal fastcc void @Task_38_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2({} %"139", ptr %"#arg_closure", ptr %0) !dbg !827 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !828
  %load_element = load i32, ptr %"#arg_closure", align 4, !dbg !828
  store i32 %load_element, ptr %tag_alloca, align 8, !dbg !828
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !828
  store i8 0, ptr %tag_id_ptr, align 4, !dbg !828
  %1 = load i64, ptr %tag_alloca, align 8, !dbg !828
  store i64 %1, ptr %0, align 4, !dbg !828
  ret void, !dbg !828
}

define internal fastcc i64 @List_len_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a(%list.RocList %"#arg1") !dbg !830 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !831
  ret i64 %list_len, !dbg !831
}

define internal fastcc i64 @List_len_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(%list.RocList %"#arg1") !dbg !833 {
entry:
  %list_len = extractvalue %list.RocList %"#arg1", 1, !dbg !834
  ret i64 %list_len, !dbg !834
}

define internal fastcc void @Task_46_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00({} %"120", ptr %"#arg_closure", ptr %0) !dbg !836 {
entry:
  %tag_alloca = alloca { [1 x i32], i8 }, align 8, !dbg !837
  %result_value12 = alloca { [1 x i32], i8 }, align 8, !dbg !837
  %result_value = alloca { [1 x i32], i8 }, align 8, !dbg !837
  %load_element = alloca { [1 x i32], i8 }, align 8, !dbg !837
  %get_opaque_data_ptr1 = getelementptr inbounds { { { %str.RocStr, {} }, { [1 x i32], i8 } }, { [1 x i32], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !837
  %1 = load i64, ptr %get_opaque_data_ptr1, align 4, !dbg !837
  store i64 %1, ptr %load_element, align 8, !dbg !837
  %load_element4.unpack.unpack.unpack = load ptr, ptr %"#arg_closure", align 8, !dbg !837
  %2 = insertvalue %str.RocStr poison, ptr %load_element4.unpack.unpack.unpack, 0, !dbg !837
  %load_element4.unpack.unpack.elt23 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 1, !dbg !837
  %load_element4.unpack.unpack.unpack24 = load i64, ptr %load_element4.unpack.unpack.elt23, align 8, !dbg !837
  %3 = insertvalue %str.RocStr %2, i64 %load_element4.unpack.unpack.unpack24, 1, !dbg !837
  %load_element4.unpack.unpack.elt25 = getelementptr inbounds %str.RocStr, ptr %"#arg_closure", i64 0, i32 2, !dbg !837
  %load_element4.unpack.unpack.unpack26 = load i64, ptr %load_element4.unpack.unpack.elt25, align 8, !dbg !837
  %load_element4.unpack.unpack27 = insertvalue %str.RocStr %3, i64 %load_element4.unpack.unpack.unpack26, 2, !dbg !837
  %4 = insertvalue { %str.RocStr, {} } poison, %str.RocStr %load_element4.unpack.unpack27, 0, !dbg !837
  %load_element4.unpack22 = insertvalue { %str.RocStr, {} } %4, {} poison, 1, !dbg !837
  %5 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } poison, { %str.RocStr, {} } %load_element4.unpack22, 0, !dbg !837
  %load_element4.elt17 = getelementptr inbounds { { %str.RocStr, {} }, { [1 x i32], i8 } }, ptr %"#arg_closure", i64 0, i32 1, !dbg !837
  %load_element4.unpack18 = load { [1 x i32], i8 }, ptr %load_element4.elt17, align 8, !dbg !837
  %load_element419 = insertvalue { { %str.RocStr, {} }, { [1 x i32], i8 } } %5, { [1 x i32], i8 } %load_element4.unpack18, 1, !dbg !837
  call fastcc void @Task_53_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0({} zeroinitializer, { { %str.RocStr, {} }, { [1 x i32], i8 } } %load_element419, ptr nonnull %result_value), !dbg !837
  %tag_id_ptr = getelementptr inbounds { [1 x i32], i8 }, ptr %result_value, i64 0, i32 1, !dbg !837
  %load_tag_id = load i8, ptr %tag_id_ptr, align 4, !dbg !837
  %eq_u8 = icmp eq i8 %load_tag_id, 1, !dbg !837
  br i1 %eq_u8, label %then_block, label %else_block, !dbg !837

then_block:                                       ; preds = %entry
  %tag_id_ptr8 = getelementptr inbounds { [1 x i32], i8 }, ptr %load_element, i64 0, i32 1, !dbg !837
  %load_tag_id9 = load i8, ptr %tag_id_ptr8, align 4, !dbg !837
  switch i8 %load_tag_id9, label %default [
    i8 0, label %branch0
  ], !dbg !837

else_block:                                       ; preds = %entry
  %load_element15 = load i32, ptr %result_value, align 8, !dbg !837
  store i32 %load_element15, ptr %tag_alloca, align 8, !dbg !837
  %tag_id_ptr16 = getelementptr inbounds { [1 x i32], i8 }, ptr %tag_alloca, i64 0, i32 1, !dbg !837
  store i8 0, ptr %tag_id_ptr16, align 4, !dbg !837
  %6 = load i64, ptr %tag_alloca, align 8, !dbg !837
  store i64 %6, ptr %0, align 4, !dbg !837
  ret void, !dbg !837

default:                                          ; preds = %then_block
  %call11 = call fastcc i32 @_11_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753({} poison), !dbg !837
  br label %joinpointcont, !dbg !837

joinpointcont:                                    ; preds = %default, %branch0
  %joinpointarg = phi i32 [ %call, %branch0 ], [ %call11, %default ], !dbg !837
  call fastcc void @Task_38_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61({} zeroinitializer, i32 %joinpointarg, ptr nonnull %result_value12), !dbg !837
  %7 = load i64, ptr %result_value12, align 8, !dbg !837
  store i64 %7, ptr %0, align 4, !dbg !837
  ret void, !dbg !837

branch0:                                          ; preds = %then_block
  %call = call fastcc i32 @_8_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3({} poison, ptr nonnull %load_element), !dbg !837
  br label %joinpointcont, !dbg !837
}

define internal fastcc void @Dict_empty_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b({} %"731", ptr %0) !dbg !839 {
entry:
  %struct_alloca = alloca { %list.RocList, %list.RocList, i64, float, i8 }, align 8, !dbg !840
  %call = tail call fastcc float @Dict_defaultMaxLoadFactor_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94(), !dbg !840
  %call1 = tail call fastcc i8 @Dict_initialShifts_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9(), !dbg !840
  store ptr null, ptr %struct_alloca, align 8, !dbg !840
  %struct_alloca.repack6 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 1, !dbg !840
  store i64 0, ptr %struct_alloca.repack6, align 8, !dbg !840
  %struct_alloca.repack7 = getelementptr inbounds %list.RocList, ptr %struct_alloca, i64 0, i32 2, !dbg !840
  store i64 0, ptr %struct_alloca.repack7, align 8, !dbg !840
  %struct_field_gep2 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, !dbg !840
  store ptr null, ptr %struct_field_gep2, align 8, !dbg !840
  %struct_field_gep2.repack8 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 1, !dbg !840
  store i64 0, ptr %struct_field_gep2.repack8, align 8, !dbg !840
  %struct_field_gep2.repack9 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 1, i32 2, !dbg !840
  store i64 0, ptr %struct_field_gep2.repack9, align 8, !dbg !840
  %struct_field_gep3 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 2, !dbg !840
  store i64 0, ptr %struct_field_gep3, align 8, !dbg !840
  %struct_field_gep4 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 3, !dbg !840
  store float %call, ptr %struct_field_gep4, align 8, !dbg !840
  %struct_field_gep5 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %struct_alloca, i64 0, i32 4, !dbg !840
  store i8 %call1, ptr %struct_field_gep5, align 4, !dbg !840
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %0, ptr noundef nonnull align 8 dereferenceable(64) %struct_alloca, i64 64, i1 false), !dbg !840
  ret void, !dbg !840
}

define internal fastcc i1 @List_isEmpty_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031(%list.RocList %list) !dbg !842 {
entry:
  %call = tail call fastcc i64 @List_len_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b(%list.RocList %list), !dbg !843
  %call1 = tail call fastcc i1 @Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47(i64 %call, i64 0), !dbg !843
  ret i1 %call1, !dbg !843
}

define internal fastcc void @Inspect_213_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4(ptr %x, ptr %inspector, ptr %0) !dbg !845 {
entry:
  %result_value = alloca %str.RocStr, align 8
  call fastcc void @Inspect_apply_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846(ptr %inspector, ptr %x, ptr nonnull %result_value), !dbg !846
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !846
  ret void, !dbg !846
}

define internal fastcc void @Inspect_204_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b(ptr %f0, ptr %"#arg_closure", ptr %0) !dbg !848 {
entry:
  %result_value = alloca %str.RocStr, align 8, !dbg !849
  %load_element = alloca %str.RocStr, align 8, !dbg !849
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %load_element, ptr noundef nonnull align 8 dereferenceable(24) %"#arg_closure", i64 24, i1 false), !dbg !849
  call fastcc void @Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e(ptr %f0, ptr nonnull %load_element, ptr nonnull %result_value), !dbg !849
  call fastcc void @"#Attr_#dec_1"(ptr nonnull %load_element), !dbg !849
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %result_value, i64 24, i1 false), !dbg !849
  ret void, !dbg !849
}

define internal fastcc void @"#Derived_toInspector_[Exit 2,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd"(ptr %tag2, ptr %0) !dbg !851 {
entry:
  %result_value = alloca { [4 x i64], i8 }, align 8
  call fastcc void @Inspect_custom_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9(ptr %tag2, ptr nonnull %result_value), !dbg !852
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %0, ptr noundef nonnull align 8 dereferenceable(40) %result_value, i64 40, i1 false), !dbg !852
  ret void, !dbg !852
}

define internal fastcc i8 @Dict_initialShifts_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9() !dbg !854 {
entry:
  %call = tail call fastcc i8 @Num_subWrap_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d(i8 64, i8 3), !dbg !855
  ret i8 %call, !dbg !855
}

define private fastcc void @"#Attr_#dec_1"(ptr %"#arg1") !dbg !857 {
entry:
  %load_str_to_stack = load %str.RocStr, ptr %"#arg1", align 8, !dbg !858
  %read_str_capacity = extractvalue %str.RocStr %load_str_to_stack, 2, !dbg !858
  %is_big_str = icmp sgt i64 %read_str_capacity, 0, !dbg !858
  br i1 %is_big_str, label %modify_rc, label %modify_rc_str_cont, !dbg !858

modify_rc_str_cont:                               ; preds = %modify_rc, %entry
  ret void, !dbg !858

modify_rc:                                        ; preds = %entry
  %call_builtin = call ptr @roc_builtins.str.allocation_ptr(ptr nocapture readonly %"#arg1"), !dbg !858
  %get_rc_ptr = getelementptr inbounds i64, ptr %call_builtin, i64 -1, !dbg !858
  call fastcc void @decrement_refcounted_ptr_8(ptr %get_rc_ptr), !dbg !858
  br label %modify_rc_str_cont, !dbg !858
}

define internal fastcc void @decrement_refcounted_ptr_8(ptr %0) !dbg !860 {
entry:
  %1 = load i64, ptr %0, align 8, !dbg !861
  %.not.i = icmp eq i64 %1, 0, !dbg !861
  br i1 %.not.i, label %2, label %3, !dbg !861

2:                                                ; preds = %3, %entry
  br label %roc_builtins.utils.decref_rc_ptr.exit, !dbg !861

3:                                                ; preds = %entry
  %4 = add i64 %1, -1, !dbg !861
  store i64 %4, ptr %0, align 8, !dbg !861
  %5 = icmp eq i64 %1, -9223372036854775808, !dbg !861
  br i1 %5, label %6, label %2, !dbg !861

6:                                                ; preds = %3
  call void @roc_dealloc(ptr nonnull align 1 %0, i32 8), !dbg !861
  br label %roc_builtins.utils.decref_rc_ptr.exit, !dbg !861

roc_builtins.utils.decref_rc_ptr.exit:            ; preds = %6, %2
  ret void, !dbg !861
}

define private fastcc void @"#Attr_#dec_2"(%list.RocList %"#arg1") !dbg !863 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !864
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !864
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !864
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !864
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !864
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !864
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !864
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !864
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !864
  %2 = or i64 %1, %0, !dbg !864
  %3 = icmp ne i64 %2, 0, !dbg !864
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !864
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !864
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !864
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !864

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !864
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !864
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !864
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !864
  %8 = icmp ne i64 %6, 0, !dbg !864
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !864
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !864

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !864
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !864
  %12 = load i64, ptr %11, align 8, !dbg !864
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !864
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !864

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !864
  store i64 %14, ptr %11, align 8, !dbg !864
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !864
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !864

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !864
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !864
  br label %roc_builtins.list.decref.exit, !dbg !864

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !864
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !864
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !864
  %21 = inttoptr i64 %20 to ptr, !dbg !864
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !864
  %23 = load i64, ptr %22, align 8, !dbg !864
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !864
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !864

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !864
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !864
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !864
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !864
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !864

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !864
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !864

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !864
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !864
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !864
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !864

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !864
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !864
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !864
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !864

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !864

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !864
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !864
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !864
  call fastcc void @"#Attr_#dec_1"(ptr %lsr.iv4.i) #15, !dbg !866
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !864
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 24, !dbg !864
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !864
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !864

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  br label %roc_builtins.list.decref.exit, !dbg !864

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !864
}

define private fastcc void @"#Attr_#inc_2"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !870 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !871
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !871
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !871
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !871
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !871
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !871
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !871
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !871
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !871
  %2 = or i64 %1, %0, !dbg !871
  %3 = icmp ne i64 %2, 0, !dbg !871
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !871
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !871

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !871
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !871
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !871
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !871
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !871
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !871

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !871
  %9 = add i64 %8, -8, !dbg !871
  %10 = inttoptr i64 %9 to ptr, !dbg !871
  %11 = load i64, ptr %10, align 8, !dbg !871
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !871
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !871

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !871
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !871
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !871
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !871
  br label %roc_builtins.list.incref.exit, !dbg !871

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !871
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !871

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !871
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !871
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !871
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !871
  %18 = inttoptr i64 %17 to ptr, !dbg !871
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !871
  %20 = load i64, ptr %19, align 8, !dbg !871
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !871
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !871
  %22 = select i1 %21, i1 true, i1 %14, !dbg !871
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !871
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !871

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !871
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !871
  br label %.critedge.i.i, !dbg !871

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  ret void, !dbg !871
}

define private fastcc void @"#Attr_#inc_1"(ptr %"#arg1", i64 %0) !dbg !873 {
entry:
  %load_str_to_stack = load %str.RocStr, ptr %"#arg1", align 8, !dbg !874
  %read_str_capacity = extractvalue %str.RocStr %load_str_to_stack, 2, !dbg !874
  %is_big_str = icmp sgt i64 %read_str_capacity, 0, !dbg !874
  br i1 %is_big_str, label %modify_rc, label %modify_rc_str_cont, !dbg !874

modify_rc_str_cont:                               ; preds = %roc_builtins.utils.incref_rc_ptr.exit, %entry
  ret void, !dbg !874

modify_rc:                                        ; preds = %entry
  %call_builtin = call ptr @roc_builtins.str.allocation_ptr(ptr nocapture readonly %"#arg1"), !dbg !874
  %get_rc_ptr = getelementptr inbounds i64, ptr %call_builtin, i64 -1, !dbg !874
  %1 = load i64, ptr %get_rc_ptr, align 8, !dbg !874
  %.not.i = icmp eq i64 %1, 0, !dbg !874
  br i1 %.not.i, label %roc_builtins.utils.incref_rc_ptr.exit, label %2, !dbg !874

2:                                                ; preds = %modify_rc
  %3 = add nsw i64 %1, %0, !dbg !874
  store i64 %3, ptr %get_rc_ptr, align 8, !dbg !874
  br label %roc_builtins.utils.incref_rc_ptr.exit, !dbg !874

roc_builtins.utils.incref_rc_ptr.exit:            ; preds = %modify_rc, %2
  br label %modify_rc_str_cont, !dbg !874
}

define private fastcc void @"#Attr_#dec_3"(ptr %"#arg1") !dbg !876 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !877
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !877
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !877

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !877

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !877
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !877
  call fastcc void @"#Attr_#dec_1"(ptr %modify_tag_field), !dbg !877
  br label %modify_rc_union_merge, !dbg !877
}

declare void @roc_fx_stderrLine(ptr sret({ [3 x i64], i8 }), ptr)

define internal fastcc void @roc_fx_stderrLine_fastcc_wrapper(ptr %0, ptr %1) {
entry:
  call void @roc_fx_stderrLine(ptr %1, ptr %0), !dbg !566
  ret void, !dbg !566
}

define private fastcc void @"#Attr_#dec_4"(%list.RocList %"#arg1") !dbg !879 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !880
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !880
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !880
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !880
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !880
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !880
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !880
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !880
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !880
  %2 = or i64 %1, %0, !dbg !880
  %3 = icmp ne i64 %2, 0, !dbg !880
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !880
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !880
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !880
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %list.RocList.isUnique.exit.thread.i.i, !dbg !880

.critedge.i.i:                                    ; preds = %.lr.ph.i.i, %list.RocList.getAllocationElementCount.exit.i.i, %list.RocList.isUnique.exit.thread.i.i, %list.RocList.isUnique.exit.i.i
  %.pre-phi.i = phi i64 [ %31, %list.RocList.getAllocationElementCount.exit.i.i ], [ %25, %list.RocList.isUnique.exit.thread.i.i ], [ %18, %list.RocList.isUnique.exit.i.i ], [ %32, %.lr.ph.i.i ], !dbg !880
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !880
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %.pre-phi.i, !dbg !880
  %7 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !880
  %8 = icmp ne i64 %6, 0, !dbg !880
  %or.cond.i.i.i = select i1 %7, i1 %8, i1 false, !dbg !880
  br i1 %or.cond.i.i.i, label %9, label %list.RocList.decref.exit.i, !dbg !880

9:                                                ; preds = %.critedge.i.i
  %10 = inttoptr i64 %6 to ptr, !dbg !880
  %11 = getelementptr inbounds i64, ptr %10, i64 -1, !dbg !880
  %12 = load i64, ptr %11, align 8, !dbg !880
  %.not.i.i.i = icmp eq i64 %12, 0, !dbg !880
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %13, !dbg !880

13:                                               ; preds = %9
  %14 = add i64 %12, -1, !dbg !880
  store i64 %14, ptr %11, align 8, !dbg !880
  %15 = icmp eq i64 %12, -9223372036854775808, !dbg !880
  br i1 %15, label %16, label %list.RocList.decref.exit.i, !dbg !880

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, ptr %11, i64 -8, !dbg !880
  call void @roc_dealloc(ptr nonnull align 1 %17, i32 8), !dbg !880
  br label %roc_builtins.list.decref.exit, !dbg !880

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %18 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !880
  %19 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !880
  %20 = select i1 %19, i64 %5, i64 %18, !dbg !880
  %21 = inttoptr i64 %20 to ptr, !dbg !880
  %22 = getelementptr inbounds i64, ptr %21, i64 -1, !dbg !880
  %23 = load i64, ptr %22, align 8, !dbg !880
  %24 = icmp eq i64 %23, -9223372036854775808, !dbg !880
  br i1 %24, label %list.RocList.isUnique.exit.thread.i.i, label %.critedge.i.i, !dbg !880

list.RocList.isUnique.exit.thread.i.i:            ; preds = %list.RocList.isUnique.exit.i.i, %entry
  %.pre-phi22.i.i = phi ptr [ %21, %list.RocList.isUnique.exit.i.i ], [ %.sroa.0.0.copyload.i, %entry ], !dbg !880
  %.pre-phi20.i.i = phi i64 [ %20, %list.RocList.isUnique.exit.i.i ], [ %4, %entry ], !dbg !880
  %25 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !880
  %.not.i.i = icmp eq i64 %.pre-phi20.i.i, 0, !dbg !880
  br i1 %.not.i.i, label %.critedge.i.i, label %26, !dbg !880

26:                                               ; preds = %list.RocList.isUnique.exit.thread.i.i
  %27 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !880
  br i1 %27, label %28, label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !880

28:                                               ; preds = %26
  %29 = inttoptr i64 %5 to ptr, !dbg !880
  %30 = getelementptr inbounds i64, ptr %29, i64 -2, !dbg !880
  %common.ret.op.in.i.sroa.speculate.load.10.i.i = load i64, ptr %30, align 8, !dbg !880
  br label %list.RocList.getAllocationElementCount.exit.i.i, !dbg !880

list.RocList.getAllocationElementCount.exit.i.i:  ; preds = %28, %26
  %common.ret.op.in.i.sroa.speculated.i.i = phi i64 [ %common.ret.op.in.i.sroa.speculate.load.10.i.i, %28 ], [ %.sroa.3.0.copyload.i, %26 ], !dbg !880
  %31 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !880
  %.not16.i.i = icmp eq i64 %common.ret.op.in.i.sroa.speculated.i.i, 0, !dbg !880
  br i1 %.not16.i.i, label %.critedge.i.i, label %.lr.ph.i.preheader.i, !dbg !880

.lr.ph.i.preheader.i:                             ; preds = %list.RocList.getAllocationElementCount.exit.i.i
  br label %.lr.ph.i.i, !dbg !880

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %.lr.ph.i.preheader.i
  %lsr.iv4.i = phi ptr [ %.pre-phi22.i.i, %.lr.ph.i.preheader.i ], [ %uglygep.i, %.lr.ph.i.i ], !dbg !880
  %lsr.iv.i = phi i64 [ %common.ret.op.in.i.sroa.speculated.i.i, %.lr.ph.i.preheader.i ], [ %lsr.iv.next.i, %.lr.ph.i.i ], !dbg !880
  %32 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !880
  call fastcc void @"#Attr_#dec_5"(ptr %lsr.iv4.i) #15, !dbg !882
  %lsr.iv.next.i = add i64 %lsr.iv.i, -1, !dbg !880
  %uglygep.i = getelementptr i8, ptr %lsr.iv4.i, i64 40, !dbg !880
  %exitcond.not.i.i = icmp eq i64 %lsr.iv.next.i, 0, !dbg !880
  br i1 %exitcond.not.i.i, label %.critedge.i.i, label %.lr.ph.i.i, !dbg !880

list.RocList.decref.exit.i:                       ; preds = %13, %9, %.critedge.i.i
  br label %roc_builtins.list.decref.exit, !dbg !880

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %16
  ret void, !dbg !880
}

define private fastcc void @"#Attr_#dec_5"(ptr %"#arg1") !dbg !886 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !887
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !887
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !887

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !887

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !887
  %modify_tag_field = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !887
  call fastcc void @"#Attr_#dec_3"(ptr %modify_tag_field), !dbg !887
  br label %modify_rc_union_merge, !dbg !887

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !887
  %modify_tag_field3 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr2, i32 0, i32 0, !dbg !887
  call fastcc void @"#Attr_#dec_1"(ptr %modify_tag_field3), !dbg !887
  br label %modify_rc_union_merge, !dbg !887
}

declare void @roc_fx_stdoutLine(ptr sret({ [3 x i64], i8 }), ptr)

define internal fastcc void @roc_fx_stdoutLine_fastcc_wrapper(ptr %0, ptr %1) {
entry:
  call void @roc_fx_stdoutLine(ptr %1, ptr %0), !dbg !629
  ret void, !dbg !629
}

define private fastcc void @"#Attr_#inc_4"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !889 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !890
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !890
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !890
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !890
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !890
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !890
  %isneg.i.i.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !890
  %0 = call i64 @llvm.smax.i64(i64 %.sroa.4.0.copyload.i, i64 0), !dbg !890
  %1 = select i1 %isneg.i.i.i.i.i, i64 %.sroa.3.0.copyload.i, i64 0, !dbg !890
  %2 = or i64 %1, %0, !dbg !890
  %3 = icmp ne i64 %2, 0, !dbg !890
  %brmerge.i.i.i.i = select i1 %3, i1 true, i1 %isneg.i.i.i.i.i, !dbg !890
  br i1 %brmerge.i.i.i.i, label %list.RocList.isUnique.exit.i.i, label %.thread.i.i, !dbg !890

.critedge.i.i:                                    ; preds = %23, %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %4 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !890
  %5 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !890
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !890
  %6 = select i1 %isneg.i.i.i, i64 %5, i64 %4, !dbg !890
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !890
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %7, !dbg !890

7:                                                ; preds = %.critedge.i.i
  %8 = and i64 %6, -8, !dbg !890
  %9 = add i64 %8, -8, !dbg !890
  %10 = inttoptr i64 %9 to ptr, !dbg !890
  %11 = load i64, ptr %10, align 8, !dbg !890
  %.not.i.i.i.i = icmp eq i64 %11, 0, !dbg !890
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %12, !dbg !890

12:                                               ; preds = %7
  %13 = add nsw i64 %11, %"#arg2", !dbg !890
  %sunkaddr.i = inttoptr i64 %8 to ptr, !dbg !890
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !890
  store i64 %13, ptr %sunkaddr2.i, align 8, !dbg !890
  br label %roc_builtins.list.incref.exit, !dbg !890

.thread.i.i:                                      ; preds = %entry
  %.not.old.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !890
  br i1 %.not.old.i.i, label %.critedge.i.i, label %23, !dbg !890

list.RocList.isUnique.exit.i.i:                   ; preds = %entry
  %14 = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !890
  %15 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !890
  %16 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !890
  %17 = select i1 %14, i64 %16, i64 %15, !dbg !890
  %18 = inttoptr i64 %17 to ptr, !dbg !890
  %19 = getelementptr inbounds i64, ptr %18, i64 -1, !dbg !890
  %20 = load i64, ptr %19, align 8, !dbg !890
  %21 = icmp ne i64 %20, -9223372036854775808, !dbg !890
  %.not.i.i = icmp eq ptr %.sroa.0.0.copyload.i, null, !dbg !890
  %22 = select i1 %21, i1 true, i1 %14, !dbg !890
  %or.cond14.i.i = select i1 %22, i1 true, i1 %.not.i.i, !dbg !890
  br i1 %or.cond14.i.i, label %.critedge.i.i, label %23, !dbg !890

23:                                               ; preds = %list.RocList.isUnique.exit.i.i, %.thread.i.i
  %24 = getelementptr inbounds i64, ptr %.sroa.0.0.copyload.i, i64 -2, !dbg !890
  store i64 %.sroa.3.0.copyload.i, ptr %24, align 8, !dbg !890
  br label %.critedge.i.i, !dbg !890

roc_builtins.list.incref.exit:                    ; preds = %.critedge.i.i, %7, %12
  ret void, !dbg !890
}

define private fastcc void @"#Attr_#inc_5"(ptr %"#arg1", i64 %0) !dbg !892 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !893
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !893
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !893

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !893

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !893
  %modify_tag_field = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !893
  call fastcc void @"#Attr_#inc_3"(ptr %modify_tag_field, i64 %0), !dbg !893
  br label %modify_rc_union_merge, !dbg !893

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !893
  %modify_tag_field3 = getelementptr inbounds { %str.RocStr }, ptr %field_ptr2, i32 0, i32 0, !dbg !893
  call fastcc void @"#Attr_#inc_1"(ptr %modify_tag_field3, i64 %0), !dbg !893
  br label %modify_rc_union_merge, !dbg !893
}

define private fastcc void @"#Attr_#inc_3"(ptr %"#arg1", i64 %0) !dbg !895 {
entry:
  %tag_id_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !896
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !896
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 2, label %tag_id_modify
  ], !dbg !896

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !896

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [3 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !896
  %modify_tag_field = getelementptr inbounds { %str.RocStr }, ptr %field_ptr, i32 0, i32 0, !dbg !896
  call fastcc void @"#Attr_#inc_1"(ptr %modify_tag_field, i64 %0), !dbg !896
  br label %modify_rc_union_merge, !dbg !896
}

; Function Attrs: alwaysinline
define private i8 @Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2_compare_wrapper(ptr %"#arg1", ptr %"#arg2", ptr %"#arg3") #13 !dbg !898 {
entry:
  %load_opaque1 = alloca {}, align 8
  %load_opaque = alloca {}, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %load_opaque, ptr align 1 %"#arg2", i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64), i1 false), !dbg !899
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %load_opaque1, ptr align 1 %"#arg3", i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64), i1 false), !dbg !899
  %call_user_defined_compare_function = call fastcc i8 @Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2(ptr %load_opaque, ptr %load_opaque1, ptr %"#arg1"), !dbg !899
  ret i8 %call_user_defined_compare_function, !dbg !899
}

; Function Attrs: alwaysinline
define private void @"#Attr_#generic_rc_by_ref_3_inc_n"(ptr %"#arg1", i64 %"#arg2") #13 !dbg !901 {
entry:
  call fastcc void @"#Attr_#inc_10"(ptr %"#arg1", i64 %"#arg2"), !dbg !902
  ret void, !dbg !902
}

define private fastcc void @"#Attr_#inc_10"(ptr %"#arg1", i64 %0) !dbg !904 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !905
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !905
  call fastcc void @"#Attr_#inc_11"(%list.RocList %struct_field, i64 %0), !dbg !905
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !905
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !905
  call fastcc void @"#Attr_#inc_12"(%list.RocList %struct_field1, i64 %0), !dbg !905
  ret void, !dbg !905
}

define private fastcc void @"#Attr_#inc_11"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !907 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !908
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !908
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !908
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !908
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !908
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !908
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !908
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !908
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !908
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !908
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !908
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !908

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !908
  %5 = add i64 %4, -8, !dbg !908
  %6 = inttoptr i64 %5 to ptr, !dbg !908
  %7 = load i64, ptr %6, align 8, !dbg !908
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !908
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !908

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !908
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !908
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !908
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !908
  br label %roc_builtins.list.incref.exit, !dbg !908

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  ret void, !dbg !908
}

define private fastcc void @"#Attr_#inc_12"(%list.RocList %"#arg1", i64 %"#arg2") !dbg !910 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !911
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !911
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !911
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !911
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !911
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !911
  %0 = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !911
  %1 = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !911
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !911
  %2 = select i1 %isneg.i.i.i, i64 %1, i64 %0, !dbg !911
  %.not.i.i.i = icmp eq i64 %2, 0, !dbg !911
  br i1 %.not.i.i.i, label %roc_builtins.list.incref.exit, label %3, !dbg !911

3:                                                ; preds = %entry
  %4 = and i64 %2, -8, !dbg !911
  %5 = add i64 %4, -8, !dbg !911
  %6 = inttoptr i64 %5 to ptr, !dbg !911
  %7 = load i64, ptr %6, align 8, !dbg !911
  %.not.i.i.i.i = icmp eq i64 %7, 0, !dbg !911
  br i1 %.not.i.i.i.i, label %roc_builtins.list.incref.exit, label %8, !dbg !911

8:                                                ; preds = %3
  %9 = add nsw i64 %7, %"#arg2", !dbg !911
  %sunkaddr.i = inttoptr i64 %4 to ptr, !dbg !911
  %sunkaddr2.i = getelementptr i8, ptr %sunkaddr.i, i64 -8, !dbg !911
  store i64 %9, ptr %sunkaddr2.i, align 8, !dbg !911
  br label %roc_builtins.list.incref.exit, !dbg !911

roc_builtins.list.incref.exit:                    ; preds = %entry, %3, %8
  ret void, !dbg !911
}

; Function Attrs: alwaysinline
define private void @"#Attr_#generic_copy_by_ref_1"(ptr %"#arg1", ptr %"#arg2") #13 !dbg !913 {
entry:
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %"#arg1", ptr align 1 %"#arg2", i64 ptrtoint (ptr getelementptr ({}, ptr null, i32 1) to i64), i1 false), !dbg !914
  ret void, !dbg !914
}

define private fastcc void @"#Attr_#dec_10"(ptr %"#arg1") !dbg !916 {
entry:
  %struct_field_access_record_0 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !917
  %struct_field = load %list.RocList, ptr %struct_field_access_record_0, align 8, !dbg !917
  call fastcc void @"#Attr_#dec_11"(%list.RocList %struct_field), !dbg !917
  %struct_field_access_record_1 = getelementptr inbounds { %list.RocList, %list.RocList, i64, float, i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !917
  %struct_field1 = load %list.RocList, ptr %struct_field_access_record_1, align 8, !dbg !917
  call fastcc void @"#Attr_#dec_12"(%list.RocList %struct_field1), !dbg !917
  ret void, !dbg !917
}

define private fastcc void @"#Attr_#dec_11"(%list.RocList %"#arg1") !dbg !919 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !920
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !920
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !920
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !920
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !920
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !920
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !920
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !920
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !920
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !920
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !920
  %2 = icmp ne i64 %0, 0, !dbg !920
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !920
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !920

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !920
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !920
  %6 = load i64, ptr %5, align 8, !dbg !920
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !920
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !920

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !920
  store i64 %8, ptr %5, align 8, !dbg !920
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !920
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !920

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !920
  br label %roc_builtins.list.decref.exit, !dbg !920

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  br label %roc_builtins.list.decref.exit, !dbg !920

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !920
}

define private fastcc void @"#Attr_#dec_13"({ i32, i32 } %"#arg1") !dbg !922 {
entry:
  ret void, !dbg !923
}

define private fastcc void @"#Attr_#dec_12"(%list.RocList %"#arg1") !dbg !925 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !926
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !926
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !926
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !926
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !926
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !926
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !926
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !926
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !926
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !926
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !926
  %2 = icmp ne i64 %0, 0, !dbg !926
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !926
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !926

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !926
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !926
  %6 = load i64, ptr %5, align 8, !dbg !926
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !926
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !926

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !926
  store i64 %8, ptr %5, align 8, !dbg !926
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !926
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !926

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !926
  br label %roc_builtins.list.decref.exit, !dbg !926

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  br label %roc_builtins.list.decref.exit, !dbg !926

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !926
}

define private fastcc void @"#Attr_#dec_14"({ i64, {} } %"#arg1") !dbg !928 {
entry:
  ret void, !dbg !929
}

define private fastcc void @"#Attr_#dec_15"(%list.RocList %"#arg1") !dbg !931 {
entry:
  %list_alloca = alloca %list.RocList, align 8
  store %list.RocList %"#arg1", ptr %list_alloca, align 8, !dbg !932
  %.sroa.0.0.copyload.i = load ptr, ptr %list_alloca, align 8, !dbg !932
  %.sroa.3.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 8, !dbg !932
  %.sroa.3.0.copyload.i = load i64, ptr %.sroa.3.0..sroa_idx.i, align 8, !dbg !932
  %.sroa.4.0..sroa_idx.i = getelementptr inbounds i8, ptr %list_alloca, i64 16, !dbg !932
  %.sroa.4.0.copyload.i = load i64, ptr %.sroa.4.0..sroa_idx.i, align 8, !dbg !932
  %.pre.i = ptrtoint ptr %.sroa.0.0.copyload.i to i64, !dbg !932
  %.pre2.i = shl i64 %.sroa.4.0.copyload.i, 1, !dbg !932
  %isneg.i.i.i = icmp slt i64 %.sroa.4.0.copyload.i, 0, !dbg !932
  %0 = select i1 %isneg.i.i.i, i64 %.pre2.i, i64 %.pre.i, !dbg !932
  %1 = icmp ne i64 %.sroa.4.0.copyload.i, 0, !dbg !932
  %2 = icmp ne i64 %0, 0, !dbg !932
  %or.cond.i.i.i = select i1 %1, i1 %2, i1 false, !dbg !932
  br i1 %or.cond.i.i.i, label %3, label %list.RocList.decref.exit.i, !dbg !932

3:                                                ; preds = %entry
  %4 = inttoptr i64 %0 to ptr, !dbg !932
  %5 = getelementptr inbounds i64, ptr %4, i64 -1, !dbg !932
  %6 = load i64, ptr %5, align 8, !dbg !932
  %.not.i.i.i = icmp eq i64 %6, 0, !dbg !932
  br i1 %.not.i.i.i, label %list.RocList.decref.exit.i, label %7, !dbg !932

7:                                                ; preds = %3
  %8 = add i64 %6, -1, !dbg !932
  store i64 %8, ptr %5, align 8, !dbg !932
  %9 = icmp eq i64 %6, -9223372036854775808, !dbg !932
  br i1 %9, label %10, label %list.RocList.decref.exit.i, !dbg !932

10:                                               ; preds = %7
  call void @roc_dealloc(ptr nonnull align 1 %5, i32 8), !dbg !932
  br label %roc_builtins.list.decref.exit, !dbg !932

list.RocList.decref.exit.i:                       ; preds = %7, %3, %entry
  br label %roc_builtins.list.decref.exit, !dbg !932

roc_builtins.list.decref.exit:                    ; preds = %list.RocList.decref.exit.i, %10
  ret void, !dbg !932
}

define private fastcc void @"#Attr_#dec_16"(ptr %"#arg1") !dbg !934 {
entry:
  %tag_id_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !935
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !935
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
  ], !dbg !935

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify
  ret void, !dbg !935

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [5 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !935
  %modify_tag_field = getelementptr inbounds { { [4 x i64], i8 } }, ptr %field_ptr, i32 0, i32 0, !dbg !935
  call fastcc void @"#Attr_#dec_17"(ptr %modify_tag_field), !dbg !935
  br label %modify_rc_union_merge, !dbg !935
}

define private fastcc void @"#Attr_#dec_17"(ptr %"#arg1") !dbg !937 {
entry:
  %tag_id_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 1, !dbg !938
  %load_tag_id = load i8, ptr %tag_id_ptr, align 1, !dbg !938
  switch i8 %load_tag_id, label %modify_rc_union_merge [
    i8 0, label %tag_id_modify
    i8 1, label %tag_id_modify1
  ], !dbg !938

modify_rc_union_merge:                            ; preds = %entry, %tag_id_modify1, %tag_id_modify
  ret void, !dbg !938

tag_id_modify:                                    ; preds = %entry
  %field_ptr = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !938
  %modify_tag_field = getelementptr inbounds { %str.RocStr, i32 }, ptr %field_ptr, i32 0, i32 0, !dbg !938
  call fastcc void @"#Attr_#dec_1"(ptr %modify_tag_field), !dbg !938
  br label %modify_rc_union_merge, !dbg !938

tag_id_modify1:                                   ; preds = %entry
  %field_ptr2 = getelementptr inbounds { [4 x i64], i8 }, ptr %"#arg1", i32 0, i32 0, !dbg !938
  %modify_tag_field3 = getelementptr inbounds { { [3 x i64], i8 } }, ptr %field_ptr2, i32 0, i32 0, !dbg !938
  call fastcc void @"#Attr_#dec_3"(ptr %modify_tag_field3), !dbg !938
  br label %modify_rc_union_merge, !dbg !938
}

define void @roc__mainForHost_0_caller(ptr %0, ptr %1, ptr %2) {
entry:
  %result_value = alloca { [1 x i32], i8 }, align 8, !dbg !855
  %load_param = load {}, ptr %0, align 1, !dbg !855
  %load_param1 = load { { %str.RocStr, {} }, {} }, ptr %1, align 8, !dbg !855
  call fastcc void @_73_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57({} %load_param, { { %str.RocStr, {} }, {} } %load_param1, ptr %result_value), !dbg !855
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %2, ptr align 4 %result_value, i64 ptrtoint (ptr getelementptr ({ [1 x i32], i8 }, ptr null, i32 1) to i64), i1 false), !dbg !855
  ret void, !dbg !855
}

define i64 @roc__mainForHost_0_result_size() {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ [1 x i32], i8 }, ptr null, i32 1) to i64), !dbg !855
}

define i64 @roc__mainForHost_0_size() {
entry:
  ret i64 ptrtoint (ptr getelementptr ({ { %str.RocStr, {} }, {} }, ptr null, i32 1) to i64), !dbg !855
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #14

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #1 = { noreturn nounwind uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #5 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #6 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #7 = { nofree nosync nounwind memory(argmem: write) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #8 = { nofree nosync nounwind memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #9 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #10 = { nofree nosync nounwind uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #11 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "frame-pointer"="none" "target-cpu"="generic" "target-features"="-a510,-a65,-a710,-a76,-a78,-a78c,-aes,-aggressive-fma,-alternate-sextload-cvt-f32-pattern,-altnzcv,-am,-amvs,-arith-bcc-fusion,-arith-cbz-fusion,-ascend-store-address,-b16b16,-balance-fp-ops,-bf16,-brbe,-bti,-call-saved-x10,-call-saved-x11,-call-saved-x12,-call-saved-x13,-call-saved-x14,-call-saved-x15,-call-saved-x18,-call-saved-x8,-call-saved-x9,-ccdp,-ccidx,-ccpp,-clrbhb,-cmp-bcc-fusion,-complxnum,-CONTEXTIDREL2,-cortex-r82,-crc,-crypto,-cssc,-custom-cheap-as-move,-d128,-disable-latency-sched-heuristic,-dit,-dotprod,-ecv,-el2vmsa,-el3,+enable-select-opt,+ete,-exynos-cheap-as-move,-f32mm,-f64mm,-fgt,-fix-cortex-a53-835769,-flagm,-fmv,-force-32bit-jump-tables,-fp16fml,+fp-armv8,-fptoint,-fullfp16,-fuse-address,+fuse-adrp-add,+fuse-aes,-fuse-arith-logic,-fuse-crypto-eor,-fuse-csel,-fuse-literals,-harden-sls-blr,-harden-sls-nocomdat,-harden-sls-retbr,-hbc,-hcx,-i8mm,-ite,-jsconv,-lor,-ls64,-lse,-lse128,-lse2,-lsl-fast,-mec,-mops,-mpam,-mte,+neon,-nmi,-no-bti-at-return-twice,-no-neg-immediates,-no-zcz-fp,-nv,-outline-atomics,-pan,-pan-rwv,-pauth,-perfmon,-predictable-select-expensive,-predres,-prfm-slc-target,-rand,-ras,-rasv2,-rcpc,-rcpc3,-rcpc-immo,-rdm,-reserve-x1,-reserve-x10,-reserve-x11,-reserve-x12,-reserve-x13,-reserve-x14,-reserve-x15,-reserve-x18,-reserve-x2,-reserve-x20,-reserve-x21,-reserve-x22,-reserve-x23,-reserve-x24,-reserve-x25,-reserve-x26,-reserve-x27,-reserve-x28,-reserve-x3,-reserve-x30,-reserve-x4,-reserve-x5,-reserve-x6,-reserve-x7,-reserve-x9,-rme,-sb,-sel2,-sha2,-sha3,-slow-misaligned-128store,-slow-paired-128,-slow-strqro-store,-sm4,-sme,-sme2,-sme2p1,-sme-f16f16,-sme-f64f64,-sme-i16i64,-spe,-spe-eef,-specres2,-specrestrict,-ssbs,-strict-align,-sve,-sve2,-sve2-aes,-sve2-bitperm,-sve2-sha3,-sve2-sm4,-sve2p1,-tagged-globals,-the,-tlb-rmi,-tme,-tpidr-el1,-tpidr-el2,-tpidr-el3,-tracev8.4,+trbe,-uaops,-use-experimental-zeroing-pseudos,+use-postra-scheduler,-use-reciprocal-square-root,-use-scalar-inc-vl,-v8.1a,-v8.2a,-v8.3a,-v8.4a,-v8.5a,-v8.6a,-v8.7a,-v8.8a,-v8.9a,-v8a,-v8r,-v9.1a,-v9.2a,-v9.3a,-v9.4a,-v9a,-vh,-wfxt,-xs,-zcm,-zcz,-zcz-fp-workaround,-zcz-gp" }
attributes #12 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #13 = { alwaysinline }
attributes #14 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #15 = { nounwind }
attributes #16 = { noinline }

!llvm.module.flags = !{!0, !1, !2}
!llvm.dbg.cu = !{!3}

!0 = !{i32 8, !"PIC Level", i32 2}
!1 = !{i32 7, !"PIE Level", i32 2}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DICompileUnit(language: DW_LANG_C, file: !4, producer: "my llvm compiler frontend", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!4 = !DIFile(filename: "roc_app", directory: ".")
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"str.RocStr.allocateBig: argument 0"}
!7 = distinct !{!7, !"str.RocStr.allocateBig"}
!8 = distinct !{!8, !9, !"str.RocStr.allocate: argument 0"}
!9 = distinct !{!9, !"str.RocStr.allocate"}
!10 = distinct !{!10, !11, !12}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = !{!"llvm.loop.unroll.runtime.disable"}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11, !12}
!15 = distinct !{!15, !11}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20, !21, !22}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !18}
!22 = distinct !{!22, !18}
!23 = !{!21}
!24 = !{!22}
!25 = !{!20}
!26 = !{!21, !22}
!27 = distinct !{!27, !11, !12}
!28 = distinct !{!28, !11}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33, !34, !35}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !31}
!35 = distinct !{!35, !31}
!36 = !{!34}
!37 = !{!35}
!38 = !{!33}
!39 = !{!34, !35}
!40 = distinct !{!40, !11, !12}
!41 = distinct !{!41, !11}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46, !47, !48}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !44}
!48 = distinct !{!48, !44}
!49 = !{!47}
!50 = !{!48}
!51 = !{!46}
!52 = !{!47, !48}
!53 = distinct !{!53, !11, !12}
!54 = distinct !{!54, !11}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59, !60, !61}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !57}
!61 = distinct !{!61, !57}
!62 = !{!60}
!63 = !{!61}
!64 = !{!59}
!65 = !{!60, !61}
!66 = distinct !{!66, !11, !12}
!67 = distinct !{!67, !11}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72, !73, !74}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !70}
!74 = distinct !{!74, !70}
!75 = !{!73}
!76 = !{!74}
!77 = !{!72}
!78 = !{!73, !74}
!79 = distinct !{!79, !11, !12}
!80 = distinct !{!80, !11}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85, !86, !87}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !83}
!87 = distinct !{!87, !83}
!88 = !{!86}
!89 = !{!87}
!90 = !{!85}
!91 = !{!86, !87}
!92 = distinct !{!92, !11, !12}
!93 = distinct !{!93, !11}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98, !99, !100}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !96}
!100 = distinct !{!100, !96}
!101 = !{!99}
!102 = !{!100}
!103 = !{!98}
!104 = !{!99, !100}
!105 = distinct !{!105, !11, !12}
!106 = distinct !{!106, !11}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111, !112, !113}
!111 = distinct !{!111, !109}
!112 = distinct !{!112, !109}
!113 = distinct !{!113, !109}
!114 = !{!112}
!115 = !{!113}
!116 = !{!111}
!117 = !{!112, !113}
!118 = distinct !{!118, !11, !12}
!119 = distinct !{!119, !11}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124, !125, !126}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !122}
!126 = distinct !{!126, !122}
!127 = !{!125}
!128 = !{!126}
!129 = !{!124}
!130 = !{!125, !126}
!131 = distinct !{!131, !11, !12}
!132 = distinct !{!132, !11}
!133 = !{!134}
!134 = distinct !{!134, !135}
!135 = distinct !{!135, !"LVerDomain"}
!136 = !{!137, !138, !139}
!137 = distinct !{!137, !135}
!138 = distinct !{!138, !135}
!139 = distinct !{!139, !135}
!140 = !{!138}
!141 = !{!139}
!142 = !{!137}
!143 = !{!138, !139}
!144 = distinct !{!144, !11, !12}
!145 = distinct !{!145, !11}
!146 = !{!147}
!147 = distinct !{!147, !148}
!148 = distinct !{!148, !"LVerDomain"}
!149 = !{!150, !151, !152}
!150 = distinct !{!150, !148}
!151 = distinct !{!151, !148}
!152 = distinct !{!152, !148}
!153 = !{!151}
!154 = !{!152}
!155 = !{!150}
!156 = !{!151, !152}
!157 = distinct !{!157, !11, !12}
!158 = distinct !{!158, !11}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163, !164, !165}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !161}
!165 = distinct !{!165, !161}
!166 = !{!164}
!167 = !{!165}
!168 = !{!163}
!169 = !{!164, !165}
!170 = distinct !{!170, !11, !12}
!171 = distinct !{!171, !11}
!172 = !{!173}
!173 = distinct !{!173, !174}
!174 = distinct !{!174, !"LVerDomain"}
!175 = !{!176, !177, !178}
!176 = distinct !{!176, !174}
!177 = distinct !{!177, !174}
!178 = distinct !{!178, !174}
!179 = !{!177}
!180 = !{!178}
!181 = !{!176}
!182 = !{!177, !178}
!183 = distinct !{!183, !11, !12}
!184 = distinct !{!184, !11}
!185 = !{!186}
!186 = distinct !{!186, !187}
!187 = distinct !{!187, !"LVerDomain"}
!188 = !{!189, !190, !191}
!189 = distinct !{!189, !187}
!190 = distinct !{!190, !187}
!191 = distinct !{!191, !187}
!192 = !{!190}
!193 = !{!191}
!194 = !{!189}
!195 = !{!190, !191}
!196 = distinct !{!196, !11, !12}
!197 = distinct !{!197, !11}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202, !203, !204}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !200}
!204 = distinct !{!204, !200}
!205 = !{!203}
!206 = !{!204}
!207 = !{!202}
!208 = !{!203, !204}
!209 = distinct !{!209, !11, !12}
!210 = distinct !{!210, !11}
!211 = !{!212}
!212 = distinct !{!212, !213}
!213 = distinct !{!213, !"LVerDomain"}
!214 = !{!215, !216, !217}
!215 = distinct !{!215, !213}
!216 = distinct !{!216, !213}
!217 = distinct !{!217, !213}
!218 = !{!216}
!219 = !{!217}
!220 = !{!215}
!221 = !{!216, !217}
!222 = distinct !{!222, !11, !12}
!223 = distinct !{!223, !11}
!224 = !{!225}
!225 = distinct !{!225, !226}
!226 = distinct !{!226, !"LVerDomain"}
!227 = !{!228, !229, !230}
!228 = distinct !{!228, !226}
!229 = distinct !{!229, !226}
!230 = distinct !{!230, !226}
!231 = !{!229}
!232 = !{!230}
!233 = !{!228}
!234 = !{!229, !230}
!235 = distinct !{!235, !11, !12}
!236 = distinct !{!236, !11}
!237 = !{!238}
!238 = distinct !{!238, !239}
!239 = distinct !{!239, !"LVerDomain"}
!240 = !{!241, !242, !243}
!241 = distinct !{!241, !239}
!242 = distinct !{!242, !239}
!243 = distinct !{!243, !239}
!244 = !{!242}
!245 = !{!243}
!246 = !{!241}
!247 = !{!242, !243}
!248 = distinct !{!248, !11, !12}
!249 = distinct !{!249, !11}
!250 = !{!251}
!251 = distinct !{!251, !252}
!252 = distinct !{!252, !"LVerDomain"}
!253 = !{!254, !255, !256}
!254 = distinct !{!254, !252}
!255 = distinct !{!255, !252}
!256 = distinct !{!256, !252}
!257 = !{!255}
!258 = !{!256}
!259 = !{!254}
!260 = !{!255, !256}
!261 = distinct !{!261, !11, !12}
!262 = distinct !{!262, !11}
!263 = !{!264}
!264 = distinct !{!264, !265}
!265 = distinct !{!265, !"LVerDomain"}
!266 = !{!267, !268, !269}
!267 = distinct !{!267, !265}
!268 = distinct !{!268, !265}
!269 = distinct !{!269, !265}
!270 = !{!268}
!271 = !{!269}
!272 = !{!267}
!273 = !{!268, !269}
!274 = distinct !{!274, !11, !12}
!275 = distinct !{!275, !11}
!276 = !{!277}
!277 = distinct !{!277, !278}
!278 = distinct !{!278, !"LVerDomain"}
!279 = !{!280, !281, !282}
!280 = distinct !{!280, !278}
!281 = distinct !{!281, !278}
!282 = distinct !{!282, !278}
!283 = !{!281}
!284 = !{!282}
!285 = !{!280}
!286 = !{!281, !282}
!287 = distinct !{!287, !11, !12}
!288 = distinct !{!288, !11}
!289 = !{!290}
!290 = distinct !{!290, !291}
!291 = distinct !{!291, !"LVerDomain"}
!292 = !{!293, !294, !295}
!293 = distinct !{!293, !291}
!294 = distinct !{!294, !291}
!295 = distinct !{!295, !291}
!296 = !{!294}
!297 = !{!295}
!298 = !{!293}
!299 = !{!294, !295}
!300 = distinct !{!300, !11, !12}
!301 = distinct !{!301, !11}
!302 = !{!303}
!303 = distinct !{!303, !304}
!304 = distinct !{!304, !"LVerDomain"}
!305 = !{!306, !307, !308}
!306 = distinct !{!306, !304}
!307 = distinct !{!307, !304}
!308 = distinct !{!308, !304}
!309 = !{!307}
!310 = !{!308}
!311 = !{!306}
!312 = !{!307, !308}
!313 = distinct !{!313, !11, !12}
!314 = distinct !{!314, !11}
!315 = !{!316}
!316 = distinct !{!316, !317}
!317 = distinct !{!317, !"LVerDomain"}
!318 = !{!319, !320, !321}
!319 = distinct !{!319, !317}
!320 = distinct !{!320, !317}
!321 = distinct !{!321, !317}
!322 = !{!320}
!323 = !{!321}
!324 = !{!319}
!325 = !{!320, !321}
!326 = distinct !{!326, !11, !12}
!327 = distinct !{!327, !11}
!328 = !{!329}
!329 = distinct !{!329, !330, !"fmt.bufPrint__anon_10507: argument 0"}
!330 = distinct !{!330, !"fmt.bufPrint__anon_10507"}
!331 = !{!332}
!332 = distinct !{!332, !333, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer: argument 0"}
!333 = distinct !{!333, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer"}
!334 = !{!335, !329}
!335 = distinct !{!335, !336, !"fmt.digits2: argument 0"}
!336 = distinct !{!336, !"fmt.digits2"}
!337 = !{!338, !329}
!338 = distinct !{!338, !339, !"fmt.digits2: argument 0"}
!339 = distinct !{!339, !"fmt.digits2"}
!340 = !{!341, !343, !345}
!341 = distinct !{!341, !342, !"str.RocStr.allocateBig: argument 0"}
!342 = distinct !{!342, !"str.RocStr.allocateBig"}
!343 = distinct !{!343, !344, !"str.RocStr.allocate: argument 0"}
!344 = distinct !{!344, !"str.RocStr.allocate"}
!345 = distinct !{!345, !346, !"str.RocStr.init: argument 0"}
!346 = distinct !{!346, !"str.RocStr.init"}
!347 = !{!345}
!348 = !{!349}
!349 = distinct !{!349, !350, !"fmt.bufPrint__anon_11073: argument 0"}
!350 = distinct !{!350, !"fmt.bufPrint__anon_11073"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer: argument 0"}
!353 = distinct !{!353, !"io.fixed_buffer_stream.FixedBufferStream([]u8).writer"}
!354 = !{!355, !349}
!355 = distinct !{!355, !356, !"fmt.digits2: argument 0"}
!356 = distinct !{!356, !"fmt.digits2"}
!357 = !{!358, !349}
!358 = distinct !{!358, !359, !"fmt.digits2: argument 0"}
!359 = distinct !{!359, !"fmt.digits2"}
!360 = !{!361, !363, !365}
!361 = distinct !{!361, !362, !"str.RocStr.allocateBig: argument 0"}
!362 = distinct !{!362, !"str.RocStr.allocateBig"}
!363 = distinct !{!363, !364, !"str.RocStr.allocate: argument 0"}
!364 = distinct !{!364, !"str.RocStr.allocate"}
!365 = distinct !{!365, !366, !"str.RocStr.init: argument 0"}
!366 = distinct !{!366, !"str.RocStr.init"}
!367 = !{!365}
!368 = !{i64 0, i64 65}
!369 = distinct !{!369, !11, !12}
!370 = distinct !{!370, !11, !12}
!371 = distinct !{!371, !12, !11}
!372 = distinct !{!372, !11, !12}
!373 = distinct !{!373, !11, !12}
!374 = distinct !{!374, !12, !11}
!375 = !{!376}
!376 = distinct !{!376, !377, !"unicode.utf8Decode2: argument 0"}
!377 = distinct !{!377, !"unicode.utf8Decode2"}
!378 = !{!379}
!379 = distinct !{!379, !380, !"unicode.utf8Decode3: argument 0"}
!380 = distinct !{!380, !"unicode.utf8Decode3"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"unicode.utf8Decode4: argument 0"}
!383 = distinct !{!383, !"unicode.utf8Decode4"}
!384 = !{!385, !387}
!385 = distinct !{!385, !386, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!386 = distinct !{!386, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!387 = distinct !{!387, !388, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!388 = distinct !{!388, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!389 = !{!390, !392}
!390 = distinct !{!390, !391, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!391 = distinct !{!391, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!392 = distinct !{!392, !393, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!393 = distinct !{!393, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!394 = !{!395, !397}
!395 = distinct !{!395, !396, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!396 = distinct !{!396, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!397 = distinct !{!397, !398, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!398 = distinct !{!398, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!399 = !{!400, !402}
!400 = distinct !{!400, !401, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!401 = distinct !{!401, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!402 = distinct !{!402, !403, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!403 = distinct !{!403, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!404 = !{!405, !407}
!405 = distinct !{!405, !406, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!406 = distinct !{!406, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!407 = distinct !{!407, !408, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!408 = distinct !{!408, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!409 = !{!410, !412}
!410 = distinct !{!410, !411, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!411 = distinct !{!411, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!412 = distinct !{!412, !413, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!413 = distinct !{!413, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!414 = !{!415, !417}
!415 = distinct !{!415, !416, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!416 = distinct !{!416, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!417 = distinct !{!417, !418, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!418 = distinct !{!418, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!419 = !{!420, !422}
!420 = distinct !{!420, !421, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!421 = distinct !{!421, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!422 = distinct !{!422, !423, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!423 = distinct !{!423, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!424 = !{!425, !427}
!425 = distinct !{!425, !426, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write: argument 0"}
!426 = distinct !{!426, !"io.fixed_buffer_stream.FixedBufferStream([]u8).write"}
!427 = distinct !{!427, !428, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write: argument 0"}
!428 = distinct !{!428, !"io.writer.Writer(*io.fixed_buffer_stream.FixedBufferStream([]u8),error{NoSpaceLeft},(function 'write')).write"}
!429 = !{!430}
!430 = distinct !{!430, !431, !"str.RocStr.allocateBig: argument 0"}
!431 = distinct !{!431, !"str.RocStr.allocateBig"}
!432 = distinct !{!432, !11, !12}
!433 = distinct !{!433, !11, !12}
!434 = distinct !{!434, !11}
!435 = !{!436}
!436 = distinct !{!436, !437}
!437 = distinct !{!437, !"LVerDomain"}
!438 = !{!439, !440, !441}
!439 = distinct !{!439, !437}
!440 = distinct !{!440, !437}
!441 = distinct !{!441, !437}
!442 = !{!440}
!443 = !{!441}
!444 = !{!439}
!445 = !{!440, !441}
!446 = distinct !{!446, !11, !12}
!447 = distinct !{!447, !11}
!448 = !{!449}
!449 = distinct !{!449, !450}
!450 = distinct !{!450, !"LVerDomain"}
!451 = !{!452, !453, !454}
!452 = distinct !{!452, !450}
!453 = distinct !{!453, !450}
!454 = distinct !{!454, !450}
!455 = !{!453}
!456 = !{!454}
!457 = !{!452}
!458 = !{!453, !454}
!459 = distinct !{!459, !11, !12}
!460 = distinct !{!460, !11}
!461 = !{!462}
!462 = distinct !{!462, !463}
!463 = distinct !{!463, !"LVerDomain"}
!464 = !{!465, !466, !467}
!465 = distinct !{!465, !463}
!466 = distinct !{!466, !463}
!467 = distinct !{!467, !463}
!468 = !{!466}
!469 = !{!467}
!470 = !{!465}
!471 = !{!466, !467}
!472 = distinct !{!472, !11, !12}
!473 = distinct !{!473, !11}
!474 = !{!475}
!475 = distinct !{!475, !476}
!476 = distinct !{!476, !"LVerDomain"}
!477 = !{!478, !479, !480}
!478 = distinct !{!478, !476}
!479 = distinct !{!479, !476}
!480 = distinct !{!480, !476}
!481 = !{!479}
!482 = !{!480}
!483 = !{!478}
!484 = !{!479, !480}
!485 = distinct !{!485, !11, !12}
!486 = distinct !{!486, !11}
!487 = !{!488}
!488 = distinct !{!488, !489}
!489 = distinct !{!489, !"LVerDomain"}
!490 = !{!491, !492, !493}
!491 = distinct !{!491, !489}
!492 = distinct !{!492, !489}
!493 = distinct !{!493, !489}
!494 = !{!492}
!495 = !{!493}
!496 = !{!491}
!497 = !{!492, !493}
!498 = distinct !{!498, !11, !12}
!499 = distinct !{!499, !11}
!500 = !{!501}
!501 = distinct !{!501, !502}
!502 = distinct !{!502, !"LVerDomain"}
!503 = !{!504, !505, !506}
!504 = distinct !{!504, !502}
!505 = distinct !{!505, !502}
!506 = distinct !{!506, !502}
!507 = !{!505}
!508 = !{!506}
!509 = !{!504}
!510 = !{!505, !506}
!511 = distinct !{!511, !11, !12}
!512 = distinct !{!512, !11}
!513 = distinct !{!513, !11, !12}
!514 = distinct !{!514, !11, !12}
!515 = distinct !{!515, !11}
!516 = distinct !{!516, !11, !12}
!517 = distinct !{!517, !11, !12}
!518 = distinct !{!518, !11}
!519 = distinct !{!519, !11, !12}
!520 = distinct !{!520, !11, !12}
!521 = distinct !{!521, !11}
!522 = distinct !{!522, !11, !12}
!523 = distinct !{!523, !11, !12}
!524 = distinct !{!524, !11}
!525 = distinct !{!525, !11, !12}
!526 = distinct !{!526, !11, !12}
!527 = distinct !{!527, !11}
!528 = distinct !{!528, !11, !12}
!529 = distinct !{!529, !11, !12}
!530 = distinct !{!530, !11}
!531 = distinct !{!531, !11, !12}
!532 = distinct !{!532, !11, !12}
!533 = distinct !{!533, !11}
!534 = distinct !{!534, !11, !12}
!535 = distinct !{!535, !11, !12}
!536 = distinct !{!536, !11}
!537 = distinct !DISubprogram(name: "Inspect_inspect_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b", linkageName: "Inspect_inspect_e4f9cf3a6c4e3d6be9d05048391b2e3975855fa3e34f66d41fe2c9a84e5c7b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!538 = !DISubroutineType(flags: DIFlagPublic, types: !539)
!539 = !{!540}
!540 = !DIBasicType(name: "type_name", flags: DIFlagPublic)
!541 = !{}
!542 = !DILocation(line: 0, scope: !543)
!543 = distinct !DILexicalBlock(scope: !537, file: !4)
!544 = distinct !DISubprogram(name: "Inspect_dbgI32_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e", linkageName: "Inspect_dbgI32_da6b85ec7e1e6f2f01e92f35cc48f7475ea87261d357876fef3f23dc338e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!545 = !DILocation(line: 0, scope: !546)
!546 = distinct !DILexicalBlock(scope: !544, file: !4)
!547 = distinct !DISubprogram(name: "Inspect_206_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671", linkageName: "Inspect_206_11922f5e717257e3c76632973ee406cbf106889cd4e80e37d14c1d9c194671", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!548 = !DILocation(line: 0, scope: !549)
!549 = distinct !DILexicalBlock(scope: !547, file: !4)
!550 = distinct !DISubprogram(name: "Inspect_custom_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9", linkageName: "Inspect_custom_653de62d66328bd02e166b818cc28fc7f76ad909358c5f3f340dd1c827546c9", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!551 = !DILocation(line: 0, scope: !552)
!552 = distinct !DILexicalBlock(scope: !550, file: !4)
!553 = distinct !DISubprogram(name: "List_walk_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63", linkageName: "List_walk_52459ae5e05017996bb4298dd9ac3944ffe997fa2e2ad98ba6fd7348395f63", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!554 = !DILocation(line: 0, scope: !555)
!555 = distinct !DILexicalBlock(scope: !553, file: !4)
!556 = distinct !DISubprogram(name: "List_walkHelp_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2", linkageName: "List_walkHelp_53eef38977ca9e3af29e8b6fc9f50f557be9bbd173abd2118eb5488f19fb2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!557 = !DILocation(line: 0, scope: !558)
!558 = distinct !DILexicalBlock(scope: !556, file: !4)
!559 = distinct !DISubprogram(name: "Inspect_apply_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846", linkageName: "Inspect_apply_676ec9e417566a851359c2c6d5d5332f7d40742f8274a8672f3cad244846", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!560 = !DILocation(line: 0, scope: !561)
!561 = distinct !DILexicalBlock(scope: !559, file: !4)
!562 = distinct !DISubprogram(name: "#Derived_custom3_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e", linkageName: "#Derived_custom3_beb22fad19423347b2aa99b33212e862ded3f83df5d6238acb1a6a9ade3e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!563 = !DILocation(line: 0, scope: !564)
!564 = distinct !DILexicalBlock(scope: !562, file: !4)
!565 = distinct !DISubprogram(name: "PlatformTasks_task_closure_stderrLine_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6", linkageName: "PlatformTasks_task_closure_stderrLine_df662f4854c7c5a297d6c339e28fd51ddc944983db9bc7f012ab2c1c69a52db6", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!566 = !DILocation(line: 0, scope: !567)
!567 = distinct !DILexicalBlock(scope: !565, file: !4)
!568 = distinct !DISubprogram(name: "Task_38_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61", linkageName: "Task_38_464ad9696114b8eea8bc3daaaa648b1d3685be4c8d824dbb0c93c169d61", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!569 = !DILocation(line: 0, scope: !570)
!570 = distinct !DILexicalBlock(scope: !568, file: !4)
!571 = distinct !DISubprogram(name: "Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e", linkageName: "Inspect_dbgWrite_fc336bd1cd3ebaf6eb15720d63e6c19ad363d38ae324f70134d53791b44e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!572 = !DILocation(line: 0, scope: !573)
!573 = distinct !DILexicalBlock(scope: !571, file: !4)
!574 = distinct !DISubprogram(name: "Inspect_dbgStr_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec", linkageName: "Inspect_dbgStr_d394208415ac8fe0ce8aa0ddf6a845c7cc74d818698e3d25c85705ce311f5ec", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!575 = !DILocation(line: 0, scope: !576)
!576 = distinct !DILexicalBlock(scope: !574, file: !4)
!577 = distinct !DISubprogram(name: "#Derived_custom2_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3", linkageName: "#Derived_custom2_c610e85212d0697cb161d4ba431ba63f273feee7dcb7927c9ff5d74ae6cbfa3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!578 = !DILocation(line: 0, scope: !579)
!579 = distinct !DILexicalBlock(scope: !577, file: !4)
!580 = distinct !DISubprogram(name: "Inspect_206_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb", linkageName: "Inspect_206_f784f33513051f4f09b2b103edd2f576ced88ace36b12d3f4e2a3dbe51fcfeb", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!581 = !DILocation(line: 0, scope: !582)
!582 = distinct !DILexicalBlock(scope: !580, file: !4)
!583 = distinct !DISubprogram(name: "Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198", linkageName: "Str_concat_e6845638e158b704aa8395d259110713932beb5d7a34137f5739ba7e3dd198", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!584 = !DILocation(line: 0, scope: !585)
!585 = distinct !DILexicalBlock(scope: !583, file: !4)
!586 = distinct !DISubprogram(name: "List_walk_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc", linkageName: "List_walk_078eba49b7090dbd2c6fb82297218e6d2eb88883fa33ff213b919f6e68cc", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!587 = !DILocation(line: 0, scope: !588)
!588 = distinct !DILexicalBlock(scope: !586, file: !4)
!589 = distinct !DISubprogram(name: "_7_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79", linkageName: "_7_52aff1341cf42f5e6559a2cf028663f7bbbc7576ac1948fc58784a0613b79", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!590 = !DILocation(line: 0, scope: !591)
!591 = distinct !DILexicalBlock(scope: !589, file: !4)
!592 = distinct !DISubprogram(name: "#UserApp_main_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061", linkageName: "#UserApp_main_bae7cba17581e9e24ed8c02e992f1bda9aeff2d299cc1289ddd0dbdf373061", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!593 = !DILocation(line: 0, scope: !594)
!594 = distinct !DILexicalBlock(scope: !592, file: !4)
!595 = distinct !DISubprogram(name: "Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2", linkageName: "Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!596 = !DILocation(line: 0, scope: !597)
!597 = distinct !DILexicalBlock(scope: !595, file: !4)
!598 = distinct !DISubprogram(name: "Stdout_handleErr_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894", linkageName: "Stdout_handleErr_539d94cac9151288c18279a5f1573e8d65d66aeb5922fa6ed8cbc577893894", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!599 = !DILocation(line: 0, scope: !600)
!600 = distinct !DILexicalBlock(scope: !598, file: !4)
!601 = distinct !DISubprogram(name: "Task_ok_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f", linkageName: "Task_ok_7f8c4a473141d41efa7657e3f378539f18179e0b2dff0f626f6dce25d295f", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!602 = !DILocation(line: 0, scope: !603)
!603 = distinct !DILexicalBlock(scope: !601, file: !4)
!604 = distinct !DISubprogram(name: "Inspect_toStr_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9", linkageName: "Inspect_toStr_7cfa03e91e0ec9327f388a68dbd26ae2735e7e95165f9e519543e02299bee9", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!605 = !DILocation(line: 0, scope: !606)
!606 = distinct !DILexicalBlock(scope: !604, file: !4)
!607 = distinct !DISubprogram(name: "Task_42_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32", linkageName: "Task_42_dee69d62f6dd2acac17218e148d3d8138e18cca99859936284942954b14b32", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!608 = !DILocation(line: 0, scope: !609)
!609 = distinct !DILexicalBlock(scope: !607, file: !4)
!610 = distinct !DISubprogram(name: "Stderr_handleErr_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140", linkageName: "Stderr_handleErr_1c44a9ca60e694ea5bce656141adb8728c249dc46543e7c34883c1136ab140", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!611 = !DILocation(line: 0, scope: !612)
!612 = distinct !DILexicalBlock(scope: !610, file: !4)
!613 = distinct !DISubprogram(name: "Task_35_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e", linkageName: "Task_35_3899d549ca6f5b7757a69b861e0c9a44bfbbd717ac2039f8ca1abc46d7d32e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!614 = !DILocation(line: 0, scope: !615)
!615 = distinct !DILexicalBlock(scope: !613, file: !4)
!616 = distinct !DISubprogram(name: "Task_67_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8", linkageName: "Task_67_fea4b522fb116c2bf818212d595291e57cec745699352eecbb7184315f386ce8", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!617 = !DILocation(line: 0, scope: !618)
!618 = distinct !DILexicalBlock(scope: !616, file: !4)
!619 = distinct !DISubprogram(name: "PlatformTasks_stdoutLine_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018", linkageName: "PlatformTasks_stdoutLine_4dcdd9fc1c563c9592918682f5bb9bfbff249c75cdcf934a994231c5c3a018", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!620 = !DILocation(line: 0, scope: !621)
!621 = distinct !DILexicalBlock(scope: !619, file: !4)
!622 = distinct !DISubprogram(name: "_8_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3", linkageName: "_8_8b8e749a7d5dc4035aed2d09b8b4ad59fac5ad694339521a2df23bf1ac35c3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!623 = !DILocation(line: 0, scope: !624)
!624 = distinct !DILexicalBlock(scope: !622, file: !4)
!625 = distinct !DISubprogram(name: "Task_onErr_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2", linkageName: "Task_onErr_5fea3a382f6b6c4a2af77ea4365b5abbdda8b93d1f0b9b895dc2a48489fb2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!626 = !DILocation(line: 0, scope: !627)
!627 = distinct !DILexicalBlock(scope: !625, file: !4)
!628 = distinct !DISubprogram(name: "PlatformTasks_task_closure_stdoutLine_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4", linkageName: "PlatformTasks_task_closure_stdoutLine_e8e3cb4c459a1e25c7bed4d87759a21ad8b1f9ce7dd1dd4beba947ebadfffae4", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!629 = !DILocation(line: 0, scope: !630)
!630 = distinct !DILexicalBlock(scope: !628, file: !4)
!631 = distinct !DISubprogram(name: "Inspect_dbgInit_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece", linkageName: "Inspect_dbgInit_3bbacd33228bca14fe5573efe7278cde33c78fe9028ba98810cff368dece", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!632 = !DILocation(line: 0, scope: !633)
!633 = distinct !DILexicalBlock(scope: !631, file: !4)
!634 = distinct !DISubprogram(name: "Task_mapErr_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63", linkageName: "Task_mapErr_78fff63b9d7571652dd558be04af7c0e5b15b7f19efda5bd78185837663f63", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!635 = !DILocation(line: 0, scope: !636)
!636 = distinct !DILexicalBlock(scope: !634, file: !4)
!637 = distinct !DISubprogram(name: "Str_isEmpty_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2", linkageName: "Str_isEmpty_cb411178cb7686889a4ee0e4b4c57e63975186dc9f1448b79e94c2721a21a2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!638 = !DILocation(line: 0, scope: !639)
!639 = distinct !DILexicalBlock(scope: !637, file: !4)
!640 = distinct !DISubprogram(name: "Inspect_210_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34", linkageName: "Inspect_210_3d7aff37b23cd9f9e6beb177d8bf818babb9d186ea278cc981a34be43b8cf34", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!641 = !DILocation(line: 0, scope: !642)
!642 = distinct !DILexicalBlock(scope: !640, file: !4)
!643 = distinct !DISubprogram(name: "Inspect_213_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c", linkageName: "Inspect_213_24ce363245042dce6c6647d3662b4b2c84c622d118936f8265c24f93e9d3a2c", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!644 = !DILocation(line: 0, scope: !645)
!645 = distinct !DILexicalBlock(scope: !643, file: !4)
!646 = distinct !DISubprogram(name: "Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6", linkageName: "Bool_structuralEq_f57b151e8a6dfbc520c29ccc134c8fb5357cdd96058ecd185f0787f48b7a6", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!647 = !DILocation(line: 0, scope: !648)
!648 = distinct !DILexicalBlock(scope: !646, file: !4)
!649 = distinct !DISubprogram(name: "Inspect_208_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3", linkageName: "Inspect_208_af2554e3880a1c7af81a4c13c1df135146f6cac58d2d046bda16fbd7c23db3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!650 = !DILocation(line: 0, scope: !651)
!651 = distinct !DILexicalBlock(scope: !649, file: !4)
!652 = distinct !DISubprogram(name: "_10_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181", linkageName: "_10_8c3fdd6849785e1b32106ad9c6ae59845e2314f0a6799376d4e3e3b9be62d181", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!653 = !DILocation(line: 0, scope: !654)
!654 = distinct !DILexicalBlock(scope: !652, file: !4)
!655 = distinct !DISubprogram(name: "_73_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57", linkageName: "_73_c919149ababf2a569c5e2b164c2465c785dc3bc7f566b8dcef7ec4ae86e8d57", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!656 = !DILocation(line: 0, scope: !657)
!657 = distinct !DILexicalBlock(scope: !655, file: !4)
!658 = distinct !DISubprogram(name: "List_getUnsafe_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363", linkageName: "List_getUnsafe_4a74cf314ac9371a5ea518de15e620d82137397f51a1fa6eff156547f363", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!659 = !DILocation(line: 0, scope: !660)
!660 = distinct !DILexicalBlock(scope: !658, file: !4)
!661 = distinct !DISubprogram(name: "Task_attempt_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d", linkageName: "Task_attempt_1fbc6d79b671ab88e8a9425cd46a77344c0f7ee34ea43fdcaf5a014c6759d", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!662 = !DILocation(line: 0, scope: !663)
!663 = distinct !DILexicalBlock(scope: !661, file: !4)
!664 = distinct !DISubprogram(name: "Task_67_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c", linkageName: "Task_67_ca8af06be175497c1986028dec9ff9bde775267ac5c92d6992ca796b5e797c", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!665 = !DILocation(line: 0, scope: !666)
!666 = distinct !DILexicalBlock(scope: !664, file: !4)
!667 = distinct !DISubprogram(name: "Num_addWrap_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8", linkageName: "Num_addWrap_e84248fb50d0833361d0417df114b0b3b3448fff97c39cdde963b09a9aebb8", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!668 = !DILocation(line: 0, scope: !669)
!669 = distinct !DILexicalBlock(scope: !667, file: !4)
!670 = distinct !DISubprogram(name: "Inspect_204_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f", linkageName: "Inspect_204_b7c59c3aec44645db91b229c81990d288c86aeb49f116d1eae85e2b9a39999f", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!671 = !DILocation(line: 0, scope: !672)
!672 = distinct !DILexicalBlock(scope: !670, file: !4)
!673 = distinct !DISubprogram(name: "_mainForHost_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0", linkageName: "_mainForHost_9d949d48d48bd9629a662ead3e2fc9728ebe6544f0834563102ca492bac0", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!674 = !DILocation(line: 0, scope: !675)
!675 = distinct !DILexicalBlock(scope: !673, file: !4)
!676 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed_generic", linkageName: "roc__mainForHost_1_exposed_generic", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!677 = !DILocation(line: 0, scope: !678)
!678 = distinct !DILexicalBlock(scope: !676, file: !4)
!679 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed", linkageName: "roc__mainForHost_1_exposed", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!680 = !DILocation(line: 0, scope: !681)
!681 = distinct !DILexicalBlock(scope: !679, file: !4)
!682 = distinct !DISubprogram(name: "roc__mainForHost_1_exposed_size", linkageName: "roc__mainForHost_1_exposed_size", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!683 = !DILocation(line: 0, scope: !684)
!684 = distinct !DILexicalBlock(scope: !682, file: !4)
!685 = distinct !DISubprogram(name: "Inspect_250_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e", linkageName: "Inspect_250_6bc1e748a2edd5eacd7f49eb7476d47387e76d8e94fcfcf34a1d5a6fa86e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!686 = !DILocation(line: 0, scope: !687)
!687 = distinct !DILexicalBlock(scope: !685, file: !4)
!688 = distinct !DISubprogram(name: "PlatformTasks_stderrLine_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7", linkageName: "PlatformTasks_stderrLine_aad9a2f5f9418b386cce489a0bac8cb5bba34171864909e4dfec1ea4e26bfb7", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!689 = !DILocation(line: 0, scope: !690)
!690 = distinct !DILexicalBlock(scope: !688, file: !4)
!691 = distinct !DISubprogram(name: "Task_err_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591", linkageName: "Task_err_72f11ea62bc2627ca7ca9959232e519a82934c5e521930f57f3646c32591", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!692 = !DILocation(line: 0, scope: !693)
!693 = distinct !DILexicalBlock(scope: !691, file: !4)
!694 = distinct !DISubprogram(name: "Inspect_custom_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811", linkageName: "Inspect_custom_bfa1d47a221bdaf089999196bed323c433d1a6b8c78ec612e6fa7b3e3d811", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!695 = !DILocation(line: 0, scope: !696)
!696 = distinct !DILexicalBlock(scope: !694, file: !4)
!697 = distinct !DISubprogram(name: "Inspect_apply_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd", linkageName: "Inspect_apply_95dbc324453309f26dee9436b39568cc8bcbe17ef409e9273c4edb58653fd", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!698 = !DILocation(line: 0, scope: !699)
!699 = distinct !DILexicalBlock(scope: !697, file: !4)
!700 = distinct !DISubprogram(name: "List_len_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac", linkageName: "List_len_35bfe7dc6dba25ddadede12999f2a34775468912610779bf675f9c2d81ecac", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!701 = !DILocation(line: 0, scope: !702)
!702 = distinct !DILexicalBlock(scope: !700, file: !4)
!703 = distinct !DISubprogram(name: "Stdout_line_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9", linkageName: "Stdout_line_c852b6d75d2364d70d094699f8a9cda9129d5310ed82ea45564f47a9", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!704 = !DILocation(line: 0, scope: !705)
!705 = distinct !DILexicalBlock(scope: !703, file: !4)
!706 = distinct !DISubprogram(name: "Inspect_208_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21", linkageName: "Inspect_208_36ded37b63679dfb9096703c22eba74b3449a854bc97ac179ba6ffbbbaa21", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!707 = !DILocation(line: 0, scope: !708)
!708 = distinct !DILexicalBlock(scope: !706, file: !4)
!709 = distinct !DISubprogram(name: "Inspect_210_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6", linkageName: "Inspect_210_139c9542137b10e977a775e441e04012cc6d2c98579f3cdeb5fb42ef98df6d6", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!710 = !DILocation(line: 0, scope: !711)
!711 = distinct !DILexicalBlock(scope: !709, file: !4)
!712 = distinct !DISubprogram(name: "Stderr_line_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50", linkageName: "Stderr_line_1484a21b4257566f7c1b3505e4f6c430eb1121cbfb946b32fb115b90b1ef50", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!713 = !DILocation(line: 0, scope: !714)
!714 = distinct !DILexicalBlock(scope: !712, file: !4)
!715 = distinct !DISubprogram(name: "Dict_defaultMaxLoadFactor_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94", linkageName: "Dict_defaultMaxLoadFactor_7a93171d29c34145ace0bed7f158bc6f747d259f21a8119f90767f874eb48b94", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!716 = !DILocation(line: 0, scope: !717)
!717 = distinct !DILexicalBlock(scope: !715, file: !4)
!718 = distinct !DISubprogram(name: "Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565", linkageName: "Task_err_e9513e158dcaac7638af486f43c35319478d2d67151e75c6ec6cccb6565", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!719 = !DILocation(line: 0, scope: !720)
!720 = distinct !DILexicalBlock(scope: !718, file: !4)
!721 = distinct !DISubprogram(name: "Inspect_toDbgStr_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8", linkageName: "Inspect_toDbgStr_9d7544bbc8507265e131f9b42f567d6c54e799c62356103470ba3daf5673a8", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!722 = !DILocation(line: 0, scope: !723)
!723 = distinct !DILexicalBlock(scope: !721, file: !4)
!724 = distinct !DISubprogram(name: "List_len_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df", linkageName: "List_len_4e123451c288c52798d3df0fc84811d2d957f324242982575c70dfd6d338df", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!725 = !DILocation(line: 0, scope: !726)
!726 = distinct !DILexicalBlock(scope: !724, file: !4)
!727 = distinct !DISubprogram(name: "List_isEmpty_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b", linkageName: "List_isEmpty_99e2ebbd98e8a2a4c7ed9bd71d205d9f7b5d7e7a9ddb68dab65f2ad1c2198b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!728 = !DILocation(line: 0, scope: !729)
!729 = distinct !DILexicalBlock(scope: !727, file: !4)
!730 = distinct !DISubprogram(name: "Num_subWrap_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d", linkageName: "Num_subWrap_edaf1bd3d1c2ffcc44df55829c02f262426de2ffbea9be2cdf075ec12c528d", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!731 = !DILocation(line: 0, scope: !732)
!732 = distinct !DILexicalBlock(scope: !730, file: !4)
!733 = distinct !DISubprogram(name: "Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47", linkageName: "Bool_structuralEq_cabb163ea8b383114bab450f2ea4bdf6f97d5dc22e57b593db81e3bce47", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!734 = !DILocation(line: 0, scope: !735)
!735 = distinct !DILexicalBlock(scope: !733, file: !4)
!736 = distinct !DISubprogram(name: "Inspect_272_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133", linkageName: "Inspect_272_4fe2c0cee861629d2ef04c3f725dba5813b563598f88e6fe57cefd4dd1a133", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!737 = !DILocation(line: 0, scope: !738)
!738 = distinct !DILexicalBlock(scope: !736, file: !4)
!739 = distinct !DISubprogram(name: "Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5", linkageName: "Inspect_custom_1149386876d826e56f26fd066413b9c565aa3dea67161e512a9ba24db887d5", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!740 = !DILocation(line: 0, scope: !741)
!741 = distinct !DILexicalBlock(scope: !739, file: !4)
!742 = distinct !DISubprogram(name: "Inspect_custom_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0", linkageName: "Inspect_custom_926c4e1deae44cb32fa91b0fc2f966fdf98af98ee562517f2d5df6cc1b8bf0", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!743 = !DILocation(line: 0, scope: !744)
!744 = distinct !DILexicalBlock(scope: !742, file: !4)
!745 = distinct !DISubprogram(name: "List_walkHelp_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772", linkageName: "List_walkHelp_99aa979e4a9cadd6dbe48ea878ec84acb7696eb93470c375f6893f1da46c3772", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!746 = !DILocation(line: 0, scope: !747)
!747 = distinct !DILexicalBlock(scope: !745, file: !4)
!748 = distinct !DISubprogram(name: "Task_mapErr_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1", linkageName: "Task_mapErr_b7a3f2a8f8a550a8b7d9f583e11fe2d9be1c46afd270ccbd14dc29ab1919b1", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!749 = !DILocation(line: 0, scope: !750)
!750 = distinct !DILexicalBlock(scope: !748, file: !4)
!751 = distinct !DISubprogram(name: "#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b", linkageName: "#Derived_toInspector_[BrokenPipe 0,Interrupted 0,Other 1,OutOfMemory 0,Unsupported 0,WouldBlock 0,WriteZero 0]_f03bf86f79d121cbfd774dec4a65912e99f5f17c33852bbc45e81916e62b53b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!752 = !DILocation(line: 0, scope: !753)
!753 = distinct !DILexicalBlock(scope: !751, file: !4)
!754 = distinct !DISubprogram(name: "Inspect_custom_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f", linkageName: "Inspect_custom_f0adb8f180253d489b50ac5199522556362f583929ee5e65c919bd9ed2bc82f", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!755 = !DILocation(line: 0, scope: !756)
!756 = distinct !DILexicalBlock(scope: !754, file: !4)
!757 = distinct !DISubprogram(name: "List_isEmpty_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e", linkageName: "List_isEmpty_76e6e4fef22a778f22804a4a55d5f106b42fb9eadb9eb1f662982e2379174e", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!758 = !DILocation(line: 0, scope: !759)
!759 = distinct !DILexicalBlock(scope: !757, file: !4)
!760 = distinct !DISubprogram(name: "Num_toStr_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2", linkageName: "Num_toStr_7f7e162ee4345c12acb2c8dddfd129c8c9ef562ecb31841cfff13d4789ffc2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!761 = !DILocation(line: 0, scope: !762)
!762 = distinct !DILexicalBlock(scope: !760, file: !4)
!763 = distinct !DISubprogram(name: "List_sortWith_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d", linkageName: "List_sortWith_91183c4be76c8c6e9a1aca423ca6b7bdfddc155d7aac337b8db73395e0e64d", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!764 = !DILocation(line: 0, scope: !765)
!765 = distinct !DILexicalBlock(scope: !763, file: !4)
!766 = !{!767}
!767 = distinct !{!767, !768, !"roc_builtins.list.sort_with: argument 0"}
!768 = distinct !{!768, !"roc_builtins.list.sort_with"}
!769 = !{!770}
!770 = distinct !{!770, !771, !"list.RocList.makeUnique: argument 0"}
!771 = distinct !{!771, !"list.RocList.makeUnique"}
!772 = !{!770, !767}
!773 = !{!774, !770, !767}
!774 = distinct !{!774, !775, !"list.RocList.allocate: argument 0"}
!775 = distinct !{!775, !"list.RocList.allocate"}
!776 = distinct !DISubprogram(name: "Test_calculateMiddleTotal_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83", linkageName: "Test_calculateMiddleTotal_b5dcd15815911a96b9d7e883b1723ec1e9f2a35835ca79db2284140ebd0aa83", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!777 = !DILocation(line: 0, scope: !778)
!778 = distinct !DILexicalBlock(scope: !776, file: !4)
!779 = distinct !DISubprogram(name: "_11_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753", linkageName: "_11_2c7d993eadf275d994a1f98b824972fece3cfca6b6ac52dd7bb717e1f5753", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!780 = !DILocation(line: 0, scope: !781)
!781 = distinct !DILexicalBlock(scope: !779, file: !4)
!782 = distinct !DISubprogram(name: "Inspect_dbgStr_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674", linkageName: "Inspect_dbgStr_e3211b24ebda6e959f98c8dfabbb8bde232b75ae94930caa03d2bdb8e7b5674", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!783 = !DILocation(line: 0, scope: !784)
!784 = distinct !DILexicalBlock(scope: !782, file: !4)
!785 = distinct !DISubprogram(name: "Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d", linkageName: "Inspect_dbgTag_fb7917afe92ebaa35d275cfd557c2b25a5a46452e484a4eb8cac5175c61606d", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!786 = !DILocation(line: 0, scope: !787)
!787 = distinct !DILexicalBlock(scope: !785, file: !4)
!788 = distinct !DISubprogram(name: "List_getUnsafe_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a", linkageName: "List_getUnsafe_2cc6e6d3c5a48a76ea218c439d44b6318e7bd267419a22dcb25b258a2c06a", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!789 = !DILocation(line: 0, scope: !790)
!790 = distinct !DILexicalBlock(scope: !788, file: !4)
!791 = distinct !DISubprogram(name: "Inspect_250_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081", linkageName: "Inspect_250_92df2e9c67226884f739cd53c0493c2aabaabd406877a3b72a3e676dc54e081", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!792 = !DILocation(line: 0, scope: !793)
!793 = distinct !DILexicalBlock(scope: !791, file: !4)
!794 = distinct !DISubprogram(name: "Task_53_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0", linkageName: "Task_53_1dc6f9836252db90e110ad1b5e28c952e1292787deeab71a2a18c14f1d18ec0", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!795 = !DILocation(line: 0, scope: !796)
!796 = distinct !DILexicalBlock(scope: !794, file: !4)
!797 = distinct !DISubprogram(name: "Set_isEmpty_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3", linkageName: "Set_isEmpty_127cb22736133e34b265d61ea1d591a8834a13a1d4a2cb161a40b74f7c37b3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!798 = !DILocation(line: 0, scope: !799)
!799 = distinct !DILexicalBlock(scope: !797, file: !4)
!800 = distinct !DISubprogram(name: "_3_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613", linkageName: "_3_12f97a97f61aca488b75d4cbbdb83020191eefe4f33d263875d76e4b447613", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!801 = !DILocation(line: 0, scope: !802)
!802 = distinct !DILexicalBlock(scope: !800, file: !4)
!803 = distinct !DISubprogram(name: "Set_empty_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098", linkageName: "Set_empty_4c26d916fc42dd8d2a9bd5abfc2993ea3741d5b5db9aa72687bec6b6e3098", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!804 = !DILocation(line: 0, scope: !805)
!805 = distinct !DILexicalBlock(scope: !803, file: !4)
!806 = distinct !DISubprogram(name: "Dict_isEmpty_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70", linkageName: "Dict_isEmpty_eabc27640eff330d625cb2f6435f5dccaec45dd590ad64015fdca105b70", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!807 = !DILocation(line: 0, scope: !808)
!808 = distinct !DILexicalBlock(scope: !806, file: !4)
!809 = distinct !DISubprogram(name: "Task_await_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7", linkageName: "Task_await_9ddbc9a5a6ab79818cf720ec32ba1aeb5838e37cd919c2ff6b897d7d866d5c7", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!810 = !DILocation(line: 0, scope: !811)
!811 = distinct !DILexicalBlock(scope: !809, file: !4)
!812 = distinct !DISubprogram(name: "Inspect_dbgTag_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189", linkageName: "Inspect_dbgTag_d1a1e4356bd9fe6c31754def4c60a14042ade1c6c101618179cfd5d1c73189", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!813 = !DILocation(line: 0, scope: !814)
!814 = distinct !DILexicalBlock(scope: !812, file: !4)
!815 = distinct !DISubprogram(name: "Inspect_apply_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31", linkageName: "Inspect_apply_4afec3b1b615e34b46f852dc4576722a03d82d96cc27deb38d7b350ecaf31", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!816 = !DILocation(line: 0, scope: !817)
!817 = distinct !DILexicalBlock(scope: !815, file: !4)
!818 = distinct !DISubprogram(name: "Num_toStr_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd", linkageName: "Num_toStr_f273102d33b910ab8b1eda6e483bb587ec34372c3562cd9bfb68bcf889ba9cd", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!819 = !DILocation(line: 0, scope: !820)
!820 = distinct !DILexicalBlock(scope: !818, file: !4)
!821 = distinct !DISubprogram(name: "Num_isLt_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11", linkageName: "Num_isLt_669c1355a3e727bb53dd458f2e96e48571aa45dfabcfb4b7de1689484f11", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!822 = !DILocation(line: 0, scope: !823)
!823 = distinct !DILexicalBlock(scope: !821, file: !4)
!824 = distinct !DISubprogram(name: "Inspect_apply_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41", linkageName: "Inspect_apply_8acb95ddb9a746c2bf4dc0f4f96ce3b3e1f1e4f2559e7641b193db1f161d1c41", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!825 = !DILocation(line: 0, scope: !826)
!826 = distinct !DILexicalBlock(scope: !824, file: !4)
!827 = distinct !DISubprogram(name: "Task_38_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2", linkageName: "Task_38_837964ef27185f97a31536069e8f60f59d43cf26aef4e69eeafaab204a51f2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!828 = !DILocation(line: 0, scope: !829)
!829 = distinct !DILexicalBlock(scope: !827, file: !4)
!830 = distinct !DISubprogram(name: "List_len_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a", linkageName: "List_len_dc3f621de1221c7c53a19e877c377561ede91cdd88b1a687d310a39785a", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!831 = !DILocation(line: 0, scope: !832)
!832 = distinct !DILexicalBlock(scope: !830, file: !4)
!833 = distinct !DISubprogram(name: "List_len_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b", linkageName: "List_len_68697e959be5e5da06cc73b6f998e193cbf2d9b22efd0355a3d37129951b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!834 = !DILocation(line: 0, scope: !835)
!835 = distinct !DILexicalBlock(scope: !833, file: !4)
!836 = distinct !DISubprogram(name: "Task_46_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00", linkageName: "Task_46_56b1edb1daf8df7ae4fb1a2df75794dcef5a427f85ac1fa18ff4bea1e8e00", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!837 = !DILocation(line: 0, scope: !838)
!838 = distinct !DILexicalBlock(scope: !836, file: !4)
!839 = distinct !DISubprogram(name: "Dict_empty_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b", linkageName: "Dict_empty_392aebc0773ca1163ead8eb210e2c2aabca4fe4ded9f2b122a7dab30d082d98b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!840 = !DILocation(line: 0, scope: !841)
!841 = distinct !DILexicalBlock(scope: !839, file: !4)
!842 = distinct !DISubprogram(name: "List_isEmpty_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031", linkageName: "List_isEmpty_54b3c6d264e7c557f2fe74ef29431163e9a30a2e4aca38b681d4b9ee62de031", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!843 = !DILocation(line: 0, scope: !844)
!844 = distinct !DILexicalBlock(scope: !842, file: !4)
!845 = distinct !DISubprogram(name: "Inspect_213_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4", linkageName: "Inspect_213_bd5db9a62133a57f3c3971868413d37dfa646aa8a2764e7763fd4ba5b0b0d4", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!846 = !DILocation(line: 0, scope: !847)
!847 = distinct !DILexicalBlock(scope: !845, file: !4)
!848 = distinct !DISubprogram(name: "Inspect_204_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b", linkageName: "Inspect_204_50a9b514f5bf5c5ff0dff77dffab9b9f2c8b7084581b52c249d53019289d446b", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!849 = !DILocation(line: 0, scope: !850)
!850 = distinct !DILexicalBlock(scope: !848, file: !4)
!851 = distinct !DISubprogram(name: "#Derived_toInspector_[Exit 2,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd", linkageName: "#Derived_toInspector_[Exit 2,StdoutErr 1]_ec2bd03bf86b935fa34d71ad7ebb49f1f10f87d343e521511d8f9e6625620cd", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!852 = !DILocation(line: 0, scope: !853)
!853 = distinct !DILexicalBlock(scope: !851, file: !4)
!854 = distinct !DISubprogram(name: "Dict_initialShifts_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9", linkageName: "Dict_initialShifts_839d816e30d259b7a113479095a2bf4a37efc9c09ed13ea6ca0fa9b9a5ff9", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!855 = !DILocation(line: 0, scope: !856)
!856 = distinct !DILexicalBlock(scope: !854, file: !4)
!857 = distinct !DISubprogram(name: "#Attr_#dec_1", linkageName: "#Attr_#dec_1", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!858 = !DILocation(line: 0, scope: !859)
!859 = distinct !DILexicalBlock(scope: !857, file: !4)
!860 = distinct !DISubprogram(name: "decrement_refcounted_ptr_8", linkageName: "decrement_refcounted_ptr_8", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!861 = !DILocation(line: 0, scope: !862)
!862 = distinct !DILexicalBlock(scope: !860, file: !4)
!863 = distinct !DISubprogram(name: "#Attr_#dec_2", linkageName: "#Attr_#dec_2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!864 = !DILocation(line: 0, scope: !865)
!865 = distinct !DILexicalBlock(scope: !863, file: !4)
!866 = !DILocation(line: 0, scope: !867, inlinedAt: !869)
!867 = distinct !DILexicalBlock(scope: !868, file: !4)
!868 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_1_dec", linkageName: "#Attr_#generic_rc_by_ref_1_dec", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!869 = distinct !DILocation(line: 0, scope: !865)
!870 = distinct !DISubprogram(name: "#Attr_#inc_2", linkageName: "#Attr_#inc_2", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!871 = !DILocation(line: 0, scope: !872)
!872 = distinct !DILexicalBlock(scope: !870, file: !4)
!873 = distinct !DISubprogram(name: "#Attr_#inc_1", linkageName: "#Attr_#inc_1", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!874 = !DILocation(line: 0, scope: !875)
!875 = distinct !DILexicalBlock(scope: !873, file: !4)
!876 = distinct !DISubprogram(name: "#Attr_#dec_3", linkageName: "#Attr_#dec_3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!877 = !DILocation(line: 0, scope: !878)
!878 = distinct !DILexicalBlock(scope: !876, file: !4)
!879 = distinct !DISubprogram(name: "#Attr_#dec_4", linkageName: "#Attr_#dec_4", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!880 = !DILocation(line: 0, scope: !881)
!881 = distinct !DILexicalBlock(scope: !879, file: !4)
!882 = !DILocation(line: 0, scope: !883, inlinedAt: !885)
!883 = distinct !DILexicalBlock(scope: !884, file: !4)
!884 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_2_dec", linkageName: "#Attr_#generic_rc_by_ref_2_dec", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!885 = distinct !DILocation(line: 0, scope: !881)
!886 = distinct !DISubprogram(name: "#Attr_#dec_5", linkageName: "#Attr_#dec_5", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!887 = !DILocation(line: 0, scope: !888)
!888 = distinct !DILexicalBlock(scope: !886, file: !4)
!889 = distinct !DISubprogram(name: "#Attr_#inc_4", linkageName: "#Attr_#inc_4", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!890 = !DILocation(line: 0, scope: !891)
!891 = distinct !DILexicalBlock(scope: !889, file: !4)
!892 = distinct !DISubprogram(name: "#Attr_#inc_5", linkageName: "#Attr_#inc_5", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!893 = !DILocation(line: 0, scope: !894)
!894 = distinct !DILexicalBlock(scope: !892, file: !4)
!895 = distinct !DISubprogram(name: "#Attr_#inc_3", linkageName: "#Attr_#inc_3", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!896 = !DILocation(line: 0, scope: !897)
!897 = distinct !DILexicalBlock(scope: !895, file: !4)
!898 = distinct !DISubprogram(name: "Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2_compare_wrapper", linkageName: "Test_sorter_ebcdc7d352ecfa1e7d1b4ba0644f3ace5e7298b5a4113365f27eee831460e3a2_compare_wrapper", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!899 = !DILocation(line: 0, scope: !900)
!900 = distinct !DILexicalBlock(scope: !898, file: !4)
!901 = distinct !DISubprogram(name: "#Attr_#generic_rc_by_ref_3_inc_n", linkageName: "#Attr_#generic_rc_by_ref_3_inc_n", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!902 = !DILocation(line: 0, scope: !903)
!903 = distinct !DILexicalBlock(scope: !901, file: !4)
!904 = distinct !DISubprogram(name: "#Attr_#inc_10", linkageName: "#Attr_#inc_10", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!905 = !DILocation(line: 0, scope: !906)
!906 = distinct !DILexicalBlock(scope: !904, file: !4)
!907 = distinct !DISubprogram(name: "#Attr_#inc_11", linkageName: "#Attr_#inc_11", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!908 = !DILocation(line: 0, scope: !909)
!909 = distinct !DILexicalBlock(scope: !907, file: !4)
!910 = distinct !DISubprogram(name: "#Attr_#inc_12", linkageName: "#Attr_#inc_12", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!911 = !DILocation(line: 0, scope: !912)
!912 = distinct !DILexicalBlock(scope: !910, file: !4)
!913 = distinct !DISubprogram(name: "#Attr_#generic_copy_by_ref_1", linkageName: "#Attr_#generic_copy_by_ref_1", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!914 = !DILocation(line: 0, scope: !915)
!915 = distinct !DILexicalBlock(scope: !913, file: !4)
!916 = distinct !DISubprogram(name: "#Attr_#dec_10", linkageName: "#Attr_#dec_10", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!917 = !DILocation(line: 0, scope: !918)
!918 = distinct !DILexicalBlock(scope: !916, file: !4)
!919 = distinct !DISubprogram(name: "#Attr_#dec_11", linkageName: "#Attr_#dec_11", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!920 = !DILocation(line: 0, scope: !921)
!921 = distinct !DILexicalBlock(scope: !919, file: !4)
!922 = distinct !DISubprogram(name: "#Attr_#dec_13", linkageName: "#Attr_#dec_13", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!923 = !DILocation(line: 0, scope: !924)
!924 = distinct !DILexicalBlock(scope: !922, file: !4)
!925 = distinct !DISubprogram(name: "#Attr_#dec_12", linkageName: "#Attr_#dec_12", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!926 = !DILocation(line: 0, scope: !927)
!927 = distinct !DILexicalBlock(scope: !925, file: !4)
!928 = distinct !DISubprogram(name: "#Attr_#dec_14", linkageName: "#Attr_#dec_14", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!929 = !DILocation(line: 0, scope: !930)
!930 = distinct !DILexicalBlock(scope: !928, file: !4)
!931 = distinct !DISubprogram(name: "#Attr_#dec_15", linkageName: "#Attr_#dec_15", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!932 = !DILocation(line: 0, scope: !933)
!933 = distinct !DILexicalBlock(scope: !931, file: !4)
!934 = distinct !DISubprogram(name: "#Attr_#dec_16", linkageName: "#Attr_#dec_16", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!935 = !DILocation(line: 0, scope: !936)
!936 = distinct !DILexicalBlock(scope: !934, file: !4)
!937 = distinct !DISubprogram(name: "#Attr_#dec_17", linkageName: "#Attr_#dec_17", scope: !4, file: !4, type: !538, flags: DIFlagPublic, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3, retainedNodes: !541)
!938 = !DILocation(line: 0, scope: !939)
!939 = distinct !DILexicalBlock(scope: !937, file: !4)
