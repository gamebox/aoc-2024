[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    RecordDestructure(
                        [],
                        [],
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            24,
                        ),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    AppliedTag {
                        tag_name: 'Exit',
                        tag_id: 0,
                        arguments: [
                            (
                                Identifier(
                                    `pl..IdentId(6)`,
                                ),
                                InLayout(STR),
                            ),
                            (
                                Identifier(
                                    `pl..IdentId(5)`,
                                ),
                                InLayout(I32),
                            ),
                        ],
                        layout: NonRecursive(
                            [
                                [
                                    InLayout(STR),
                                    InLayout(I32),
                                ],
                                [
                                    InLayout(
                                        23,
                                    ),
                                ],
                            ],
                        ),
                        union: Union {
                            alternatives: [
                                Ctor {
                                    name: Tag(
                                        'Exit',
                                    ),
                                    tag_id: TagId(
                                        0,
                                    ),
                                    arity: 2,
                                },
                                Ctor {
                                    name: Tag(
                                        'StdoutErr',
                                    ),
                                    tag_id: TagId(
                                        1,
                                    ),
                                    arity: 1,
                                },
                            ],
                            render_as: Tag,
                        },
                    },
                    InLayout(
                        24,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            24,
                        ),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `pl..IdentId(9)`,
                    ),
                    InLayout(
                        24,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            24,
                        ),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        2,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            RecordDestructure(
                                [],
                                [],
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    24,
                                ),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            AppliedTag {
                                tag_name: 'Exit',
                                tag_id: 0,
                                arguments: [
                                    (
                                        Identifier(
                                            `pl..IdentId(6)`,
                                        ),
                                        InLayout(STR),
                                    ),
                                    (
                                        Identifier(
                                            `pl..IdentId(5)`,
                                        ),
                                        InLayout(I32),
                                    ),
                                ],
                                layout: NonRecursive(
                                    [
                                        [
                                            InLayout(STR),
                                            InLayout(I32),
                                        ],
                                        [
                                            InLayout(
                                                23,
                                            ),
                                        ],
                                    ],
                                ),
                                union: Union {
                                    alternatives: [
                                        Ctor {
                                            name: Tag(
                                                'Exit',
                                            ),
                                            tag_id: TagId(
                                                0,
                                            ),
                                            arity: 2,
                                        },
                                        Ctor {
                                            name: Tag(
                                                'StdoutErr',
                                            ),
                                            tag_id: TagId(
                                                1,
                                            ),
                                            arity: 1,
                                        },
                                    ],
                                    render_as: Tag,
                                },
                            },
                            InLayout(
                                24,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    24,
                                ),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `pl..IdentId(9)`,
                            ),
                            InLayout(
                                24,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    24,
                                ),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                AppliedTag {
                    tag_name: 'Exit',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `pl..IdentId(6)`,
                            ),
                            InLayout(STR),
                        ),
                        (
                            Identifier(
                                `pl..IdentId(5)`,
                            ),
                            InLayout(I32),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                                InLayout(I32),
                            ],
                            [
                                InLayout(
                                    23,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Exit',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 2,
                            },
                            Ctor {
                                name: Tag(
                                    'StdoutErr',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `pl..IdentId(9)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `pl..IdentId(6)`,
                ),
            ),
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `pl..IdentId(5)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `pl..IdentId(9)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `pl..IdentId(9)`,
                ),
            ),
        ],
    },
]
[
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(7)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        83,
                        @1294-1296 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    1,
                                ),
                            ),
                            82,
                        ),
                        84,
                        85,
                        86,
                    ),
                    [
                        (
                            80,
                            @1292-1293 Var(
                                `pl.Stderr.IdentId(7)`,
                                79,
                            ),
                        ),
                        (
                            81,
                            @1297-1320 Str(
                                "ErrorKind::BrokenPipe",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 2,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(7)`,
        ),
        0,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stderr.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(10)`,
        ),
        1,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stderr.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(13)`,
        ),
        2,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stderr.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(16)`,
        ),
        3,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(19)`,
        ),
        4,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        Identifier(
            `pl.Stderr.IdentId(22)`,
        ),
        5,
    ),
    (
        NoGuard,
        Identifier(
            `pl.Stderr.IdentId(25)`,
        ),
        6,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(7)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        83,
                        @1294-1296 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    1,
                                ),
                            ),
                            82,
                        ),
                        84,
                        85,
                        86,
                    ),
                    [
                        (
                            80,
                            @1292-1293 Var(
                                `pl.Stderr.IdentId(7)`,
                                79,
                            ),
                        ),
                        (
                            81,
                            @1297-1320 Str(
                                "ErrorKind::BrokenPipe",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 2,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(7)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stderr.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(10)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stderr.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stderr.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stderr.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(10)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stderr.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stderr.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stderr.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stderr.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stderr.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stderr.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stderr.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stderr.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stderr.IdentId(25)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `#UserApp.pagesAfter`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    EnumLiteral {
                        tag_id: 0,
                        tag_name: 'Missing',
                        union: Union {
                            alternatives: [
                                Ctor {
                                    name: Tag(
                                        'Missing',
                                    ),
                                    tag_id: TagId(
                                        0,
                                    ),
                                    arity: 0,
                                },
                            ],
                            render_as: Tag,
                        },
                    },
                    InLayout(
                        175,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `#UserApp.pagesAfter`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            EnumLiteral {
                                tag_id: 0,
                                tag_name: 'Missing',
                                union: Union {
                                    alternatives: [
                                        Ctor {
                                            name: Tag(
                                                'Missing',
                                            ),
                                            tag_id: TagId(
                                                0,
                                            ),
                                            arity: 0,
                                        },
                                    ],
                                    render_as: Tag,
                                },
                            },
                            InLayout(
                                175,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `#UserApp.pagesAfter`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                EnumLiteral {
                    tag_id: 0,
                    tag_name: 'Missing',
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Missing',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        TupleDestructure(
            [
                TupleDestruct {
                    index: 0,
                    variable: 311,
                    layout: InLayout(U64),
                    pat: Identifier(
                        `#UserApp.before`,
                    ),
                },
                TupleDestruct {
                    index: 1,
                    variable: 313,
                    layout: InLayout(U64),
                    pat: Identifier(
                        `#UserApp.after`,
                    ),
                },
            ],
            [
                InLayout(U64),
                InLayout(U64),
            ],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                TupleDestructure(
                    [
                        TupleDestruct {
                            index: 0,
                            variable: 311,
                            layout: InLayout(U64),
                            pat: Identifier(
                                `#UserApp.before`,
                            ),
                        },
                        TupleDestruct {
                            index: 1,
                            variable: 313,
                            layout: InLayout(U64),
                            pat: Identifier(
                                `#UserApp.after`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `#UserApp.before`,
                ),
            ),
            (
                [
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `#UserApp.after`,
                ),
            ),
        ],
    },
]
[
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(7)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        83,
                        @1294-1296 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    1,
                                ),
                            ),
                            82,
                        ),
                        84,
                        85,
                        86,
                    ),
                    [
                        (
                            80,
                            @1292-1293 Var(
                                `pl.Stdout.IdentId(7)`,
                                79,
                            ),
                        ),
                        (
                            81,
                            @1297-1320 Str(
                                "ErrorKind::BrokenPipe",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 2,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(7)`,
        ),
        0,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stdout.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(10)`,
        ),
        1,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stdout.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(13)`,
        ),
        2,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stdout.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(16)`,
        ),
        3,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(19)`,
        ),
        4,
    ),
    (
        Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        Identifier(
            `pl.Stdout.IdentId(22)`,
        ),
        5,
    ),
    (
        NoGuard,
        Identifier(
            `pl.Stdout.IdentId(25)`,
        ),
        6,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(7)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        83,
                        @1294-1296 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    1,
                                ),
                            ),
                            82,
                        ),
                        84,
                        85,
                        86,
                    ),
                    [
                        (
                            80,
                            @1292-1293 Var(
                                `pl.Stdout.IdentId(7)`,
                                79,
                            ),
                        ),
                        (
                            81,
                            @1297-1320 Str(
                                "ErrorKind::BrokenPipe",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 2,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(7)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stdout.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(10)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stdout.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stdout.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(10)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        97,
                        @1360-1362 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    2,
                                ),
                            ),
                            96,
                        ),
                        98,
                        99,
                        100,
                    ),
                    [
                        (
                            94,
                            @1358-1359 Var(
                                `pl.Stdout.IdentId(10)`,
                                93,
                            ),
                        ),
                        (
                            95,
                            @1363-1386 Str(
                                "ErrorKind::WouldBlock",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 3,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(10)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stdout.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stdout.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 2,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(13)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        111,
                        @1426-1428 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    3,
                                ),
                            ),
                            110,
                        ),
                        112,
                        113,
                        114,
                    ),
                    [
                        (
                            108,
                            @1424-1425 Var(
                                `pl.Stdout.IdentId(13)`,
                                107,
                            ),
                        ),
                        (
                            109,
                            @1429-1451 Str(
                                "ErrorKind::WriteZero",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 4,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(13)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stdout.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 3,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(16)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        125,
                        @1490-1492 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    4,
                                ),
                            ),
                            124,
                        ),
                        126,
                        127,
                        128,
                    ),
                    [
                        (
                            122,
                            @1488-1489 Var(
                                `pl.Stdout.IdentId(16)`,
                                121,
                            ),
                        ),
                        (
                            123,
                            @1493-1517 Str(
                                "ErrorKind::Unsupported",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 5,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(16)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 4,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(19)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        139,
                        @1558-1560 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    5,
                                ),
                            ),
                            138,
                        ),
                        140,
                        141,
                        142,
                    ),
                    [
                        (
                            136,
                            @1556-1557 Var(
                                `pl.Stdout.IdentId(19)`,
                                135,
                            ),
                        ),
                        (
                            137,
                            @1561-1585 Str(
                                "ErrorKind::Interrupted",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 6,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(19)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 5,
        guard: Guard {
            pattern: Identifier(
                `pl.Stdout.IdentId(22)`,
            ),
            stmt_spec: GuardStmtSpec {
                guard_expr: Call(
                    (
                        153,
                        @1626-1628 AbilityMember(
                            `Bool.isEq`,
                            Some(
                                SpecializationId(
                                    6,
                                ),
                            ),
                            152,
                        ),
                        154,
                        155,
                        156,
                    ),
                    [
                        (
                            150,
                            @1624-1625 Var(
                                `pl.Stdout.IdentId(22)`,
                                149,
                            ),
                        ),
                        (
                            151,
                            @1629-1653 Str(
                                "ErrorKind::OutOfMemory",
                            ),
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
                identity: CallSpecId {
                    id: 7,
                },
            },
        },
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(22)`,
                ),
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                Identifier(
                    `pl.Stdout.IdentId(25)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(40)`,
                ),
                InLayout(
                    31,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(40)`,
                        ),
                        InLayout(
                            31,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(40)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(47)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(I32),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(49)`,
                    ),
                    InLayout(I32),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(I32),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(47)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(I32),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(49)`,
                            ),
                            InLayout(I32),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(I32),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Task.IdentId(47)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Task.IdentId(49)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(44)`,
                ),
                InLayout(
                    42,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(44)`,
                        ),
                        InLayout(
                            42,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(44)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(44)`,
                ),
                InLayout(
                    42,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(44)`,
                        ),
                        InLayout(
                            42,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(44)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(54)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            23,
                        ),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(56)`,
                    ),
                    InLayout(
                        23,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            23,
                        ),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(54)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    23,
                                ),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(56)`,
                            ),
                            InLayout(
                                23,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    23,
                                ),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Task.IdentId(54)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Task.IdentId(56)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(51)`,
                ),
                InLayout(
                    37,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(51)`,
                        ),
                        InLayout(
                            37,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(51)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(51)`,
                ),
                InLayout(
                    37,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(51)`,
                        ),
                        InLayout(
                            37,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(51)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(68)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(70)`,
                    ),
                    InLayout(STR),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(68)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(70)`,
                            ),
                            InLayout(STR),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Task.IdentId(68)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Task.IdentId(70)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.IdentId(33)`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 23089,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 4933,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(449)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
                InLayout(
                    258,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.IdentId(33)`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'initializedSeed',
                                    variable: 23089,
                                    layout: InLayout(U64),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'state',
                                    variable: 4933,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(449)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(U64),
                                InLayout(U64),
                            ],
                        ),
                        InLayout(
                            258,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 23089,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 4933,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(449)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(65)`,
                ),
                InLayout(
                    33,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(65)`,
                        ),
                        InLayout(
                            33,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(65)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(65)`,
                ),
                InLayout(
                    33,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(65)`,
                        ),
                        InLayout(
                            33,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(65)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(68)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `Task.IdentId(70)`,
                    ),
                    InLayout(STR),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(68)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `Task.IdentId(70)`,
                            ),
                            InLayout(STR),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Task.IdentId(68)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Task.IdentId(70)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Task.Task`,
            argument: (
                Identifier(
                    `Task.IdentId(65)`,
                ),
                InLayout(
                    27,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Task.Task`,
                    argument: (
                        Identifier(
                            `Task.IdentId(65)`,
                        ),
                        InLayout(
                            27,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Task.IdentId(65)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.IdentId(33)`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 4792,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(438)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 4793,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(439)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
                InLayout(
                    258,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.IdentId(33)`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'initializedSeed',
                                    variable: 4792,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(438)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'state',
                                    variable: 4793,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(439)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(U64),
                                InLayout(U64),
                            ],
                        ),
                        InLayout(
                            258,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 4792,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(438)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 4793,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(439)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [
                RecordDestruct {
                    label: 'a',
                    variable: 4801,
                    layout: InLayout(U64),
                    typ: Required(
                        `Dict.IdentId(440)`,
                    ),
                },
                RecordDestruct {
                    label: 'b',
                    variable: 4802,
                    layout: InLayout(U64),
                    typ: Required(
                        `Dict.IdentId(441)`,
                    ),
                },
                RecordDestruct {
                    label: 'length',
                    variable: 4804,
                    layout: InLayout(U64),
                    typ: Required(
                        `Dict.IdentId(443)`,
                    ),
                },
                RecordDestruct {
                    label: 'seed',
                    variable: 4803,
                    layout: InLayout(U64),
                    typ: Required(
                        `Dict.IdentId(442)`,
                    ),
                },
            ],
            [
                InLayout(U64),
                InLayout(U64),
                InLayout(U64),
                InLayout(U64),
            ],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'a',
                            variable: 4801,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(440)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'b',
                            variable: 4802,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(441)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'length',
                            variable: 4804,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(443)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'seed',
                            variable: 4803,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(442)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.IdentId(33)`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 5206,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(468)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 5207,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(469)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
                InLayout(
                    258,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.IdentId(33)`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'initializedSeed',
                                    variable: 5206,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(468)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'state',
                                    variable: 5207,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(469)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(U64),
                                InLayout(U64),
                            ],
                        ),
                        InLayout(
                            258,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'initializedSeed',
                            variable: 5206,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(468)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'state',
                            variable: 5207,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(469)`,
                            ),
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(U64),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'PseudoRandSeed',
            tag_id: 0,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'PseudoRandSeed',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WithSeed',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'WithSeed',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Dict.IdentId(437)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'PseudoRandSeed',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WithSeed',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'PseudoRandSeed',
                    tag_id: 0,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'PseudoRandSeed',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WithSeed',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'WithSeed',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Dict.IdentId(437)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'PseudoRandSeed',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WithSeed',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Dict.IdentId(437)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 2930,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(318)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 2931,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(319)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 13705,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 13709,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 2932,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(320)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 2930,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(318)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 2931,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(319)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 13705,
                                    layout: InLayout(U64),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 13709,
                                    layout: InLayout(F32),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 2932,
                                    layout: InLayout(U8),
                                    typ: Required(
                                        `Dict.IdentId(320)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 2930,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(318)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 2931,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(319)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 13705,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 13709,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 2932,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(320)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 12458,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 698,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(163)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 12464,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 12469,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 12459,
                            layout: InLayout(U8),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 12458,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 698,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(163)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 12464,
                                    layout: InLayout(U64),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 12469,
                                    layout: InLayout(F32),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 12459,
                                    layout: InLayout(U8),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 12458,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 698,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(163)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 12464,
                            layout: InLayout(U64),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 12469,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 12459,
                            layout: InLayout(U8),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 3530,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(357)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 3532,
                            layout: InLayout(
                                80,
                            ),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(359)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 3534,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(360)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 3535,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(361)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 3536,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(362)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 3530,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Guard(
                                        Identifier(
                                            `Dict.IdentId(357)`,
                                        ),
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 3532,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Guard(
                                        Identifier(
                                            `Dict.IdentId(359)`,
                                        ),
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 3534,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(360)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 3535,
                                    layout: InLayout(F32),
                                    typ: Required(
                                        `Dict.IdentId(361)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 3536,
                                    layout: InLayout(U8),
                                    typ: Required(
                                        `Dict.IdentId(362)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 3530,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(357)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 3532,
                            layout: InLayout(
                                80,
                            ),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(359)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 3534,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(360)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 3535,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(361)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 3536,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(362)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Dict.IdentId(357)`,
                ),
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Dict.IdentId(359)`,
                ),
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Dict.IdentId(276)`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    EnumLiteral {
                        tag_id: 0,
                        tag_name: 'Missing',
                        union: Union {
                            alternatives: [
                                Ctor {
                                    name: Tag(
                                        'Missing',
                                    ),
                                    tag_id: TagId(
                                        0,
                                    ),
                                    arity: 0,
                                },
                            ],
                            render_as: Tag,
                        },
                    },
                    InLayout(
                        175,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Dict.IdentId(276)`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            EnumLiteral {
                                tag_id: 0,
                                tag_name: 'Missing',
                                union: Union {
                                    alternatives: [
                                        Ctor {
                                            name: Tag(
                                                'Missing',
                                            ),
                                            tag_id: TagId(
                                                0,
                                            ),
                                            arity: 0,
                                        },
                                    ],
                                    render_as: Tag,
                                },
                            },
                            InLayout(
                                175,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Dict.IdentId(276)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                EnumLiteral {
                    tag_id: 0,
                    tag_name: 'Missing',
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Missing',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        TupleDestructure(
            [
                TupleDestruct {
                    index: 0,
                    variable: 4295,
                    layout: InLayout(U64),
                    pat: Identifier(
                        `Dict.IdentId(408)`,
                    ),
                },
                TupleDestruct {
                    index: 1,
                    variable: 4297,
                    layout: InLayout(
                        78,
                    ),
                    pat: Underscore,
                },
            ],
            [
                InLayout(U64),
                InLayout(
                    78,
                ),
            ],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                TupleDestructure(
                    [
                        TupleDestruct {
                            index: 0,
                            variable: 4295,
                            layout: InLayout(U64),
                            pat: Identifier(
                                `Dict.IdentId(408)`,
                            ),
                        },
                        TupleDestruct {
                            index: 1,
                            variable: 4297,
                            layout: InLayout(
                                78,
                            ),
                            pat: Underscore,
                        },
                    ],
                    [
                        InLayout(U64),
                        InLayout(
                            78,
                        ),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Dict.IdentId(408)`,
                ),
            ),
            (
                [
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 16020,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 3929,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(384)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 3930,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(385)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 3931,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(386)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 3932,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(387)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 16020,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 3929,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(384)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 3930,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(385)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 3931,
                                    layout: InLayout(F32),
                                    typ: Required(
                                        `Dict.IdentId(386)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 3932,
                                    layout: InLayout(U8),
                                    typ: Required(
                                        `Dict.IdentId(387)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 16020,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 3929,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(384)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 3930,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(385)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 3931,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(386)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 3932,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(387)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 15619,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 15631,
                            layout: InLayout(
                                80,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 596,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(155)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 15627,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 15620,
                            layout: InLayout(U8),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 15619,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 15631,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 596,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(155)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 15627,
                                    layout: InLayout(F32),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 15620,
                                    layout: InLayout(U8),
                                    typ: Guard(
                                        Underscore,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 15619,
                            layout: InLayout(
                                77,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 15631,
                            layout: InLayout(
                                80,
                            ),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 596,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(155)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 15627,
                            layout: InLayout(F32),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 15620,
                            layout: InLayout(U8),
                            typ: Guard(
                                Underscore,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Dict.IdentId(281)`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    EnumLiteral {
                        tag_id: 0,
                        tag_name: 'Missing',
                        union: Union {
                            alternatives: [
                                Ctor {
                                    name: Tag(
                                        'Missing',
                                    ),
                                    tag_id: TagId(
                                        0,
                                    ),
                                    arity: 0,
                                },
                            ],
                            render_as: Tag,
                        },
                    },
                    InLayout(
                        175,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            175,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Dict.IdentId(281)`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            EnumLiteral {
                                tag_id: 0,
                                tag_name: 'Missing',
                                union: Union {
                                    alternatives: [
                                        Ctor {
                                            name: Tag(
                                                'Missing',
                                            ),
                                            tag_id: TagId(
                                                0,
                                            ),
                                            arity: 0,
                                        },
                                    ],
                                    render_as: Tag,
                                },
                            },
                            InLayout(
                                175,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    175,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Dict.IdentId(281)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                EnumLiteral {
                    tag_id: 0,
                    tag_name: 'Missing',
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Missing',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Dict.IdentId(274)`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    EnumLiteral {
                        tag_id: 0,
                        tag_name: 'KeyNotFound',
                        union: Union {
                            alternatives: [
                                Ctor {
                                    name: Tag(
                                        'KeyNotFound',
                                    ),
                                    tag_id: TagId(
                                        0,
                                    ),
                                    arity: 0,
                                },
                            ],
                            render_as: Tag,
                        },
                    },
                    InLayout(
                        124,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Dict.IdentId(274)`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            EnumLiteral {
                                tag_id: 0,
                                tag_name: 'KeyNotFound',
                                union: Union {
                                    alternatives: [
                                        Ctor {
                                            name: Tag(
                                                'KeyNotFound',
                                            ),
                                            tag_id: TagId(
                                                0,
                                            ),
                                            arity: 0,
                                        },
                                    ],
                                    render_as: Tag,
                                },
                            },
                            InLayout(
                                124,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Dict.IdentId(274)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                EnumLiteral {
                    tag_id: 0,
                    tag_name: 'KeyNotFound',
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'KeyNotFound',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 2070,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(265)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 2071,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(266)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 2072,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(267)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 2073,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(268)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 2074,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(269)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 2070,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(265)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 2071,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(266)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 2072,
                                    layout: InLayout(U64),
                                    typ: Required(
                                        `Dict.IdentId(267)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 2073,
                                    layout: InLayout(F32),
                                    typ: Required(
                                        `Dict.IdentId(268)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 2074,
                                    layout: InLayout(U8),
                                    typ: Required(
                                        `Dict.IdentId(269)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 2070,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(265)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 2071,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(266)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 2072,
                            layout: InLayout(U64),
                            typ: Required(
                                `Dict.IdentId(267)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 2073,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(268)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 2074,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(269)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Dict.Dict`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 317,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(130)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 318,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(131)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 319,
                            layout: InLayout(U64),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(133)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 321,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(134)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 322,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(135)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
                InLayout(
                    81,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Dict.Dict`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'buckets',
                                    variable: 317,
                                    layout: InLayout(
                                        77,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(130)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'data',
                                    variable: 318,
                                    layout: InLayout(
                                        80,
                                    ),
                                    typ: Required(
                                        `Dict.IdentId(131)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxBucketCapacity',
                                    variable: 319,
                                    layout: InLayout(U64),
                                    typ: Guard(
                                        Identifier(
                                            `Dict.IdentId(133)`,
                                        ),
                                    ),
                                },
                                RecordDestruct {
                                    label: 'maxLoadFactor',
                                    variable: 321,
                                    layout: InLayout(F32),
                                    typ: Required(
                                        `Dict.IdentId(134)`,
                                    ),
                                },
                                RecordDestruct {
                                    label: 'shifts',
                                    variable: 322,
                                    layout: InLayout(U8),
                                    typ: Required(
                                        `Dict.IdentId(135)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(
                                    77,
                                ),
                                InLayout(
                                    80,
                                ),
                                InLayout(U64),
                                InLayout(F32),
                                InLayout(U8),
                            ],
                        ),
                        InLayout(
                            81,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'buckets',
                            variable: 317,
                            layout: InLayout(
                                77,
                            ),
                            typ: Required(
                                `Dict.IdentId(130)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'data',
                            variable: 318,
                            layout: InLayout(
                                80,
                            ),
                            typ: Required(
                                `Dict.IdentId(131)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'maxBucketCapacity',
                            variable: 319,
                            layout: InLayout(U64),
                            typ: Guard(
                                Identifier(
                                    `Dict.IdentId(133)`,
                                ),
                            ),
                        },
                        RecordDestruct {
                            label: 'maxLoadFactor',
                            variable: 321,
                            layout: InLayout(F32),
                            typ: Required(
                                `Dict.IdentId(134)`,
                            ),
                        },
                        RecordDestruct {
                            label: 'shifts',
                            variable: 322,
                            layout: InLayout(U8),
                            typ: Required(
                                `Dict.IdentId(135)`,
                            ),
                        },
                    ],
                    [
                        InLayout(
                            77,
                        ),
                        InLayout(
                            80,
                        ),
                        InLayout(U64),
                        InLayout(F32),
                        InLayout(U8),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 2,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `Dict.IdentId(133)`,
                ),
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 3,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
            (
                [
                    NewType,
                    TagIndex {
                        index: 4,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.IdentId(34)`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1991,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.IdentId(297)`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
                InLayout(
                    378,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.IdentId(34)`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'data',
                                    variable: 1991,
                                    layout: InLayout(STR),
                                    typ: Required(
                                        `Inspect.IdentId(297)`,
                                    ),
                                },
                            ],
                            [
                                InLayout(STR),
                            ],
                        ),
                        InLayout(
                            378,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1991,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.IdentId(297)`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    NewType,
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Some',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Str.IdentId(114)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'None',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Some',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'None',
            tag_id: 0,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'None',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Some',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Some',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Str.IdentId(114)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'None',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Some',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'None',
                    tag_id: 0,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'None',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Some',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Str.IdentId(114)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Some',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Str.IdentId(114)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'None',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Some',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'None',
            tag_id: 0,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'None',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Some',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Some',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Str.IdentId(114)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'None',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Some',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'None',
                    tag_id: 0,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'None',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Some',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Str.IdentId(114)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    RecordDestructure(
                        [],
                        [],
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    RecordDestructure(
                        [],
                        [],
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            RecordDestructure(
                                [],
                                [],
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            RecordDestructure(
                                [],
                                [],
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(570)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(571)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(570)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(571)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `List.IdentId(570)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `List.IdentId(571)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(192)`,
                    ),
                    InLayout(
                        55,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            55,
                        ),
                    ],
                    [
                        InLayout(
                            55,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(193)`,
                    ),
                    InLayout(
                        55,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            55,
                        ),
                    ],
                    [
                        InLayout(
                            55,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(192)`,
                            ),
                            InLayout(
                                55,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(193)`,
                            ),
                            InLayout(
                                55,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `List.IdentId(192)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `List.IdentId(193)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(199)`,
                    ),
                    InLayout(
                        55,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            55,
                        ),
                    ],
                    [
                        InLayout(
                            55,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(200)`,
                    ),
                    InLayout(
                        55,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            55,
                        ),
                    ],
                    [
                        InLayout(
                            55,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(199)`,
                            ),
                            InLayout(
                                55,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(200)`,
                            ),
                            InLayout(
                                55,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                            [
                                InLayout(
                                    55,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `List.IdentId(199)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `List.IdentId(200)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    RecordDestructure(
                        [],
                        [],
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    RecordDestructure(
                        [],
                        [],
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            RecordDestructure(
                                [],
                                [],
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            RecordDestructure(
                                [],
                                [],
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Continue',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(570)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Break',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `List.IdentId(571)`,
                    ),
                    InLayout(UNIT),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(UNIT),
                    ],
                    [
                        InLayout(UNIT),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Break',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Continue',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Continue',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(570)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Break',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `List.IdentId(571)`,
                            ),
                            InLayout(UNIT),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(UNIT),
                            ],
                            [
                                InLayout(UNIT),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Break',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Continue',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `List.IdentId(570)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `List.IdentId(571)`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        RecordDestructure(
            [],
            [],
        ),
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                RecordDestructure(
                    [],
                    [],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            95,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        95,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            95,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    95,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                95,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    95,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        124,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                124,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(
                        78,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        124,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            124,
                        ),
                    ],
                    [
                        InLayout(
                            78,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(
                                78,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                124,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    124,
                                ),
                            ],
                            [
                                InLayout(
                                    78,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        163,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                163,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        163,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                163,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(U64),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        163,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            163,
                        ),
                    ],
                    [
                        InLayout(U64),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(U64),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                163,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    163,
                                ),
                            ],
                            [
                                InLayout(U64),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(
                        193,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            192,
                        ),
                    ],
                    [
                        InLayout(
                            193,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        192,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            192,
                        ),
                    ],
                    [
                        InLayout(
                            193,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(
                                193,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    192,
                                ),
                            ],
                            [
                                InLayout(
                                    193,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                192,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    192,
                                ),
                            ],
                            [
                                InLayout(
                                    193,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Ok',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `Result.IdentId(16)`,
                    ),
                    InLayout(
                        193,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            192,
                        ),
                    ],
                    [
                        InLayout(
                            193,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Err',
            tag_id: 0,
            arguments: [
                (
                    Underscore,
                    InLayout(
                        192,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(
                            192,
                        ),
                    ],
                    [
                        InLayout(
                            193,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Err',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'Ok',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Ok',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `Result.IdentId(16)`,
                            ),
                            InLayout(
                                193,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    192,
                                ),
                            ],
                            [
                                InLayout(
                                    193,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Err',
                    tag_id: 0,
                    arguments: [
                        (
                            Underscore,
                            InLayout(
                                192,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(
                                    192,
                                ),
                            ],
                            [
                                InLayout(
                                    193,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Err',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'Ok',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `Result.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Exit',
            tag_id: 0,
            arguments: [
                (
                    Identifier(
                        `#Derived.10`,
                    ),
                    InLayout(STR),
                ),
                (
                    Identifier(
                        `#Derived.9`,
                    ),
                    InLayout(I32),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                        InLayout(I32),
                    ],
                    [
                        InLayout(
                            23,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Exit',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 2,
                    },
                    Ctor {
                        name: Tag(
                            'StdoutErr',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'StdoutErr',
            tag_id: 1,
            arguments: [
                (
                    Identifier(
                        `#Derived.11`,
                    ),
                    InLayout(
                        23,
                    ),
                ),
            ],
            layout: NonRecursive(
                [
                    [
                        InLayout(STR),
                        InLayout(I32),
                    ],
                    [
                        InLayout(
                            23,
                        ),
                    ],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'Exit',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 2,
                    },
                    Ctor {
                        name: Tag(
                            'StdoutErr',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 1,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Exit',
                    tag_id: 0,
                    arguments: [
                        (
                            Identifier(
                                `#Derived.10`,
                            ),
                            InLayout(STR),
                        ),
                        (
                            Identifier(
                                `#Derived.9`,
                            ),
                            InLayout(I32),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                                InLayout(I32),
                            ],
                            [
                                InLayout(
                                    23,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Exit',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 2,
                            },
                            Ctor {
                                name: Tag(
                                    'StdoutErr',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'StdoutErr',
                    tag_id: 1,
                    arguments: [
                        (
                            Identifier(
                                `#Derived.11`,
                            ),
                            InLayout(
                                23,
                            ),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [
                                InLayout(STR),
                                InLayout(I32),
                            ],
                            [
                                InLayout(
                                    23,
                                ),
                            ],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'Exit',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 2,
                            },
                            Ctor {
                                name: Tag(
                                    'StdoutErr',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 1,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `#Derived.10`,
                ),
            ),
            (
                [
                    TagIndex {
                        index: 1,
                        tag_id: 0,
                    },
                ],
                Identifier(
                    `#Derived.9`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 1,
                    },
                ],
                Identifier(
                    `#Derived.11`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.Inspector`,
            argument: (
                Identifier(
                    `Inspect.fn`,
                ),
                InLayout(
                    503,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.Inspector`,
                    argument: (
                        Identifier(
                            `Inspect.fn`,
                        ),
                        InLayout(
                            503,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Inspect.fn`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.DbgFormatter`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1961,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.data`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
                InLayout(
                    378,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.DbgFormatter`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'data',
                                    variable: 1961,
                                    layout: InLayout(STR),
                                    typ: Required(
                                        `Inspect.data`,
                                    ),
                                },
                            ],
                            [
                                InLayout(STR),
                            ],
                        ),
                        InLayout(
                            378,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1961,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.data`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    NewType,
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.Inspector`,
            argument: (
                Identifier(
                    `Inspect.fn`,
                ),
                InLayout(
                    500,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.Inspector`,
                    argument: (
                        Identifier(
                            `Inspect.fn`,
                        ),
                        InLayout(
                            500,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Inspect.fn`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        AppliedTag {
            tag_name: 'BrokenPipe',
            tag_id: 0,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        0,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Interrupted',
            tag_id: 1,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        1,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Other',
            tag_id: 2,
            arguments: [
                (
                    Identifier(
                        `#Derived.IdentId(16)`,
                    ),
                    InLayout(STR),
                ),
            ],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        2,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'OutOfMemory',
            tag_id: 3,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        3,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'Unsupported',
            tag_id: 4,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        4,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'WouldBlock',
            tag_id: 5,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        5,
    ),
    (
        NoGuard,
        AppliedTag {
            tag_name: 'WriteZero',
            tag_id: 6,
            arguments: [],
            layout: NonRecursive(
                [
                    [],
                    [],
                    [
                        InLayout(STR),
                    ],
                    [],
                    [],
                    [],
                    [],
                ],
            ),
            union: Union {
                alternatives: [
                    Ctor {
                        name: Tag(
                            'BrokenPipe',
                        ),
                        tag_id: TagId(
                            0,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Interrupted',
                        ),
                        tag_id: TagId(
                            1,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Other',
                        ),
                        tag_id: TagId(
                            2,
                        ),
                        arity: 1,
                    },
                    Ctor {
                        name: Tag(
                            'OutOfMemory',
                        ),
                        tag_id: TagId(
                            3,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'Unsupported',
                        ),
                        tag_id: TagId(
                            4,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WouldBlock',
                        ),
                        tag_id: TagId(
                            5,
                        ),
                        arity: 0,
                    },
                    Ctor {
                        name: Tag(
                            'WriteZero',
                        ),
                        tag_id: TagId(
                            6,
                        ),
                        arity: 0,
                    },
                ],
                render_as: Tag,
            },
        },
        6,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'BrokenPipe',
                    tag_id: 0,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Interrupted',
                    tag_id: 1,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Other',
                    tag_id: 2,
                    arguments: [
                        (
                            Identifier(
                                `#Derived.IdentId(16)`,
                            ),
                            InLayout(STR),
                        ),
                    ],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 3,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'OutOfMemory',
                    tag_id: 3,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 4,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'Unsupported',
                    tag_id: 4,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 5,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'WouldBlock',
                    tag_id: 5,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [
            (
                [],
                AppliedTag {
                    tag_name: 'WriteZero',
                    tag_id: 6,
                    arguments: [],
                    layout: NonRecursive(
                        [
                            [],
                            [],
                            [
                                InLayout(STR),
                            ],
                            [],
                            [],
                            [],
                            [],
                        ],
                    ),
                    union: Union {
                        alternatives: [
                            Ctor {
                                name: Tag(
                                    'BrokenPipe',
                                ),
                                tag_id: TagId(
                                    0,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Interrupted',
                                ),
                                tag_id: TagId(
                                    1,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Other',
                                ),
                                tag_id: TagId(
                                    2,
                                ),
                                arity: 1,
                            },
                            Ctor {
                                name: Tag(
                                    'OutOfMemory',
                                ),
                                tag_id: TagId(
                                    3,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'Unsupported',
                                ),
                                tag_id: TagId(
                                    4,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WouldBlock',
                                ),
                                tag_id: TagId(
                                    5,
                                ),
                                arity: 0,
                            },
                            Ctor {
                                name: Tag(
                                    'WriteZero',
                                ),
                                tag_id: TagId(
                                    6,
                                ),
                                arity: 0,
                            },
                        ],
                        render_as: Tag,
                    },
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 1,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 2,
        guard: NoGuard,
        patterns: [
            (
                [
                    TagIndex {
                        index: 0,
                        tag_id: 2,
                    },
                ],
                Identifier(
                    `#Derived.IdentId(16)`,
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 3,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 4,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 5,
        guard: NoGuard,
        patterns: [],
    },
]
FLATTENED: [
    Branch {
        goal: 6,
        guard: NoGuard,
        patterns: [],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.Inspector`,
            argument: (
                Identifier(
                    `Inspect.fn`,
                ),
                InLayout(
                    532,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.Inspector`,
                    argument: (
                        Identifier(
                            `Inspect.fn`,
                        ),
                        InLayout(
                            532,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Inspect.fn`,
                ),
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.DbgFormatter`,
            argument: (
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1961,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.data`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
                InLayout(
                    378,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.DbgFormatter`,
                    argument: (
                        RecordDestructure(
                            [
                                RecordDestruct {
                                    label: 'data',
                                    variable: 1961,
                                    layout: InLayout(STR),
                                    typ: Required(
                                        `Inspect.data`,
                                    ),
                                },
                            ],
                            [
                                InLayout(STR),
                            ],
                        ),
                        InLayout(
                            378,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                RecordDestructure(
                    [
                        RecordDestruct {
                            label: 'data',
                            variable: 1961,
                            layout: InLayout(STR),
                            typ: Required(
                                `Inspect.data`,
                            ),
                        },
                    ],
                    [
                        InLayout(STR),
                    ],
                ),
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                    NewType,
                ],
                Underscore,
            ),
        ],
    },
]
[
    (
        NoGuard,
        OpaqueUnwrap {
            opaque: `Inspect.Inspector`,
            argument: (
                Identifier(
                    `Inspect.fn`,
                ),
                InLayout(
                    529,
                ),
            ),
        },
        0,
    ),
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [],
                OpaqueUnwrap {
                    opaque: `Inspect.Inspector`,
                    argument: (
                        Identifier(
                            `Inspect.fn`,
                        ),
                        InLayout(
                            529,
                        ),
                    ),
                },
            ),
        ],
    },
]
FLATTENED: [
    Branch {
        goal: 0,
        guard: NoGuard,
        patterns: [
            (
                [
                    NewType,
                ],
                Identifier(
                    `Inspect.fn`,
                ),
            ),
        ],
    },
]
